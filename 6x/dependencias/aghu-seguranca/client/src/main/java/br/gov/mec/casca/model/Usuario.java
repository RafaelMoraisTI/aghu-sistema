package br.gov.mec.casca.model;

// Generated May 1, 2010 9:46:52 AM by Hibernate Tools 3.3.0.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Cascade;
import org.hibernate.validator.Email;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;
import org.jboss.seam.annotations.Name;

/**
 * Usuario generated by hbm2java
 */
@Entity
@SequenceGenerator(name = "cscUserSeq", sequenceName = "casca.casca_user_sq1")
@Table(name = "CSC_USUARIO", schema = "CASCA",  uniqueConstraints={
		   @UniqueConstraint(columnNames={"NOME"}),
		   @UniqueConstraint(columnNames={"LOGIN"})})

@Name("usuario")
public class Usuario implements java.io.Serializable {

	private static final long serialVersionUID = -8975860370239414190L;

	private Integer id;
	private Usuario usuario;
	private String nome;
	private String login;
	private Date dataCriacao;
	private String email;
	private Date dataUltimoAcesso;
	private Set<Usuario> usuarios = new HashSet<Usuario>(0);
	private Set<PerfisUsuarios> perfisUsuario = new HashSet<PerfisUsuarios>(0);
	private Set<Favorito> favoritos = new HashSet<Favorito>(0);
	private boolean ativo;
	private boolean delegarPerfil;
	private Integer tempoSessaoMinutos = 30; //valor padrão 30 minutos
	
	public Usuario() {
	}

	public Usuario(Integer id, String nome, String login, Date dataCriacao) {
		this.id = id;
		this.nome = nome;
		this.login = login;
		this.dataCriacao = dataCriacao;
	}

	public Usuario(Integer id, Usuario usuario, String nome, String login,
			Date dataCriacao, String email, Date dataUltimoAcesso,
			Set<Usuario> usuarios, Set<PerfisUsuarios> perfisUsuario,
			Set<Favorito> favoritos) {
		this.id = id;
		this.usuario = usuario;
		this.nome = nome;
		this.login = login;
		this.dataCriacao = dataCriacao;
		this.email = email;
		this.dataUltimoAcesso = dataUltimoAcesso;
		this.usuarios = usuarios;
		this.perfisUsuario = perfisUsuario;
		this.favoritos = favoritos;
	}

	@Id
	@Column(name = "ID", nullable = false, precision = 8, scale = 0)
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "cscUserSeq")
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_USUARIO_CRIACAO")
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@Column(name = "NOME", unique = true, nullable = false, length = 250)
	@NotNull(message = "Nome do usuário não informado")
	@Length(max = 250, message = "Nome do usuário pode conter no máximo 250 caracteres")
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Column(name = "LOGIN", unique = true, nullable = false, length = 50)
	@NotNull(message = "Login do usuário não informado")
	@Length(max = 50, message = "Login pode conter no máximo 50 caracteres")
	public String getLogin() {
		return this.login;
	}

	public void setLogin(String login) {
		this.login = login;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATA_CRIACAO", nullable = false)
	@NotNull(message = "Data de criação não informada")
	public Date getDataCriacao() {
		return this.dataCriacao;
	}

	public void setDataCriacao(Date dataCriacao) {
		this.dataCriacao = dataCriacao;
	}

	@Column(name = "EMAIL", length = 250)
	@Length(max = 250, message = "Email do usuário pode conter no máximo 250 caracteres")
	@Email(message = "Email fora do padrão, informe um email do tipo <usuario>@<endereco>")
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATA_ULTIMO_ACESSO", length = 7)
	public Date getDataUltimoAcesso() {
		return this.dataUltimoAcesso;
	}

	public void setDataUltimoAcesso(Date dataUltimoAcesso) {
		this.dataUltimoAcesso = dataUltimoAcesso;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<Usuario> getUsuarios() {
		return this.usuarios;
	}

	public void setUsuarios(Set<Usuario> usuarios) {
		this.usuarios = usuarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	@Cascade( { org.hibernate.annotations.CascadeType.DELETE,
			org.hibernate.annotations.CascadeType.ALL })
	public Set<PerfisUsuarios> getPerfisUsuario() {
		return this.perfisUsuario;
	}

	public void setPerfisUsuario(Set<PerfisUsuarios> perfisUsuario) {
		this.perfisUsuario = perfisUsuario;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	@Cascade( { org.hibernate.annotations.CascadeType.DELETE,
			org.hibernate.annotations.CascadeType.ALL })
	public Set<Favorito> getFavoritos() {
		return this.favoritos;
	}

	public void setFavoritos(Set<Favorito> favoritos) {
		this.favoritos = favoritos;
	}

	public enum Fields {
		NOME("nome"), LOGIN("login"), PERFIL_USUARIO("perfisUsuario"), ATIVO(
				"ativo"), DELEGAR_PERFIL("delegarPerfil"), TEMPO_SESSAO_MINUTOS("tempoSessaoMinutos");
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}
	@Column(name = "ATIVO", nullable = false)
	public boolean isAtivo() {
		return ativo;
	}

	public void setAtivo(boolean ativo) {
		this.ativo = ativo;
	}

	@Column(name = "DELEGAR_PERFIL", nullable = false)
	@NotNull
	public boolean isDelegarPerfil() {
		return delegarPerfil;
	}

	public void setDelegarPerfil(boolean delegarPerfil) {
		this.delegarPerfil = delegarPerfil;
	}

	@Column(name = "TEMPO_SESSAO_MINUTOS", nullable = false)
	@NotNull
	public Integer getTempoSessaoMinutos() {
		return tempoSessaoMinutos;
	}

	public void setTempoSessaoMinutos(Integer tempoSessao) {
		this.tempoSessaoMinutos = tempoSessao;
	}

}

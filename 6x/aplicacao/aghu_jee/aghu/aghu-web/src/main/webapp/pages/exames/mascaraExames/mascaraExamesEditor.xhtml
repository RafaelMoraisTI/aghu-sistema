<?xml version="1.0" encoding="UTF-8"?>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:fn="http://xmlns.jcp.org/jsp/jstl/functions" xmlns:mec="http://xmlns.jcp.org/jsf/composite/components" xmlns:p="http://primefaces.org/ui" xmlns:pe="http://primefaces.org/ui/extensions" xmlns:aghu="http://xmlns.jcp.org/jsf/component" xmlns:ui="http://xmlns.jcp.org/jsf/facelets" xmlns:f="http://xmlns.jcp.org/jsf/core" xmlns:h="http://xmlns.jcp.org/jsf/html" xmlns:c="http://xmlns.jcp.org/jsp/jstl/core" xmlns:mf="http://www.mec.gov.br/taglib">  
  <ui:composition template="/WEB-INF/templates/form_template.xhtml"> 
    <ui:define name="head"> 
      <title>#{messages.LABEL_EDITOR_MASCARA_EXAMES} - #{manterMascaraExamesController.versaoLaudo.nomeDesenho}</title>  
      <h:outputStylesheet library="css-default" name="mascara-exames.css" />  

	  <h:outputScript library="js" name="jquery-ui.js" target="head" /> 
	  <h:outputScript library="js" name="jquery.ui.multidraggable-prime.js" target="head" /> 
	  <h:outputScript library="js" name="mascaraExamesComponent.js" target="head" /> 
		<h:outputScript>
	//<![CDATA[
		function exibirChaveRegistroSelecionado(calSeq, seqP, nome) {
			jQuery('#frameParamSelect').text('CAL_SEQ: '+calSeq+'; SEQP: '+seqP + '\n' + nome);
		}
	
	//]]>
	</h:outputScript>
	</ui:define>
    <ui:define name="metadata"> 
      <f:metadata> 
        <f:viewAction action="#{manterMascaraExamesController.inicio}"/> 
      </f:metadata> 
    </ui:define>  
    <ui:define name="jsReady">
    	mex.contextMenu=PF('ctxMenuWG');
    	mex.init(#{manterMascaraExamesController.counterObjs});
    	var validacaoOK = false;
		//<![CDATA[
		function keyboardArrowsAction(event, element, validate) {
			switch (event.keyCode) {
				case 37: //left						
					var left = parseInt(jQuery(element).css('left'));
					if(validate) {
						if(left <= 0) {
							return false;
						} else {
							return true;
						}
					}
					
					if(left > 0) {
						jQuery(element).css('left', (left - 1) + 'px');
					}
					break;
				case 38: //up
					var top = parseInt(jQuery(element).css('top'));
					if(validate) {
						if(top <= 0) {
							return false;
						} else {
							return true;
						}
					}

					if(top > 0) {
						jQuery(element).css('top', (top - 1) + 'px');
					}
					break;
				case 39: //right
					var left = parseInt(jQuery(element).css('left'));
					var width = parseInt(jQuery(element).css('width'));
					var max = parseInt(jQuery("#frame").css('width'));

					if(validate) {
						if((left + width + 1) >= max) {
							return false;
						} else {
							return true;
						}
					}

					jQuery(element).css('left', (left + 1) + 'px');
					break;
				case 40: //down
					var top = parseInt(jQuery(element).css('top'));
					var height = parseInt(jQuery(element).css('height'));
					var max = parseInt(jQuery("#frame").css('height'));

					if(validate) {
						if((top + height + 1) >= max) {
							return false;
						} else {
							return true;
						}
					}

					jQuery(element).css('top', (top + 1) + 'px');
					break;
			}			
		}
		
		jQuery(document).bind('keyup', function(event) {

			if (jQuery.inArray(event.keyCode, [37, 38, 39, 40]) != -1) {			
				if(jQuery('.ui-multidraggable').length > 0) {
					jQuery('.ui-multidraggable').each(function(){
						updateController(jQuery(this).attr('id'), jQuery(this).attr('type'), parseInt(jQuery(this).css('left')), 
						parseInt(jQuery(this).css('top')), null);    				
					});
				} else {
					if(mex.objectSelectId != '') {
						updateController(mex.objectSelectId, jQuery('#'+mex.objectSelectId).attr('type'), parseInt(jQuery('#'+mex.objectSelectId).css('left')), 
						parseInt(jQuery('#'+mex.objectSelectId).css('top')), null);    				
					}
				}
			}
		});
		jQuery(document).bind('keydown', function(event) {
			if (jQuery.inArray(event.keyCode, [37, 38, 39, 40]) != -1) {
				validacaoOK	= false;								
				if(jQuery('.ui-multidraggable').length > 0) {									
					jQuery('.ui-multidraggable').each(function(){									
						validacaoOK = keyboardArrowsAction(event, this, true);
						if(!validacaoOK) {
							return false;
						}
					});
					if(validacaoOK) {
						jQuery('#posicaoXY').text('');
						jQuery('.ui-multidraggable').each(function(){									
							keyboardArrowsAction(event, this, false);
						});
					}
				}
				else {
					if(mex.objectSelectId != '') {
						validacaoOK = keyboardArrowsAction(event, jQuery('#'+mex.objectSelectId), true);
						if(validacaoOK) {
							keyboardArrowsAction(event, jQuery('#'+mex.objectSelectId), false);
							jQuery('#posicaoXY').text('x: ' + parseInt(jQuery('#'+mex.objectSelectId).css('left')) + ', y: '+ parseInt(jQuery('#'+mex.objectSelectId).css('top')));						
						}						
					}
				}
			}
		});
		
		jQuery(document).bind('keypress', function(event) {
			if (event.which === jQuery.ui.keyCode.ENTER && jQuery(event.target).is(':input:not(textarea,:button,:submit,:reset)')) {
    	        event.preventDefault();
    	    }		
		});
		//]]>
    </ui:define>
	<ui:define name="style">
		.ui-multidraggable {
			background:#3366CC !important;
			box-shadow: 2px 2px 6px 2px #CCCCCC !important;
			border: 2px dashed red !important;
			margin:0 !important;		
		}	
	</ui:define>
	
    <ui:define name="body"> 
      <mec:pageConfig controller="#{manterMascaraExamesController}" />  
      <h:form id="form_functions" prependId="false">
        <aghu:panelGeral legend="#{messages.LABEL_EDITOR_MASCARA_EXAMES} - #{manterMascaraExamesController.versaoLaudo.nomeDesenho}"> 
          <aghu:linha> 
            <p:outputPanel layout="block" id="wrapper">
				<p:outputPanel id="wrapper_options">
					<p:outputPanel layout="block" id="options" > 
						<p:outputPanel layout="block" id="comp1" styleClass="dragMenu dragAux drag1" rendered="#{mf:hasPermission(securityController,'desenharMascara,executar')}"/>  
						<p:outputPanel layout="block" id="comp2" styleClass="dragMenu dragAux drag2" rendered="#{mf:hasPermission(securityController,'desenharMascara,executar')}"/>  
						<p:outputPanel layout="block" id="comp3" styleClass="dragMenu dragAux drag3" rendered="#{mf:hasPermission(securityController,'desenharMascara,executar')}"/>  
						<p:outputPanel layout="block" id="comp4" styleClass="dragMenu dragAux drag4" rendered="#{mf:hasPermission(securityController,'desenharMascara,executar')}"/>  
						<p:outputPanel layout="block" id="comp5" styleClass="dragMenu dragAux drag5" rendered="#{mf:hasPermission(securityController,'inserirCampoCodificadoMascaraLaudo,executar')}"/>  
						<p:outputPanel layout="block" id="comp6" styleClass="dragMenu dragAux drag6" rendered="#{mf:hasPermission(securityController,'desenharMascara,executar')}"/>  
						<p:outputPanel layout="block" id="comp7" styleClass="dragMenu dragAux drag7" rendered="#{mf:hasPermission(securityController,'desenharMascara,executar')}"/>  
						<p:outputPanel layout="block" id="comp8" styleClass="dragMenu dragAux drag8" rendered="#{mf:hasPermission(securityController,'desenharMascara,executar')}"/>  
						<p:outputPanel layout="block" id="comp9" styleClass="dragMenu dragAux drag9" rendered="#{mf:hasPermission(securityController,'desenharMascara,executar')}"/>  
						<p:outputPanel layout="block" id="comp10" styleClass="dragMenu dragAux drag10" rendered="#{mf:hasPermission(securityController,'desenharMascara,executar')}"/> 
						<p:outputPanel layout="block" id="posicaoXY" style="width:75px; height:16px; padding: 2px; margin:1px; vertical-align:middle; z-index:1; float:left;"/> 
					</p:outputPanel>
				</p:outputPanel>					
              <p:outputPanel layout="block" id="frameScroll"> 
                <p:outputPanel layout="block" id="frame" binding="#{manterMascaraExamesController.panelFrameComponent}" style="height: 5200px; float:left;"/>
                <p:outputPanel layout="block" id="frameParamSelect" style="position: fixed; width:120px; height:16px; padding: 2px; margin-left:810px; margin-top: 10px; vertical-align:middle; z-index:1;"/>  
              </p:outputPanel>  
              <p:contextMenu  id="menu" widgetVar="ctxMenuWG">  
                <p:menuitem value="Propriedades" onclick="mex.contextEvent('select')" rendered="#{mf:hasPermission(securityController,'desenharMascara,pesquisar')}" />  
                <p:menuitem value="Desfazer Seleção" onclick="mex.contextEvent('unselect')" immediate="true" />  
                <p:menuitem value="Fórmulas" rendered="#{mf:hasPermission(securityController,'desenharMascara,pesquisar')}" onclick="mex.contextEvent('formulas')" process="@this" action="#{manterMascaraExamesController.verificaRenderizarFormulas()}" ajax="true" update="@(#formulasModal)"/> 
                <p:menuitem value="Vincular" onclick="mex.contextEvent('vincular')" immediate="true" rendered="#{mf:hasPermission(securityController,'desenharMascara,pesquisar')}" /> 
                <p:menuitem value="Relacionar" onclick="mex.contextEvent('relacionar')" immediate="true" rendered="#{mf:hasPermission(securityController,'desenharMascara,pesquisar')}" /> 
                <p:menuitem value="Relacionar Codificado" onclick="mex.contextEvent('relacionarCodificado')" immediate="true" rendered="#{mf:hasPermission(securityController,'desenharMascara,pesquisar')}" /> 
                <p:menuitem disabled="#{not mf:hasPermission(securityController,'desenharMascara,executar') or not manterMascaraExamesController.versaoLaudo.situacao.isConstrucao()}" onclick="PF('modalConfirmacaoExclusaoWG').show();" value="Excluir" immediate="true" style="#{(not mf:hasPermission(securityController,'desenharMascara,executar') or not manterMascaraExamesController.versaoLaudo.situacao.isConstrucao()) ? 'opacity:0.4' : ''}" /> 
              </p:contextMenu>
            </p:outputPanel> 
          </aghu:linha> 
        </aghu:panelGeral>  
        <aghu:acao>
			<p:outputPanel id="botoes"> 
				<mec:commandButton id="bt_gravar" 
					value="#{messages.LABEL_GRAVAR}" 
					action="#{manterMascaraExamesController.salvar()}" 
					oncomplete="PF('modalConfirmacaoWG').show();" 
					disabled="#{not manterMascaraExamesController.versaoLaudo.situacao.isConstrucao()}" 
					rendered="#{mf:hasPermission(securityController,'desenharMascara,executar')}" 
					profile="ok" 
					ajax="true" 
					process="@this" />  
				<mec:commandButton id="bt_ativar" 
					value="Ativar" 
					ajax="true" 
					onclick="PF('modalConfirmacaoWG').show()" 
					process="@this" 
					disabled="#{manterMascaraExamesController.versaoLaudo.situacao.isAtivo()}" 
					rendered="#{mf:hasPermission(securityController,'desenharMascara,executar') and mf:hasPermission(securityController,'ativarMascaraExames,executar')}" 
					styleClass="bt_cinza"/>  
				<mec:commandButton id="bt_previaVisualizacao" 
					value="Prévia Visualização" 
					action="#{manterMascaraExamesController.previaPdf}" 
					rendered="#{mf:hasPermission(securityController,'desenharMascara,pesquisar')}" 
					styleClass="bt_cinza" 
					ajax="true" 
					process="@this"> 
				<f:setPropertyActionListener target="#{consultarResultadosNotaAdicionalController.voltarPara}" value="exames-mascaraExamesEditor" for="command"/> 
				</mec:commandButton>  
				<mec:commandButton id="bt_previaDigitacao" 
					value="Prévia Digitação" 
					action="#{manterMascaraExamesController.previaPreenchimento}" 
					rendered="#{mf:hasPermission(securityController,'desenharMascara,pesquisar')}" 
					styleClass="bt_cinza" 
					ajax="true" 
					process="@this">
				<f:setPropertyActionListener target="#{manterMascaraExamesPreviaController.voltarPara}" value="exames-mascaraExamesEditor" for="command"/>
				</mec:commandButton>  
				<mec:commandButton id="bt_cadastrarResultadoPadrao" 
					value="Cadastrar Resultado Padrão" 
					disabled="#{not mf:hasPermission(securityController,'resultadoPadraoLaudo,pesquisar') or not mf:hasPermission(securityController,'informarValoresResultadoPadraoLaudo,pesquisar')}" 
					action="#{manterMascaraExamesController.abrirModalResultadosPadrao()}" 
					ajax="true" 
					process="@this" 
					render="@(#panelResultPadrao)" 
					styleClass="bt_cinza"/>  
				<mec:commandButton id="bt_voltar" 
					value="#{messages.LABEL_VOLTAR}" 
					profile="back" 
					action="#{manterMascaraExamesController.voltar(false)}" 
					ajax="true" 
					process="@this"/>
			</p:outputPanel> 
        </aghu:acao>  
        <pe:remoteCommand name="selectController" 
        		actionListener="#{manterMascaraExamesController.selecionarInserirParametro()}" 
        		process="@this" 
        		update="@(#propsScroll)" 
        		oncomplete="PF('modalPropriedadesWG').show();">
          <pe:assignableParam name="p1" assignTo="#{manterMascaraExamesController.componentId}"/>  
          <pe:assignableParam name="p2" assignTo="#{manterMascaraExamesController.componentType}"/>  
          <pe:assignableParam name="p3" assignTo="#{manterMascaraExamesController.componentPosX}"/>  
          <pe:assignableParam name="p4" assignTo="#{manterMascaraExamesController.componentPosY}"/>  
          <pe:assignableParam name="p5" assignTo="#{manterMascaraExamesController.tipoRelac}"/> 
        </pe:remoteCommand>  
        <pe:remoteCommand name="updateController" 
        		actionListener="#{manterMascaraExamesController.selecionarInserirParametro()}" 
        		process="@this"> 
          <pe:assignableParam name="p1" assignTo="#{manterMascaraExamesController.componentId}"/>  
          <pe:assignableParam name="p2" assignTo="#{manterMascaraExamesController.componentType}"/>  
          <pe:assignableParam name="p3" assignTo="#{manterMascaraExamesController.componentPosX}"/>  
          <pe:assignableParam name="p4" assignTo="#{manterMascaraExamesController.componentPosY}"/>  
          <pe:assignableParam name="p5" assignTo="#{manterMascaraExamesController.tipoRelac}"/> 
        </pe:remoteCommand>        
        <pe:remoteCommand name="atualizarElementoSelecionadoController" 
        		actionListener="#{manterMascaraExamesController.atualizarElementoSelecionado()}" 
        		process="@this"> 
          <pe:assignableParam name="p1" assignTo="#{manterMascaraExamesController.componentId}"/>  
          <pe:assignableParam name="p2" assignTo="#{manterMascaraExamesController.componentType}"/>  
          <pe:assignableParam name="p3" assignTo="#{manterMascaraExamesController.componentPosX}"/>  
          <pe:assignableParam name="p4" assignTo="#{manterMascaraExamesController.componentPosY}"/>  
          <pe:assignableParam name="p5" assignTo="#{manterMascaraExamesController.tipoRelac}"/> 
        </pe:remoteCommand>        
        <pe:remoteCommand name="selectFormulasController">
          <pe:assignableParam name="p1" assignTo="#{manterMascaraExamesController.componentId}" />
          <pe:assignableParam name="p2" assignTo="#{manterMascaraExamesController.componentType}" />
          <pe:assignableParam name="p3" assignTo="#{manterMascaraExamesController.componentPosX}" />
          <pe:assignableParam name="p4" assignTo="#{manterMascaraExamesController.componentPosY}" />
          <pe:assignableParam name="p5" assignTo="#{manterMascaraExamesController.tipoRelac}" />
	    </pe:remoteCommand>
	    <pe:remoteCommand name="selectVicularController" 
	    		actionListener="#{manterMascaraExamesController.selecionarInserirParametro()}" 
	    		action="#{manterMascaraExamesController.abrirModalVincular()}" 
	    		process="@this" 
	    		update="@(#vincularModal)">
          <pe:assignableParam name="p1" assignTo="#{manterMascaraExamesController.componentId}" />
          <pe:assignableParam name="p2" assignTo="#{manterMascaraExamesController.componentType}" />
          <pe:assignableParam name="p3" assignTo="#{manterMascaraExamesController.componentPosX}" />
          <pe:assignableParam name="p4" assignTo="#{manterMascaraExamesController.componentPosY}" />
          <pe:assignableParam name="p5" assignTo="#{manterMascaraExamesController.tipoRelac}" />
        </pe:remoteCommand>
	    <pe:remoteCommand name="selectRelacionarController" 
	    		actionListener="#{manterMascaraExamesController.selecionarInserirParametro()}" 
	    		process="@this" 
	    		update="@(#relacionarModal)" 
	    		action="#{manterMascaraExamesController.abrirModalRelacionar()}">
          <pe:assignableParam name="p1" assignTo="#{manterMascaraExamesController.componentId}" />
          <pe:assignableParam name="p2" assignTo="#{manterMascaraExamesController.componentType}" />
          <pe:assignableParam name="p3" assignTo="#{manterMascaraExamesController.componentPosX}" />
          <pe:assignableParam name="p4" assignTo="#{manterMascaraExamesController.componentPosY}" />
          <pe:assignableParam name="p5" assignTo="#{manterMascaraExamesController.tipoRelac}" />
	    </pe:remoteCommand>
        <pe:remoteCommand name="excluiController" 
        		oncomplete="PF('modalConfirmacaoExclusaoWG').hide();;" 
        		update="@(#propsScroll)" 
        		actionListener="#{manterMascaraExamesController.excluirParametro}" 
        		process="@this"> 
          <pe:assignableParam name="p1" assignTo="#{manterMascaraExamesController.componentId}"/>  
          <pe:assignableParam name="p2" assignTo="#{manterMascaraExamesController.tipoRelac}"/> 
        </pe:remoteCommand>  
        <pe:remoteCommand name="selectRelacionarCodificadoController" 
        		actionListener="#{manterMascaraExamesController.selecionarInserirParametro()}" 
        		action="#{manterMascaraExamesController.abrirModalRelacionar()}" 
        		update="@(#relacionarModal)" 
        		process="@this"> 
          <pe:assignableParam name="p1" assignTo="#{manterMascaraExamesController.componentId}"/>  
          <pe:assignableParam name="p2" assignTo="#{manterMascaraExamesController.componentType}"/>  
          <pe:assignableParam name="p3" assignTo="#{manterMascaraExamesController.componentPosX}"/>  
          <pe:assignableParam name="p4" assignTo="#{manterMascaraExamesController.componentPosY}"/>  
          <pe:assignableParam name="p5" assignTo="#{manterMascaraExamesController.tipoRelac}"/> 
        </pe:remoteCommand>  
        <pe:remoteCommand name="desSelectController" 
        		update="@(#propsScroll)" 
        		actionListener="#{manterMascaraExamesController.desSelecionarParametros}" 
        		process="@this"> 
          <pe:assignableParam name="p1" assignTo="#{manterMascaraExamesController.tipoRelac}"/> 
        </pe:remoteCommand>  
        <h:inputHidden id="tipo" 
        		value="#{manterMascaraExamesController.parametroSelect.objetoVisual}" 
        		rendered="#{not empty manterMascaraExamesController.parametroSelect}"/>  
        <h:inputHidden id="frameCache" value="#{manterMascaraExamesController.frameCache}"/>  
        <p:outputPanel id="propsScroll" layout="inline"> 
          <ui:include src="/pages/exames/mascaraExames/mascaraExamesEditorPropriedadesModal.xhtml"/> 
        </p:outputPanel>         
      </h:form>  
      <p:dialog id="modalConfirmacaoExclusao" width="400" height="150" modal="true" resizable="false" draggable="false" widgetVar="modalConfirmacaoExclusaoWG"> 
        <f:facet name="header"> 
          <h:outputText value="#{messages.LABEL_EXCLUSAO_CAMPO_MASCARAS_LAUDOS}"/> 
        </f:facet> #{messages.MENSAGEM_CONFIRMACAO_EXCLUSAO} 
        <br clear="none"/>  
        <br clear="none"/>  
        <br clear="none"/>   
        <h:form prependId="false" id="formModalExclusao"> 
          <mec:commandButton id="bt_sim2" 
          		onclick="mex.contextEvent('delete');" 
          		value="#{messages.LABEL_SIM}" 
          		block="true" 
          		profile="ok" 
          		ajax="true" 
          		process="@this"/>  
          <mec:commandButton id="bt_nao2" 
          		value="#{messages.LABEL_NAO}" 
          		onclick="PF('modalConfirmacaoExclusaoWG').hide();;return false;" 
          		profile="cancel" 
          		ajax="true"/> 
        </h:form> 
      </p:dialog>  
      <p:dialog id="modalConfirmacao" width="400" height="150" modal="true" resizable="false" draggable="false" widgetVar="modalConfirmacaoWG"> 
        <f:facet name="header"> 
          <h:outputText value="#{messages.LABEL_ATIVAR_MASCARA_EXAME}"/> 
        </f:facet> #{messages.LABEL_ATIVAR_MASCARA_EXAME_PERGUNTA} 
        <br clear="none"/>  
        <br clear="none"/>  
        <br clear="none"/>  
        <h:panelGroup> 
          <h:form prependId="false" id="formModalConfirmacao"> 
            <mec:commandButton id="bt_sim" 
            		value="#{messages.LABEL_SIM}" 
            		action="#{manterMascaraExamesController.ativarMascara}"
					oncomplete="PF('modalConfirmacaoWG').hide();"
            		profile="ok" 
            		ajax="true" 
            		render="@(#wrapper_options) @(#menu) @(#botoes)" 
            		process="@this"/>  
            <mec:commandButton id="bt_nao" 
            		value="#{messages.LABEL_NAO}" 
            		onclick="PF('modalConfirmacaoWG').hide(); return false;" 
            		profile="cancel" /> 
          </h:form> 
        </h:panelGroup> 
      </p:dialog>
      <p:confirmDialog id="modalConfirmacaoVoltar" showEffect="bounce" closable="true" width="380" height="80" widgetVar="modalConfirmacaoVoltarWG"
    	header="#{messages.TITLE_PENDENCIAS_ALTERACAO}" message="#{messages.MENSAGEM_PENDENCIAS_ALTERACAO}">
        <h:form prependId="false" id="formModalConfirmacaoVoltar">
	        <p:commandButton id="btSim" 
	        		value="Sim" 
	        		style="margin: 10px" 
	        		icon="ui-icon-check" 
	        		styleClass="ui-confirmdialog-yes" 
	        		action="#{manterMascaraExamesController.voltar(true)}" 
	        		immediate="true" />
	        <p:commandButton id="btNao" 
	        		value="Não" 
	        		style="margin: 10px" 
	        		icon="ui-icon-close" 
	        		styleClass="ui-confirmdialog-no" 
	        		onclick="PF('modalConfirmacaoVoltarWG').hide();" 
	        		immediate="true"/>
	    </h:form>    
      </p:confirmDialog> 
      <p:outputPanel id="formulasModal" layout="inline"> 
     	<ui:include src="/pages/exames/mascaraExames/mascaraExamesEditorFormulasModal.xhtml"/>
      </p:outputPanel>  
      <p:outputPanel id="vincularModal" layout="inline"> 
        <ui:include src="/pages/exames/mascaraExames/mascaraExamesVincularCampoModal.xhtml"/> 
      </p:outputPanel>  
      <p:outputPanel id="relacionarModal" layout="inline"> 
        <p:outputPanel id="relacionarModalSub" layout="inline"> 
          <ui:include src="/pages/exames/mascaraExames/mascaraExamesRelacionarCamposModal.xhtml"/> 
        </p:outputPanel> 
      </p:outputPanel>
      <p:outputPanel id="panelResultPadrao" layout="inline">  
	      <p:dialog id="modalResultPadrao" width="710" height="400" modal="true" resizable="false" draggable="false" widgetVar="modalResultPadraoWG" closable="true"> 
	        <f:facet name="header"> 
	          <h:panelGroup> 
	            <h:outputText value="Selecione o Resultado Padrão"/> 
	          </h:panelGroup> 
	        </f:facet>  
	        <h:form prependId="false" id="formFieldsResultPadrao"> 
	          <h:panelGroup id="panelResultPadraoGeral"> 
	            <aghu:panelGeral style="width:650px; height:350px;" legend="#{messages.LABEL_RESULTADO_PADRAO_CADASTRADOS}"> 
	              <aghu:linha> 
	                 <mec:serverDataTable id="tabelaResultPadrao" list="#{manterMascaraExamesController.listaResultadoPadrao}" scrollable="true"> 
	                   <c:set var="_item" value="#{item}"/>  
	                   <p:column style="width:60px; white-space:nowrap"> 
	                     <f:facet name="header"> 
	                       <h:outputText value="#{messages.LABEL_ACAO}"/> 
	                     </f:facet>  
	                     <mec:commandLink id="btCadastrarNovoResultadoPadraoLaudo"
	                     		disabled="#{not mf:hasPermission(securityController,'resultadoPadraoLaudo,pesquisar')}" 
	                     		title="#{messages.LABEL_EDITAR}" 
	                     		profile="edit"
	                     		action="#{manterMascaraExamesController.cadastrarNovoResultadoPadraoLaudo}"> 
	                       <f:setPropertyActionListener target="#{cadastroResultadoPadraoLaudoController.seqResultadosPadrao}" value="#{_item.seq}" for="command"/>  
	                       <f:setPropertyActionListener target="#{cadastroResultadoPadraoLaudoController.velEmaExaSigla}" value="#{manterMascaraExamesController.versaoLaudo.id.emaExaSigla}" for="command"/>  
	                       <f:setPropertyActionListener target="#{cadastroResultadoPadraoLaudoController.velEmaManSeq}" value="#{manterMascaraExamesController.versaoLaudo.id.emaManSeq}" for="command"/>  
	                       <f:setPropertyActionListener target="#{cadastroResultadoPadraoLaudoController.velSeqp}" value="#{manterMascaraExamesController.versaoLaudo.id.seqp}" for="command"/>  
	                       <f:setPropertyActionListener target="#{cadastroResultadoPadraoLaudoController.emEdicao}" value="true" for="command"/>  
	                       <f:setPropertyActionListener target="#{cadastroResultadoPadraoLaudoController.voltarPara}" value="mascaraExamesEditor" for="command"/> 
	                     </mec:commandLink>  
	                     <mec:commandLink id="btEditarSituacaoResultPadrao"
	                     		ajax="true" 
	                     		render="panelResultPadraoGeral" 
	                     		title="#{messages.LABEL_DESATIVAR}" 
	                     		action="#{manterMascaraExamesController.editarSituacaoResultPadrao(_item)}" 
	                     		disabled="#{not mf:hasPermission(securityController,'resultadoPadraoLaudo,executar')}" 
	                     		rendered="#{mf:hasPermission(securityController,'informarValoresResultadoPadraoLaudo,executar') and manterMascaraExamesController.isActive(_item)}" 
	                     		styleClass=" silk-activate silk-icon"/>  
	                     <mec:commandLink ajax="true" 
	                     		render="panelResultPadraoGeral" 
	                     		title="#{messages.LABEL_ATIVAR}" 
	                     		disabled="#{not mf:hasPermission(securityController,'resultadoPadraoLaudo,executar')}" 
	                     		action="#{manterMascaraExamesController.editarSituacaoResultPadrao(_item)}" 
	                     		rendered="#{mf:hasPermission(securityController,'informarValoresResultadoPadraoLaudo,executar') and !manterMascaraExamesController.isActive(_item)}" 
	                     		styleClass=" silk-deactivate silk-icon"/> 
	                   </p:column>  
	                   <p:column> 
	                     <f:facet name="header" > 
	                       <h:outputText value="#{messages.LABEL_RESULTADO_PADRAO}"/> 
	                     </f:facet>  
	                     <h:outputText value="#{_item.descricao}"/> 
	                   </p:column> 
	                 </mec:serverDataTable> 
	              </aghu:linha> 
	            </aghu:panelGeral> 
	          </h:panelGroup>  
	          <aghu:acao> 
	            <mec:commandButton id="NovoResultadoPadrao" 
	            		value="#{messages.LABEL_NOVO}" 
	            		action="#{manterMascaraExamesController.cadastrarNovoResultadoPadraoLaudo}" 
	            		oncomplete="PF('modalResultPadraoWG').hide();;mex.atualiza()" 
	            		onclick="PF('modalResultPadraoWG').hide();" 
	            		rendered="#{mf:hasPermission(securityController,'resultadoPadraoLaudo,executar') or mf:hasPermission(securityController,'informarValoresResultadoPadraoLaudo,executar')}" 
	            		profile="add" 
	            		ajax="true" 
	            		render="formVincularCampos"> 
	              <f:setPropertyActionListener target="#{cadastroResultadoPadraoLaudoController.velEmaExaSigla}" value="#{manterMascaraExamesController.versaoLaudo.id.emaExaSigla}" for="command"/>  
	              <f:setPropertyActionListener target="#{cadastroResultadoPadraoLaudoController.velEmaManSeq}" value="#{manterMascaraExamesController.versaoLaudo.id.emaManSeq}" for="command"/>  
	              <f:setPropertyActionListener target="#{cadastroResultadoPadraoLaudoController.velSeqp}" value="#{manterMascaraExamesController.versaoLaudo.id.seqp}" for="command"/>  
	              <f:setPropertyActionListener target="#{cadastroResultadoPadraoLaudoController.emEdicao}" value="false" for="command"/>  
	              <f:setPropertyActionListener target="#{cadastroResultadoPadraoLaudoController.voltarPara}" value="exames-mascaraExamesEditor" for="command"/> 
	            </mec:commandButton> 
	          </aghu:acao> 
	        </h:form> 
	      </p:dialog> 
	  </p:outputPanel>
    </ui:define>  
  </ui:composition> 
</html>
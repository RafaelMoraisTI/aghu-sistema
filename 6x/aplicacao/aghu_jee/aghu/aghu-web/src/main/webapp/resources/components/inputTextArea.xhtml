<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
      xmlns:fn="http://xmlns.jcp.org/jsp/jstl/functions"
      xmlns:p="http://primefaces.org/ui"
      xmlns:mec="http://xmlns.jcp.org/jsf/composite/components"
      xmlns:cc="http://xmlns.jcp.org/jsf/composite">

    <h:head>
        <title>mec:inputTextArea</title>
    </h:head>
    
	<ui:remove><!-- Comments -->	
	COMPONENTE INPUTTEXT
	============================
	Autor: Cristiano Quadros (2013)
	
	Renderiza um campo customizado para preenchimento de texto.  
	
	Principais Propriedades:
	
	id: identificador do componente
	label: Label do componente
	title: Hint do componente
	value: atributo da classe controladora (mbean) que recebe o resultado do campo
	disabled/readonly: Habilita/desabilita o botão
	rendered: (true/false) Mostrar ou não o componente em tela
	styleClass: class do componente
	style: css do componente	
	posicaoLabel: Posição do label na tela. Valores acima(default) e abaixo
	maxlength: tamanho máximo de caracteres
	size: tamanho do campo
	converter: classe conversora
	rows: número de linhas
	cols: número de colunas
	autoresize: Faz o box do componente crescer de acordo com o tamanho do texto.
	
	Migração:
	
	name                     : id
	styleClass="maxlenght_n" : maxlength="n"
	
	</ui:remove>    
    
    <h:body>
        <cc:interface name="inputTextArea" displayName="Cria uma caixa de texto com mais de uma linha para digitação">        
        	
	        <cc:attribute name="label" />
	        <cc:attribute name="showLabel" default="true" />
	        <cc:attribute name="posicaoLabel" default="acima" />
	        <cc:attribute name="escape" default="true" />
	        <cc:attribute name="tooltipEscape" default="false" />
	        <cc:attribute name="readonly" default="false" />
	        <cc:attribute name="disabled" default="false" />
	        <cc:attribute name="title" />
	        <cc:attribute name="required" default="false" />
	        <cc:attribute name="requiredFake" default="false" />
	        <cc:attribute name="value" />
			<cc:attribute name="maxlength" />
			<cc:attribute name="cols"  />
			<cc:attribute name="rows"  />
			<cc:attribute name="style" />
			<cc:attribute name="styleClass" />
			<cc:attribute name="onkeypress" />
			<cc:attribute name="onkeyup" />
			<cc:attribute name="onkeydown" />
			<cc:attribute name="onblur" />
			<cc:attribute name="converter"  />			
			<cc:attribute name="onchange" />
			<cc:attribute name="onfocus" />
			<cc:attribute name="emptyStringToNull" default="true"/>			 
			<cc:attribute name="autoResize" default="false" />
			
		  	<cc:clientBehavior name="change" event="change"
                   targets="#{cc.clientId}:#{cc.clientId}:textArea" />
                   
             <cc:clientBehavior name="blur" event="blur"
                   targets="#{cc.clientId}:#{cc.clientId}:textArea" />
                   
             <cc:clientBehavior name="click" event="click"
                   targets="#{cc.clientId}:#{cc.clientId}:textArea" />			
			
			 <cc:editableValueHolder name="textArea"  />        		
        </cc:interface>

        <cc:implementation>
        	
        	<mec:field label="#{cc.attrs.label}" id="#{cc.clientId}" 
        		showLabel="#{cc.attrs.showLabel}" title="#{cc.attrs.title}"  
        		posicaoLabel="#{cc.attrs.posicaoLabel}" readonly="#{cc.attrs.readonly}" 
        		escape="#{cc.attrs.escape}" tooltipEscape="cc.attrs.tooltipEscape"
        		required="#{cc.attrs.required or cc.attrs.requiredFake}">
        		
 				<p:inputTextarea id="textArea" 				
 					rows="#{cc.attrs.rows}"  
 					required="#{cc.attrs.required}"
 					readonly="#{cc.attrs.readonly}"
 					disabled="#{cc.attrs.disabled}"
 					cols="#{cc.attrs.cols}"
 					maxlength="#{cc.attrs.maxlength}"  
 					counter="display" 
 					counterTemplate="{0} caracteres restantes." 
 					autoResize="#{cc.attrs.autoResize}" 
					onkeypress="#{cc.attrs.onkeypress}"
					onkeyup="#{cc.attrs.onkeyup}"
					onkeydown="#{cc.attrs.onkeydown}"
					onblur="#{cc.attrs.onblur}"			
					onchange="#{cc.attrs.onchange}"
					onfocus="#{cc.attrs.onfocus}"
					style="#{not cc.attrs.autoResize?'resize:none;':''} #{cc.attrs.style}"
					styleClass="#{cc.attrs.styleClass}"
					label="#{cc.attrs.label}"
					value="#{cc.attrs.value}" converter="#{cc.attrs.converter}">
					
					<cc:insertChildren />

				</p:inputTextarea>       		
 					
    			<h:outputText id="display" style="font-size:10px;color:gray;font-style:italic;clear:both;float:left" rendered="#{not empty cc.attrs.maxlength}" />        		
        		
        	</mec:field>	
        		 
        </cc:implementation>
    </h:body>
</html>
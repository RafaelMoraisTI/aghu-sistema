
package br.com.redeimagem;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.7-b01-
 * Generated source version: 2.1
 * 
 */
@WebService(name = "WsLiquidWebSoap", targetNamespace = "http://redeimagem.com.br/")
@XmlSeeAlso({
    ObjectFactory.class
})
@SuppressWarnings({"PMD.AghuTooManyMethods", "PMD.ExcessiveClassLength"})
public interface WsLiquidWebSoap {


    /**
     * Obtem URLs criptografadas para adicionar, visualizar e remover documentos no Liquid.
     * 
     * @param senha
     * @param codigoFicha
     * @param camposFicha
     * @param loginUsuario
     * @return
     *     returns br.com.redeimagem.ObterUrlsDocumentosResponse.ObterUrlsDocumentosResult
     */
    @WebMethod(operationName = "ObterUrlsDocumentos", action = "http://redeimagem.com.br/ObterUrlsDocumentos")
    @WebResult(name = "ObterUrlsDocumentosResult", targetNamespace = "http://redeimagem.com.br/")
    @RequestWrapper(localName = "ObterUrlsDocumentos", targetNamespace = "http://redeimagem.com.br/", className = "br.com.redeimagem.ObterUrlsDocumentos")
    @ResponseWrapper(localName = "ObterUrlsDocumentosResponse", targetNamespace = "http://redeimagem.com.br/", className = "br.com.redeimagem.ObterUrlsDocumentosResponse")
    public br.com.redeimagem.ObterUrlsDocumentosResponse.ObterUrlsDocumentosResult obterUrlsDocumentos(
        @WebParam(name = "loginUsuario", targetNamespace = "http://redeimagem.com.br/")
        String loginUsuario,
        @WebParam(name = "senha", targetNamespace = "http://redeimagem.com.br/")
        String senha,
        @WebParam(name = "codigoFicha", targetNamespace = "http://redeimagem.com.br/")
        int codigoFicha,
        @WebParam(name = "camposFicha", targetNamespace = "http://redeimagem.com.br/")
        String camposFicha);

    /**
     * Obtem URLs criptografadas para adicionar, visualizar e remover documentos no Liquid (String).
     * 
     * @param senha
     * @param codigoFicha
     * @param camposFicha
     * @param loginUsuario
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ObterUrlsDocumentosString", action = "http://redeimagem.com.br/ObterUrlsDocumentosString")
    @WebResult(name = "ObterUrlsDocumentosStringResult", targetNamespace = "http://redeimagem.com.br/")
    @RequestWrapper(localName = "ObterUrlsDocumentosString", targetNamespace = "http://redeimagem.com.br/", className = "br.com.redeimagem.ObterUrlsDocumentosString")
    @ResponseWrapper(localName = "ObterUrlsDocumentosStringResponse", targetNamespace = "http://redeimagem.com.br/", className = "br.com.redeimagem.ObterUrlsDocumentosStringResponse")
    public String obterUrlsDocumentosString(
        @WebParam(name = "loginUsuario", targetNamespace = "http://redeimagem.com.br/")
        String loginUsuario,
        @WebParam(name = "senha", targetNamespace = "http://redeimagem.com.br/")
        String senha,
        @WebParam(name = "codigoFicha", targetNamespace = "http://redeimagem.com.br/")
        int codigoFicha,
        @WebParam(name = "camposFicha", targetNamespace = "http://redeimagem.com.br/")
        String camposFicha);

    /**
     * Obtém a URL criptografada de visualização e os campos da ficha. Utiliza método de pesquisa exclusiva, não utiliza coringas (%) ou (LIKE).
     * 
     * @param senha
     * @param codigoFicha
     * @param camposFicha
     * @param loginUsuario
     * @return
     *     returns br.com.redeimagem.ObterUrlDocumentosComFiltroExclusivoResponse.ObterUrlDocumentosComFiltroExclusivoResult
     */
    @WebMethod(operationName = "ObterUrlDocumentosComFiltroExclusivo", action = "http://redeimagem.com.br/ObterUrlDocumentosComFiltroExclusivo")
    @WebResult(name = "ObterUrlDocumentosComFiltroExclusivoResult", targetNamespace = "http://redeimagem.com.br/")
    @RequestWrapper(localName = "ObterUrlDocumentosComFiltroExclusivo", targetNamespace = "http://redeimagem.com.br/", className = "br.com.redeimagem.ObterUrlDocumentosComFiltroExclusivo")
    @ResponseWrapper(localName = "ObterUrlDocumentosComFiltroExclusivoResponse", targetNamespace = "http://redeimagem.com.br/", className = "br.com.redeimagem.ObterUrlDocumentosComFiltroExclusivoResponse")
    public br.com.redeimagem.ObterUrlDocumentosComFiltroExclusivoResponse.ObterUrlDocumentosComFiltroExclusivoResult obterUrlDocumentosComFiltroExclusivo(
        @WebParam(name = "loginUsuario", targetNamespace = "http://redeimagem.com.br/")
        String loginUsuario,
        @WebParam(name = "senha", targetNamespace = "http://redeimagem.com.br/")
        String senha,
        @WebParam(name = "codigoFicha", targetNamespace = "http://redeimagem.com.br/")
        int codigoFicha,
        @WebParam(name = "camposFicha", targetNamespace = "http://redeimagem.com.br/")
        String camposFicha);

    /**
     * Importa um arquivo para o sistema Liquid usando codificação base-64.
     * 
     * @param senha
     * @param nomeDocumento
     * @param pasta
     * @param codigoFicha
     * @param nomeArquivo
     * @param camposFicha
     * @param loginUsuario
     * @param arquivoBase64
     * @return
     *     returns br.com.redeimagem.ImportarArquivoResponse.ImportarArquivoResult
     */
    @WebMethod(operationName = "ImportarArquivo", action = "http://redeimagem.com.br/ImportarArquivo")
    @WebResult(name = "ImportarArquivoResult", targetNamespace = "http://redeimagem.com.br/")
    @RequestWrapper(localName = "ImportarArquivo", targetNamespace = "http://redeimagem.com.br/", className = "br.com.redeimagem.ImportarArquivo")
    @ResponseWrapper(localName = "ImportarArquivoResponse", targetNamespace = "http://redeimagem.com.br/", className = "br.com.redeimagem.ImportarArquivoResponse")
    public br.com.redeimagem.ImportarArquivoResponse.ImportarArquivoResult importarArquivo(
        @WebParam(name = "loginUsuario", targetNamespace = "http://redeimagem.com.br/")
        String loginUsuario,
        @WebParam(name = "senha", targetNamespace = "http://redeimagem.com.br/")
        String senha,
        @WebParam(name = "nomeDocumento", targetNamespace = "http://redeimagem.com.br/")
        String nomeDocumento,
        @WebParam(name = "pasta", targetNamespace = "http://redeimagem.com.br/")
        String pasta,
        @WebParam(name = "codigoFicha", targetNamespace = "http://redeimagem.com.br/")
        int codigoFicha,
        @WebParam(name = "camposFicha", targetNamespace = "http://redeimagem.com.br/")
        String camposFicha,
        @WebParam(name = "nomeArquivo", targetNamespace = "http://redeimagem.com.br/")
        String nomeArquivo,
        @WebParam(name = "arquivoBase64", targetNamespace = "http://redeimagem.com.br/")
        String arquivoBase64);

    /**
     * Importa um arquivo para o sistema Liquid usando codificação base-64 (String).
     * 
     * @param senha
     * @param nomeDocumento
     * @param pasta
     * @param codigoFicha
     * @param nomeArquivo
     * @param camposFicha
     * @param loginUsuario
     * @param arquivoBase64
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ImportarArquivoString", action = "http://redeimagem.com.br/ImportarArquivoString")
    @WebResult(name = "ImportarArquivoStringResult", targetNamespace = "http://redeimagem.com.br/")
    @RequestWrapper(localName = "ImportarArquivoString", targetNamespace = "http://redeimagem.com.br/", className = "br.com.redeimagem.ImportarArquivoString")
    @ResponseWrapper(localName = "ImportarArquivoStringResponse", targetNamespace = "http://redeimagem.com.br/", className = "br.com.redeimagem.ImportarArquivoStringResponse")
    public String importarArquivoString(
        @WebParam(name = "loginUsuario", targetNamespace = "http://redeimagem.com.br/")
        String loginUsuario,
        @WebParam(name = "senha", targetNamespace = "http://redeimagem.com.br/")
        String senha,
        @WebParam(name = "nomeDocumento", targetNamespace = "http://redeimagem.com.br/")
        String nomeDocumento,
        @WebParam(name = "pasta", targetNamespace = "http://redeimagem.com.br/")
        String pasta,
        @WebParam(name = "codigoFicha", targetNamespace = "http://redeimagem.com.br/")
        int codigoFicha,
        @WebParam(name = "camposFicha", targetNamespace = "http://redeimagem.com.br/")
        String camposFicha,
        @WebParam(name = "nomeArquivo", targetNamespace = "http://redeimagem.com.br/")
        String nomeArquivo,
        @WebParam(name = "arquivoBase64", targetNamespace = "http://redeimagem.com.br/")
        String arquivoBase64);

    /**
     * Importa um arquivo para o sistema Liquid usando codificação base-64.
     * 
     * @param senha
     * @param codigoPerfilImportacao
     * @param nomeArquivo
     * @param camposFicha
     * @param loginUsuario
     * @param arquivoBase64
     * @param md5
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ImportarArquivoPerfil", action = "http://redeimagem.com.br/ImportarArquivoPerfil")
    @WebResult(name = "ImportarArquivoPerfilResult", targetNamespace = "http://redeimagem.com.br/")
    @RequestWrapper(localName = "ImportarArquivoPerfil", targetNamespace = "http://redeimagem.com.br/", className = "br.com.redeimagem.ImportarArquivoPerfil")
    @ResponseWrapper(localName = "ImportarArquivoPerfilResponse", targetNamespace = "http://redeimagem.com.br/", className = "br.com.redeimagem.ImportarArquivoPerfilResponse")
    public String importarArquivoPerfil(
        @WebParam(name = "loginUsuario", targetNamespace = "http://redeimagem.com.br/")
        String loginUsuario,
        @WebParam(name = "senha", targetNamespace = "http://redeimagem.com.br/")
        String senha,
        @WebParam(name = "codigoPerfilImportacao", targetNamespace = "http://redeimagem.com.br/")
        int codigoPerfilImportacao,
        @WebParam(name = "camposFicha", targetNamespace = "http://redeimagem.com.br/")
        String camposFicha,
        @WebParam(name = "nomeArquivo", targetNamespace = "http://redeimagem.com.br/")
        String nomeArquivo,
        @WebParam(name = "arquivoBase64", targetNamespace = "http://redeimagem.com.br/")
        String arquivoBase64,
        @WebParam(name = "md5", targetNamespace = "http://redeimagem.com.br/")
        String md5);

    /**
     * Obtem uma lista de documentos associados a um índice no sistema Liquid.
     * 
     * @param senha
     * @param ficha
     * @param camposFicha
     * @param loginUsuario
     * @return
     *     returns br.com.redeimagem.ConsultarDocumentosResponse.ConsultarDocumentosResult
     */
    @WebMethod(operationName = "ConsultarDocumentos", action = "http://redeimagem.com.br/ConsultarDocumentos")
    @WebResult(name = "ConsultarDocumentosResult", targetNamespace = "http://redeimagem.com.br/")
    @RequestWrapper(localName = "ConsultarDocumentos", targetNamespace = "http://redeimagem.com.br/", className = "br.com.redeimagem.ConsultarDocumentos")
    @ResponseWrapper(localName = "ConsultarDocumentosResponse", targetNamespace = "http://redeimagem.com.br/", className = "br.com.redeimagem.ConsultarDocumentosResponse")
    public br.com.redeimagem.ConsultarDocumentosResponse.ConsultarDocumentosResult consultarDocumentos(
        @WebParam(name = "loginUsuario", targetNamespace = "http://redeimagem.com.br/")
        String loginUsuario,
        @WebParam(name = "senha", targetNamespace = "http://redeimagem.com.br/")
        String senha,
        @WebParam(name = "ficha", targetNamespace = "http://redeimagem.com.br/")
        int ficha,
        @WebParam(name = "camposFicha", targetNamespace = "http://redeimagem.com.br/")
        String camposFicha);

    /**
     * Obtem uma lista de documentos associados a um índice no sistema Liquid (String).
     * 
     * @param senha
     * @param ficha
     * @param camposFicha
     * @param loginUsuario
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ConsultarDocumentosString", action = "http://redeimagem.com.br/ConsultarDocumentosString")
    @WebResult(name = "ConsultarDocumentosStringResult", targetNamespace = "http://redeimagem.com.br/")
    @RequestWrapper(localName = "ConsultarDocumentosString", targetNamespace = "http://redeimagem.com.br/", className = "br.com.redeimagem.ConsultarDocumentosString")
    @ResponseWrapper(localName = "ConsultarDocumentosStringResponse", targetNamespace = "http://redeimagem.com.br/", className = "br.com.redeimagem.ConsultarDocumentosStringResponse")
    public String consultarDocumentosString(
        @WebParam(name = "loginUsuario", targetNamespace = "http://redeimagem.com.br/")
        String loginUsuario,
        @WebParam(name = "senha", targetNamespace = "http://redeimagem.com.br/")
        String senha,
        @WebParam(name = "ficha", targetNamespace = "http://redeimagem.com.br/")
        int ficha,
        @WebParam(name = "camposFicha", targetNamespace = "http://redeimagem.com.br/")
        String camposFicha);

    /**
     * Obtem um documento em PDF em base-64. O PDF gerado é uma mescla de todas as páginas (somente PDFs e imagens) do documento
     * 
     * @param codigoDocumento
     * @param senha
     * @param loginUsuario
     * @return
     *     returns br.com.redeimagem.ObterDocumentoPDFResponse.ObterDocumentoPDFResult
     */
    @WebMethod(operationName = "ObterDocumentoPDF", action = "http://redeimagem.com.br/ObterDocumentoPDF")
    @WebResult(name = "ObterDocumentoPDFResult", targetNamespace = "http://redeimagem.com.br/")
    @RequestWrapper(localName = "ObterDocumentoPDF", targetNamespace = "http://redeimagem.com.br/", className = "br.com.redeimagem.ObterDocumentoPDF")
    @ResponseWrapper(localName = "ObterDocumentoPDFResponse", targetNamespace = "http://redeimagem.com.br/", className = "br.com.redeimagem.ObterDocumentoPDFResponse")
    public br.com.redeimagem.ObterDocumentoPDFResponse.ObterDocumentoPDFResult obterDocumentoPDF(
        @WebParam(name = "loginUsuario", targetNamespace = "http://redeimagem.com.br/")
        String loginUsuario,
        @WebParam(name = "senha", targetNamespace = "http://redeimagem.com.br/")
        String senha,
        @WebParam(name = "codigoDocumento", targetNamespace = "http://redeimagem.com.br/")
        int codigoDocumento);

    /**
     * Obtem um documento em PDF em base-64. O PDF gerado é uma mescla de todas as páginas (somente PDFs e imagens) do documento. (String).
     * 
     * @param codigoDocumento
     * @param senha
     * @param loginUsuario
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ObterDocumentoPDFString", action = "http://redeimagem.com.br/ObterDocumentoPDFString")
    @WebResult(name = "ObterDocumentoPDFStringResult", targetNamespace = "http://redeimagem.com.br/")
    @RequestWrapper(localName = "ObterDocumentoPDFString", targetNamespace = "http://redeimagem.com.br/", className = "br.com.redeimagem.ObterDocumentoPDFString")
    @ResponseWrapper(localName = "ObterDocumentoPDFStringResponse", targetNamespace = "http://redeimagem.com.br/", className = "br.com.redeimagem.ObterDocumentoPDFStringResponse")
    public String obterDocumentoPDFString(
        @WebParam(name = "loginUsuario", targetNamespace = "http://redeimagem.com.br/")
        String loginUsuario,
        @WebParam(name = "senha", targetNamespace = "http://redeimagem.com.br/")
        String senha,
        @WebParam(name = "codigoDocumento", targetNamespace = "http://redeimagem.com.br/")
        int codigoDocumento);

    /**
     * Inicializa importação com arquivo em branco para geração de chave.
     * 
     * @param codigoDocumento
     * @param senha
     * @param nomeDocumento
     * @param pasta
     * @param codigoFicha
     * @param nomeArquivo
     * @param camposFicha
     * @param loginUsuario
     * @param arquivoBase64
     * @return
     *     returns br.com.redeimagem.ImportarArquivoUniritterResponse.ImportarArquivoUniritterResult
     */
    @WebMethod(operationName = "ImportarArquivoUniritter", action = "http://redeimagem.com.br/ImportarArquivoUniritter")
    @WebResult(name = "ImportarArquivoUniritterResult", targetNamespace = "http://redeimagem.com.br/")
    @RequestWrapper(localName = "ImportarArquivoUniritter", targetNamespace = "http://redeimagem.com.br/", className = "br.com.redeimagem.ImportarArquivoUniritter")
    @ResponseWrapper(localName = "ImportarArquivoUniritterResponse", targetNamespace = "http://redeimagem.com.br/", className = "br.com.redeimagem.ImportarArquivoUniritterResponse")
    public br.com.redeimagem.ImportarArquivoUniritterResponse.ImportarArquivoUniritterResult importarArquivoUniritter(
        @WebParam(name = "loginUsuario", targetNamespace = "http://redeimagem.com.br/")
        String loginUsuario,
        @WebParam(name = "senha", targetNamespace = "http://redeimagem.com.br/")
        String senha,
        @WebParam(name = "nomeDocumento", targetNamespace = "http://redeimagem.com.br/")
        String nomeDocumento,
        @WebParam(name = "pasta", targetNamespace = "http://redeimagem.com.br/")
        String pasta,
        @WebParam(name = "codigoFicha", targetNamespace = "http://redeimagem.com.br/")
        int codigoFicha,
        @WebParam(name = "camposFicha", targetNamespace = "http://redeimagem.com.br/")
        String camposFicha,
        @WebParam(name = "nomeArquivo", targetNamespace = "http://redeimagem.com.br/")
        String nomeArquivo,
        @WebParam(name = "arquivoBase64", targetNamespace = "http://redeimagem.com.br/")
        String arquivoBase64,
        @WebParam(name = "CodigoDocumento", targetNamespace = "http://redeimagem.com.br/")
        String codigoDocumento);

    /**
     * Verifica a chave recebida e retorna url de visualização do documento, caso exista.
     * 
     * @param senha
     * @param chaveAutenticacao
     * @param loginUsuario
     * @return
     *     returns br.com.redeimagem.AutenticarDocumentoUniritterResponse.AutenticarDocumentoUniritterResult
     */
    @WebMethod(operationName = "AutenticarDocumentoUniritter", action = "http://redeimagem.com.br/AutenticarDocumentoUniritter")
    @WebResult(name = "AutenticarDocumentoUniritterResult", targetNamespace = "http://redeimagem.com.br/")
    @RequestWrapper(localName = "AutenticarDocumentoUniritter", targetNamespace = "http://redeimagem.com.br/", className = "br.com.redeimagem.AutenticarDocumentoUniritter")
    @ResponseWrapper(localName = "AutenticarDocumentoUniritterResponse", targetNamespace = "http://redeimagem.com.br/", className = "br.com.redeimagem.AutenticarDocumentoUniritterResponse")
    public br.com.redeimagem.AutenticarDocumentoUniritterResponse.AutenticarDocumentoUniritterResult autenticarDocumentoUniritter(
        @WebParam(name = "loginUsuario", targetNamespace = "http://redeimagem.com.br/")
        String loginUsuario,
        @WebParam(name = "senha", targetNamespace = "http://redeimagem.com.br/")
        String senha,
        @WebParam(name = "chaveAutenticacao", targetNamespace = "http://redeimagem.com.br/")
        String chaveAutenticacao);

}

package br.gov.mec.aghu.model;

// Generated 14/09/2010 17:49:55 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MpmJustificativaNpt generated by hbm2java
 */

@Entity
@SequenceGenerator(name="mpmJnpSq1", sequenceName="AGH.MPM_JNP_SQ1", allocationSize = 1)
@Table(name = "MPM_JUSTIFICATIVA_NPTS", schema = "AGH")
public class MpmJustificativaNpt extends BaseEntitySeq<Short> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 3907360448463121024L;
	private Short seq;
	private Short codSus;
	private String descricao;
	private Date criadoEm;
	private DominioSituacao situacao;
	private RapServidores servidor;
	private Date alteradoEm;
	private RapServidores servidorAlterado;
	
	// FIXME Implementar este relacionamento
//	private Set<MpmPrescricaoNpt> prescricaoNpts = new HashSet<MpmPrescricaoNpt>(
//			0);

	public MpmJustificativaNpt() {
	}

	public MpmJustificativaNpt(Short seq, Short codSus, String descricao,
			Date criadoEm, DominioSituacao situacao, RapServidores servidor) {
		this.seq = seq;
		this.codSus = codSus;
		this.descricao = descricao;
		this.criadoEm = criadoEm;
		this.situacao = situacao;
		this.servidor = servidor;
	}

	public MpmJustificativaNpt(Short seq, Short codSus, String descricao,
			Date criadoEm, DominioSituacao situacao, RapServidores servidor, 
			Date alteradoEm, RapServidores servidorAlterado
//			, Set<MpmPrescricaoNpt> prescricaoNpts
			) {
		this.seq = seq;
		this.codSus = codSus;
		this.descricao = descricao;
		this.criadoEm = criadoEm;
		this.situacao = situacao;
		this.servidor = servidor;
		this.alteradoEm = alteradoEm;
		this.servidorAlterado = servidorAlterado;
//		this.prescricaoNpts = prescricaoNpts;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mpmJnpSq1")
	@Column(name = "SEQ", unique = true, nullable = false, precision = 3, scale = 0)
	public Short getSeq() {
		return this.seq;
	}

	public void setSeq(Short seq) {
		this.seq = seq;
	}

	@Column(name = "COD_SUS", nullable = false, precision = 4, scale = 0)
	public Short getCodSus() {
		return this.codSus;
	}

	public void setCodSus(Short codSus) {
		this.codSus = codSus;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 120)
	@Length(max = 120)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getSituacao() {
		return this.situacao;
	}

	public void setSituacao(DominioSituacao situacao) {
		this.situacao = situacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable=false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable=false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 7)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_ALTERADO", referencedColumnName = "MATRICULA", nullable=false),
			@JoinColumn(name = "SER_VIN_CODIGO_ALTERADO", referencedColumnName = "VIN_CODIGO", nullable=false) })
	public RapServidores getServidorAlterado() {
		return this.servidorAlterado;
	}

	public void setServidorAlterado(RapServidores servidorAlterado) {
		this.servidorAlterado = servidorAlterado;
	}

	// FIXME Ligar com o objeto via atributo do pojo ou coluna do banco
//	@OneToMany(fetch = FetchType.LAZY)
//	public Set<MpmPrescricaoNpt> getPrescricaoNpts() {
//		return this.prescricaoNpts;
//	}
//
//	public void setPrescricaoNpts(
//			Set<MpmPrescricaoNpt> prescricaoNpts) {
//		this.prescricaoNpts = prescricaoNpts;
//	}

	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((seq == null) ? 0 : seq.hashCode());
		return result;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		MpmJustificativaNpt other = (MpmJustificativaNpt) obj;
		if (seq == null) {
			if (other.seq != null) {
				return false;
			}
		} else if (!seq.equals(other.seq)) {
			return false;
		}
		return true;
	}

	
	public enum Fields {

		SEQ("seq"),
		COD_SUS("codSus"),
		DESCRICAO("descricao"),
		CRIADO_EM("criadoEm"),
		SITUACAO("situacao"),
		SERVIDOR("servidor"),
		ALTERADO_EM("alteradoEm"),
		SERVIDOR_ALTERADO("servidorAlterado"),
//		PRESCRICAO_NPTS("prescricaoNpts")
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}

}

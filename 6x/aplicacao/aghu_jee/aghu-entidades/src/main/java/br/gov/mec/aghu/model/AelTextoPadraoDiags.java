package br.gov.mec.aghu.model;

// Generated 29/03/2012 13:44:29 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AelTextoPadraoDiags generated by hbm2java
 */
@Entity
@Table(name = "AEL_TEXTO_PADRAO_DIAGS")
public class AelTextoPadraoDiags extends BaseEntityId<AelTextoPadraoDiagsId> implements java.io.Serializable {

	private static final long serialVersionUID = -6977267603681819915L;
	
	private AelTextoPadraoDiagsId id;
	private AelGrpTxtPadraoDiags aelGrpTxtPadraoDiags;
	private String descricao;
	private DominioSituacao indSituacao;
	private Date criadoEm;
	private RapServidores servidor;
	private String apelido;
	private Set<AelGrpDiagLacunas> aelGrpDiagLacunas = new HashSet<AelGrpDiagLacunas>(
			0);
	private Integer version;

	public AelTextoPadraoDiags() {
	}

	public AelTextoPadraoDiags(final AelTextoPadraoDiagsId id,
			final AelGrpTxtPadraoDiags aelGrpTxtPadraoDiags, final String descricao,
			final DominioSituacao indSituacao, final Date criadoEm, final RapServidores servidor) {
		this.id = id;
		this.aelGrpTxtPadraoDiags = aelGrpTxtPadraoDiags;
		this.descricao = descricao;
		this.indSituacao = indSituacao;
		this.criadoEm = criadoEm;
		this.servidor = servidor;
	}

	public AelTextoPadraoDiags(final AelTextoPadraoDiagsId id,
			final AelGrpTxtPadraoDiags aelGrpTxtPadraoDiags, final String descricao,
			final DominioSituacao indSituacao, final Date criadoEm, final RapServidores servidor, final String apelido,
			final Set<AelGrpDiagLacunas> aelGrpDiagLacunas) {
		this.id = id;
		this.aelGrpTxtPadraoDiags = aelGrpTxtPadraoDiags;
		this.descricao = descricao;
		this.indSituacao = indSituacao;
		this.criadoEm = criadoEm;
		this.servidor = servidor;
		this.apelido = apelido;
		this.aelGrpDiagLacunas = aelGrpDiagLacunas;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "luhSeq", column = @Column(name = "LUH_SEQ", nullable = false, precision = 4, scale = 0)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false, precision = 4, scale = 0)) })
	public AelTextoPadraoDiagsId getId() {
		return this.id;
	}

	public void setId(final AelTextoPadraoDiagsId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LUH_SEQ", nullable = false, insertable = false, updatable = false)
	public AelGrpTxtPadraoDiags getAelGrpTxtPadraoDiags() {
		return this.aelGrpTxtPadraoDiags;
	}

	public void setAelGrpTxtPadraoDiags(
			final AelGrpTxtPadraoDiags aelGrpTxtPadraoDiags) {
		this.aelGrpTxtPadraoDiags = aelGrpTxtPadraoDiags;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 2000)
	@Length(max = 2000)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(final String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(final DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(final Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	/**
	 * respons√°vel.
	 * 
	 * @return
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(final RapServidores servidor) {
		this.servidor = servidor;
	}

	@Column(name = "APELIDO", length = 50)
	@Length(max = 50)
	public String getApelido() {
		return this.apelido;
	}

	public void setApelido(final String apelido) {
		this.apelido = apelido;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "aelTextoPadraoDiags")
	public Set<AelGrpDiagLacunas> getAelGrpDiagLacunas() {
		return this.aelGrpDiagLacunas;
	}

	public void setAelGrpDiagLacunas(
			final Set<AelGrpDiagLacunas> aelGrpDiagLacunas) {
		this.aelGrpDiagLacunas = aelGrpDiagLacunas;
	}

	
	public enum Fields {
		ID("id"),
		SEQP("id.seqp"),
		DESCRICAO("descricao"),
		APELIDO("apelido"),
		IND_SITUACAO("indSituacao"),
		CRIADO_EM("criadoEm"),
		SERVIDOR("servidor"),
		AEL_GRP_TXT_PADRAO_DIAGS("aelGrpTxtPadraoDiags"),
		AEL_GRP_DIAG_LACUNAS("aelGrpDiagLacunas"), 
		AEL_GRP_TXT_PADRAO_DIAGS_SEQ("id.luhSeq"),
		;

		private String fields;

		private Fields(final String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}

	}

	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AelTextoPadraoDiags)) {
			return false;
		}
		AelTextoPadraoDiags other = (AelTextoPadraoDiags) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

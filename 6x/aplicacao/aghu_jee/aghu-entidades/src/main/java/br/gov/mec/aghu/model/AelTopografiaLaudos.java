package br.gov.mec.aghu.model;
// Generated 12/09/2013 15:35:02 by Hibernate Tools 3.4.0.CR1


import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;
import javax.validation.constraints.NotNull;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * AelTopografiaLaudos generated by hbm2java
 * 
 * Alias: AEO
 */
@Entity
@SequenceGenerator(name="aelAeoSq1", sequenceName="AEL_AEO_SQ1", allocationSize = 1)
@Table(name = "AEL_TOPOGRAFIA_LAUDOS") 
public class AelTopografiaLaudos extends BaseEntitySeq<Long> {

     /**
	 * 
	 */
	private static final long serialVersionUID = -7465279614062563980L;
	
	private Long seq;
	private AelExameAp exameAp;
	private Integer version;
	private AelTopografiaCidOs topografiaCidOs;
	private Date criadoEm;
	private RapServidores servidor;
	
    public AelTopografiaLaudos() {
    }
   
    @Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "aelAeoSq1")
	@Column(name = "SEQ", unique = true, nullable = false, precision = 14, scale = 0)
    public Long getSeq() {
        return this.seq;
    }
    
    public void setSeq(Long seq) {
        this.seq = seq;
    }

    @Version
    @Column(name="VERSION", nullable=false, precision=9, scale=0)
    public Integer getVersion() {
        return this.version;
    }
    
    public void setVersion(Integer version) {
        this.version = version;
    }

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CIO_SEQ", nullable=false)
	@NotNull
    public AelTopografiaCidOs getTopografiaCidOs() {
		return topografiaCidOs;
	}

	public void setTopografiaCidOs(AelTopografiaCidOs topografiaCidOs) {
		this.topografiaCidOs = topografiaCidOs;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LUX_SEQ", nullable=false)
	@NotNull
    public AelExameAp getExameAp() {
		return exameAp;
	}

	public void setExameAp(AelExameAp exameAp) {
		this.exameAp = exameAp;
	}

	@Temporal(TemporalType.TIMESTAMP)
    @Column(name="CRIADO_EM", nullable=false, length=7)
    @NotNull
    public Date getCriadoEm() {
        return this.criadoEm;
    }


	public void setCriadoEm(Date criadoEm) {
        this.criadoEm = criadoEm;
    }

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable=false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable=false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	public enum Fields {		
		SEQ("seq"), 
		CIDOS("topografiaCidOs"),
		SEQ_CIDOS("topografiaCidOs.seq"),
		SEQ_EXAME("exameAp.seq"),
		CRIADO_EM("criadoEm"),
		SERVIDOR("servidor"),
		VERSION("version");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((seq == null) ? 0 : seq.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		AelTopografiaLaudos other = (AelTopografiaLaudos) obj;
		if (seq == null) {
			if (other.seq != null) {
				return false;
			}
		} else if (!seq.equals(other.seq)) {
			return false;
		}
		return true;
	}
}



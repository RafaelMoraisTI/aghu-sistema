package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MptParecerUsoMdto generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mptPuoSq1", sequenceName="AGH.MPT_PUO_SQ1", allocationSize = 1)
@Table(name = "MPT_PARECER_USO_MDTOS", schema = "AGH")
public class MptParecerUsoMdto extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -3239340201648759101L;
	private Integer seq;
	private Integer version;
	private RapServidores rapServidoresByMptPuoSerFk1;
	private MptJustificativaUsoMdto mptJustificativaUsoMdto;
	private RapServidores rapServidoresByMptPuoSerFk2;
	private MpmTipoParecerUsoMdto mpmTipoParecerUsoMdto;
	private String indParecerVerificado;
	private Date dthrParecerVerificado;
	private String observacao;
	private Date dthrParecer;
	
	// FIXME Implementar este relacionamento
//	private Set<MptItemPrescricaoMedicamento> mptItemPrescricaoMedicamentoes = new HashSet<MptItemPrescricaoMedicamento>(0);

	public MptParecerUsoMdto() {
	}

	public MptParecerUsoMdto(Integer seq, MptJustificativaUsoMdto mptJustificativaUsoMdto, RapServidores rapServidoresByMptPuoSerFk2,
			MpmTipoParecerUsoMdto mpmTipoParecerUsoMdto, String indParecerVerificado, Date dthrParecer) {
		this.seq = seq;
		this.mptJustificativaUsoMdto = mptJustificativaUsoMdto;
		this.rapServidoresByMptPuoSerFk2 = rapServidoresByMptPuoSerFk2;
		this.mpmTipoParecerUsoMdto = mpmTipoParecerUsoMdto;
		this.indParecerVerificado = indParecerVerificado;
		this.dthrParecer = dthrParecer;
	}

	public MptParecerUsoMdto(Integer seq, RapServidores rapServidoresByMptPuoSerFk1, MptJustificativaUsoMdto mptJustificativaUsoMdto,
			RapServidores rapServidoresByMptPuoSerFk2, MpmTipoParecerUsoMdto mpmTipoParecerUsoMdto, String indParecerVerificado,
			Date dthrParecerVerificado, String observacao, Date dthrParecer
//			, Set<MptItemPrescricaoMedicamento> mptItemPrescricaoMedicamentoes
			) {
		this.seq = seq;
		this.rapServidoresByMptPuoSerFk1 = rapServidoresByMptPuoSerFk1;
		this.mptJustificativaUsoMdto = mptJustificativaUsoMdto;
		this.rapServidoresByMptPuoSerFk2 = rapServidoresByMptPuoSerFk2;
		this.mpmTipoParecerUsoMdto = mpmTipoParecerUsoMdto;
		this.indParecerVerificado = indParecerVerificado;
		this.dthrParecerVerificado = dthrParecerVerificado;
		this.observacao = observacao;
		this.dthrParecer = dthrParecer;
//		this.mptItemPrescricaoMedicamentoes = mptItemPrescricaoMedicamentoes;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mptPuoSq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_VISUALIZADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_VISUALIZADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMptPuoSerFk1() {
		return this.rapServidoresByMptPuoSerFk1;
	}

	public void setRapServidoresByMptPuoSerFk1(RapServidores rapServidoresByMptPuoSerFk1) {
		this.rapServidoresByMptPuoSerFk1 = rapServidoresByMptPuoSerFk1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "JUS_SEQ", nullable = false)
	public MptJustificativaUsoMdto getMptJustificativaUsoMdto() {
		return this.mptJustificativaUsoMdto;
	}

	public void setMptJustificativaUsoMdto(MptJustificativaUsoMdto mptJustificativaUsoMdto) {
		this.mptJustificativaUsoMdto = mptJustificativaUsoMdto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByMptPuoSerFk2() {
		return this.rapServidoresByMptPuoSerFk2;
	}

	public void setRapServidoresByMptPuoSerFk2(RapServidores rapServidoresByMptPuoSerFk2) {
		this.rapServidoresByMptPuoSerFk2 = rapServidoresByMptPuoSerFk2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TPM_SEQ", nullable = false)
	public MpmTipoParecerUsoMdto getMpmTipoParecerUsoMdto() {
		return this.mpmTipoParecerUsoMdto;
	}

	public void setMpmTipoParecerUsoMdto(MpmTipoParecerUsoMdto mpmTipoParecerUsoMdto) {
		this.mpmTipoParecerUsoMdto = mpmTipoParecerUsoMdto;
	}

	@Column(name = "IND_PARECER_VERIFICADO", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndParecerVerificado() {
		return this.indParecerVerificado;
	}

	public void setIndParecerVerificado(String indParecerVerificado) {
		this.indParecerVerificado = indParecerVerificado;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_PARECER_VERIFICADO", length = 29)
	public Date getDthrParecerVerificado() {
		return this.dthrParecerVerificado;
	}

	public void setDthrParecerVerificado(Date dthrParecerVerificado) {
		this.dthrParecerVerificado = dthrParecerVerificado;
	}

	@Column(name = "OBSERVACAO", length = 2000)
	@Length(max = 2000)
	public String getObservacao() {
		return this.observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_PARECER", nullable = false, length = 29)
	public Date getDthrParecer() {
		return this.dthrParecer;
	}

	public void setDthrParecer(Date dthrParecer) {
		this.dthrParecer = dthrParecer;
	}

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mptParecerUsoMdto")
//	public Set<MptItemPrescricaoMedicamento> getMptItemPrescricaoMedicamentoes() {
//		return this.mptItemPrescricaoMedicamentoes;
//	}
//
//	public void setMptItemPrescricaoMedicamentoes(Set<MptItemPrescricaoMedicamento> mptItemPrescricaoMedicamentoes) {
//		this.mptItemPrescricaoMedicamentoes = mptItemPrescricaoMedicamentoes;
//	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		RAP_SERVIDORES_BY_MPT_PUO_SER_FK1("rapServidoresByMptPuoSerFk1"),
		MPT_JUSTIFICATIVA_USO_MDTOS("mptJustificativaUsoMdto"),
		RAP_SERVIDORES_BY_MPT_PUO_SER_FK2("rapServidoresByMptPuoSerFk2"),
		MPM_TIPO_PARECER_USO_MDTO("mpmTipoParecerUsoMdto"),
		IND_PARECER_VERIFICADO("indParecerVerificado"),
		DTHR_PARECER_VERIFICADO("dthrParecerVerificado"),
		OBSERVACAO("observacao"),
		DTHR_PARECER("dthrParecer"),
//		MPT_ITEM_PRESCRICAO_MEDICAMENTOES("mptItemPrescricaoMedicamentoes")
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MptParecerUsoMdto)) {
			return false;
		}
		MptParecerUsoMdto other = (MptParecerUsoMdto) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

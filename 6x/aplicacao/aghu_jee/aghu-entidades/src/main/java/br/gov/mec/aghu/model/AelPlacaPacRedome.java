package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * AelPlacaPacRedome generated by hbm2java
 */
@Entity
@SequenceGenerator(name="aelPc2Sq1", sequenceName="AGH.AEL_PC2_SQ1", allocationSize = 1)
@Table(name = "AEL_PLACA_PAC_REDOMES", schema = "AGH")
public class AelPlacaPacRedome extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -394228597279820914L;
	private Integer seq;
	private Integer version;
	private AelPlacaRedome aelPlacaRedome;
	private AelSeqCodbarraRedome aelSeqCodbarraRedome;
	private String locus;
	private String loteKit;
	private Short linha;
	private Short coluna;
	private Long pc3Pc1Seq;
	private Short pc3Seqp;
	private Date criadoEm;
	private String observacao;
	private Set<AelOcorrenciaRedome> aelOcorrenciaRedomes = new HashSet<AelOcorrenciaRedome>(0);

	public AelPlacaPacRedome() {
	}

	public AelPlacaPacRedome(Integer seq) {
		this.seq = seq;
	}

	public AelPlacaPacRedome(Integer seq, AelPlacaRedome aelPlacaRedome, AelSeqCodbarraRedome aelSeqCodbarraRedome, String locus,
			String loteKit, Short linha, Short coluna, Long pc3Pc1Seq, Short pc3Seqp, Date criadoEm, String observacao,
			Set<AelOcorrenciaRedome> aelOcorrenciaRedomes) {
		this.seq = seq;
		this.aelPlacaRedome = aelPlacaRedome;
		this.aelSeqCodbarraRedome = aelSeqCodbarraRedome;
		this.locus = locus;
		this.loteKit = loteKit;
		this.linha = linha;
		this.coluna = coluna;
		this.pc3Pc1Seq = pc3Pc1Seq;
		this.pc3Seqp = pc3Seqp;
		this.criadoEm = criadoEm;
		this.observacao = observacao;
		this.aelOcorrenciaRedomes = aelOcorrenciaRedomes;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "aelPc2Sq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PC1_SEQ")
	public AelPlacaRedome getAelPlacaRedome() {
		return this.aelPlacaRedome;
	}

	public void setAelPlacaRedome(AelPlacaRedome aelPlacaRedome) {
		this.aelPlacaRedome = aelPlacaRedome;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SCR_SEQ")
	public AelSeqCodbarraRedome getAelSeqCodbarraRedome() {
		return this.aelSeqCodbarraRedome;
	}

	public void setAelSeqCodbarraRedome(AelSeqCodbarraRedome aelSeqCodbarraRedome) {
		this.aelSeqCodbarraRedome = aelSeqCodbarraRedome;
	}

	@Column(name = "LOCUS", length = 5)
	@Length(max = 5)
	public String getLocus() {
		return this.locus;
	}

	public void setLocus(String locus) {
		this.locus = locus;
	}

	@Column(name = "LOTE_KIT", length = 10)
	@Length(max = 10)
	public String getLoteKit() {
		return this.loteKit;
	}

	public void setLoteKit(String loteKit) {
		this.loteKit = loteKit;
	}

	@Column(name = "LINHA")
	public Short getLinha() {
		return this.linha;
	}

	public void setLinha(Short linha) {
		this.linha = linha;
	}

	@Column(name = "COLUNA")
	public Short getColuna() {
		return this.coluna;
	}

	public void setColuna(Short coluna) {
		this.coluna = coluna;
	}

	@Column(name = "PC3_PC1_SEQ")
	public Long getPc3Pc1Seq() {
		return this.pc3Pc1Seq;
	}

	public void setPc3Pc1Seq(Long pc3Pc1Seq) {
		this.pc3Pc1Seq = pc3Pc1Seq;
	}

	@Column(name = "PC3_SEQP")
	public Short getPc3Seqp() {
		return this.pc3Seqp;
	}

	public void setPc3Seqp(Short pc3Seqp) {
		this.pc3Seqp = pc3Seqp;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "OBSERVACAO", length = 1000)
	@Length(max = 1000)
	public String getObservacao() {
		return this.observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "aelPlacaPacRedome")
	public Set<AelOcorrenciaRedome> getAelOcorrenciaRedomes() {
		return this.aelOcorrenciaRedomes;
	}

	public void setAelOcorrenciaRedomes(Set<AelOcorrenciaRedome> aelOcorrenciaRedomes) {
		this.aelOcorrenciaRedomes = aelOcorrenciaRedomes;
	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		AEL_PLACA_REDOMES("aelPlacaRedome"),
		AEL_SEQ_CODBARRA_REDOME("aelSeqCodbarraRedome"),
		LOCUS("locus"),
		LOTE_KIT("loteKit"),
		LINHA("linha"),
		COLUNA("coluna"),
		PC3_PC1_SEQ("pc3Pc1Seq"),
		PC3_SEQP("pc3Seqp"),
		CRIADO_EM("criadoEm"),
		OBSERVACAO("observacao"),
		AEL_OCORRENCIA_REDOMES("aelOcorrenciaRedomes");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AelPlacaPacRedome)) {
			return false;
		}
		AelPlacaPacRedome other = (AelPlacaPacRedome) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

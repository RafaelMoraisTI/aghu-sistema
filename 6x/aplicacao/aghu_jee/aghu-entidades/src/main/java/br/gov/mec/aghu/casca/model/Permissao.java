package br.gov.mec.aghu.casca.model;

// Generated May 1, 2010 9:46:52 AM by Hibernate Tools 3.3.0.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.Cascade;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * Permissao generated by hbm2java
 */
@Entity
@Table(name = "CSC_PERMISSAO", schema = "CASCA")
@SequenceGenerator(name="cscPermSeq", sequenceName="casca.casca_perm_sq1", allocationSize = 1)
@org.hibernate.annotations.Cache(usage =org.hibernate.annotations.CacheConcurrencyStrategy.TRANSACTIONAL)
public class Permissao extends BaseEntityId<Integer>  {

	private static final long serialVersionUID = -6559700925011275179L;

	private Integer id;
	private String descricao;
	private Date dataCriacao;
	private DominioSituacao ativo;
	private String nome;
	private Set<PerfisPermissoes> perfisPermissoeses = new HashSet<PerfisPermissoes>(0);
	private Set<PermissoesComponentes> permissoesComponenteses = new HashSet<PermissoesComponentes>(0);
	private Set<PermissaoModulo> permissoesModulos = new HashSet<PermissaoModulo>(0);

	public Permissao() {
	}

	public Permissao(Integer id, String descricao, Date dataCriacao, DominioSituacao ativo,
			String nome) {
		this.id = id;
		this.descricao = descricao;
		this.dataCriacao = dataCriacao;
		this.ativo = ativo;
		this.nome = nome;
	}

	public Permissao(Integer id, String descricao, Date dataCriacao, DominioSituacao ativo,
			String nome, Set<PerfisPermissoes> perfisPermissoeses,
			Set<PermissoesComponentes> permissoesComponenteses) {
		this.id = id;
		this.descricao = descricao;
		this.dataCriacao = dataCriacao;
		this.ativo = ativo;
		this.nome = nome;
		this.perfisPermissoeses = perfisPermissoeses;
		this.permissoesComponenteses = permissoesComponenteses;
	}

	@Id
	@Column(name = "ID", nullable = false, precision = 8, scale = 0)
	@GeneratedValue(strategy=GenerationType.AUTO, generator="cscPermSeq")
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 1000)
	@Length(max = 1000, message = "Descrição da permissão pode conter no máximo 1000 caracteres")
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATA_CRIACAO", nullable = false, updatable = false)
	public Date getDataCriacao() {
		return this.dataCriacao;
	}

	public void setDataCriacao(Date dataCriacao) {
		this.dataCriacao = dataCriacao;
	}

	@Column(name = "ATIVO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getAtivo() {
		return this.ativo;
	}

	public void setAtivo(DominioSituacao ativo) {
		this.ativo = ativo;
	}

	@Column(name = "NOME", nullable = false, updatable = false, length = 250)
	@Length(max = 250, message = "Nome da permissão pode conter no máximo 250 caracteres")
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "permissao")
	@Cascade( { org.hibernate.annotations.CascadeType.DELETE,
			org.hibernate.annotations.CascadeType.ALL })
	public Set<PerfisPermissoes> getPerfisPermissoeses() {
		return this.perfisPermissoeses;
	}

	public void setPerfisPermissoeses(Set<PerfisPermissoes> perfisPermissoeses) {
		this.perfisPermissoeses = perfisPermissoeses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "permissao")
	public Set<PermissoesComponentes> getPermissoesComponenteses() {
		return this.permissoesComponenteses;
	}

	public void setPermissoesComponenteses(
			Set<PermissoesComponentes> permissoesComponenteses) {
		this.permissoesComponenteses = permissoesComponenteses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "permissao")
	public Set<PermissaoModulo> getPermissoesModulos() {
		return permissoesModulos;
	}

	public void setPermissoesModulos(Set<PermissaoModulo> permissoesModulos) {
		this.permissoesModulos = permissoesModulos;
	}
	
	@PrePersist
	@SuppressWarnings("unused")
	private void validarDadosInclusao() {
		if (this.dataCriacao == null || this.dataCriacao.after(new Date())) {
			this.dataCriacao = new Date();
		}
	}

	@Transient
	public String getNomeDescricao(){
		return this.nome + " - " + this.descricao;
	}
	
	public enum Fields {
		ID("id"), NOME("nome"), DESCRICAO("descricao"), ATIVO("ativo"), DATACRIACAO(
				"dataCriacao"), PERFIS_PERMISSOES("perfisPermissoeses"), PERMISSOES_COMPONENTES(
				"permissoesComponenteses"), PERMISSOES_MODULOS("permissoesModulos");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		 }

		@Override
		public String toString() {
			return this.fields;
		}
	}

}
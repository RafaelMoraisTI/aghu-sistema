package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MpaCadOrdItemHemoter generated by hbm2java
 */
@Entity
@Table(name = "MPA_CAD_ORD_ITEM_HEMOTERS", schema = "AGH")
public class MpaCadOrdItemHemoter extends BaseEntityId<MpaCadOrdItemHemoterId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7544870290697991332L;
	private MpaCadOrdItemHemoterId id;
	private Integer version;
	private RapServidores rapServidores;
	private AbsProcedHemoterapico absProcedHemoterapico;
	private AbsComponenteSanguineo absComponenteSanguineo;
	private MpaCadOrdHemoterapia mpaCadOrdHemoterapia;
	private Date criadoEm;
	private String indIrradiado;
	private String indFiltrado;
	private String indLavado;
	private Short qtdeUnidades;
	private Short qtde;
	
	// FIXME Implementar este relacionamento
//	private Set<MpaUsoOrdItemHemoters> mpaUsoOrdItemHemoterses = new HashSet<MpaUsoOrdItemHemoters>(0);

	public MpaCadOrdItemHemoter() {
	}

	public MpaCadOrdItemHemoter(MpaCadOrdItemHemoterId id, RapServidores rapServidores, MpaCadOrdHemoterapia mpaCadOrdHemoterapia,
			Date criadoEm) {
		this.id = id;
		this.rapServidores = rapServidores;
		this.mpaCadOrdHemoterapia = mpaCadOrdHemoterapia;
		this.criadoEm = criadoEm;
	}

	public MpaCadOrdItemHemoter(MpaCadOrdItemHemoterId id, RapServidores rapServidores,
			AbsProcedHemoterapico absProcedHemoterapico, AbsComponenteSanguineo absComponenteSanguineo,
			MpaCadOrdHemoterapia mpaCadOrdHemoterapia, Date criadoEm, String indIrradiado, String indFiltrado, String indLavado,
			Short qtdeUnidades, Short qtde
//			, Set<MpaUsoOrdItemHemoters> mpaUsoOrdItemHemoterses
			) {
		this.id = id;
		this.rapServidores = rapServidores;
		this.absProcedHemoterapico = absProcedHemoterapico;
		this.absComponenteSanguineo = absComponenteSanguineo;
		this.mpaCadOrdHemoterapia = mpaCadOrdHemoterapia;
		this.criadoEm = criadoEm;
		this.indIrradiado = indIrradiado;
		this.indFiltrado = indFiltrado;
		this.indLavado = indLavado;
		this.qtdeUnidades = qtdeUnidades;
		this.qtde = qtde;
//		this.mpaUsoOrdItemHemoterses = mpaUsoOrdItemHemoterses;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "cohSeq", column = @Column(name = "COH_SEQ", nullable = false)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false, precision = 17, scale = 17)) })
	public MpaCadOrdItemHemoterId getId() {
		return this.id;
	}

	public void setId(MpaCadOrdItemHemoterId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PHE_CODIGO")
	public AbsProcedHemoterapico getAbsProcedHemoterapico() {
		return this.absProcedHemoterapico;
	}

	public void setAbsProcedHemoterapico(AbsProcedHemoterapico absProcedHemoterapico) {
		this.absProcedHemoterapico = absProcedHemoterapico;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CSA_CODIGO")
	public AbsComponenteSanguineo getAbsComponenteSanguineo() {
		return this.absComponenteSanguineo;
	}

	public void setAbsComponenteSanguineo(AbsComponenteSanguineo absComponenteSanguineo) {
		this.absComponenteSanguineo = absComponenteSanguineo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "COH_SEQ", nullable = false, insertable = false, updatable = false)
	public MpaCadOrdHemoterapia getMpaCadOrdHemoterapia() {
		return this.mpaCadOrdHemoterapia;
	}

	public void setMpaCadOrdHemoterapia(MpaCadOrdHemoterapia mpaCadOrdHemoterapia) {
		this.mpaCadOrdHemoterapia = mpaCadOrdHemoterapia;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "IND_IRRADIADO", length = 1)
	@Length(max = 1)
	public String getIndIrradiado() {
		return this.indIrradiado;
	}

	public void setIndIrradiado(String indIrradiado) {
		this.indIrradiado = indIrradiado;
	}

	@Column(name = "IND_FILTRADO", length = 1)
	@Length(max = 1)
	public String getIndFiltrado() {
		return this.indFiltrado;
	}

	public void setIndFiltrado(String indFiltrado) {
		this.indFiltrado = indFiltrado;
	}

	@Column(name = "IND_LAVADO", length = 1)
	@Length(max = 1)
	public String getIndLavado() {
		return this.indLavado;
	}

	public void setIndLavado(String indLavado) {
		this.indLavado = indLavado;
	}

	@Column(name = "QTDE_UNIDADES")
	public Short getQtdeUnidades() {
		return this.qtdeUnidades;
	}

	public void setQtdeUnidades(Short qtdeUnidades) {
		this.qtdeUnidades = qtdeUnidades;
	}

	@Column(name = "QTDE")
	public Short getQtde() {
		return this.qtde;
	}

	public void setQtde(Short qtde) {
		this.qtde = qtde;
	}

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mpaCadOrdItemHemoter")
//	public Set<MpaUsoOrdItemHemoters> getMpaUsoOrdItemHemoterses() {
//		return this.mpaUsoOrdItemHemoterses;
//	}
//
//	public void setMpaUsoOrdItemHemoterses(Set<MpaUsoOrdItemHemoters> mpaUsoOrdItemHemoterses) {
//		this.mpaUsoOrdItemHemoterses = mpaUsoOrdItemHemoterses;
//	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		RAP_SERVIDORES("rapServidores"),
		ABS_PROCED_HEMOTERAPICO("absProcedHemoterapico"),
		ABS_COMPONENTE_SANGUINEO("absComponenteSanguineo"),
		MPA_CAD_ORD_HEMOTERAPIAS("mpaCadOrdHemoterapia"),
		CRIADO_EM("criadoEm"),
		IND_IRRADIADO("indIrradiado"),
		IND_FILTRADO("indFiltrado"),
		IND_LAVADO("indLavado"),
		QTDE_UNIDADES("qtdeUnidades"),
		QTDE("qtde"),
//		MPA_USO_ORD_ITEM_HEMOTERSES("mpaUsoOrdItemHemoterses")
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MpaCadOrdItemHemoter)) {
			return false;
		}
		MpaCadOrdItemHemoter other = (MpaCadOrdItemHemoter) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

// Generated 15/03/2011 13:46:58 by Hibernate Tools 3.2.5.Beta

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * FatTransplanteEspecialidades generated by hbm2java
 */
@Entity
@Table(name = "FAT_TRANSPLANTE_ESPECIALIDADES", schema = "AGH")
public class FatTransplanteEspecialidade extends BaseEntityId<FatTransplanteEspecialidadeId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -2082255700369402862L;

	private FatTransplanteEspecialidadeId id;

	private AghEspecialidades aghEspecialidades; 
	
	public FatTransplanteEspecialidade() {
	}

	public FatTransplanteEspecialidade(FatTransplanteEspecialidadeId id) {
		this.id = id;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "ttrCodigo", column = @Column(name = "TTR_CODIGO", nullable = false, length = 10)),
			@AttributeOverride(name = "espSeq", column = @Column(name = "ESP_SEQ", nullable = false, precision = 4, scale = 0)) })
	public FatTransplanteEspecialidadeId getId() {
		return this.id;
	}

	public void setId(FatTransplanteEspecialidadeId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ESP_SEQ", nullable = false, insertable=false, updatable=false)
	public AghEspecialidades getAghEspecialidades() {
		return aghEspecialidades;
	}
	
	public void setAghEspecialidades(AghEspecialidades aghEspecialidades) {
		this.aghEspecialidades = aghEspecialidades;
	}

	public enum Fields {
		ESPECIALIDADES("aghEspecialidades"),
		ESP_SEQ("aghEspecialidades.seq"),
		TTR_CODIGO("id.ttrCodigo"),
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof FatTransplanteEspecialidade)) {
			return false;
		}
		FatTransplanteEspecialidade other = (FatTransplanteEspecialidade) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

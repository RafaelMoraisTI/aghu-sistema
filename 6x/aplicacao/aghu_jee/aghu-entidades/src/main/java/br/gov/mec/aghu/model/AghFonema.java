package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

/**
 * AghFonema generated by hbm2java
 */
@Entity
@Table(name = "AGH_FONEMAS", schema = "AGH")
public class AghFonema implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1266739786416977703L;
	private String fonema;
	private Integer version;
	private Long contadorPessoaFisica;
	private Long contadorUnidFunc;
	private Long contadorExame;
	private Long contadorConvSaude;
	private Long contadorProcCirurgico;
	private Set<MbcFonemaProcCirurgico> mbcFonemaProcCirurgicos = new HashSet<MbcFonemaProcCirurgico>(0);
	private Set<AelFonemaExame> aelFonemaExames = new HashSet<AelFonemaExame>(0);
	private Set<RapFonemaPessoaFisica> rapFonemaPessoaFisicas = new HashSet<RapFonemaPessoaFisica>(0);
	private Set<AghFonemaUnidFunc> aghFonemaUnidFuncs = new HashSet<AghFonemaUnidFunc>(0);

	// FIXME Implementar este relacionamento
//	private Set<FatFonemaConvSaude> fatFonemaConvSaudes = new HashSet<FatFonemaConvSaude>(0);

	public AghFonema() {
	}

	public AghFonema(String fonema) {
		this.fonema = fonema;
	}

	public AghFonema(String fonema, Long contadorPessoaFisica, Long contadorUnidFunc, Long contadorExame, Long contadorConvSaude,
			Long contadorProcCirurgico, Set<MbcFonemaProcCirurgico> mbcFonemaProcCirurgicos, Set<AelFonemaExame> aelFonemaExames,
//			Set<FatFonemaConvSaude> fatFonemaConvSaudes,
			Set<RapFonemaPessoaFisica> rapFonemaPessoaFisicas, Set<AghFonemaUnidFunc> aghFonemaUnidFuncs) {
		this.fonema = fonema;
		this.contadorPessoaFisica = contadorPessoaFisica;
		this.contadorUnidFunc = contadorUnidFunc;
		this.contadorExame = contadorExame;
		this.contadorConvSaude = contadorConvSaude;
		this.contadorProcCirurgico = contadorProcCirurgico;
		this.mbcFonemaProcCirurgicos = mbcFonemaProcCirurgicos;
		this.aelFonemaExames = aelFonemaExames;
//		this.fatFonemaConvSaudes = fatFonemaConvSaudes;
		this.rapFonemaPessoaFisicas = rapFonemaPessoaFisicas;
		this.aghFonemaUnidFuncs = aghFonemaUnidFuncs;
	}

	@Id
	@Column(name = "FONEMA", unique = true, nullable = false, length = 6)
	@Length(max = 6)
	public String getFonema() {
		return this.fonema;
	}

	public void setFonema(String fonema) {
		this.fonema = fonema;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Column(name = "CONTADOR_PESSOA_FISICA")
	public Long getContadorPessoaFisica() {
		return this.contadorPessoaFisica;
	}

	public void setContadorPessoaFisica(Long contadorPessoaFisica) {
		this.contadorPessoaFisica = contadorPessoaFisica;
	}

	@Column(name = "CONTADOR_UNID_FUNC")
	public Long getContadorUnidFunc() {
		return this.contadorUnidFunc;
	}

	public void setContadorUnidFunc(Long contadorUnidFunc) {
		this.contadorUnidFunc = contadorUnidFunc;
	}

	@Column(name = "CONTADOR_EXAME")
	public Long getContadorExame() {
		return this.contadorExame;
	}

	public void setContadorExame(Long contadorExame) {
		this.contadorExame = contadorExame;
	}

	@Column(name = "CONTADOR_CONV_SAUDE")
	public Long getContadorConvSaude() {
		return this.contadorConvSaude;
	}

	public void setContadorConvSaude(Long contadorConvSaude) {
		this.contadorConvSaude = contadorConvSaude;
	}

	@Column(name = "CONTADOR_PROC_CIRURGICO")
	public Long getContadorProcCirurgico() {
		return this.contadorProcCirurgico;
	}

	public void setContadorProcCirurgico(Long contadorProcCirurgico) {
		this.contadorProcCirurgico = contadorProcCirurgico;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "aghFonema")
	public Set<MbcFonemaProcCirurgico> getMbcFonemaProcCirurgicos() {
		return this.mbcFonemaProcCirurgicos;
	}

	public void setMbcFonemaProcCirurgicos(Set<MbcFonemaProcCirurgico> mbcFonemaProcCirurgicos) {
		this.mbcFonemaProcCirurgicos = mbcFonemaProcCirurgicos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "aghFonema")
	public Set<AelFonemaExame> getAelFonemaExames() {
		return this.aelFonemaExames;
	}

	public void setAelFonemaExames(Set<AelFonemaExame> aelFonemaExames) {
		this.aelFonemaExames = aelFonemaExames;
	}

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "aghFonema")
//	public Set<FatFonemaConvSaude> getFatFonemaConvSaudes() {
//		return this.fatFonemaConvSaudes;
//	}
//
//	public void setFatFonemaConvSaudes(Set<FatFonemaConvSaude> fatFonemaConvSaudes) {
//		this.fatFonemaConvSaudes = fatFonemaConvSaudes;
//	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "aghFonema")
	public Set<RapFonemaPessoaFisica> getRapFonemaPessoaFisicas() {
		return this.rapFonemaPessoaFisicas;
	}

	public void setRapFonemaPessoaFisicas(Set<RapFonemaPessoaFisica> rapFonemaPessoaFisicas) {
		this.rapFonemaPessoaFisicas = rapFonemaPessoaFisicas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "aghFonema")
	public Set<AghFonemaUnidFunc> getAghFonemaUnidFuncs() {
		return this.aghFonemaUnidFuncs;
	}

	public void setAghFonemaUnidFuncs(Set<AghFonemaUnidFunc> aghFonemaUnidFuncs) {
		this.aghFonemaUnidFuncs = aghFonemaUnidFuncs;
	}

	public enum Fields {

		FONEMA("fonema"),
		VERSION("version"),
		CONTADOR_PESSOA_FISICA("contadorPessoaFisica"),
		CONTADOR_UNID_FUNC("contadorUnidFunc"),
		CONTADOR_EXAME("contadorExame"),
		CONTADOR_CONV_SAUDE("contadorConvSaude"),
		CONTADOR_PROC_CIRURGICO("contadorProcCirurgico"),
		MBC_FONEMA_PROC_CIRURGICOS("mbcFonemaProcCirurgicos"),
		AEL_FONEMA_EXAMES("aelFonemaExames"),
//		FAT_FONEMA_CONV_SAUDES("fatFonemaConvSaudes"),
		RAP_FONEMA_PESSOA_FISICAS("rapFonemaPessoaFisicas"),
		AGH_FONEMA_UNID_FUNCS("aghFonemaUnidFuncs");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getFonema() == null) ? 0 : getFonema().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AghFonema)) {
			return false;
		}
		AghFonema other = (AghFonema) obj;
		if (getFonema() == null) {
			if (other.getFonema() != null) {
				return false;
			}
		} else if (!getFonema().equals(other.getFonema())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

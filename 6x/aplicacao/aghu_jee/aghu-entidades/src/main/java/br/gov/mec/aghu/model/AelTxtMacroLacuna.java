package br.gov.mec.aghu.model;

// Generated 27/03/2012 08:36:07 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AelTxtMacroLacunas generated by hbm2java
 */
@Entity
@Table(name = "AEL_TXT_MACRO_LACUNAS", schema = "AGH")
public class AelTxtMacroLacuna extends BaseEntityId<AelTxtMacroLacunaId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 4645643377166628594L;
	
	private AelTxtMacroLacunaId id;
	private AelGrpMacroLacuna aelGrpMacroLacunas;
	private String textoLacuna;
	private DominioSituacao indSituacao;
	private Date criadoEm;
	private Integer version;
	private RapServidores servidor;
	
	public AelTxtMacroLacuna() {
	}

	public AelTxtMacroLacuna(AelTxtMacroLacunaId id,
			AelGrpMacroLacuna aelGrpMacroLacunas, String textoLacuna,
			DominioSituacao indSituacao, Date criadoEm) {
		this.id = id;
		this.aelGrpMacroLacunas = aelGrpMacroLacunas;
		this.textoLacuna = textoLacuna;
		this.indSituacao = indSituacao;
		this.criadoEm = criadoEm;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "lo3LufLubSeq", column = @Column(name = "LO3_LUF_LUB_SEQ", nullable = false, precision = 4, scale = 0)),
			@AttributeOverride(name = "lo3LufSeqp", column = @Column(name = "LO3_LUF_SEQP", nullable = false, precision = 4, scale = 0)),
			@AttributeOverride(name = "lo3Seqp", column = @Column(name = "LO3_SEQP", nullable = false, precision = 4, scale = 0)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false, precision = 4, scale = 0)) })
	public AelTxtMacroLacunaId getId() {
		return this.id;
	}

	public void setId(AelTxtMacroLacunaId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "LO3_LUF_LUB_SEQ", referencedColumnName = "LUF_LUB_SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "LO3_LUF_SEQP", referencedColumnName = "LUF_SEQP", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "LO3_SEQP", referencedColumnName = "SEQP", nullable = false, insertable = false, updatable = false) })
	public AelGrpMacroLacuna getAelGrpMacroLacunas() {
		return this.aelGrpMacroLacunas;
	}

	public void setAelGrpMacroLacunas(AelGrpMacroLacuna aelGrpMacroLacunas) {
		this.aelGrpMacroLacunas = aelGrpMacroLacunas;
	}

	@Column(name = "TEXTO_LACUNA", nullable = false, length = 500)
	@Length(max = 500)
	public String getTextoLacuna() {
		return this.textoLacuna;
	}

	public void setTextoLacuna(String textoLacuna) {
		this.textoLacuna = textoLacuna;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable=false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable=false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}
	
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		AelTxtMacroLacuna other = (AelTxtMacroLacuna) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}

	public enum Fields {
		LO3_LUF_LUB_SEQ("id.lo3LufLubSeq"),
		LO3_LUF_SEQP("id.lo3LufSeqp"),
		LO3_SEQP("id.lo3Seqp"),
		SEQP("id.seqp"),
		TEXTO_LACUNA("textoLacuna"),
		IND_SITUACAO("indSituacao"),
		CRIADO_EM("criadoEm"),
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}		

}

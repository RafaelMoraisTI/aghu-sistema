package br.gov.mec.aghu.model;

// Generated 15/03/2011 13:46:58 by Hibernate Tools 3.2.5.Beta

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * FatProcedimentosIncremento generated by hbm2java
 */
@Entity
@Table(name = "FAT_PROCEDIMENTOS_INCREMENTO", schema = "AGH")
public class FatProcedimentoIncremento extends BaseEntityId<FatProcedimentoIncrementoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5495052852544052340L;
	private FatProcedimentoIncrementoId id;
	private FatHabilitacao fatHabilitacao;
	private String codProcedimento;
	private String percentual;
	private String valorSa;
	private String valorSh;
	private String valorSp;
	private String valorSadt;
	private Integer version;

	public FatProcedimentoIncremento() {
	}

	public FatProcedimentoIncremento(FatProcedimentoIncrementoId id,
			FatHabilitacao fatHabilitacao) {
		this.id = id;
		this.fatHabilitacao = fatHabilitacao;
	}

	public FatProcedimentoIncremento(FatProcedimentoIncrementoId id,
			FatHabilitacao fatHabilitacao, String codProcedimento,
			String percentual, String valorSa, String valorSh, String valorSp,
			String valorSadt) {
		this.id = id;
		this.fatHabilitacao = fatHabilitacao;
		this.codProcedimento = codProcedimento;
		this.percentual = percentual;
		this.valorSa = valorSa;
		this.valorSh = valorSh;
		this.valorSp = valorSp;
		this.valorSadt = valorSadt;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "iphPhoSeq", column = @Column(name = "IPH_PHO_SEQ", nullable = false, precision = 4, scale = 0)),
			@AttributeOverride(name = "iphSeq", column = @Column(name = "IPH_SEQ", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "codHabilitacao", column = @Column(name = "COD_HABILITACAO", nullable = false, length = 4)) })
	public FatProcedimentoIncrementoId getId() {
		return this.id;
	}

	public void setId(FatProcedimentoIncrementoId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "COD_HABILITACAO", nullable = false, insertable = false, updatable = false)
	public FatHabilitacao getFatHabilitacao() {
		return this.fatHabilitacao;
	}

	public void setFatHabilitacao(FatHabilitacao fatHabilitacao) {
		this.fatHabilitacao = fatHabilitacao;
	}

	@Column(name = "COD_PROCEDIMENTO", length = 240)
	@Length(max = 240)
	public String getCodProcedimento() {
		return this.codProcedimento;
	}

	public void setCodProcedimento(String codProcedimento) {
		this.codProcedimento = codProcedimento;
	}

	@Column(name = "PERCENTUAL", length = 3)
	@Length(max = 3)
	public String getPercentual() {
		return this.percentual;
	}

	public void setPercentual(String percentual) {
		this.percentual = percentual;
	}

	@Column(name = "VALOR_SA", length = 3)
	@Length(max = 3)
	public String getValorSa() {
		return this.valorSa;
	}

	public void setValorSa(String valorSa) {
		this.valorSa = valorSa;
	}

	@Column(name = "VALOR_SH", length = 3)
	@Length(max = 3)
	public String getValorSh() {
		return this.valorSh;
	}

	public void setValorSh(String valorSh) {
		this.valorSh = valorSh;
	}

	@Column(name = "VALOR_SP", length = 3)
	@Length(max = 3)
	public String getValorSp() {
		return this.valorSp;
	}

	public void setValorSp(String valorSp) {
		this.valorSp = valorSp;
	}

	@Column(name = "VALOR_SADT", length = 3)
	@Length(max = 3)
	public String getValorSadt() {
		return this.valorSadt;
	}

	public void setValorSadt(String valorSadt) {
		this.valorSadt = valorSadt;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		FatProcedimentoIncremento other = (FatProcedimentoIncremento) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}

	public enum Fields {

		ID("id"),
		FAT_HABILITACAO("fatHabilitacao"),
		COD_PROCEDIMENTO("codProcedimento"),
		PERCENTUAL("percentual"),
		VALOR_SA("valorSa"),
		VALOR_SH("valorSh"),
		VALOR_SP("valorSp"),
		VALOR_SADT("valorSadt"),
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}

}

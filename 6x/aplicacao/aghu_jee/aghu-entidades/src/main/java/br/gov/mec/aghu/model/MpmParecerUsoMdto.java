package br.gov.mec.aghu.model;

// Generated 14/09/2010 17:49:55 by Hibernate Tools 3.2.5.Beta

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSimNao;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MpmParecerUsoMdtos generated by hbm2java
 */
@SuppressWarnings({"PMD.AghuUsoIndevidoDaEnumDominioSimNaoEntity"})
@Entity
@SequenceGenerator(name="mpmPumSq1", sequenceName="AGH.MPM_PUM_SQ1", allocationSize = 1)
@Table(name = "MPM_PARECER_USO_MDTOS", schema = "AGH")
public class MpmParecerUsoMdto extends BaseEntitySeq<BigDecimal> {

	/**
	 * 
	 */
	private static final long serialVersionUID = -723387616493489373L;
	
	private BigDecimal seq;
	private BigDecimal jumSeq;
	private MpmTipoParecerUsoMdto mpmTipoParecerUsoMdtos;
	private RapServidores servidorMatricula;
	private RapServidores servidorMatriculaVisualizado;
	private Date dthrParecer;
	private DominioSimNao indParecerVerificado;
	private String observacao;
	
	private MpmJustificativaUsoMdto justificativa;
	private Short tpmSeq;
	
	private Set<MpmItemPrescParecerMdto> mpmItemPrescParecerMdtoses = new HashSet<MpmItemPrescParecerMdto>(0);

	public MpmParecerUsoMdto() {
	}

	public MpmParecerUsoMdto(final BigDecimal seq, final MpmTipoParecerUsoMdto mpmTipoParecerUsoMdtos, final BigDecimal jumSeq,
			final RapServidores serMatricula, final Date dthrParecer, final DominioSimNao indParecerVerificado) {
		this.seq = seq;
		this.mpmTipoParecerUsoMdtos = mpmTipoParecerUsoMdtos;
		this.jumSeq = jumSeq;
		this.servidorMatricula = serMatricula;
		this.dthrParecer = dthrParecer;
		this.indParecerVerificado = indParecerVerificado;
	}

	public MpmParecerUsoMdto(final BigDecimal seq, final MpmTipoParecerUsoMdto mpmTipoParecerUsoMdtos, final BigDecimal jumSeq,
			final RapServidores serMatricula, final RapServidores servidorMatriculaVisualizado, final Short serVinCodigoVisualizado,
			final Date dthrParecer, final DominioSimNao indParecerVerificado, final String observacao,
			final Set<MpmItemPrescParecerMdto> mpmItemPrescParecerMdtoses) {
		this.seq = seq;
		this.mpmTipoParecerUsoMdtos = mpmTipoParecerUsoMdtos;
		this.jumSeq = jumSeq;
		this.servidorMatricula = serMatricula;
		this.servidorMatriculaVisualizado = servidorMatriculaVisualizado;
		this.dthrParecer = dthrParecer;
		this.indParecerVerificado = indParecerVerificado;
		this.observacao = observacao;
		this.mpmItemPrescParecerMdtoses = mpmItemPrescParecerMdtoses;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mpmPumSq1")
	@Column(name = "SEQ", unique = true, nullable = false, precision = 22, scale = 0)
	public BigDecimal getSeq() {
		return this.seq;
	}

	public void setSeq(final BigDecimal seq) {
		this.seq = seq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TPM_SEQ", nullable = false)
	public MpmTipoParecerUsoMdto getMpmTipoParecerUsoMdtos() {
		return this.mpmTipoParecerUsoMdtos;
	}

	public void setMpmTipoParecerUsoMdtos(final MpmTipoParecerUsoMdto mpmTipoParecerUsoMdtos) {
		this.mpmTipoParecerUsoMdtos = mpmTipoParecerUsoMdtos;
	}

	@Column(name = "JUM_SEQ", nullable = false, precision = 22, scale = 0)
	public BigDecimal getJumSeq() {
		return this.jumSeq;
	}

	public void setJumSeq(final BigDecimal jumSeq) {
		this.jumSeq = jumSeq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( { @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidorMatricula() {
		return this.servidorMatricula;
	}

	public void setServidorMatricula(final RapServidores serMatricula) {
		this.servidorMatricula = serMatricula;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( { @JoinColumn(name = "SER_MATRICULA_VISUALIZADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_VISUALIZADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorMatriculaVisualizado() {
		return this.servidorMatriculaVisualizado;
	}

	public void setServidorMatriculaVisualizado(final RapServidores servidorMatriculaVisualizado) {
		this.servidorMatriculaVisualizado = servidorMatriculaVisualizado;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_PARECER", nullable = false, length = 7)
	public Date getDthrParecer() {
		return this.dthrParecer;
	}

	public void setDthrParecer(final Date dthrParecer) {
		this.dthrParecer = dthrParecer;
	}

	@Column(name = "IND_PARECER_VERIFICADO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSimNao getIndParecerVerificado() {
		return this.indParecerVerificado;
	}

	public void setIndParecerVerificado(final DominioSimNao parecerVerificado) {
		this.indParecerVerificado = parecerVerificado;
	}

	@Column(name = "OBSERVACAO", length = 2000)
	@Length(max = 2000)
	public String getObservacao() {
		return this.observacao;
	}

	public void setObservacao(final String observacao) {
		this.observacao = observacao;
	}
	
	@Column(name = "TPM_SEQ", insertable = false, updatable = false, precision = 4, scale = 0)
	public Short getTpmSeq() {
		return tpmSeq;
	}
	
	public void setTpmSeq(Short tpmSeq) {
		this.tpmSeq = tpmSeq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "JUM_SEQ", insertable = false, updatable = false)
	public MpmJustificativaUsoMdto getJustificativa() {
		return justificativa;
	}

	public void setJustificativa(MpmJustificativaUsoMdto justificativa) {
		this.justificativa = justificativa;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mpmParecerUsoMdtos")
	public Set<MpmItemPrescParecerMdto> getMpmItemPrescParecerMdtoses() {
		return this.mpmItemPrescParecerMdtoses;
	}

	public void setMpmItemPrescParecerMdtoses(final Set<MpmItemPrescParecerMdto> mpmItemPrescParecerMdtoses) {
		this.mpmItemPrescParecerMdtoses = mpmItemPrescParecerMdtoses;
	}

	@Override
	public boolean equals(final Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (this.getClass() != obj.getClass()) {
			return false;
		}
		MpmParecerUsoMdto other = (MpmParecerUsoMdto) obj;
		if (this.getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
			// property seq is BigDecimal
		} else if (!(this.getSeq().compareTo(other.getSeq()) == 0)) {
			return false;
		}
		return true;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((this.getSeq() == null) ? 0 : this.getSeq().hashCode());
		return result;
	}

	public enum Fields {

		SEQ("seq"),
		MPM_TIPO_PARECER_USO_MDTOS("mpmTipoParecerUsoMdtos"),
		JUM_SEQ("jumSeq"),
		TIPO_PARECER_MDTO_SEQ("mpmTipoParecerUsoMdtos.seq"),
		TPM_SEQ("tpmSeq"),
		SERVIDOR_MATRICULA("servidorMatricula"),
		SER_MATRICULA("servidorMatricula.id.matricula"),
		SER_VIN_CODIGO("servidorMatricula.id.vinCodigo"),
		SERVIDOR_MATRICULA_VISUALIZADO("servidorMatriculaVisualizado"),
		DTHR_PARECER("dthrParecer"),
		IND_PARECER_VERIFICADO("indParecerVerificado"),
		OBSERVACAO("observacao"),
		MPM_ITEM_PRESC_PARECER_MDTOSES("mpmItemPrescParecerMdtoses"),
		JUSTIFICATIVA("justificativa");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}

}

package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * RapCompetencia generated by hbm2java
 */
@Entity
@SequenceGenerator(name="rapComSq1", sequenceName="AGH.RAP_COM_SQ1", allocationSize = 1)
@Table(name = "RAP_COMPETENCIAS", schema = "AGH", uniqueConstraints = @UniqueConstraint(columnNames = { "descricao", "dt_inicio" }))
public class RapCompetencia extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 5525209065328922537L;
	private Integer seq;
	private Integer version;
	private RapServidores rapServidoresByRapComSerFk2;
	private RapServidores rapServidoresByRapComSerFk1;
	private String descricao;
	private Date dtInicio;
	private Date dtFim;
	private Date criadoEm;
	private Date alteradoEm;
	private Set<RapCompetenciaTipo> rapCompetenciaTipos = new HashSet<RapCompetenciaTipo>(0);

	public RapCompetencia() {
	}

	public RapCompetencia(Integer seq, RapServidores rapServidoresByRapComSerFk1, String descricao, Date dtInicio, Date criadoEm) {
		this.seq = seq;
		this.rapServidoresByRapComSerFk1 = rapServidoresByRapComSerFk1;
		this.descricao = descricao;
		this.dtInicio = dtInicio;
		this.criadoEm = criadoEm;
	}

	public RapCompetencia(Integer seq, RapServidores rapServidoresByRapComSerFk2, RapServidores rapServidoresByRapComSerFk1,
			String descricao, Date dtInicio, Date dtFim, Date criadoEm, Date alteradoEm, Set<RapCompetenciaTipo> rapCompetenciaTipos) {
		this.seq = seq;
		this.rapServidoresByRapComSerFk2 = rapServidoresByRapComSerFk2;
		this.rapServidoresByRapComSerFk1 = rapServidoresByRapComSerFk1;
		this.descricao = descricao;
		this.dtInicio = dtInicio;
		this.dtFim = dtFim;
		this.criadoEm = criadoEm;
		this.alteradoEm = alteradoEm;
		this.rapCompetenciaTipos = rapCompetenciaTipos;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "rapComSq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_ALTERADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_ALTERADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByRapComSerFk2() {
		return this.rapServidoresByRapComSerFk2;
	}

	public void setRapServidoresByRapComSerFk2(RapServidores rapServidoresByRapComSerFk2) {
		this.rapServidoresByRapComSerFk2 = rapServidoresByRapComSerFk2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_CRIADO", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO_CRIADO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByRapComSerFk1() {
		return this.rapServidoresByRapComSerFk1;
	}

	public void setRapServidoresByRapComSerFk1(RapServidores rapServidoresByRapComSerFk1) {
		this.rapServidoresByRapComSerFk1 = rapServidoresByRapComSerFk1;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 240)
	@Length(max = 240)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_INICIO", nullable = false, length = 29)
	public Date getDtInicio() {
		return this.dtInicio;
	}

	public void setDtInicio(Date dtInicio) {
		this.dtInicio = dtInicio;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_FIM", length = 29)
	public Date getDtFim() {
		return this.dtFim;
	}

	public void setDtFim(Date dtFim) {
		this.dtFim = dtFim;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 29)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rapCompetencia")
	public Set<RapCompetenciaTipo> getRapCompetenciaTipos() {
		return this.rapCompetenciaTipos;
	}

	public void setRapCompetenciaTipos(Set<RapCompetenciaTipo> rapCompetenciaTipos) {
		this.rapCompetenciaTipos = rapCompetenciaTipos;
	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		RAP_SERVIDORES_BY_RAP_COM_SER_FK2("rapServidoresByRapComSerFk2"),
		RAP_SERVIDORES_BY_RAP_COM_SER_FK1("rapServidoresByRapComSerFk1"),
		DESCRICAO("descricao"),
		DT_INICIO("dtInicio"),
		DT_FIM("dtFim"),
		CRIADO_EM("criadoEm"),
		ALTERADO_EM("alteradoEm"),
		RAP_COMPETENCIA_TIPOS("rapCompetenciaTipos");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof RapCompetencia)) {
			return false;
		}
		RapCompetencia other = (RapCompetencia) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

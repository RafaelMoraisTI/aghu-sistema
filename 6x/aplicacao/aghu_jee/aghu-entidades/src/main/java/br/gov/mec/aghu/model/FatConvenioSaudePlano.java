package br.gov.mec.aghu.model;

// Generated 17/12/2009 15:47:50 by Hibernate Tools 3.2.5.Beta

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.Version;


import org.apache.commons.lang3.StringUtils;

import br.gov.mec.aghu.dominio.DominioPeriodicidade;
import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.dominio.DominioTipoPlano;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * FatConvSaudePlanos generated by hbm2java
 */
@Entity
@Table(name = "FAT_CONV_SAUDE_PLANOS", schema = "AGH")
@org.hibernate.annotations.Cache(usage=org.hibernate.annotations.CacheConcurrencyStrategy.TRANSACTIONAL)
public class FatConvenioSaudePlano extends BaseEntityId<FatConvenioSaudePlanoId> implements java.io.Serializable {


	/**
	 * 
	 */
	private static final long serialVersionUID = -5672626065867263397L;
	/**
	 * Chave primária composta pelo código do convênio e por um sequencial.
	 */
	private FatConvenioSaudePlanoId id;
	/**
	 * Convenio de saúde relacionado a este plano.
	 */
	private FatConvenioSaude convenioSaude;
	/**
	 * Descrição do plano.
	 */
	private String descricao;
	/**
	 * Tipo do plano.
	 */
	private DominioTipoPlano indTipoPlano;
	/**
	 * Periodiciade de emissão.
	 */
	private DominioPeriodicidade periodicidadeEmissao;
	/**
	 * Situação do plano.
	 */
	private DominioSituacao indSituacao;

	private Set<CntaConv> cntaConvs = new HashSet<CntaConv>(0);

	private Set<AinInternacao> internacoes = new HashSet<AinInternacao>(0);

	/**
	 * convPlanoAcomodacoes.
	 */
	private List<FatConvPlanoAcomodacoes> convPlanoAcomodacoes = new ArrayList<FatConvPlanoAcomodacoes>(
			0);

	/**
	 * convTipoDocumentos.
	 */
	private List<FatConvTipoDocumentos> convTipoDocumentos = new ArrayList<FatConvTipoDocumentos>(
			0);

	/**
	 * convPeriodos.
	 */
	private List<FatPeriodosEmissao> convPeriodos = new ArrayList<FatPeriodosEmissao>(
			0);
	
	private Integer version;

	private Set<AelSolicitacaoExames> solicitacoesExames = new HashSet<AelSolicitacaoExames>(0);
	
	private Set<AacConsultas> consultas = new HashSet<AacConsultas>(0);

	private Set<FatProcedAmbRealizado> procedimentosAmbRealizados = new HashSet<FatProcedAmbRealizado>(0);
	
	private Set<FatConvGrupoItemProced> convGrupoItemProced = new HashSet<FatConvGrupoItemProced>(0);
	
	
	public FatConvenioSaudePlano() {
	}
	
	public FatConvenioSaudePlano(FatConvenioSaudePlanoId id){
		this.id = id;
	}

	public FatConvenioSaudePlano(FatConvenioSaudePlanoId id,
			FatConvenioSaude fatConveniosSaude, String descricao) {
		this.id = id;
		this.convenioSaude = fatConveniosSaude;
		this.descricao = descricao;
	}

	public FatConvenioSaudePlano(FatConvenioSaudePlanoId id,
			FatConvenioSaude fatConveniosSaude, String descricao,
			DominioTipoPlano indTipoPlano,
			DominioPeriodicidade periodicidadeEmissao,
			DominioSituacao indSituacao) {
		this.id = id;
		this.convenioSaude = fatConveniosSaude;
		this.descricao = descricao;
		this.indTipoPlano = indTipoPlano;
		this.periodicidadeEmissao = periodicidadeEmissao;
		this.indSituacao = indSituacao;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "cnvCodigo", column = @Column(name = "CNV_CODIGO", nullable = false, precision = 3, scale = 0)),
			@AttributeOverride(name = "seq", column = @Column(name = "SEQ", nullable = false, precision = 2, scale = 0)) })
	public FatConvenioSaudePlanoId getId() {
		return this.id;
	}

	public void setId(FatConvenioSaudePlanoId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "CNV_CODIGO", nullable = false, insertable = false, updatable = false)
	public FatConvenioSaude getConvenioSaude() {
		return this.convenioSaude;
	}

	public void setConvenioSaude(FatConvenioSaude fatConveniosSaude) {
		this.convenioSaude = fatConveniosSaude;
	}

	@Column(name = "DESCRICAO", nullable = false)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao.toUpperCase();
	}

	@Column(name = "IND_TIPO_PLANO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioTipoPlano getIndTipoPlano() {
		return this.indTipoPlano;
	}

	public void setIndTipoPlano(DominioTipoPlano indTipoPlano) {
		this.indTipoPlano = indTipoPlano;
	}

	@Column(name = "PERIODICIDADE_EMISSAO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioPeriodicidade getPeriodicidadeEmissao() {
		return this.periodicidadeEmissao;
	}

	public void setPeriodicidadeEmissao(
			DominioPeriodicidade periodicidadeEmissao) {
		this.periodicidadeEmissao = periodicidadeEmissao;
	}

	@Column(name = "IND_SITUACAO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fatConvSaudePlanos")
	public Set<CntaConv> getCntaConvs() {
		return this.cntaConvs;
	}

	public void setCntaConvs(Set<CntaConv> cntaConvs) {
		this.cntaConvs = cntaConvs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "convenioSaudePlano")
	public Set<AinInternacao> getInternacoes() {
		return this.internacoes;
	}

	public void setInternacoes(Set<AinInternacao> internacoes) {
		this.internacoes = internacoes;
	}

	// @Cascade( { org.hibernate.annotations.CascadeType.SAVE_UPDATE })
	// @OneToMany(cascade = { CascadeType.PERSIST, CascadeType.MERGE,
	// CascadeType.REFRESH }, fetch = FetchType.LAZY, mappedBy =
	// "id.convenioSaudePlano")

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "convenioSaudePlano")
	public List<FatConvPlanoAcomodacoes> getConvPlanoAcomodacoes() {
		return this.convPlanoAcomodacoes;
	}

	public void setConvPlanoAcomodacoes(
			List<FatConvPlanoAcomodacoes> convPlanoAcomodacoes) {
		this.convPlanoAcomodacoes = convPlanoAcomodacoes;
	}

	
	
	// @Cascade( { org.hibernate.annotations.CascadeType.SAVE_UPDATE })
	// @OneToMany(cascade = { CascadeType.PERSIST, CascadeType.MERGE,
	// CascadeType.REFRESH }, fetch = FetchType.LAZY, mappedBy =
	// "convenioSaudePlano")

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "convenioSaudePlano")
	public Set<AelSolicitacaoExames> getSolicitacoesExames() {
		return solicitacoesExames;
	}

	public void setSolicitacoesExames(Set<AelSolicitacaoExames> solicitacoesExames) {
		this.solicitacoesExames = solicitacoesExames;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "convenioSaudePlano")
	public List<FatConvTipoDocumentos> getConvTipoDocumentos() {
		return this.convTipoDocumentos;
	}

	public void setConvTipoDocumentos(
			List<FatConvTipoDocumentos> convTipoDocumentos) {
		this.convTipoDocumentos = convTipoDocumentos;
	}

	// @Cascade( { org.hibernate.annotations.CascadeType.SAVE_UPDATE })
	// @OneToMany(cascade = { CascadeType.PERSIST, CascadeType.MERGE,
	// CascadeType.REFRESH }, fetch = FetchType.LAZY, mappedBy =
	// "id.convenioSaudePlano")

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "convenioSaudePlano")
	public List<FatPeriodosEmissao> getConvPeriodos() {
		return this.convPeriodos;
	}
	
	
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "convenioSaudePlano")
	public Set<AacConsultas> getConsultas() {
		return consultas;
	}

	public void setConsultas(Set<AacConsultas> consultas) {
		this.consultas = consultas;
	}
	

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "convenioSaudePlano")
	public Set<FatProcedAmbRealizado> getProcedimentosAmbRealizados() {
		return procedimentosAmbRealizados;
	}

	public void setProcedimentosAmbRealizados(
			Set<FatProcedAmbRealizado> procedimentosAmbRealizados) {
		this.procedimentosAmbRealizados = procedimentosAmbRealizados;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "convenioSaudePlano")
	public Set<FatConvGrupoItemProced> getConvGrupoItemProced() {
		return convGrupoItemProced;
	}

	public void setConvGrupoItemProced(
			Set<FatConvGrupoItemProced> convGrupoItemProced) {
		this.convGrupoItemProced = convGrupoItemProced;
	}

	@Transient
	public String getDescricaoPlanoConvenio() {
		if(this.convenioSaude != null){
			return this.convenioSaude.getDescricao() + " - " + this.descricao;
		} else {
			return null;
		}
	}
	
	@Transient
	public String getDescricaoCompleta() {
		//  substr(rtrim(cnv.descricao)||' - '|| rtrim(csp.descricao),1,60),
		StringBuffer returnValue = new StringBuffer();
		Boolean hasDescricao = Boolean.FALSE;
		
		if (this.getConvenioSaude() != null && StringUtils.isNotBlank(this.getConvenioSaude().getDescricao())) {
			returnValue.append(this.getConvenioSaude().getDescricao());
			hasDescricao = Boolean.TRUE;
		}
		
		if (StringUtils.isNotBlank(this.getDescricao())) {
			if(hasDescricao) {
				returnValue.append(" - ");
			}
			returnValue.append(this.getDescricao());
		}
		
		return returnValue.toString();
	}
	
	
	public void setConvPeriodos(List<FatPeriodosEmissao> convPeriodos) {
		this.convPeriodos = convPeriodos;
	}
	
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	public enum Fields {
		DESCRICAO("descricao"),

		CONVENIO_SAUDE("convenioSaude"),

		DESCRICAO_CONVENIO_SAUDE("convenioSaude.descricao"),

		CONVENIO_SAUDE_PERMISSAO_INTERNACAO("convenioSaude.permissaoInternacao"),

		CODIGO("id.cnvCodigo"),

		SEQ("id.seq"),

		ID("id"),

		SITUACAO("indSituacao"),

		SITUACAO_CONVENIO_SAUDE("convenioSaude.situacao"),
		
		CNV_CODIGO("convenioSaude.codigo"),

		IND_TIPO_PLANO("indTipoPlano"),

		PROCEDIMENTOS_AMB_REALIZADOS("procedimentosAmbRealizados"),

		CONSULTAS("consultas"),
		
		SOLICITACOES_EXAMES("solicitacoesExames"),
		
		CONVENIO_GRUPO_ITEM_PROCED("convGrupoItemProced"), 
		
		CONVENIO_SAUDE_CODIGO("convenioSaude.codigo")
		
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((this.getId() == null) ? 0 : this.getId().hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof FatConvenioSaudePlano)) {
			return false;
		}
		FatConvenioSaudePlano other = (FatConvenioSaudePlano) obj;
		if (this.getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!this.getId().equals(other.getId())) {
			return false;
		}
		return true;
	}

}

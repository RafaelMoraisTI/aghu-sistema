package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;
import javax.validation.constraints.Max;

import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * AfaFormulaNptPadrao generated by hbm2java
 */
@Entity
@SequenceGenerator(name="afaFnpSq1", sequenceName="AGH.AFA_FNP_SQ1", allocationSize = 1)
@Table(name = "AFA_FORMULA_NPT_PADROES", schema = "AGH")
public class AfaFormulaNptPadrao extends BaseEntitySeq<Short> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 6917341484044977075L;
	private Short seq;
	private Integer version;
	private RapServidores rapServidoresByAfaFnpSerFk2;
	private RapServidores rapServidoresByAfaFnpSerFk1;
	private String descricao;
	private Date criadoEm;
	private String indSituacao;
	private Short volumeTotalMlDia;
	private String observacao;
	private Date alteradoEm;
	private String indFormulaPediatrica;
	private String indPadrao;
	private Set<AfaComposicaoNptPadrao> afaComposicaoNptPadraoes = new HashSet<AfaComposicaoNptPadrao>(0);

	// FIXME Implementar este relacionamento
//	private Set<MpmItemNptSumario> mpmItemNptSumarioes = new HashSet<MpmItemNptSumario>(0);
	
	// FIXME Implementar este relacionamento
//	private Set<MpmPrescricaoNpt> mpmPrescricaoNptes = new HashSet<MpmPrescricaoNpt>(0);

	public AfaFormulaNptPadrao() {
	}

	public AfaFormulaNptPadrao(Short seq, RapServidores rapServidoresByAfaFnpSerFk1, String descricao, Date criadoEm, String indPadrao) {
		this.seq = seq;
		this.rapServidoresByAfaFnpSerFk1 = rapServidoresByAfaFnpSerFk1;
		this.descricao = descricao;
		this.criadoEm = criadoEm;
		this.indPadrao = indPadrao;
	}

	public AfaFormulaNptPadrao(Short seq, RapServidores rapServidoresByAfaFnpSerFk2, RapServidores rapServidoresByAfaFnpSerFk1,
			String descricao, Date criadoEm, String indSituacao, Short volumeTotalMlDia, String observacao, Date alteradoEm,
			String indFormulaPediatrica, String indPadrao, Set<AfaComposicaoNptPadrao> afaComposicaoNptPadraoes 
//			, Set<MpmItemNptSumario> mpmItemNptSumarioes, Set<MpmPrescricaoNpt> mpmPrescricaoNptes
			) {
		this.seq = seq;
		this.rapServidoresByAfaFnpSerFk2 = rapServidoresByAfaFnpSerFk2;
		this.rapServidoresByAfaFnpSerFk1 = rapServidoresByAfaFnpSerFk1;
		this.descricao = descricao;
		this.criadoEm = criadoEm;
		this.indSituacao = indSituacao;
		this.volumeTotalMlDia = volumeTotalMlDia;
		this.observacao = observacao;
		this.alteradoEm = alteradoEm;
		this.indFormulaPediatrica = indFormulaPediatrica;
		this.indPadrao = indPadrao;
		this.afaComposicaoNptPadraoes = afaComposicaoNptPadraoes;
//		this.mpmItemNptSumarioes = mpmItemNptSumarioes;
//		this.mpmPrescricaoNptes = mpmPrescricaoNptes;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "afaFnpSq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Short getSeq() {
		return this.seq;
	}

	public void setSeq(Short seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_ALTERADA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_ALTERADA", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByAfaFnpSerFk2() {
		return this.rapServidoresByAfaFnpSerFk2;
	}

	public void setRapServidoresByAfaFnpSerFk2(RapServidores rapServidoresByAfaFnpSerFk2) {
		this.rapServidoresByAfaFnpSerFk2 = rapServidoresByAfaFnpSerFk2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByAfaFnpSerFk1() {
		return this.rapServidoresByAfaFnpSerFk1;
	}

	public void setRapServidoresByAfaFnpSerFk1(RapServidores rapServidoresByAfaFnpSerFk1) {
		this.rapServidoresByAfaFnpSerFk1 = rapServidoresByAfaFnpSerFk1;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 60)
	@Length(max = 60)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "IND_SITUACAO", length = 1)
	@Length(max = 1)
	public String getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(String indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Column(name = "VOLUME_TOTAL_ML_DIA")
	@Max(value = 99999, message = "Valor m√°ximo permitido para o campo Volume Total ml/dia: 99999")
	public Short getVolumeTotalMlDia() {
		return this.volumeTotalMlDia;
	}

	public void setVolumeTotalMlDia(Short volumeTotalMlDia) {
		this.volumeTotalMlDia = volumeTotalMlDia;
	}

	@Column(name = "OBSERVACAO", length = 500)
	@Length(max = 500)
	public String getObservacao() {
		return this.observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 29)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@Column(name = "IND_FORMULA_PEDIATRICA", length = 1)
	@Length(max = 1)
	public String getIndFormulaPediatrica() {
		return this.indFormulaPediatrica;
	}

	public void setIndFormulaPediatrica(String indFormulaPediatrica) {
		this.indFormulaPediatrica = indFormulaPediatrica;
	}

	@Column(name = "IND_PADRAO", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndPadrao() {
		return this.indPadrao;
	}

	public void setIndPadrao(String indPadrao) {
		this.indPadrao = indPadrao;
	}

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "afaFormulaNptPadrao")
//	public Set<MpmItemNptSumario> getMpmItemNptSumarioes() {
//		return this.mpmItemNptSumarioes;
//	}
//
//	public void setMpmItemNptSumarioes(Set<MpmItemNptSumario> mpmItemNptSumarioes) {
//		this.mpmItemNptSumarioes = mpmItemNptSumarioes;
//	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "afaFormulaNptPadrao")
	public Set<AfaComposicaoNptPadrao> getAfaComposicaoNptPadraoes() {
		return this.afaComposicaoNptPadraoes;
	}

	public void setAfaComposicaoNptPadraoes(Set<AfaComposicaoNptPadrao> afaComposicaoNptPadraoes) {
		this.afaComposicaoNptPadraoes = afaComposicaoNptPadraoes;
	}

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "afaFormulaNptPadrao")
//	public Set<MpmPrescricaoNpt> getMpmPrescricaoNptes() {
//		return this.mpmPrescricaoNptes;
//	}
//
//	public void setMpmPrescricaoNptes(Set<MpmPrescricaoNpt> mpmPrescricaoNptes) {
//		this.mpmPrescricaoNptes = mpmPrescricaoNptes;
//	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		RAP_SERVIDORES_BY_AFA_FNP_SER_FK2("rapServidoresByAfaFnpSerFk2"),
		RAP_SERVIDORES_BY_AFA_FNP_SER_FK1("rapServidoresByAfaFnpSerFk1"),
		DESCRICAO("descricao"),
		CRIADO_EM("criadoEm"),
		IND_SITUACAO("indSituacao"),
		VOLUME_TOTAL_ML_DIA("volumeTotalMlDia"),
		OBSERVACAO("observacao"),
		ALTERADO_EM("alteradoEm"),
		IND_FORMULA_PEDIATRICA("indFormulaPediatrica"),
		IND_PADRAO("indPadrao"),
		AFA_COMPOSICAO_NPT_PADRAOES("afaComposicaoNptPadraoes"),
//		MPM_ITEM_NPT_SUMARIOES("mpmItemNptSumarioes"),
//		MPM_PRESCRICAO_NPTES("mpmPrescricaoNptes")
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AfaFormulaNptPadrao)) {
			return false;
		}
		AfaFormulaNptPadrao other = (AfaFormulaNptPadrao) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

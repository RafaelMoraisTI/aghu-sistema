package br.gov.mec.aghu.model;

// Generated 17/10/2011 14:21:24 by Hibernate Tools 3.4.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Version;


import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.exception.BusinessExceptionCode;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * EpeSinCaractDefinidoras generated by hbm2java
 */
@Entity
@Table(name = "EPE_SIN_CARACT_DEFINIDORAS", schema = "AGH")
public class EpeSinCaractDefinidora extends BaseEntityId<EpeSinCaractDefinidoraId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 512159684203368859L;
	private EpeSinCaractDefinidoraId id;
	private Integer version;
	private EpeCaractDefinidora caractDefinidoraByCdeCodigo;
	private EpeCaractDefinidora caractDefinidoraByCdeCodigoPossui;
	
	private enum EpeSinCaractDefinidoraExceptionCode implements BusinessExceptionCode {
		CDE_INVALIDO
	}

	public EpeSinCaractDefinidora() {
	}

	public EpeSinCaractDefinidora(EpeSinCaractDefinidoraId id,
			EpeCaractDefinidora caractDefinidoraByCdeCodigo,
			EpeCaractDefinidora caractDefinidoraByCdeCodigoPossui) {
		this.id = id;
		this.caractDefinidoraByCdeCodigo = caractDefinidoraByCdeCodigo;
		this.caractDefinidoraByCdeCodigoPossui = caractDefinidoraByCdeCodigoPossui;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "cdeCodigo", column = @Column(name = "CDE_CODIGO", nullable = false, precision = 6, scale = 0)),
			@AttributeOverride(name = "cdeCodigoPossui", column = @Column(name = "CDE_CODIGO_POSSUI", nullable = false, precision = 6, scale = 0)) })
	public EpeSinCaractDefinidoraId getId() {
		return this.id;
	}

	public void setId(EpeSinCaractDefinidoraId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false, precision = 9, scale = 0)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CDE_CODIGO", nullable = false, insertable = false, updatable = false)
	public EpeCaractDefinidora getCaractDefinidoraByCdeCodigo() {
		return this.caractDefinidoraByCdeCodigo;
	}

	public void setCaractDefinidoraByCdeCodigo(
			EpeCaractDefinidora caractDefinidoraByCdeCodigo) {
		this.caractDefinidoraByCdeCodigo = caractDefinidoraByCdeCodigo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CDE_CODIGO_POSSUI", nullable = false, insertable = false, updatable = false)
	public EpeCaractDefinidora getCaractDefinidoraByCdeCodigoPossui() {
		return this.caractDefinidoraByCdeCodigoPossui;
	}

	public void setCaractDefinidoraByCdeCodigoPossui(
			EpeCaractDefinidora caractDefinidoraByCdeCodigoPossui) {
		this.caractDefinidoraByCdeCodigoPossui = caractDefinidoraByCdeCodigoPossui;
	}

	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void validarCde() {
		if (this.getId()!=null && this.getId().getCdeCodigo()==this.getId().getCdeCodigoPossui()) {
			throw new BaseRuntimeException(EpeSinCaractDefinidoraExceptionCode.CDE_INVALIDO);
		}
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		EpeSinCaractDefinidora other = (EpeSinCaractDefinidora) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}
	
	
	public enum Fields {

		ID("id"),
		ID_CODIGO("id.cdeCodigo"),
		ID_CODIGO_POSSUI("id.cdeCodigoPossui"),
		CARACT_DEFINIDORA_BY_CDE_CODIGO("caractDefinidoraByCdeCodigo"),
		CARACT_DEFINIDORA_BY_CDE_CODIGO_POSSUI("caractDefinidoraByCdeCodigoPossui");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}

}

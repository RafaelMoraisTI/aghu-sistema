package br.gov.mec.aghu.model;

// Generated 24/03/2011 12:58:43 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.*;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MciTopografiaProcedimentos generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mciTopSq1", sequenceName="AGH.MCI_TOP_SQ1", allocationSize = 1)
@Table(name = "MCI_TOPOGRAFIA_PROCEDIMENTOS", schema = "AGH")

public class MciTopografiaProcedimento extends BaseEntitySeq<Short> implements java.io.Serializable {


	private static final long serialVersionUID = 8174604018757487290L;
	private Short seq;
	private String descricao;
	private DominioSituacao indSituacao;
	private Boolean indPermSobreposicao;
	private Date criadoEm;
	private RapServidores servidor;
	private Date alteradoEm;
	private RapServidores movimentadoPor;
	private Integer version;
	private MciTopografiaInfeccao topografiaInfeccao;
	
	private Set<MciCidNotificacao> cidNotificacoes = new HashSet<MciCidNotificacao>(0);	

	public MciTopografiaProcedimento() {
		
	}

	public MciTopografiaProcedimento(Short seq, String descricao,
			DominioSituacao indSituacao, Boolean indPermSobreposicao, Date criadoEm,
			RapServidores servidor, MciTopografiaInfeccao topografiaInfeccao) {
		this.seq = seq;
		this.descricao = descricao;
		this.indSituacao = indSituacao;
		this.indPermSobreposicao = indPermSobreposicao;
		this.criadoEm = criadoEm;
		this.servidor = servidor;
		this.topografiaInfeccao = topografiaInfeccao;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mciTopSq1")
	@Column(name = "SEQ", unique = true, nullable = false, precision = 4, scale = 0)
	public Short getSeq() {
		return this.seq;
	}

	public void setSeq(Short seq) {
		this.seq = seq;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 60)
	@Length(max = 60)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
    @Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Column(name = "IND_PERM_SOBREPOSICAO", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndPermSobreposicao() {
		return this.indPermSobreposicao;
	}

	public void setIndPermSobreposicao(Boolean indPermSobreposicao) {
		this.indPermSobreposicao = indPermSobreposicao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return servidor;
	}
	
	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM")
	public Date getAlteradoEm() {
		return alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_MOVIMENTADO", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO_MOVIMENTADO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getMovimentadoPor() {
		return movimentadoPor;
	}

	public void setMovimentadoPor(RapServidores movimentadoPor) {
		this.movimentadoPor = movimentadoPor;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TOI_SEQ", referencedColumnName = "SEQ",  nullable = false)
	public MciTopografiaInfeccao getTopografiaInfeccao() {
		return topografiaInfeccao;
	}

	public void setTopografiaInfeccao(MciTopografiaInfeccao topografiaInfeccao) {
		this.topografiaInfeccao = topografiaInfeccao;
	}
	
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "topografiaInfeccao")
	public Set<MciCidNotificacao> getCidNotificacoes() {
		return cidNotificacoes;
	}

	public void setCidNotificacoes(Set<MciCidNotificacao> cidNotificacoes) {
		this.cidNotificacoes = cidNotificacoes;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((seq == null) ? 0 : seq.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		MciTopografiaProcedimento other = (MciTopografiaProcedimento) obj;
		if (seq == null) {
			if (other.seq != null) {
				return false;
			}
		} else if (!seq.equals(other.seq)) {
			return false;
		}
		return true;
	}

	
	public enum Fields {
		SEQ("seq"),
		DESCRICAO("descricao"),
		IND_SITUACAO("indSituacao"),
		IND_PERM_SOBREPOSICAO("indPermSobreposicao"),
		CRIADO_EM("criadoEm"),
		SERVIDOR("servidor"),
		TOPOGRAFIA_INFECCAO("topografiaInfeccao"),
		TOPOGRAFIA_INFECCAO_SEQ("topografiaInfeccao.seq"),
		TOI_SEQ("topografiaInfeccao.seq"),
		ALTERADO_EM("alteradoEm"),
		MOVIMENTADO_POR("movimentadoPor"),
		NOTIFICACOES("cidNotificacoes")
		;
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}


	@Override
	public String toString() {
		return "MciTopografiaProcedimento [seq=" + seq + ", descricao="
				+ descricao + ", indSituacao=" + indSituacao
				+ ", indPermSobreposicao=" + indPermSobreposicao
				+ ", criadoEm=" + criadoEm + ", servidor=" + servidor
				+ ", alteradoEm=" + alteradoEm + ", movimentadoPor="
				+ movimentadoPor + ", version=" + version
				+ ", topografiaInfeccao=" + topografiaInfeccao + "]";
	}	
}

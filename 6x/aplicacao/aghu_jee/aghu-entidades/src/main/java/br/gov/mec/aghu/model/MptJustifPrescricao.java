package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MptJustifPrescricao generated by hbm2java
 */
@Entity
@Table(name = "MPT_JUSTIF_PRESCRICOES", schema = "AGH")
public class MptJustifPrescricao extends BaseEntityId<MptJustifPrescricaoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4964350000738141630L;
	private MptJustifPrescricaoId id;
	private Integer version;
	private RapServidores rapServidores;
	private AghAtendimentos aghAtendimentos;
	private MpaCicloProtocolo mpaCicloProtocolo;
	private String descricao;
	private Date criadoEm;
	private String indPendente;
	private Integer lote;
	private Set<MptMotivoJustifPrescricao> mptMotivoJustifPrescricaoes = new HashSet<MptMotivoJustifPrescricao>(0);

	public MptJustifPrescricao() {
	}

	public MptJustifPrescricao(MptJustifPrescricaoId id, RapServidores rapServidores, AghAtendimentos aghAtendimentos,
			Date criadoEm, Integer lote) {
		this.id = id;
		this.rapServidores = rapServidores;
		this.aghAtendimentos = aghAtendimentos;
		this.criadoEm = criadoEm;
		this.lote = lote;
	}

	public MptJustifPrescricao(MptJustifPrescricaoId id, RapServidores rapServidores, AghAtendimentos aghAtendimentos,
			MpaCicloProtocolo mpaCicloProtocolo, String descricao, Date criadoEm, String indPendente, Integer lote,
			Set<MptMotivoJustifPrescricao> mptMotivoJustifPrescricaoes) {
		this.id = id;
		this.rapServidores = rapServidores;
		this.aghAtendimentos = aghAtendimentos;
		this.mpaCicloProtocolo = mpaCicloProtocolo;
		this.descricao = descricao;
		this.criadoEm = criadoEm;
		this.indPendente = indPendente;
		this.lote = lote;
		this.mptMotivoJustifPrescricaoes = mptMotivoJustifPrescricaoes;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "atdSeq", column = @Column(name = "ATD_SEQ", nullable = false)),
			@AttributeOverride(name = "seq", column = @Column(name = "SEQ", nullable = false)) })
	public MptJustifPrescricaoId getId() {
		return this.id;
	}

	public void setId(MptJustifPrescricaoId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ATD_SEQ", nullable = false, insertable = false, updatable = false)
	public AghAtendimentos getAghAtendimentos() {
		return this.aghAtendimentos;
	}

	public void setAghAtendimentos(AghAtendimentos aghAtendimentos) {
		this.aghAtendimentos = aghAtendimentos;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "CIL_VPA_PTA_SEQ", referencedColumnName = "VPA_PTA_SEQ"),
			@JoinColumn(name = "CIL_VPA_SEQP", referencedColumnName = "VPA_SEQP"),
			@JoinColumn(name = "CIL_NUM_CICLO", referencedColumnName = "NUM_CICLO") })
	public MpaCicloProtocolo getMpaCicloProtocolo() {
		return this.mpaCicloProtocolo;
	}

	public void setMpaCicloProtocolo(MpaCicloProtocolo mpaCicloProtocolo) {
		this.mpaCicloProtocolo = mpaCicloProtocolo;
	}

	@Column(name = "DESCRICAO", length = 500)
	@Length(max = 500)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "IND_PENDENTE", length = 1)
	@Length(max = 1)
	public String getIndPendente() {
		return this.indPendente;
	}

	public void setIndPendente(String indPendente) {
		this.indPendente = indPendente;
	}

	@Column(name = "LOTE", nullable = false)
	public Integer getLote() {
		return this.lote;
	}

	public void setLote(Integer lote) {
		this.lote = lote;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mptJustifPrescricao")
	public Set<MptMotivoJustifPrescricao> getMptMotivoJustifPrescricaoes() {
		return this.mptMotivoJustifPrescricaoes;
	}

	public void setMptMotivoJustifPrescricaoes(Set<MptMotivoJustifPrescricao> mptMotivoJustifPrescricaoes) {
		this.mptMotivoJustifPrescricaoes = mptMotivoJustifPrescricaoes;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		RAP_SERVIDORES("rapServidores"),
		AGH_ATENDIMENTOS("aghAtendimentos"),
		MPA_CICLO_PROTOCOLOS("mpaCicloProtocolo"),
		DESCRICAO("descricao"),
		CRIADO_EM("criadoEm"),
		IND_PENDENTE("indPendente"),
		LOTE("lote"),
		MPT_MOTIVO_JUSTIF_PRESCRICAOES("mptMotivoJustifPrescricaoes");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MptJustifPrescricao)) {
			return false;
		}
		MptJustifPrescricao other = (MptJustifPrescricao) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

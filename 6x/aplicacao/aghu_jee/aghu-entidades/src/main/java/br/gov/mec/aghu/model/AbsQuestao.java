package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AbsQuestao generated by hbm2java
 */
@Entity
@Table(name = "ABS_QUESTOES", schema = "AGH")
public class AbsQuestao extends BaseEntityId<AbsQuestaoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -6118278624684787344L;
	private AbsQuestaoId id;
	private Integer version;
	private AbsMotivoRejeicao absMotivoRejeicao;
	private RapServidores rapServidores;
	private String descricao;
	private Short ordem;
	private String indObrigatorio;
	private String indSituacao;
	private Date criadoEm;
	private String valorPadrao;
	private String unidade;
	private String indRejeicaoSd;
	private String indImpRespostaPadrao;
	private Set<AbsRespostaCandidato> absRespostaCandidatoes = new HashSet<AbsRespostaCandidato>(0);

	public AbsQuestao() {
	}

	public AbsQuestao(AbsQuestaoId id, String descricao, Date criadoEm) {
		this.id = id;
		this.descricao = descricao;
		this.criadoEm = criadoEm;
	}

	public AbsQuestao(AbsQuestaoId id, AbsMotivoRejeicao absMotivoRejeicao, RapServidores rapServidores, String descricao,
			Short ordem, String indObrigatorio, String indSituacao, Date criadoEm, String valorPadrao, String unidade,
			String indRejeicaoSd, String indImpRespostaPadrao, Set<AbsRespostaCandidato> absRespostaCandidatoes) {
		this.id = id;
		this.absMotivoRejeicao = absMotivoRejeicao;
		this.rapServidores = rapServidores;
		this.descricao = descricao;
		this.ordem = ordem;
		this.indObrigatorio = indObrigatorio;
		this.indSituacao = indSituacao;
		this.criadoEm = criadoEm;
		this.valorPadrao = valorPadrao;
		this.unidade = unidade;
		this.indRejeicaoSd = indRejeicaoSd;
		this.indImpRespostaPadrao = indImpRespostaPadrao;
		this.absRespostaCandidatoes = absRespostaCandidatoes;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "queCodigo", column = @Column(name = "QUE_CODIGO", nullable = false)),
			@AttributeOverride(name = "codigo", column = @Column(name = "CODIGO", nullable = false)) })
	public AbsQuestaoId getId() {
		return this.id;
	}

	public void setId(AbsQuestaoId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MRE_SEQ")
	public AbsMotivoRejeicao getAbsMotivoRejeicao() {
		return this.absMotivoRejeicao;
	}

	public void setAbsMotivoRejeicao(AbsMotivoRejeicao absMotivoRejeicao) {
		this.absMotivoRejeicao = absMotivoRejeicao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 240)
	@Length(max = 240)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "ORDEM")
	public Short getOrdem() {
		return this.ordem;
	}

	public void setOrdem(Short ordem) {
		this.ordem = ordem;
	}

	@Column(name = "IND_OBRIGATORIO", length = 1)
	@Length(max = 1)
	public String getIndObrigatorio() {
		return this.indObrigatorio;
	}

	public void setIndObrigatorio(String indObrigatorio) {
		this.indObrigatorio = indObrigatorio;
	}

	@Column(name = "IND_SITUACAO", length = 1)
	@Length(max = 1)
	public String getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(String indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "VALOR_PADRAO", length = 15)
	@Length(max = 15)
	public String getValorPadrao() {
		return this.valorPadrao;
	}

	public void setValorPadrao(String valorPadrao) {
		this.valorPadrao = valorPadrao;
	}

	@Column(name = "UNIDADE", length = 10)
	@Length(max = 10)
	public String getUnidade() {
		return this.unidade;
	}

	public void setUnidade(String unidade) {
		this.unidade = unidade;
	}

	@Column(name = "IND_REJEICAO_SD", length = 1)
	@Length(max = 1)
	public String getIndRejeicaoSd() {
		return this.indRejeicaoSd;
	}

	public void setIndRejeicaoSd(String indRejeicaoSd) {
		this.indRejeicaoSd = indRejeicaoSd;
	}

	@Column(name = "IND_IMP_RESPOSTA_PADRAO", length = 1)
	@Length(max = 1)
	public String getIndImpRespostaPadrao() {
		return this.indImpRespostaPadrao;
	}

	public void setIndImpRespostaPadrao(String indImpRespostaPadrao) {
		this.indImpRespostaPadrao = indImpRespostaPadrao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "absQuestao")
	public Set<AbsRespostaCandidato> getAbsRespostaCandidatoes() {
		return this.absRespostaCandidatoes;
	}

	public void setAbsRespostaCandidatoes(Set<AbsRespostaCandidato> absRespostaCandidatoes) {
		this.absRespostaCandidatoes = absRespostaCandidatoes;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		ABS_MOTIVOS_REJEICOES("absMotivoRejeicao"),
		RAP_SERVIDORES("rapServidores"),
		DESCRICAO("descricao"),
		ORDEM("ordem"),
		IND_OBRIGATORIO("indObrigatorio"),
		IND_SITUACAO("indSituacao"),
		CRIADO_EM("criadoEm"),
		VALOR_PADRAO("valorPadrao"),
		UNIDADE("unidade"),
		IND_REJEICAO_SD("indRejeicaoSd"),
		IND_IMP_RESPOSTA_PADRAO("indImpRespostaPadrao"),
		ABS_RESPOSTA_CANDIDATOES("absRespostaCandidatoes");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AbsQuestao)) {
			return false;
		}
		AbsQuestao other = (AbsQuestao) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

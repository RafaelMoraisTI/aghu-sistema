package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * EceKit generated by hbm2java
 */
@Entity
@SequenceGenerator(name="eceKtsSq1", sequenceName="AGH.ECE_KTS_SQ1", allocationSize = 1)
@Table(name = "ECE_KITS", schema = "AGH")
public class EceKit extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 6301239724233560782L;
	private Integer seq;
	private Integer version;
	private FatProcedHospInternos fatProcedHospInternos;
	private RapServidores rapServidores;
	private String pediatrico;
	private String situacao;
	private Date criadoEm;
	private String indFracionado;
	private String indFaturaMl;
	private String indKitQuimioterapico;
	private Set<EceViaDoKit> eceViaDoKites = new HashSet<EceViaDoKit>(0);
	private Set<EceMaterialEmpregado> eceMaterialEmpregadoes = new HashSet<EceMaterialEmpregado>(0);
	private Set<EceOcorrencia> eceOcorrenciaes = new HashSet<EceOcorrencia>(0);
	private Set<EceKitComponente> eceKitComponentees = new HashSet<EceKitComponente>(0);
	private Set<EceKitAlternativo> eceKitAlternativosesForKtsSeq = new HashSet<EceKitAlternativo>(0);
	private Set<EceKitAlternativo> eceKitAlternativosesForKtsSeqAlternativo = new HashSet<EceKitAlternativo>(0);

	public EceKit() {
	}

	public EceKit(Integer seq, FatProcedHospInternos fatProcedHospInternos, RapServidores rapServidores, Date criadoEm) {
		this.seq = seq;
		this.fatProcedHospInternos = fatProcedHospInternos;
		this.rapServidores = rapServidores;
		this.criadoEm = criadoEm;
	}

	public EceKit(Integer seq, FatProcedHospInternos fatProcedHospInternos, RapServidores rapServidores, String pediatrico,
			String situacao, Date criadoEm, String indFracionado, String indFaturaMl, String indKitQuimioterapico,
			Set<EceViaDoKit> eceViaDoKites, Set<EceMaterialEmpregado> eceMaterialEmpregadoes,
			Set<EceOcorrencia> eceOcorrenciaes, Set<EceKitComponente> eceKitComponentees,
			Set<EceKitAlternativo> eceKitAlternativosesForKtsSeq, Set<EceKitAlternativo> eceKitAlternativosesForKtsSeqAlternativo) {
		this.seq = seq;
		this.fatProcedHospInternos = fatProcedHospInternos;
		this.rapServidores = rapServidores;
		this.pediatrico = pediatrico;
		this.situacao = situacao;
		this.criadoEm = criadoEm;
		this.indFracionado = indFracionado;
		this.indFaturaMl = indFaturaMl;
		this.indKitQuimioterapico = indKitQuimioterapico;
		this.eceViaDoKites = eceViaDoKites;
		this.eceMaterialEmpregadoes = eceMaterialEmpregadoes;
		this.eceOcorrenciaes = eceOcorrenciaes;
		this.eceKitComponentees = eceKitComponentees;
		this.eceKitAlternativosesForKtsSeq = eceKitAlternativosesForKtsSeq;
		this.eceKitAlternativosesForKtsSeqAlternativo = eceKitAlternativosesForKtsSeqAlternativo;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "eceKtsSq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PHI_SEQ", nullable = false)
	public FatProcedHospInternos getFatProcedHospInternos() {
		return this.fatProcedHospInternos;
	}

	public void setFatProcedHospInternos(FatProcedHospInternos fatProcedHospInternos) {
		this.fatProcedHospInternos = fatProcedHospInternos;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@Column(name = "PEDIATRICO", length = 1)
	@Length(max = 1)
	public String getPediatrico() {
		return this.pediatrico;
	}

	public void setPediatrico(String pediatrico) {
		this.pediatrico = pediatrico;
	}

	@Column(name = "SITUACAO", length = 1)
	@Length(max = 1)
	public String getSituacao() {
		return this.situacao;
	}

	public void setSituacao(String situacao) {
		this.situacao = situacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "IND_FRACIONADO", length = 1)
	@Length(max = 1)
	public String getIndFracionado() {
		return this.indFracionado;
	}

	public void setIndFracionado(String indFracionado) {
		this.indFracionado = indFracionado;
	}

	@Column(name = "IND_FATURA_ML", length = 1)
	@Length(max = 1)
	public String getIndFaturaMl() {
		return this.indFaturaMl;
	}

	public void setIndFaturaMl(String indFaturaMl) {
		this.indFaturaMl = indFaturaMl;
	}

	@Column(name = "IND_KIT_QUIMIOTERAPICO", length = 1)
	@Length(max = 1)
	public String getIndKitQuimioterapico() {
		return this.indKitQuimioterapico;
	}

	public void setIndKitQuimioterapico(String indKitQuimioterapico) {
		this.indKitQuimioterapico = indKitQuimioterapico;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eceKit")
	public Set<EceViaDoKit> getEceViaDoKites() {
		return this.eceViaDoKites;
	}

	public void setEceViaDoKites(Set<EceViaDoKit> eceViaDoKites) {
		this.eceViaDoKites = eceViaDoKites;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eceKit")
	public Set<EceMaterialEmpregado> getEceMaterialEmpregadoes() {
		return this.eceMaterialEmpregadoes;
	}

	public void setEceMaterialEmpregadoes(Set<EceMaterialEmpregado> eceMaterialEmpregadoes) {
		this.eceMaterialEmpregadoes = eceMaterialEmpregadoes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eceKit")
	public Set<EceOcorrencia> getEceOcorrenciaes() {
		return this.eceOcorrenciaes;
	}

	public void setEceOcorrenciaes(Set<EceOcorrencia> eceOcorrenciaes) {
		this.eceOcorrenciaes = eceOcorrenciaes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eceKit")
	public Set<EceKitComponente> getEceKitComponentees() {
		return this.eceKitComponentees;
	}

	public void setEceKitComponentees(Set<EceKitComponente> eceKitComponentees) {
		this.eceKitComponentees = eceKitComponentees;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eceKitsByKtsSeq")
	public Set<EceKitAlternativo> getEceKitAlternativosesForKtsSeq() {
		return this.eceKitAlternativosesForKtsSeq;
	}

	public void setEceKitAlternativosesForKtsSeq(Set<EceKitAlternativo> eceKitAlternativosesForKtsSeq) {
		this.eceKitAlternativosesForKtsSeq = eceKitAlternativosesForKtsSeq;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eceKitsByKtsSeqAlternativo")
	public Set<EceKitAlternativo> getEceKitAlternativosesForKtsSeqAlternativo() {
		return this.eceKitAlternativosesForKtsSeqAlternativo;
	}

	public void setEceKitAlternativosesForKtsSeqAlternativo(Set<EceKitAlternativo> eceKitAlternativosesForKtsSeqAlternativo) {
		this.eceKitAlternativosesForKtsSeqAlternativo = eceKitAlternativosesForKtsSeqAlternativo;
	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		FAT_PROCED_HOSP_INTERNOS("fatProcedHospInternos"),
		FAT_PROCED_HOSP_INTERNOS_SEQ("fatProcedHospInternos.seq"),
		RAP_SERVIDORES("rapServidores"),
		PEDIATRICO("pediatrico"),
		SITUACAO("situacao"),
		CRIADO_EM("criadoEm"),
		IND_FRACIONADO("indFracionado"),
		IND_FATURA_ML("indFaturaMl"),
		IND_KIT_QUIMIOTERAPICO("indKitQuimioterapico"),
		ECE_VIA_DO_KITES("eceViaDoKites"),
		ECE_MATERIAL_EMPREGADOES("eceMaterialEmpregadoes"),
		ECE_OCORRENCIAES("eceOcorrenciaes"),
		ECE_KIT_COMPONENTEES("eceKitComponentees"),
		ECE_KIT_ALTERNATIVOSES_FOR_KTS_SEQ("eceKitAlternativosesForKtsSeq"),
		ECE_KIT_ALTERNATIVOSES_FOR_KTS_SEQ_ALTERNATIVO("eceKitAlternativosesForKtsSeqAlternativo");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof EceKit)) {
			return false;
		}
		EceKit other = (EceKit) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

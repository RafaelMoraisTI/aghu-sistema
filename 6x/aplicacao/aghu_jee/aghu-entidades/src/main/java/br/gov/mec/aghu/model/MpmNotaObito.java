package br.gov.mec.aghu.model;

// Generated 14/09/2010 17:49:55 by Hibernate Tools 3.2.5.Beta

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Transient;


import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MpmNotaObito generated by hbm2java
 */
@Entity

@Table(name = "MPM_NOTA_OBITOS", schema = "AGH")
public class MpmNotaObito extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7524695375720049190L;
	private Integer salAtdSeq;
	private MpmSumarioAlta sumarioAlta;
	private String complementoCid;
	private AghCid cid;
	private RapServidores servidor;
	private Set<MpmPatologiaObito> patologiasObitos = new HashSet<MpmPatologiaObito>(0);

	public MpmNotaObito() {
	}

	public MpmNotaObito(MpmSumarioAlta sumarioAlta, AghCid cid,
			RapServidores servidor) {
		this.sumarioAlta = sumarioAlta;
		this.cid = cid;
		this.servidor = servidor;
	}

	public MpmNotaObito(MpmSumarioAlta sumarioAlta,
			String complementoCid, AghCid cid, RapServidores servidor,
			Set<MpmPatologiaObito> patologiasObitos) {
		this.sumarioAlta = sumarioAlta;
		this.complementoCid = complementoCid;
		this.cid = cid;
		this.servidor = servidor;
		this.patologiasObitos = patologiasObitos;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "sumarioAlta"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "SAL_ATD_SEQ", unique = true, nullable = false, precision = 7, scale = 0)
	public Integer getSalAtdSeq() {
		return this.salAtdSeq;
	}

	public void setSalAtdSeq(Integer salAtdSeq) {
		this.salAtdSeq = salAtdSeq;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public MpmSumarioAlta getSumarioAlta() {
		return this.sumarioAlta;
	}

	public void setSumarioAlta(MpmSumarioAlta sumarioAlta) {
		this.sumarioAlta = sumarioAlta;
	}

	@Column(name = "COMPLEMENTO_CID", length = 45)
	@Length(max = 45, message="O complemento cid possui mais de 45 caracteres.")
	public String getComplementoCid() {
		return this.complementoCid;
	}

	public void setComplementoCid(String complementoCid) {
		this.complementoCid = complementoCid;
	}


	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CID_SEQ", nullable = false)
	public AghCid getCid() {
		return this.cid;
	}

	public void setCid(AghCid cid) {
		this.cid = cid;
	}


	/**
	 * @return the servidor
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}
	
	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mpmNotaObitos")
	public Set<MpmPatologiaObito> getPatologiasObitos() {
		return this.patologiasObitos;
	}

	public void setPatologiasObitos(Set<MpmPatologiaObito> patologiasObitos) {
		this.patologiasObitos = patologiasObitos;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((salAtdSeq == null) ? 0 : salAtdSeq.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		MpmNotaObito other = (MpmNotaObito) obj;
		if (salAtdSeq == null) {
			if (other.salAtdSeq != null) {
				return false;
			}
		} else if (!salAtdSeq.equals(other.salAtdSeq)) {
			return false;
		}
		return true;
	}

	public static enum Fields {
		SAL_ATD_SEQ("salAtdSeq"),
		SUMARIO_ALTA("sumarioAlta"),
		COMPLEMENTO_CID("complementoCid"),
		CID("cid"),
		SERVIDOR("servidor"),
		PATOLOGIAS_OBITOS("patologiasObitos");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	} 
 @Transient public Integer getSeq(){ return this.getSalAtdSeq();} 
 public void setSeq(Integer seq){ this.setSalAtdSeq(seq);}
}
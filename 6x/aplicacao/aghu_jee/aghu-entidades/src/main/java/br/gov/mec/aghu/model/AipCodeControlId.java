package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Embeddable;


import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.EntityCompositeId;

/**
 * AipCodeControlId generated by hbm2java
 */
@Embeddable
public class AipCodeControlId implements EntityCompositeId {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1599153780468233710L;
	private String ccDomain;
	private String ccComment;
	private Long ccNextValue;
	private Integer version;

	public AipCodeControlId() {
	}

	public AipCodeControlId(String ccDomain, Long ccNextValue, Integer version) {
		this.ccDomain = ccDomain;
		this.ccNextValue = ccNextValue;
		this.version = version;
	}

	public AipCodeControlId(String ccDomain, String ccComment, Long ccNextValue, Integer version) {
		this.ccDomain = ccDomain;
		this.ccComment = ccComment;
		this.ccNextValue = ccNextValue;
		this.version = version;
	}

	@Column(name = "CC_DOMAIN", nullable = false, length = 30)
	@Length(max = 30)
	public String getCcDomain() {
		return this.ccDomain;
	}

	public void setCcDomain(String ccDomain) {
		this.ccDomain = ccDomain;
	}

	@Column(name = "CC_COMMENT", length = 240)
	@Length(max = 240)
	public String getCcComment() {
		return this.ccComment;
	}

	public void setCcComment(String ccComment) {
		this.ccComment = ccComment;
	}

	@Column(name = "CC_NEXT_VALUE", nullable = false)
	public Long getCcNextValue() {
		return this.ccNextValue;
	}

	public void setCcNextValue(Long ccNextValue) {
		this.ccNextValue = ccNextValue;
	}

	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}






	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		HashCodeBuilder umHashCodeBuilder = new HashCodeBuilder();
		umHashCodeBuilder.append(this.getVersion());
		umHashCodeBuilder.append(this.getCcDomain());
		umHashCodeBuilder.append(this.getCcComment());
		umHashCodeBuilder.append(this.getCcNextValue());
		return umHashCodeBuilder.toHashCode();
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AipCodeControlId)) {
			return false;
		}
		AipCodeControlId other = (AipCodeControlId) obj;
		EqualsBuilder umEqualsBuilder = new EqualsBuilder();
		umEqualsBuilder.append(this.getVersion(), other.getVersion());
		umEqualsBuilder.append(this.getCcDomain(), other.getCcDomain());
		umEqualsBuilder.append(this.getCcComment(), other.getCcComment());
		umEqualsBuilder.append(this.getCcNextValue(), other.getCcNextValue());
		return umEqualsBuilder.isEquals();
	}
	// ##### GeradorEqualsHashCodeMain #####
	
}

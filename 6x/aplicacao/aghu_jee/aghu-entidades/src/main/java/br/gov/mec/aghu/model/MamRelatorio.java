package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MamRelatorio generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mamRelSq1", sequenceName="AGH.MAM_REL_SQ1", allocationSize = 1)
@Table(name = "MAM_RELATORIOS", schema = "AGH")
public class MamRelatorio extends BaseEntitySeq<Long> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -126510499942607591L;
	private Long seq;
	private Integer version;
	private RapServidores rapServidoresByMamRelSerFk3;
	private MamRelatorio mamRelatorio;
	private AacConsultas aacConsultas;
	private RapServidores rapServidoresByMamRelSerFk1;
	private RapServidores rapServidoresByMamRelSerFk4;
	private RapServidores rapServidoresByMamRelSerFk2;
	private AipPacientes aipPacientes;
	private String descricao;
	private Short nroVias;
	private Date dthrCriacao;
	private Date dthrValida;
	private Date dthrMvto;
	private Date dthrValidaMvto;
	private String indPendente;
	private String indImpresso;
	private Set<MamRelatorio> mamRelatorioes = new HashSet<MamRelatorio>(0);
	
	private Integer conNumero;
	private Integer serMatriculaValida;
	private Short serVinCodigoValida;

	public MamRelatorio() {
	}

	public MamRelatorio(Long seq, RapServidores rapServidoresByMamRelSerFk1, AipPacientes aipPacientes, String descricao,
			Date dthrCriacao, String indPendente, String indImpresso) {
		this.seq = seq;
		this.rapServidoresByMamRelSerFk1 = rapServidoresByMamRelSerFk1;
		this.aipPacientes = aipPacientes;
		this.descricao = descricao;
		this.dthrCriacao = dthrCriacao;
		this.indPendente = indPendente;
		this.indImpresso = indImpresso;
	}

	public MamRelatorio(Long seq, RapServidores rapServidoresByMamRelSerFk3, MamRelatorio mamRelatorio, AacConsultas aacConsultas,
			RapServidores rapServidoresByMamRelSerFk1, RapServidores rapServidoresByMamRelSerFk4,
			RapServidores rapServidoresByMamRelSerFk2, AipPacientes aipPacientes, String descricao, Short nroVias, Date dthrCriacao,
			Date dthrValida, Date dthrMvto, Date dthrValidaMvto, String indPendente, String indImpresso,
			Set<MamRelatorio> mamRelatorioes) {
		this.seq = seq;
		this.rapServidoresByMamRelSerFk3 = rapServidoresByMamRelSerFk3;
		this.mamRelatorio = mamRelatorio;
		this.aacConsultas = aacConsultas;
		this.rapServidoresByMamRelSerFk1 = rapServidoresByMamRelSerFk1;
		this.rapServidoresByMamRelSerFk4 = rapServidoresByMamRelSerFk4;
		this.rapServidoresByMamRelSerFk2 = rapServidoresByMamRelSerFk2;
		this.aipPacientes = aipPacientes;
		this.descricao = descricao;
		this.nroVias = nroVias;
		this.dthrCriacao = dthrCriacao;
		this.dthrValida = dthrValida;
		this.dthrMvto = dthrMvto;
		this.dthrValidaMvto = dthrValidaMvto;
		this.indPendente = indPendente;
		this.indImpresso = indImpresso;
		this.mamRelatorioes = mamRelatorioes;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mamRelSq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Long getSeq() {
		return this.seq;
	}

	public void setSeq(Long seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_MVTO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_MVTO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMamRelSerFk3() {
		return this.rapServidoresByMamRelSerFk3;
	}

	public void setRapServidoresByMamRelSerFk3(RapServidores rapServidoresByMamRelSerFk3) {
		this.rapServidoresByMamRelSerFk3 = rapServidoresByMamRelSerFk3;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "REL_SEQ")
	public MamRelatorio getMamRelatorio() {
		return this.mamRelatorio;
	}

	public void setMamRelatorio(MamRelatorio mamRelatorio) {
		this.mamRelatorio = mamRelatorio;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CON_NUMERO")
	public AacConsultas getAacConsultas() {
		return this.aacConsultas;
	}

	public void setAacConsultas(AacConsultas aacConsultas) {
		this.aacConsultas = aacConsultas;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByMamRelSerFk1() {
		return this.rapServidoresByMamRelSerFk1;
	}

	public void setRapServidoresByMamRelSerFk1(RapServidores rapServidoresByMamRelSerFk1) {
		this.rapServidoresByMamRelSerFk1 = rapServidoresByMamRelSerFk1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_VALIDA_MVTO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_VALIDA_MVTO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMamRelSerFk4() {
		return this.rapServidoresByMamRelSerFk4;
	}

	public void setRapServidoresByMamRelSerFk4(RapServidores rapServidoresByMamRelSerFk4) {
		this.rapServidoresByMamRelSerFk4 = rapServidoresByMamRelSerFk4;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_VALIDA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_VALIDA", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMamRelSerFk2() {
		return this.rapServidoresByMamRelSerFk2;
	}

	public void setRapServidoresByMamRelSerFk2(RapServidores rapServidoresByMamRelSerFk2) {
		this.rapServidoresByMamRelSerFk2 = rapServidoresByMamRelSerFk2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO", nullable = false)
	public AipPacientes getAipPacientes() {
		return this.aipPacientes;
	}

	public void setAipPacientes(AipPacientes aipPacientes) {
		this.aipPacientes = aipPacientes;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 2000)
	@Length(max = 2000)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "NRO_VIAS")
	public Short getNroVias() {
		return this.nroVias;
	}

	public void setNroVias(Short nroVias) {
		this.nroVias = nroVias;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_CRIACAO", nullable = false, length = 29)
	public Date getDthrCriacao() {
		return this.dthrCriacao;
	}

	public void setDthrCriacao(Date dthrCriacao) {
		this.dthrCriacao = dthrCriacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_VALIDA", length = 29)
	public Date getDthrValida() {
		return this.dthrValida;
	}

	public void setDthrValida(Date dthrValida) {
		this.dthrValida = dthrValida;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_MVTO", length = 29)
	public Date getDthrMvto() {
		return this.dthrMvto;
	}

	public void setDthrMvto(Date dthrMvto) {
		this.dthrMvto = dthrMvto;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_VALIDA_MVTO", length = 29)
	public Date getDthrValidaMvto() {
		return this.dthrValidaMvto;
	}

	public void setDthrValidaMvto(Date dthrValidaMvto) {
		this.dthrValidaMvto = dthrValidaMvto;
	}

	@Column(name = "IND_PENDENTE", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndPendente() {
		return this.indPendente;
	}

	public void setIndPendente(String indPendente) {
		this.indPendente = indPendente;
	}

	@Column(name = "IND_IMPRESSO", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndImpresso() {
		return this.indImpresso;
	}

	public void setIndImpresso(String indImpresso) {
		this.indImpresso = indImpresso;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mamRelatorio")
	public Set<MamRelatorio> getMamRelatorioes() {
		return this.mamRelatorioes;
	}

	public void setMamRelatorioes(Set<MamRelatorio> mamRelatorioes) {
		this.mamRelatorioes = mamRelatorioes;
	}
	
	@Column(name = "CON_NUMERO", insertable=false, updatable=false)
	public Integer getConNumero() {
		return conNumero;
	}

	public void setConNumero(Integer conNumero) {
		this.conNumero = conNumero;
	}

	@Column(name = "SER_MATRICULA_VALIDA", insertable=false, updatable=false)
	public Integer getSerMatriculaValida() {
		return serMatriculaValida;
	}

	public void setSerMatriculaValida(Integer serMatriculaValida) {
		this.serMatriculaValida = serMatriculaValida;
	}

	@Column(name = "SER_VIN_CODIGO_VALIDA", insertable=false, updatable=false)
	public Short getSerVinCodigoValida() {
		return serVinCodigoValida;
	}

	public void setSerVinCodigoValida(Short serVinCodigoValida) {
		this.serVinCodigoValida = serVinCodigoValida;
	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		RAP_SERVIDORES_BY_MAM_REL_SER_FK3("rapServidoresByMamRelSerFk3"),
		MAM_RELATORIOS("mamRelatorio"),
		AAC_CONSULTAS("aacConsultas"),
		RAP_SERVIDORES_BY_MAM_REL_SER_FK1("rapServidoresByMamRelSerFk1"),
		RAP_SERVIDORES_BY_MAM_REL_SER_FK4("rapServidoresByMamRelSerFk4"),
		RAP_SERVIDORES_BY_MAM_REL_SER_FK2("rapServidoresByMamRelSerFk2"),
		AIP_PACIENTES("aipPacientes"),
		DESCRICAO("descricao"),
		NRO_VIAS("nroVias"),
		DTHR_CRIACAO("dthrCriacao"),
		DTHR_VALIDA("dthrValida"),
		DTHR_MVTO("dthrMvto"),
		DTHR_VALIDA_MVTO("dthrValidaMvto"),
		IND_PENDENTE("indPendente"),
		IND_IMPRESSO("indImpresso"),
		MAM_RELATORIOES("mamRelatorioes"),
		CON_NUMERO("conNumero"),
		SER_MATRICULA_VALIDA("serMatriculaValida"),
		SER_VIN_CODIGO_VALIDA("serVinCodigoValida"),
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MamRelatorio)) {
			return false;
		}
		MamRelatorio other = (MamRelatorio) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

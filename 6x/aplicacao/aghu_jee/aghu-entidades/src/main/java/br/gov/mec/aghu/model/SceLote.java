package br.gov.mec.aghu.model;

// Generated 11/08/2011 14:35:07 by Hibernate Tools 3.4.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Version;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * SceLotes generated by hbm2java
 */
@Entity
@Table(name = "SCE_LOTES", schema = "AGH")
public class SceLote extends BaseEntityId<SceLoteId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 985081300286496309L;
	private SceLoteId id;
	private Integer version;
	private ScoMaterial material;
	private ScoMarcaComercial marcaComercial;

	public SceLote() {
	}

	public SceLote(SceLoteId id) {
		this.id = id;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "matCodigo", column = @Column(name = "MAT_CODIGO", nullable = false)),
			@AttributeOverride(name = "mcmCodigo", column = @Column(name = "MCM_CODIGO", nullable = false)),
			@AttributeOverride(name = "codigo", column = @Column(name = "CODIGO", nullable = false, length = 20)) })
	public SceLoteId getId() {
		return this.id;
	}

	public void setId(SceLoteId id) {
		this.id = id;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MAT_CODIGO", referencedColumnName = "CODIGO", nullable = false, insertable=false, updatable=false)
	public ScoMaterial getMaterial() {
		return this.material;
	}

	public void setMaterial(ScoMaterial material) {
		this.material = material;
	}

	@Version
	@Column(name = "VERSION")
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}
	
	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name = "MCM_CODIGO", referencedColumnName="CODIGO", nullable=false, insertable = false, updatable = false)
	public ScoMarcaComercial getMarcaComercial() {
		return marcaComercial;
	}

	public void setMarcaComercial(ScoMarcaComercial marcaComercial) {
		this.marcaComercial = marcaComercial;
	}
	
	public enum Fields{
		MARCA_COMERCIAL("marcaComercial"),
		MATERIAL_CODIGO("material.codigo"),
		CODIGO("id.codigo");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}	


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof SceLote)) {
			return false;
		}
		SceLote other = (SceLote) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

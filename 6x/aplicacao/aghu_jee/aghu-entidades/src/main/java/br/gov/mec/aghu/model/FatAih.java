package br.gov.mec.aghu.model;

// Generated 15/03/2011 13:46:58 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;

import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacaoAih;
import br.gov.mec.aghu.core.persistence.BaseEntity;

/**
 * FatAihs generated by hbm2java
 */
@Entity
@Table(name = "FAT_AIHS", schema = "AGH")
public class FatAih implements BaseEntity {
	private static final long serialVersionUID = -7988330497417264064L;
	
	private Long nroAih;
	private FatContasHospitalares contaHospitalar;
	private Date dthrEmissao;
	private DominioSituacaoAih indSituacao;
	private Integer serMatricula;
	private Short serVinCodigo;
	private String alteradoPor;
	private Date alteradoEm;
	private String criadoPor;
	private Date criadoEm;
	private String liberadoPor;
	private Date liberadoEm;
	private RapServidores servidor;
	// COMENTADO POIS NÃO ESTAVA FUNCIONANDO O obterOriginal()
	//private VFatContaHospitalarPac contaHospitalarPac;
	private Integer version;

	public FatAih() {
	}

	public FatAih(Long nroAih, DominioSituacaoAih indSituacao, String criadoPor, Date criadoEm) {
		this.nroAih = nroAih;
		this.indSituacao = indSituacao;
		this.criadoPor = criadoPor;
		this.criadoEm = criadoEm;
	}

	public FatAih(Long nroAih, Date dthrEmissao, DominioSituacaoAih indSituacao, Integer serMatricula, Short serVinCodigo, String alteradoPor,
			Date alteradoEm, String criadoPor, Date criadoEm, FatContasHospitalares contaHospitalar, String liberadoPor, Date liberadoEm) {
		this.nroAih = nroAih;
		this.dthrEmissao = dthrEmissao;
		this.indSituacao = indSituacao;
		this.serMatricula = serMatricula;
		this.serVinCodigo = serVinCodigo;
		this.alteradoPor = alteradoPor;
		this.alteradoEm = alteradoEm;
		this.criadoPor = criadoPor;
		this.criadoEm = criadoEm;
		this.contaHospitalar = contaHospitalar;
		this.liberadoPor = liberadoPor;
		this.liberadoEm = liberadoEm;
	}

	@Id
	@Column(name = "NRO_AIH", unique = true, nullable = false, precision = 13, scale = 0)
	public Long getNroAih() {
		return this.nroAih;
	}

	public void setNroAih(Long nroAih) {
		this.nroAih = nroAih;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_EMISSAO")
	public Date getDthrEmissao() {
		return this.dthrEmissao;
	}

	public void setDthrEmissao(Date dthrEmissao) {
		this.dthrEmissao = dthrEmissao;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacaoAih getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacaoAih indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Column(name = "SER_MATRICULA", precision = 7, scale = 0)
	public Integer getSerMatricula() {
		return this.serMatricula;
	}

	public void setSerMatricula(Integer serMatricula) {
		this.serMatricula = serMatricula;
	}

	@Column(name = "SER_VIN_CODIGO", precision = 3, scale = 0)
	public Short getSerVinCodigo() {
		return this.serVinCodigo;
	}

	public void setSerVinCodigo(Short serVinCodigo) {
		this.serVinCodigo = serVinCodigo;
	}

	@Column(name = "ALTERADO_POR", length = 30)
	@Length(max = 30)
	public String getAlteradoPor() {
		return this.alteradoPor;
	}

	public void setAlteradoPor(String alteradoPor) {
		this.alteradoPor = alteradoPor;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 7)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@Column(name = "CRIADO_POR", nullable = false, length = 30)
	@Length(max = 30)
	public String getCriadoPor() {
		return this.criadoPor;
	}

	public void setCriadoPor(String criadoPor) {
		this.criadoPor = criadoPor;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CTH_SEQ")
	public FatContasHospitalares getContaHospitalar() {
		return contaHospitalar;
	}

	public void setContaHospitalar(FatContasHospitalares contaHospitalar) {
		this.contaHospitalar = contaHospitalar;
	}

	@Column(name = "LIBERADO_POR", length = 30)
	@Length(max = 30)
	public String getLiberadoPor() {
		return this.liberadoPor;
	}

	public void setLiberadoPor(String liberadoPor) {
		this.liberadoPor = liberadoPor;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "LIBERADO_EM", length = 7)
	public Date getLiberadoEm() {
		return this.liberadoEm;
	}

	public void setLiberadoEm(Date liberadoEm) {
		this.liberadoEm = liberadoEm;
	}
	
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((nroAih == null) ? 0 : nroAih.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		FatAih other = (FatAih) obj;
		if (nroAih == null) {
			if (other.nroAih != null) {
				return false;
			}
		} else if (!nroAih.equals(other.nroAih)) {
			return false;
		}
		return true;
	}

	
	//public void setContaHospitalarPac(VFatContaHospitalarPac contaHospitalarPac) {
	//	this.contaHospitalarPac = contaHospitalarPac;
	//}

	//@Transient
	//public VFatContaHospitalarPac getContaHospitalarPac() {
	//	return contaHospitalarPac;
	//}

	/*
	 * Mantido mapeamento antigo pois atributos estão sendo utilizados em
	 * diversos outros lugares como FaturamentoON, FaturamentoRN e
	 * InformarSolicitadoContaHospitalarPaginatorController
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false, insertable = false, updatable = false),
				   @JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false, insertable = false, updatable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@Transient
	public boolean isUtil(){
		return getIndSituacao()== null? false : getIndSituacao().equals(DominioSituacaoAih.U);
	}
	
	@Transient
	public boolean isBloqueada(){
		return getIndSituacao()== null? false : getIndSituacao().equals(DominioSituacaoAih.B);
	}
	
	@Transient
	public boolean isVencida(){
		return getIndSituacao()== null? false : getIndSituacao().equals(DominioSituacaoAih.V);
	}
	
	public enum Fields {

		NRO_AIH("nroAih"), IND_SITUACAO("indSituacao"), CTH("contaHospitalar"), DT_EMISSAO("dthrEmissao"), MATRICULA("servidor.id.matricula"), VINCULO(
				"servidor.id.vinCodigo"), SEQ_CTH("contaHospitalar.seq"), CRIADO_EM("criadoEm"), SERVIDOR("servidor");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}
}

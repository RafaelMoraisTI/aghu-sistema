package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import br.gov.mec.aghu.dominio.DominioTipoOcorrenciaFichaFarmaco;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MbcOcorrenciaFichaFarmaco generated by hbm2java
 */
@Entity
@SequenceGenerator(name = "mbcOffSq1", sequenceName = "AGH.MBC_OFF_SQ1", allocationSize = 1)
@Table(name = "MBC_OCORRENCIA_FICHA_FARMACOS", schema = "AGH")
public class MbcOcorrenciaFichaFarmaco extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -7075667240182841566L;
	private Integer seq;
	private Integer version;
	private RapServidores rapServidores;
	private MbcFichaFarmaco mbcFichaFarmaco;
	private DominioTipoOcorrenciaFichaFarmaco tipoOcorrencia;
	private Date dthrOcorrencia;
	private Double dose;
	private Float concentracaoVolatil;
	private Float taxaInfusao;
	private Date criadoEm;
	private Integer volumeDiluicaoFluido;
	private Short lote;

	public MbcOcorrenciaFichaFarmaco() {
	}

	public MbcOcorrenciaFichaFarmaco(Integer seq, RapServidores rapServidores,
			MbcFichaFarmaco mbcFichaFarmaco,
			DominioTipoOcorrenciaFichaFarmaco tipoOcorrencia,
			Date dthrOcorrencia, Date criadoEm) {
		this.seq = seq;
		this.rapServidores = rapServidores;
		this.mbcFichaFarmaco = mbcFichaFarmaco;
		this.tipoOcorrencia = tipoOcorrencia;
		this.dthrOcorrencia = dthrOcorrencia;
		this.criadoEm = criadoEm;
	}

	public MbcOcorrenciaFichaFarmaco(Integer seq, RapServidores rapServidores,
			MbcFichaFarmaco mbcFichaFarmaco,
			DominioTipoOcorrenciaFichaFarmaco tipoOcorrencia,
			Date dthrOcorrencia, Double dose, Float concentracaoVolatil,
			Float taxaInfusao, Date criadoEm, Integer volumeDiluicaoFluido,
			Short lote) {
		this.seq = seq;
		this.rapServidores = rapServidores;
		this.mbcFichaFarmaco = mbcFichaFarmaco;
		this.tipoOcorrencia = tipoOcorrencia;
		this.dthrOcorrencia = dthrOcorrencia;
		this.dose = dose;
		this.concentracaoVolatil = concentracaoVolatil;
		this.taxaInfusao = taxaInfusao;
		this.criadoEm = criadoEm;
		this.volumeDiluicaoFluido = volumeDiluicaoFluido;
		this.lote = lote;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mbcOffSq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FFA_SEQ", nullable = false)
	public MbcFichaFarmaco getMbcFichaFarmaco() {
		return this.mbcFichaFarmaco;
	}

	public void setMbcFichaFarmaco(MbcFichaFarmaco mbcFichaFarmaco) {
		this.mbcFichaFarmaco = mbcFichaFarmaco;
	}

	@Column(name = "TIPO_OCORRENCIA", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioTipoOcorrenciaFichaFarmaco getTipoOcorrencia() {
		return this.tipoOcorrencia;
	}

	public void setTipoOcorrencia(
			DominioTipoOcorrenciaFichaFarmaco tipoOcorrencia) {
		this.tipoOcorrencia = tipoOcorrencia;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_OCORRENCIA", nullable = false, length = 29)
	public Date getDthrOcorrencia() {
		return this.dthrOcorrencia;
	}

	public void setDthrOcorrencia(Date dthrOcorrencia) {
		this.dthrOcorrencia = dthrOcorrencia;
	}

	@Column(name = "DOSE", precision = 17, scale = 17)
	public Double getDose() {
		return this.dose;
	}

	public void setDose(Double dose) {
		this.dose = dose;
	}

	@Column(name = "CONCENTRACAO_VOLATIL", precision = 8, scale = 8)
	public Float getConcentracaoVolatil() {
		return this.concentracaoVolatil;
	}

	public void setConcentracaoVolatil(Float concentracaoVolatil) {
		this.concentracaoVolatil = concentracaoVolatil;
	}

	@Column(name = "TAXA_INFUSAO", precision = 8, scale = 8)
	public Float getTaxaInfusao() {
		return this.taxaInfusao;
	}

	public void setTaxaInfusao(Float taxaInfusao) {
		this.taxaInfusao = taxaInfusao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "VOLUME_DILUICAO_FLUIDO")
	public Integer getVolumeDiluicaoFluido() {
		return this.volumeDiluicaoFluido;
	}

	public void setVolumeDiluicaoFluido(Integer volumeDiluicaoFluido) {
		this.volumeDiluicaoFluido = volumeDiluicaoFluido;
	}

	@Column(name = "LOTE")
	public Short getLote() {
		return this.lote;
	}

	public void setLote(Short lote) {
		this.lote = lote;
	}

	public enum Fields {

		SEQ("seq"), VERSION("version"), RAP_SERVIDORES("rapServidores"), MBC_FICHA_FARMACO(
				"mbcFichaFarmaco"), TIPO_OCORRENCIA("tipoOcorrencia"), DTHR_OCORRENCIA(
				"dthrOcorrencia"), DOSE("dose"), CONCENTRACAO_VOLATIL(
				"concentracaoVolatil"), TAXA_INFUSAO("taxaInfusao"), CRIADO_EM(
				"criadoEm"), VOLUME_DILUICAO_FLUIDO("volumeDiluicaoFluido"), LOTE(
				"lote");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}

	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MbcOcorrenciaFichaFarmaco)) {
			return false;
		}
		MbcOcorrenciaFichaFarmaco other = (MbcOcorrenciaFichaFarmaco) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

// Generated 21/09/2010 19:23:57 by Hibernate Tools 3.2.5.Beta

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.exception.BusinessExceptionCode;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * AfaFormaDosagens generated by hbm2java
 */

@Entity
@SequenceGenerator(name="afaFdsSq1", sequenceName="AGH.AFA_FDS_SQ1", allocationSize = 1)
@Table(name = "AFA_FORMA_DOSAGENS", schema = "AGH", uniqueConstraints = @UniqueConstraint(columnNames = {
		"MED_MAT_CODIGO", "UMM_SEQ" }))
public class AfaFormaDosagem extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 4326845639744321193L;

	private enum AfaFormaDosagemExceptionCode implements BusinessExceptionCode {
		INTERVALO_PERMITIDO_FATOR_CONVERSAO;
	}

	private Integer seq;
	private AfaMedicamento afaMedicamentos;
	private MpmUnidadeMedidaMedica unidadeMedidaMedicas;
	private RapServidores servidor;
	private BigDecimal fatorConversaoUp;
	private Boolean indUsualPrescricao;
	private Boolean indUsualNpt;
	private Date criadoEm;
	private DominioSituacao indSituacao;
//	private VMpmDosagem vMpmDosagem;
	
	private Set<MpmItemPrescricaoMdto> itemPrescricaoMedicamentos = new HashSet<MpmItemPrescricaoMdto>();

	public AfaFormaDosagem() {
		
		this.seq = null;
		this.afaMedicamentos = null;
		this.servidor = null;
		this.fatorConversaoUp = null;
		this.indUsualPrescricao = Boolean.FALSE;
		this.indUsualNpt = Boolean.FALSE;
		this.criadoEm = null;
		this.indSituacao = DominioSituacao.A;
	}

	public AfaFormaDosagem(Integer seq, AfaMedicamento afaMedicamentos,
			RapServidores servidor, BigDecimal fatorConversaoUp,
			Boolean indUsualPrescricao, Boolean indUsualNpt, Date criadoEm,
			DominioSituacao indSituacao) {
		this.seq = seq;
		this.afaMedicamentos = afaMedicamentos;
		this.servidor = servidor;
		this.fatorConversaoUp = fatorConversaoUp;
		this.indUsualPrescricao = indUsualPrescricao;
		this.indUsualNpt = indUsualNpt;
		this.criadoEm = criadoEm;
		this.indSituacao = indSituacao;
	}

	public AfaFormaDosagem(Integer seq, AfaMedicamento afaMedicamentos,
			MpmUnidadeMedidaMedica unidadeMedidaMedicas,
			RapServidores servidor, BigDecimal fatorConversaoUp,
			Boolean indUsualPrescricao, Boolean indUsualNpt, Date criadoEm,
			DominioSituacao indSituacao) {
		this.seq = seq;
		this.afaMedicamentos = afaMedicamentos;
		this.unidadeMedidaMedicas = unidadeMedidaMedicas;
		this.servidor = servidor;
		this.fatorConversaoUp = fatorConversaoUp;
		this.indUsualPrescricao = indUsualPrescricao;
		this.indUsualNpt = indUsualNpt;
		this.criadoEm = criadoEm;
		this.indSituacao = indSituacao;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "afaFdsSq1")
	@Column(name = "SEQ", unique = true, nullable = false, precision = 6, scale = 0)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MED_MAT_CODIGO", nullable = false)
	public AfaMedicamento getAfaMedicamentos() {
		return this.afaMedicamentos;
	}

	public void setAfaMedicamentos(AfaMedicamento afaMedicamentos) {
		this.afaMedicamentos = afaMedicamentos;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UMM_SEQ")
	public MpmUnidadeMedidaMedica getUnidadeMedidaMedicas() {
		return this.unidadeMedidaMedicas;
	}

	public void setUnidadeMedidaMedicas(
			MpmUnidadeMedidaMedica unidadeMedidaMedicas) {
		this.unidadeMedidaMedicas = unidadeMedidaMedicas;
	}

	@Column(name = "FATOR_CONVERSAO_UP", nullable = false, precision = 14, scale = 4)
	public BigDecimal getFatorConversaoUp() {
		return this.fatorConversaoUp;
	}

	public void setFatorConversaoUp(BigDecimal fatorConversaoUp) {
		this.fatorConversaoUp = fatorConversaoUp;
	}

	@Column(name = "IND_USUAL_PRESCRICAO", nullable = false)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndUsualPrescricao() {
		return this.indUsualPrescricao;
	}

	public void setIndUsualPrescricao(Boolean indUsualPrescricao) {
		this.indUsualPrescricao = indUsualPrescricao;
	}

	@Column(name = "IND_USUAL_NPT", nullable = false)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndUsualNpt() {
		return this.indUsualNpt;
	}

	public void setIndUsualNpt(Boolean indUsualNpt) {
		this.indUsualNpt = indUsualNpt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "IND_SITUACAO", nullable = false)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "formaDosagem")
	public Set<MpmItemPrescricaoMdto> getItemPrescricaoMedicamentos() {
		return this.itemPrescricaoMedicamentos;
	}
	
	public void setItemPrescricaoMedicamentos(
			Set<MpmItemPrescricaoMdto> itemPrescricaoMedicamentos) {
		this.itemPrescricaoMedicamentos = itemPrescricaoMedicamentos;
	}
	
	
	
	
	
//	@ManyToOne(fetch = FetchType.LAZY)
//    @JoinColumn(name="FDS_SEQ" ,referencedColumnName = "SEQ_DOSAGEM" ,insertable= false ,updatable= false)
//	public VMpmDosagem getvMpmDosagem() {
//		return vMpmDosagem;
//	}
//
//	public void setvMpmDosagem(VMpmDosagem vMpmDosagem) {
//		this.vMpmDosagem = vMpmDosagem;
//	}

	

	public enum Fields {

		SEQ("seq"), 
		MEDICAMENTOS("afaMedicamentos"), 
		MEDICAMENTOS_MAT_CODIGO("afaMedicamentos.matCodigo"), 
		RAP_SERVIDOR("servidor"), 
		UNIDADE_MEDICAS("unidadeMedidaMedicas"),
		UNIDADE_MEDICAS_SEQ("unidadeMedidaMedicas.seq"),
		CRIADO_EM("criadoEm"), 
		FATOR_CONVERSAO_UP("fatorConversaoUp"), 
		IND_USUAL_PRESCRICAO("indUsualPrescricao"),
		IND_USUAL_NPT("indUsualNpt"), 
		IND_SITUACAO("indSituacao"),
//		V_MPM_DOSAGEM("vMpmDosagem"),
		ITENS_PRESCRICAO_MDTOS("itemPrescricaoMedicamentos");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}

	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void validarAfaFormaDosagens() {
		final BigDecimal valorIni = new BigDecimal("9999999999.9999");
		final BigDecimal valorFim = new BigDecimal("-9999999999.9999");
		
		if(this.fatorConversaoUp != null &&
				(this.fatorConversaoUp.compareTo(valorIni) > 0 
						|| this.fatorConversaoUp.compareTo(valorFim) < 0)) {
			throw new BaseRuntimeException(AfaFormaDosagemExceptionCode.INTERVALO_PERMITIDO_FATOR_CONVERSAO);
			//throw new AGHUNegocioException(AfaFormaDosagemExceptionCode.INTERVALO_PERMITIDO_FATOR_CONVERSAO);
		}
		/* bug #10794
		 * if (this.fatorConversaoUp != null && this.fatorConversaoUp.intValue() < 0) {
			throw new AGHUModelException();
		}*/
	}

	/**
	 * rcorvalao
	 * 01/10/2010
	 * @return
	 */
	@Transient
	public String getDescricaoUnidadeMedidaMedica() {
		String returnValue = null;
		if (this.getUnidadeMedidaMedicas() != null) {
			returnValue = this.getUnidadeMedidaMedicas().getDescricao();
		}
		return returnValue;
	}

	@Override
	public boolean equals(Object other) {

		boolean result = (other != null)
				&& (other instanceof AfaFormaDosagem)
				&& (this.hashCode() == other.hashCode());
		AfaFormaDosagem castOther = null;

		if (result) {
			if (this != other) {
				castOther = (AfaFormaDosagem) other;
				result = (this.getSeq() == castOther.getSeq())
						&& ((this.getAfaMedicamentos() == castOther
								.getAfaMedicamentos()) || (this.getAfaMedicamentos() != null
								&& castOther.getAfaMedicamentos() != null && this
								.getAfaMedicamentos().equals(
										castOther.getAfaMedicamentos())))
						&& ((this.getUnidadeMedidaMedicas() == castOther.getUnidadeMedidaMedicas()) || (this
								.getUnidadeMedidaMedicas() != null
								&& castOther.getUnidadeMedidaMedicas() != null && this
								.getUnidadeMedidaMedicas().equals(castOther.getUnidadeMedidaMedicas())))
						&& ((this.getServidor() == castOther
								.getServidor()) || (this.getServidor() != null
								&& castOther.getServidor() != null && this
								.getServidor().equals(
										castOther.getServidor())))
						&& ((this.getFatorConversaoUp() == castOther
								.getFatorConversaoUp()) || (this
								.getFatorConversaoUp() != null
								&& castOther.getFatorConversaoUp() != null && this
								.getFatorConversaoUp().equals(
										castOther.getFatorConversaoUp())))
						&& ((this.getIndUsualPrescricao() == castOther
								.getIndUsualPrescricao()) || (this
								.getIndUsualPrescricao() != null
								&& castOther.getIndUsualPrescricao() != null && this
								.getIndUsualPrescricao().equals(
										castOther.getIndUsualPrescricao())))
						&& ((this.getIndUsualNpt() == castOther
								.getIndUsualNpt()) || (this.getIndUsualNpt() != null
								&& castOther.getIndUsualNpt() != null && this
								.getIndUsualNpt().equals(
										castOther.getIndUsualNpt())))
						&& ((this.getCriadoEm() == castOther.getCriadoEm()) || (this
								.getCriadoEm() != null
								&& castOther.getCriadoEm() != null && this
								.getCriadoEm().equals(castOther.getCriadoEm())))
						&& ((this.getIndSituacao() == castOther
								.getIndSituacao()) || (this.getIndSituacao() != null
								&& castOther.getIndSituacao() != null && this
								.getIndSituacao().equals(
										castOther.getIndSituacao())));
			} else {
				result = true;
			}
		}

		return result;
	}
	
	@Override
	public int hashCode() {

		return (this.getSeq() != null ? this.getSeq().hashCode() : super.hashCode());
	}

	
}

package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Version;


import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntityCodigo;

/**
 * ScoRamoComercial generated by hbm2java
 */
@Entity
@SequenceGenerator(name="scoRcmSq1", sequenceName="AGH.SCO_RCM_SQ1", allocationSize = 1)
@Table(name = "SCO_RAMOS_COMERCIAIS", schema = "AGH")
public class ScoRamoComercial extends BaseEntityCodigo<Short> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 5345127022817045680L;
	private Short codigo;
	private Integer version;
	private String descricao;
	private DominioSituacao indSituacao = DominioSituacao.A;
	private Set<ScoFornRamoComercial> scoFornRamoComerciales = new HashSet<ScoFornRamoComercial>(0);

	public ScoRamoComercial() {
	}

	public ScoRamoComercial(Short codigo, String descricao) {
		this.codigo = codigo;
		this.descricao = descricao;
	}

	public ScoRamoComercial(Short codigo, String descricao, DominioSituacao indSituacao, Set<ScoFornRamoComercial> scoFornRamoComerciales) {
		this.codigo = codigo;
		this.descricao = descricao;
		this.indSituacao = indSituacao;
		this.scoFornRamoComerciales = scoFornRamoComerciales;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "scoRcmSq1")
	@Column(name = "CODIGO", unique = true, nullable = false)
	public Short getCodigo() {
		return this.codigo;
	}

	public void setCodigo(Short codigo) {
		this.codigo = codigo;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 60)
	@Length(max = 60)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "IND_SITUACAO", nullable = false)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "scoRamoComercial")
	public Set<ScoFornRamoComercial> getScoFornRamoComerciales() {
		return this.scoFornRamoComerciales;
	}

	public void setScoFornRamoComerciales(Set<ScoFornRamoComercial> scoFornRamoComerciales) {
		this.scoFornRamoComerciales = scoFornRamoComerciales;
	}

	public enum Fields {

		CODIGO("codigo"),
		VERSION("version"),
		DESCRICAO("descricao"),
		IND_SITUACAO("indSituacao"),
		SCO_FORN_RAMO_COMERCIALES("scoFornRamoComerciales");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		return new HashCodeBuilder().append(this.codigo).toHashCode();
	}
	
	@Override
	public boolean equals(Object other) {
		if (!(other instanceof ScoFormaPagamento)){
			return false;
		}
		ScoFormaPagamento castOther = (ScoFormaPagamento) other;
		return new EqualsBuilder().append(this.codigo, castOther.getCodigo())
				.isEquals();
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

// Generated 23/01/2012 15:21:09 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AelMetodoUnfExames generated by hbm2java
 */
@Entity
@Table(name = "AEL_METODO_UNF_EXAMES", schema = "AGH")
public class AelMetodoUnfExame extends BaseEntityId<AelMetodoUnfExameId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 5530411231391521331L;
	private AelMetodoUnfExameId id;
	private Integer version;
	private AelMetodo metodo;
	private Date dthrInicio;
	private Date dthrFim;
	private DominioSituacao situacao;
	private Date criadoEm;
	private RapServidores servidor;
	private AelUnfExecutaExames unfExecutaExames;

	public AelMetodoUnfExame() {
	}

	public AelMetodoUnfExame(AelMetodoUnfExameId id, AelMetodo metodo,
			Date dthrInicio, DominioSituacao situacao, Date criadoEm,
			RapServidores servidor) {
		this.id = id;
		this.metodo = metodo;
		this.dthrInicio = dthrInicio;
		this.situacao = situacao;
		this.criadoEm = criadoEm;
		this.servidor = servidor;
	}

	public AelMetodoUnfExame(AelMetodoUnfExameId id, AelMetodo metodo,
			Date dthrInicio, Date dthrFim, DominioSituacao situacao, Date criadoEm,
			RapServidores servidor) {
		this.id = id;
		this.metodo = metodo;
		this.dthrInicio = dthrInicio;
		this.dthrFim = dthrFim;
		this.situacao = situacao;
		this.criadoEm = criadoEm;
		this.servidor = servidor;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "ufeEmaExaSigla", column = @Column(name = "UFE_EMA_EXA_SIGLA", nullable = false, length = 5)),
			@AttributeOverride(name = "ufeEmaManSeq", column = @Column(name = "UFE_EMA_MAN_SEQ", nullable = false)),
			@AttributeOverride(name = "ufeUnfSeq", column = @Column(name = "UFE_UNF_SEQ", nullable = false)),
			@AttributeOverride(name = "mtdSeq", column = @Column(name = "MTD_SEQ", nullable = false)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false)) })
	public AelMetodoUnfExameId getId() {
		return this.id;
	}

	public void setId(AelMetodoUnfExameId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MTD_SEQ", nullable = false, insertable = false, updatable = false)
	public AelMetodo getMetodo() {
		return metodo;
	}

	public void setMetodo(AelMetodo metodo) {
		this.metodo = metodo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_INICIO", nullable = false, length = 29)
	public Date getDthrInicio() {
		return this.dthrInicio;
	}

	public void setDthrInicio(Date dthrInicio) {
		this.dthrInicio = dthrInicio;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_FIM", length = 29)
	public Date getDthrFim() {
		return this.dthrFim;
	}

	public void setDthrFim(Date dthrFim) {
		this.dthrFim = dthrFim;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getSituacao() {
		return this.situacao;
	}

	public void setSituacao(DominioSituacao situacao) {
		this.situacao = situacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "UFE_EMA_EXA_SIGLA", updatable = false, insertable = false),
			@JoinColumn(name = "UFE_EMA_MAN_SEQ", updatable = false, insertable = false),
			@JoinColumn(name = "UFE_UNF_SEQ", updatable = false, insertable = false)})
	public AelUnfExecutaExames getUnfExecutaExames() {
		return unfExecutaExames;
	}

	public void setUnfExecutaExames(AelUnfExecutaExames unfExecutaEx) {
		this.unfExecutaExames = unfExecutaEx;
	}
	
	public enum Fields {

		ID("id"),
		EXA_SIGLA("id.ufeEmaExaSigla"),
		MAN_SEQ("id.ufeEmaManSeq"),
		UNF_SEQ("id.ufeUnfSeq"),
		MTD_SEQ("id.mtdSeq"),
		SEQP("id.seqp"),
		DATA_INICIO("dthrInicio"),
		DATA_FIM("dthrFim"),
		CRIADO_EM("criadoEm"),
		SERVIDOR("servidor"),
		SITUACAO("situacao"),
		UNF_EXECUTA_EXAMES("unfExecutaExames"),
		METODO("metodo");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}

	}



	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AelMetodoUnfExame)) {
			return false;
		}
		AelMetodoUnfExame other = (AelMetodoUnfExame) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

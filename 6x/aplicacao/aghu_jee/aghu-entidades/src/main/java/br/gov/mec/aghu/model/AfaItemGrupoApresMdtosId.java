package br.gov.mec.aghu.model;

// Generated 25/10/2011 14:46:21 by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Embeddable;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.EntityCompositeId;

/**
 * AfaItemGrupoApresMdtosId generated by hbm2java
 */
@Embeddable
public class AfaItemGrupoApresMdtosId implements EntityCompositeId {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1102508738048060496L;
	private Short gamSeq;
	private String tprSigla;

	public AfaItemGrupoApresMdtosId() {
	}

	public AfaItemGrupoApresMdtosId(Short gamSeq, String tprSigla) {
		this.gamSeq = gamSeq;
		this.tprSigla = tprSigla;
	}

	@Column(name = "GAM_SEQ", nullable = false)
	public Short getGamSeq() {
		return this.gamSeq;
	}

	public void setGamSeq(Short gamSeq) {
		this.gamSeq = gamSeq;
	}

	@Column(name = "TPR_SIGLA", nullable = false, length = 3)
	@Length(max = 3)
	public String getTprSigla() {
		return this.tprSigla;
	}

	public void setTprSigla(String tprSigla) {
		this.tprSigla = tprSigla;
	}
	
	
	public enum Fields {
		GAM_SEQ("gamSeq"),
		TPR_SIGLA("tprSigla");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	@Override
	public boolean equals(Object other) {
		if ((this == other)) {
			return true;
		}
		if ((other == null)) {
			return false;
		}
		if (!(other instanceof AfaItemGrupoApresMdtosId)) {
			return false;
		}
		AfaItemGrupoApresMdtosId castOther = (AfaItemGrupoApresMdtosId) other;

		return (this.getGamSeq() == castOther.getGamSeq())
				&& ((this.getTprSigla() == castOther.getTprSigla()) || (this
						.getTprSigla() != null
						&& castOther.getTprSigla() != null && this
						.getTprSigla().equals(castOther.getTprSigla())));
	}

	@Override
	public int hashCode() {
		int result = 17;

		result = 37 * result + this.getGamSeq();
		result = 37 * result
				+ (getTprSigla() == null ? 0 : this.getTprSigla().hashCode());
		return result;
	}

}

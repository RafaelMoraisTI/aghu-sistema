package br.gov.mec.aghu.model;

// Generated 15/03/2011 13:46:58 by Hibernate Tools 3.2.5.Beta

import javax.persistence.Column;
import javax.persistence.Embeddable;

import org.apache.commons.lang3.builder.HashCodeBuilder;

import br.gov.mec.aghu.core.persistence.EntityCompositeId;

/**
 * FatExcecoesPercentuaisId generated by hbm2java
 */
@Embeddable
public class FatExcecaoPercentualId implements EntityCompositeId {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8471004106034759659L;
	private Short iphPhoSeq;
	private Integer iphSeq;
	private Byte seqp;

	public FatExcecaoPercentualId() {
	}

	public FatExcecaoPercentualId(Short iphPhoSeq, Integer iphSeq, Byte seqp) {
		this.iphPhoSeq = iphPhoSeq;
		this.iphSeq = iphSeq;
		this.seqp = seqp;
	}

	@Column(name = "IPH_PHO_SEQ", nullable = false, precision = 4, scale = 0)
	public Short getIphPhoSeq() {
		return this.iphPhoSeq;
	}

	public void setIphPhoSeq(Short iphPhoSeq) {
		this.iphPhoSeq = iphPhoSeq;
	}

	@Column(name = "IPH_SEQ", nullable = false, precision = 8, scale = 0)
	public Integer getIphSeq() {
		return this.iphSeq;
	}

	public void setIphSeq(Integer iphSeq) {
		this.iphSeq = iphSeq;
	}

	@Column(name = "SEQP", nullable = false, precision = 2, scale = 0)
	public Byte getSeqp() {
		return this.seqp;
	}

	public void setSeqp(Byte seqp) {
		this.seqp = seqp;
	}

	@Override
	public boolean equals(Object other) {
		if ((this == other)) {
			return true;
		}
		if ((other == null)) {
			return false;
		}
		if (!(other instanceof FatExcecaoPercentualId)) {
			return false;
		}
		FatExcecaoPercentualId castOther = (FatExcecaoPercentualId) other;

		return this.getIphPhoSeq().equals(castOther.getIphPhoSeq())
				&& this.getIphSeq().equals(castOther.getIphSeq())
				&& this.getSeqp().equals(castOther.getSeqp());
	}

	@Override
	public int hashCode() {
		HashCodeBuilder hashCode = new HashCodeBuilder();

		hashCode.append(this.getIphPhoSeq());
		hashCode.append(this.getIphSeq());
		hashCode.append(this.getSeqp());
		
		return hashCode.hashCode();
	}

}

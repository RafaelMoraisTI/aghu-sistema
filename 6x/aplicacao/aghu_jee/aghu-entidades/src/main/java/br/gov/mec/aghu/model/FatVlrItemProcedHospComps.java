package br.gov.mec.aghu.model;

// Generated 26/04/2010 16:41:30 by Hibernate Tools 3.2.5.Beta

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * FatVlrItemProcedHospComps generated by hbm2java
 */
@Entity
@Table(name = "FAT_VLR_ITEM_PROCED_HOSP_COMPS", schema = "AGH")
@org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.TRANSACTIONAL)
public class FatVlrItemProcedHospComps extends BaseEntityId<FatVlrItemProcedHospCompsId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 3685656386270567505L;
	private FatVlrItemProcedHospCompsId id;
	private FatItensProcedHospitalar fatItensProcedHospitalar;
	private Short cpdPhoSeq;
	private Date cpdDtInicio;
	private BigDecimal vlrServHospitalar;
	private BigDecimal vlrServProfissional;
	private BigDecimal vlrSadt;
	private String criadoPor;
	private Date criadoEm;
	private String alteradoPor;
	private Date alteradoEm;
	private Date dtFimCompetencia;
	private BigDecimal vlrProcedimento;
	private BigDecimal vlrAnestesista;
	private BigDecimal vlrServProfisAmbulatorio;
	private BigDecimal vlrTotalInt;
	private BigDecimal vlrTotalAmb;
	private Short qtdMaximaExecucao;
	private Integer version;

	public FatVlrItemProcedHospComps() {
	}

	public FatVlrItemProcedHospComps(FatVlrItemProcedHospCompsId id, FatItensProcedHospitalar fatItensProcedHospitalar, String criadoPor,
			Date criadoEm) {
		this.id = id;
		this.fatItensProcedHospitalar = fatItensProcedHospitalar;
		this.criadoPor = criadoPor;
		this.criadoEm = criadoEm;
	}

	public FatVlrItemProcedHospComps(FatVlrItemProcedHospComps origem) {
		if (origem != null) {
			if (origem.getId() == null) {
				this.id = null;
			} else {
				this.id = new FatVlrItemProcedHospCompsId(origem.getId().getIphPhoSeq(), origem.getId().getIphSeq(), origem.getId()
						.getDtInicioCompetencia());
			}
			this.fatItensProcedHospitalar = origem.fatItensProcedHospitalar;
			this.cpdPhoSeq = origem.cpdPhoSeq;
			this.cpdDtInicio = origem.cpdDtInicio;
			this.vlrServHospitalar = origem.vlrServHospitalar;
			this.vlrServProfissional = origem.vlrServProfissional;
			this.vlrSadt = origem.vlrSadt;
			this.criadoPor = origem.criadoPor;
			this.criadoEm = origem.criadoEm;
			this.alteradoPor = origem.alteradoPor;
			this.alteradoEm = origem.alteradoEm;
			this.dtFimCompetencia = origem.dtFimCompetencia;
			this.vlrProcedimento = origem.vlrProcedimento;
			this.vlrAnestesista = origem.vlrAnestesista;
			this.vlrServProfisAmbulatorio = origem.vlrServProfisAmbulatorio;
		}
	}

	public FatVlrItemProcedHospComps(FatVlrItemProcedHospCompsId id, FatItensProcedHospitalar fatItensProcedHospitalar, Short cpdPhoSeq,
			Date cpdDtInicio, BigDecimal vlrServHospitalar, BigDecimal vlrServProfissional, BigDecimal vlrSadt, String criadoPor, Date criadoEm,
			String alteradoPor, Date alteradoEm, Date dtFimCompetencia, BigDecimal vlrProcedimento, BigDecimal vlrAnestesista,
			BigDecimal vlrServProfisAmbulatorio) {
		this.id = id;
		this.fatItensProcedHospitalar = fatItensProcedHospitalar;
		this.cpdPhoSeq = cpdPhoSeq;
		this.cpdDtInicio = cpdDtInicio;
		this.vlrServHospitalar = vlrServHospitalar;
		this.vlrServProfissional = vlrServProfissional;
		this.vlrSadt = vlrSadt;
		this.criadoPor = criadoPor;
		this.criadoEm = criadoEm;
		this.alteradoPor = alteradoPor;
		this.alteradoEm = alteradoEm;
		this.dtFimCompetencia = dtFimCompetencia;
		this.vlrProcedimento = vlrProcedimento;
		this.vlrAnestesista = vlrAnestesista;
		this.vlrServProfisAmbulatorio = vlrServProfisAmbulatorio;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "iphPhoSeq", column = @Column(name = "IPH_PHO_SEQ", precision = 4, scale = 0)),
			@AttributeOverride(name = "iphSeq", column = @Column(name = "IPH_SEQ",  precision = 8, scale = 0)),
			@AttributeOverride(name = "dtInicioCompetencia", column = @Column(name = "DT_INICIO_COMPETENCIA", length = 7)) })
	public FatVlrItemProcedHospCompsId getId() {
		return this.id;
	}

	public void setId(FatVlrItemProcedHospCompsId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "IPH_PHO_SEQ", referencedColumnName = "PHO_SEQ", insertable = false, updatable = false),
			@JoinColumn(name = "IPH_SEQ", referencedColumnName = "SEQ", insertable = false, updatable = false) })
	public FatItensProcedHospitalar getFatItensProcedHospitalar() {
		return this.fatItensProcedHospitalar;
	}

	public void setFatItensProcedHospitalar(FatItensProcedHospitalar fatItensProcedHospitalar) {
		this.fatItensProcedHospitalar = fatItensProcedHospitalar;
	}

	@Column(name = "CPD_PHO_SEQ", precision = 4, scale = 0)
	public Short getCpdPhoSeq() {
		return this.cpdPhoSeq;
	}

	public void setCpdPhoSeq(Short cpdPhoSeq) {
		this.cpdPhoSeq = cpdPhoSeq;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CPD_DT_INICIO", length = 7)
	public Date getCpdDtInicio() {
		return this.cpdDtInicio;
	}

	public void setCpdDtInicio(Date cpdDtInicio) {
		this.cpdDtInicio = cpdDtInicio;
	}

	@Column(name = "VLR_SERV_HOSPITALAR", precision = 14)
	public BigDecimal getVlrServHospitalar() {
		return this.vlrServHospitalar;
	}

	public void setVlrServHospitalar(BigDecimal vlrServHospitalar) {
		this.vlrServHospitalar = vlrServHospitalar;
	}

	@Column(name = "VLR_SERV_PROFISSIONAL", precision = 14)
	public BigDecimal getVlrServProfissional() {
		return this.vlrServProfissional;
	}

	public void setVlrServProfissional(BigDecimal vlrServProfissional) {
		this.vlrServProfissional = vlrServProfissional;
	}

	@Column(name = "VLR_SADT", precision = 14)
	public BigDecimal getVlrSadt() {
		return this.vlrSadt;
	}

	public void setVlrSadt(BigDecimal vlrSadt) {
		this.vlrSadt = vlrSadt;
	}

	@Column(name = "CRIADO_POR", nullable = false, length = 30)
	@Length(max = 30)
	public String getCriadoPor() {
		return this.criadoPor;
	}

	public void setCriadoPor(String criadoPor) {
		this.criadoPor = criadoPor;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "ALTERADO_POR", length = 30)
	@Length(max = 30)
	public String getAlteradoPor() {
		return this.alteradoPor;
	}

	public void setAlteradoPor(String alteradoPor) {
		this.alteradoPor = alteradoPor;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "ALTERADO_EM", length = 7)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_FIM_COMPETENCIA")
	public Date getDtFimCompetencia() {
		return this.dtFimCompetencia;
	}

	public void setDtFimCompetencia(Date dtFimCompetencia) {
		this.dtFimCompetencia = dtFimCompetencia;
	}

	@Column(name = "VLR_PROCEDIMENTO", precision = 14)
	public BigDecimal getVlrProcedimento() {
		return this.vlrProcedimento;
	}

	public void setVlrProcedimento(BigDecimal vlrProcedimento) {
		this.vlrProcedimento = vlrProcedimento;
	}

	@Column(name = "VLR_ANESTESISTA", precision = 14)
	public BigDecimal getVlrAnestesista() {
		return this.vlrAnestesista;
	}

	public void setVlrAnestesista(BigDecimal vlrAnestesista) {
		this.vlrAnestesista = vlrAnestesista;
	}

	@Column(name = "VLR_SERV_PROFIS_AMBULATORIO", precision = 14)
	public BigDecimal getVlrServProfisAmbulatorio() {
		return this.vlrServProfisAmbulatorio;
	}

	public void setVlrServProfisAmbulatorio(BigDecimal vlrServProfisAmbulatorio) {
		this.vlrServProfisAmbulatorio = vlrServProfisAmbulatorio;
	}

	public void setQtdMaximaExecucao(final Short qtdMaximaExecucao) {
		this.qtdMaximaExecucao = qtdMaximaExecucao;
	}

	@Column(name = "QT_MAXIMA_EXECUCAO", precision = 4, scale = 0)
	public Short getQtdMaximaExecucao() {
		return qtdMaximaExecucao;
	}

	public void setVlrTotalAmb(BigDecimal vlrTotalAmb) {
		this.vlrTotalAmb = vlrTotalAmb;
	}

	@Transient
	public BigDecimal getVlrTotalAmb() {
		return vlrTotalAmb;
	}

	public void setVlrTotalInt(BigDecimal vlrTotalInt) {
		this.vlrTotalInt = vlrTotalInt;
	}

	@Transient
	public BigDecimal getVlrTotalInt() {
		return vlrTotalInt;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj){
			return true;
		}
		if (obj == null){
			return false;
		}
		if (getClass() != obj.getClass()){
			return false;
		}
		FatVlrItemProcedHospComps other = (FatVlrItemProcedHospComps) obj;
		if (id == null) {
			if (other.id != null){
				return false;
			}
		} else if (!id.equals(other.id)){
			return false;
		}
		return true;
	}

	public enum Fields {
		PROCEDIMENTO("fatItensProcedHospitalar"), 
		ID("id"), IPH_PHO_SEQ("id.iphPhoSeq"), 
		IPH_SEQ("id.iphSeq"), 
		DT_INICIO_COMPETENCIA("id.dtInicioCompetencia"), 
		DT_FIM_COMPETENCIA("dtFimCompetencia"), 
		VLR_SERV_HOSPITALAR("vlrServHospitalar"), 
		VLR_SERV_PROFISSIONAL("vlrServProfissional"), 
		VLR_SADT("vlrSadt"), 
		QTD_MAXIMA_EXECUCAO("qtdMaximaExecucao"),
		VLR_PROCEDIMENTO("vlrProcedimento"),
		VLR_SERV_PROF_AMBULATORIO("vlrServProfisAmbulatorio"),
		VLR_ANESTESIA("vlrAnestesista"),
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

}

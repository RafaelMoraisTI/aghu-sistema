package br.gov.mec.aghu.model;

// Generated 14/09/2010 17:49:55 by Hibernate Tools 3.2.5.Beta

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioPatologiaObito;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * 
 * MpmPatologiaObitos generated by hbm2java
 */
@Entity
@Table(name = "MPM_PATOLOGIA_OBITOS", schema = "AGH")

public class MpmPatologiaObito extends BaseEntityId<MpmPatologiaObitoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -7422194066480926512L;
	private MpmPatologiaObitoId id;
	private MpmNotaObito mpmNotaObitos;
	private DominioPatologiaObito tipo;
	private Short prioridade;
	private String complementoCid;
	private RapServidores servidorMatricula;

	public MpmPatologiaObito() {
	}

	public MpmPatologiaObito(final MpmPatologiaObitoId id, final MpmNotaObito mpmNotaObitos, final DominioPatologiaObito tipo,
			final RapServidores serMatricula) {
		this.id = id;
		this.mpmNotaObitos = mpmNotaObitos;
		this.tipo = tipo;
		this.servidorMatricula = serMatricula;
	}

	public MpmPatologiaObito(final MpmPatologiaObitoId id, final MpmNotaObito mpmNotaObitos, final DominioPatologiaObito tipo,
			final Short prioridade, final String complementoCid, final RapServidores serMatricula) {
		this.id = id;
		this.mpmNotaObitos = mpmNotaObitos;
		this.tipo = tipo;
		this.prioridade = prioridade;
		this.complementoCid = complementoCid;
		this.servidorMatricula = serMatricula;
	}

	@EmbeddedId
	@AttributeOverrides( { @AttributeOverride(name = "cidSeq", column = @Column(name = "CID_SEQ", nullable = false, precision = 5, scale = 0)),
			@AttributeOverride(name = "nobSalAtdSeq", column = @Column(name = "NOB_SAL_ATD_SEQ", nullable = false, precision = 7, scale = 0)) })
	public MpmPatologiaObitoId getId() {
		return this.id;
	}

	public void setId(final MpmPatologiaObitoId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "NOB_SAL_ATD_SEQ", nullable = false, insertable = false, updatable = false)
	public MpmNotaObito getMpmNotaObitos() {
		return this.mpmNotaObitos;
	}

	public void setMpmNotaObitos(final MpmNotaObito mpmNotaObitos) {
		this.mpmNotaObitos = mpmNotaObitos;
	}

	@Column(name = "TIPO", nullable = false, length = 1)
	@Length(max = 1)
	public DominioPatologiaObito getTipo() {
		return this.tipo;
	}

	public void setTipo(final DominioPatologiaObito tipo) {
		this.tipo = tipo;
	}

	@Column(name = "PRIORIDADE", precision = 1, scale = 0)
	public Short getPrioridade() {
		return this.prioridade;
	}

	public void setPrioridade(final Short p) {
		this.prioridade = p;
	}

	@Column(name = "COMPLEMENTO_CID", length = 45)
	@Length(max = 45)
	public String getComplementoCid() {
		return this.complementoCid;
	}

	public void setComplementoCid(final String complementoCid) {
		this.complementoCid = complementoCid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( { @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidorMatricula() {
		return this.servidorMatricula;
	}

	public void setServidorMatricula(final RapServidores serMatricula) {
		this.servidorMatricula = serMatricula;
	}

	@Override
	public boolean equals(final Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (this.getClass() != obj.getClass()) {
			return false;
		}
		MpmPatologiaObito other = (MpmPatologiaObito) obj;
		if (this.id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!this.id.equals(other.id)) {
			return false;
		}
		return true;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
		return result;
	}

	public enum Fields {

		ID("id"),
		MPM_NOTA_OBITOS("mpmNotaObitos"),
		TIPO("tipo"),
		PRIORIDADE("prioridade"),
		COMPLEMENTO_CID("complementoCid"),
		SERVIDOR_MATRICULA("servidorMatricula");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}

}

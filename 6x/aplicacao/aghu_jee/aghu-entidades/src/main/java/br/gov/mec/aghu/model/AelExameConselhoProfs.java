package br.gov.mec.aghu.model;

// Generated 14/03/2011 10:14:45 by Hibernate Tools 3.2.5.Beta

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AelExameConselhoProfs generated by hbm2java
 */

@Entity
@Table(name = "AEL_EXAME_CONSELHO_PROFS", schema = "AGH")
public class AelExameConselhoProfs extends BaseEntityId<AelExameConselhoProfsId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -3682658926963650526L;
	private AelExameConselhoProfsId id;
	private AelExamesMaterialAnalise examesMaterialAnalise;
	private RapConselhosProfissionais conselhosProfissionais;

	public AelExameConselhoProfs() {
	}

	public AelExameConselhoProfs(AelExameConselhoProfsId id) {
		this.id = id;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "emaExaSigla", column = @Column(name = "EMA_EXA_SIGLA", nullable = false, length = 5)),
			@AttributeOverride(name = "emaManSeq", column = @Column(name = "EMA_MAN_SEQ", nullable = false, precision = 5, scale = 0)),
			@AttributeOverride(name = "cprCodigo", column = @Column(name = "CPR_CODIGO", nullable = false, precision = 4, scale = 0)) })
	public AelExameConselhoProfsId getId() {
		return this.id;
	}

	public void setId(AelExameConselhoProfsId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CPR_CODIGO", nullable = false, insertable = false, updatable = false)
	public RapConselhosProfissionais getConselhosProfissionais() {
		return conselhosProfissionais;
	}

	public void setConselhosProfissionais(RapConselhosProfissionais conselhosProfissionais) {
		this.conselhosProfissionais = conselhosProfissionais;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "EMA_EXA_SIGLA", referencedColumnName = "EXA_SIGLA", insertable = false, updatable = false),
			@JoinColumn(name = "EMA_MAN_SEQ", referencedColumnName = "MAN_SEQ", insertable = false, updatable = false) })
	public AelExamesMaterialAnalise getExamesMaterialAnalise() {
		return examesMaterialAnalise;
	}

	public void setExamesMaterialAnalise(AelExamesMaterialAnalise examesMaterialAnalise) {
		this.examesMaterialAnalise = examesMaterialAnalise;
	}
	
	public enum Fields {
		EMA_MAN_SEQ("id.emaManSeq"),
		EMA_EXA_SIGLA("id.emaExaSigla"),
		EXAMES_MATERIAL_ANALISE("examesMaterialAnalise"),
		CONSELHOS_PROFISSIONAIS("conselhosProfissionais");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AelExameConselhoProfs)) {
			return false;
		}
		AelExameConselhoProfs other = (AelExameConselhoProfs) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}
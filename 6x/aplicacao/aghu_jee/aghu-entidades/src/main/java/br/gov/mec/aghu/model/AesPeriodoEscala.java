package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AesPeriodoEscala generated by hbm2java
 */
@Entity
@Table(name = "AES_PERIODOS_ESCALA", schema = "AGH")
public class AesPeriodoEscala extends BaseEntityId<AesPeriodoEscalaId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1774711139443618502L;
	private AesPeriodoEscalaId id;
	private Integer version;
	private RapServidores rapServidoresByAesPfeSerFk2;
	private AesAreaResponsavelEscala aesAreaResponsavelEscala;
	private AesTipoGrupoTrabalho aesTipoGrupoTrabalho;
	private RapServidores rapServidoresByAesPfeSerFk1;
	private Date dtIni;
	private Date dtFim;
	private String indFechamento;
	private Date dtEncerramento;
	private Set<AesSaldoFolgaPeriodo> aesSaldoFolgaPeriodoes = new HashSet<AesSaldoFolgaPeriodo>(0);

	public AesPeriodoEscala() {
	}

	public AesPeriodoEscala(AesPeriodoEscalaId id, AesAreaResponsavelEscala aesAreaResponsavelEscala, Date dtIni, Date dtFim,
			String indFechamento) {
		this.id = id;
		this.aesAreaResponsavelEscala = aesAreaResponsavelEscala;
		this.dtIni = dtIni;
		this.dtFim = dtFim;
		this.indFechamento = indFechamento;
	}

	public AesPeriodoEscala(AesPeriodoEscalaId id, RapServidores rapServidoresByAesPfeSerFk2,
			AesAreaResponsavelEscala aesAreaResponsavelEscala, AesTipoGrupoTrabalho aesTipoGrupoTrabalho,
			RapServidores rapServidoresByAesPfeSerFk1, Date dtIni, Date dtFim, String indFechamento, Date dtEncerramento,
			Set<AesSaldoFolgaPeriodo> aesSaldoFolgaPeriodoes) {
		this.id = id;
		this.rapServidoresByAesPfeSerFk2 = rapServidoresByAesPfeSerFk2;
		this.aesAreaResponsavelEscala = aesAreaResponsavelEscala;
		this.aesTipoGrupoTrabalho = aesTipoGrupoTrabalho;
		this.rapServidoresByAesPfeSerFk1 = rapServidoresByAesPfeSerFk1;
		this.dtIni = dtIni;
		this.dtFim = dtFim;
		this.indFechamento = indFechamento;
		this.dtEncerramento = dtEncerramento;
		this.aesSaldoFolgaPeriodoes = aesSaldoFolgaPeriodoes;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "areCodigo", column = @Column(name = "ARE_CODIGO", nullable = false)),
			@AttributeOverride(name = "sequencia", column = @Column(name = "SEQUENCIA", nullable = false)) })
	public AesPeriodoEscalaId getId() {
		return this.id;
	}

	public void setId(AesPeriodoEscalaId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByAesPfeSerFk2() {
		return this.rapServidoresByAesPfeSerFk2;
	}

	public void setRapServidoresByAesPfeSerFk2(RapServidores rapServidoresByAesPfeSerFk2) {
		this.rapServidoresByAesPfeSerFk2 = rapServidoresByAesPfeSerFk2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ARE_CODIGO", nullable = false, insertable = false, updatable = false)
	public AesAreaResponsavelEscala getAesAreaResponsavelEscala() {
		return this.aesAreaResponsavelEscala;
	}

	public void setAesAreaResponsavelEscala(AesAreaResponsavelEscala aesAreaResponsavelEscala) {
		this.aesAreaResponsavelEscala = aesAreaResponsavelEscala;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TGT_CODIGO")
	public AesTipoGrupoTrabalho getAesTipoGrupoTrabalho() {
		return this.aesTipoGrupoTrabalho;
	}

	public void setAesTipoGrupoTrabalho(AesTipoGrupoTrabalho aesTipoGrupoTrabalho) {
		this.aesTipoGrupoTrabalho = aesTipoGrupoTrabalho;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_E_ENCERRADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_E_ENCERRADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByAesPfeSerFk1() {
		return this.rapServidoresByAesPfeSerFk1;
	}

	public void setRapServidoresByAesPfeSerFk1(RapServidores rapServidoresByAesPfeSerFk1) {
		this.rapServidoresByAesPfeSerFk1 = rapServidoresByAesPfeSerFk1;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_INI", nullable = false, length = 29)
	public Date getDtIni() {
		return this.dtIni;
	}

	public void setDtIni(Date dtIni) {
		this.dtIni = dtIni;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_FIM", nullable = false, length = 29)
	public Date getDtFim() {
		return this.dtFim;
	}

	public void setDtFim(Date dtFim) {
		this.dtFim = dtFim;
	}

	@Column(name = "IND_FECHAMENTO", nullable = false, length = 3)
	@Length(max = 3)
	public String getIndFechamento() {
		return this.indFechamento;
	}

	public void setIndFechamento(String indFechamento) {
		this.indFechamento = indFechamento;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_ENCERRAMENTO", length = 29)
	public Date getDtEncerramento() {
		return this.dtEncerramento;
	}

	public void setDtEncerramento(Date dtEncerramento) {
		this.dtEncerramento = dtEncerramento;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "aesPeriodoEscala")
	public Set<AesSaldoFolgaPeriodo> getAesSaldoFolgaPeriodoes() {
		return this.aesSaldoFolgaPeriodoes;
	}

	public void setAesSaldoFolgaPeriodoes(Set<AesSaldoFolgaPeriodo> aesSaldoFolgaPeriodoes) {
		this.aesSaldoFolgaPeriodoes = aesSaldoFolgaPeriodoes;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		RAP_SERVIDORES_BY_AES_PFE_SER_FK2("rapServidoresByAesPfeSerFk2"),
		AES_AREAS_RESPONSAVEIS_ESCALAS("aesAreaResponsavelEscala"),
		AES_TIPOS_GRUPOS_TRABALHO("aesTipoGrupoTrabalho"),
		RAP_SERVIDORES_BY_AES_PFE_SER_FK1("rapServidoresByAesPfeSerFk1"),
		DT_INI("dtIni"),
		DT_FIM("dtFim"),
		IND_FECHAMENTO("indFechamento"),
		DT_ENCERRAMENTO("dtEncerramento"),
		AES_SALDO_FOLGA_PERIODOES("aesSaldoFolgaPeriodoes");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AesPeriodoEscala)) {
			return false;
		}
		AesPeriodoEscala other = (AesPeriodoEscala) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

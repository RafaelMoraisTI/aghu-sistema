package br.gov.mec.aghu.model;

// Generated 15/04/2011 14:22:18 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacaoPopVersao;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MpaPopVersoes generated by hbm2java
 */

@Entity
@Table(name = "MPA_POP_VERSOES", schema = "AGH")
public class MpaPopVersoes extends BaseEntityId<MpaPopVersoesId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5066902733748802167L;
	private MpaPopVersoesId id;
	private Integer version;
	private MpaPops mpaPops;
	private String descricao;
	private String nomeArquivoPdf;
	private DominioSituacaoPopVersao indSituacao;
	private Date criadoEm;
	private RapServidores servidor;
	private Date alteradoEm;
	private RapServidores servidorAlterado;
	
	private Set<MpaPopAgendas> mpaPopAgendases = new HashSet<MpaPopAgendas>(0);
	private Set<MpaPopExame> popExames = new HashSet<MpaPopExame>(0);

	public MpaPopVersoes() {
	}

	public MpaPopVersoes(MpaPopVersoesId id, MpaPops mpaPops, String descricao,
			String nomeArquivoPdf, DominioSituacaoPopVersao indSituacao, Date criadoEm,
			RapServidores serMatricula) {
		this.id = id;
		this.mpaPops = mpaPops;
		this.descricao = descricao;
		this.nomeArquivoPdf = nomeArquivoPdf;
		this.indSituacao = indSituacao;
		this.criadoEm = criadoEm;
		this.servidor = serMatricula;
	}

	public MpaPopVersoes(MpaPopVersoesId id, MpaPops mpaPops, String descricao,
			String nomeArquivoPdf, DominioSituacaoPopVersao indSituacao, Date criadoEm,
			RapServidores serMatricula, Date alteradoEm,
			RapServidores serMatriculaAlterado, 
			Set<MpaPopAgendas> mpaPopAgendases) {
		this.id = id;
		this.mpaPops = mpaPops;
		this.descricao = descricao;
		this.nomeArquivoPdf = nomeArquivoPdf;
		this.indSituacao = indSituacao;
		this.criadoEm = criadoEm;
		this.servidor = serMatricula;
		this.alteradoEm = alteradoEm;
		this.setServidorAlterado(serMatriculaAlterado);
		this.mpaPopAgendases = mpaPopAgendases;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "versao", column = @Column(name = "VERSAO", nullable = false)),
			@AttributeOverride(name = "popSeq", column = @Column(name = "POP_SEQ", nullable = false)) })
	public MpaPopVersoesId getId() {
		return this.id;
	}

	public void setId(MpaPopVersoesId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer v) {
		this.version = v;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "POP_SEQ", nullable = false, insertable = false, updatable = false)
	public MpaPops getMpaPops() {
		return this.mpaPops;
	}

	public void setMpaPops(MpaPops mpaPops) {
		this.mpaPops = mpaPops;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 500)
	@Length(max = 500)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "NOME_ARQUIVO_PDF", nullable = false, length = 60)
	@Length(max = 60)
	public String getNomeArquivoPdf() {
		return this.nomeArquivoPdf;
	}

	public void setNomeArquivoPdf(String nomeArquivoPdf) {
		this.nomeArquivoPdf = nomeArquivoPdf;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacaoPopVersao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacaoPopVersao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })	
	public RapServidores getServidor() {
		return servidor;
	}
	
	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 29)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA_ALTERADO", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO_ALTERADO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidorAlterado() {
		return servidorAlterado;
	}
	
	public void setServidorAlterado(RapServidores servidorAlterado) {
		this.servidorAlterado = servidorAlterado;
	}
	
	
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mpaPopVersoes")
	public Set<MpaPopAgendas> getMpaPopAgendases() {
		return this.mpaPopAgendases;
	}

	public void setMpaPopAgendases(Set<MpaPopAgendas> mpaPopAgendases) {
		this.mpaPopAgendases = mpaPopAgendases;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "popVersao")
	public Set<MpaPopExame> getPopExames() {
		return popExames;
	}
	
	public void setPopExames(Set<MpaPopExame> popExames) {
		this.popExames = popExames;
	}


	
	public enum Fields {
		MPA_POP("mpaPops")
		,MPA_POP_AGENDASES("mpaPopAgendases")
		,IND_SITUACAO("indSituacao")
		,POP_SEQ("id.popSeq")
		,VERSAO("id.versao")
		,MPA_POP_EXAME("popExames")
		;
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}

	
	
	
	
	@Override
	public boolean equals(Object other) {
		if (this == other) {
			return true;
		}
		if (other == null) {
			return false;			
		}
		if (!(other instanceof MpaPopVersoes)) {
			return false;
		}
		MpaPopVersoes castOther = (MpaPopVersoes) other;

		return (this.getId() != null && this.getId().equals(castOther.getId()));
	}

	@Override
	public int hashCode() {
		int result = 17;

		result = 37 * result + (this.getId() != null ? this.getId().hashCode() : 0);
		
		return result;
	}
	
	
	
}

package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AelApXPatologista generated by hbm2java
 */
@Entity
@Table(name = "AEL_AP_X_PATOLOGISTAS", schema = "AGH")
public class AelApXPatologista extends BaseEntityId<AelApXPatologistaId> implements java.io.Serializable {

	private static final long serialVersionUID = 1541732118668472413L;
	
	private AelApXPatologistaId id;
	private AelAnatomoPatologico aelAnatomoPatologicos;
	private AelPatologista aelPatologista;
	private Date criadoEm;
	private RapServidores servidor;
	private Integer version;

	public AelApXPatologista() {
	}

	public AelApXPatologista(final AelApXPatologistaId id,
			final AelAnatomoPatologico aelAnatomoPatologicos,final AelPatologista aelPatologista, final Date criadoEm,
			final int serMatricula, final short serVinCodigo) {
		this.id = id;
		this.aelAnatomoPatologicos = aelAnatomoPatologicos;
		this.criadoEm = criadoEm;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "lumSeq", column = @Column(name = "LUM_SEQ", nullable = false, precision = 14, scale = 0)),
			@AttributeOverride(name = "luiSeq", column = @Column(name = "LUI_SEQ", nullable = false, precision = 5, scale = 0)) })
	public AelApXPatologistaId getId() {
		return this.id;
	}

	public void setId(final AelApXPatologistaId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LUM_SEQ", nullable = false, insertable = false, updatable = false)
	public AelAnatomoPatologico getAelAnatomoPatologicos() {
		return this.aelAnatomoPatologicos;
	}

	public void setAelAnatomoPatologicos(
			final AelAnatomoPatologico aelAnatomoPatologicos) {
		this.aelAnatomoPatologicos = aelAnatomoPatologicos;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LUI_SEQ", nullable = false, insertable = false, updatable = false)
	public AelPatologista getAelPatologista() {
		return this.aelPatologista;
	}

	public void setAelPatologista(
			final AelPatologista aelPatologista) {
		this.aelPatologista = aelPatologista;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(final Date criadoEm) {
		this.criadoEm = criadoEm;
	}


	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable=false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable=false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(final RapServidores servidor) {
		this.servidor = servidor;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return version;
	}

	public void setVersion(final Integer version) {
		this.version = version;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(final Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		final AelApXPatologista other = (AelApXPatologista) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}
	
	public enum Fields {

		ID("id"),
		LUM_SEQ("id.lumSeq"),
		LUI_SEQ("id.luiSeq"),
		AEL_ANATOMO_PATOLOGICOS("aelAnatomoPatologicos"),
		AEL_PATOLOGISTAS("aelPatologista"),
		CRIADO_EM("criadoEm"),
		SERVIDOR("servidor"),
		;

		private String fields;

		private Fields(final String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

}

package br.gov.mec.aghu.model;

// Generated 08/02/2010 17:25:25 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioCondicaoPaciente;
import br.gov.mec.aghu.dominio.DominioOrigemAtendimento;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AelPacUnidFuncionais generated by hbm2java
 */
@Entity
@Table(name = "AEL_PAC_UNID_FUNCIONAIS", schema = "AGH", uniqueConstraints = @UniqueConstraint(columnNames = {
		"ISE_SOE_SEQ", "ISE_SEQP" }))

public class AelPacUnidFuncionais extends BaseEntityId<AelPacUnidFuncionaisId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -3067033616899008664L;
		
	private AelPacUnidFuncionaisId id;
	private AelProtocoloInternoUnids aelProtocoloInternoUnids;
	private Date criadoEm;
	private RapServidores servidor;
	private Date dtExecucao;
	private String identificadorComplementar;
	private DominioCondicaoPaciente condicaoPac;
	private Integer nroFilme;
	private String observacao;
	
	private Integer version;
	
	private RapServidores servidorAlterado;
	
	private Date alteradoEm;
	private AelUnfExecutaExames unfExecutaExames;
	private AelEquipamentos equipamento;
	private AelItemSolicitacaoExames itemSolicitacaoExames;
	
	

	public AelPacUnidFuncionais() {
	}

	public AelPacUnidFuncionais(AelPacUnidFuncionaisId id,
			AelProtocoloInternoUnids aelProtocoloInternoUnids,
			String ufeEmaExaSigla, Integer ufeEmaManSeq, Short ufeUnfSeq,
			Date criadoEm, RapServidores servidor, AelUnfExecutaExames unfExecutaExames) {
		this.id = id;
		this.aelProtocoloInternoUnids = aelProtocoloInternoUnids;
		this.criadoEm = criadoEm;
		this.servidor = servidor;
		this.unfExecutaExames = unfExecutaExames;
	}

	public AelPacUnidFuncionais(AelPacUnidFuncionaisId id,
			AelProtocoloInternoUnids aelProtocoloInternoUnids,
			AelUnfExecutaExames unfExecutaExames,
			Date criadoEm, RapServidores servidor, AelItemSolicitacaoExames itemSolicitacaoExames,
			Date dtExecucao, String identificadorComplementar,
			DominioCondicaoPaciente condicaoPac, Integer nroFilme, String observacao,
			RapServidores servidorAlterado,
			Date alteradoEm, AelEquipamentos equipamento) {
		this.id = id;
		this.aelProtocoloInternoUnids = aelProtocoloInternoUnids;
		this.unfExecutaExames = unfExecutaExames;
		this.criadoEm = criadoEm;
		this.servidor = servidor;
		this.itemSolicitacaoExames = itemSolicitacaoExames;
		this.dtExecucao = dtExecucao;
		this.identificadorComplementar = identificadorComplementar;
		this.condicaoPac = condicaoPac;
		this.nroFilme = nroFilme;
		this.observacao = observacao;
		this.servidorAlterado = servidorAlterado;
		this.alteradoEm = alteradoEm;
		this.equipamento = equipamento;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "piuPacCodigo", column = @Column(name = "PIU_PAC_CODIGO", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "piuUnfSeq", column = @Column(name = "PIU_UNF_SEQ", nullable = false, precision = 4, scale = 0)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false, precision = 8, scale = 0)) })
	public AelPacUnidFuncionaisId getId() {
		return this.id;
	}

	public void setId(AelPacUnidFuncionaisId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "PIU_PAC_CODIGO", referencedColumnName = "PAC_CODIGO", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "PIU_UNF_SEQ", referencedColumnName = "UNF_SEQ", nullable = false, insertable = false, updatable = false) })
	public AelProtocoloInternoUnids getAelProtocoloInternoUnids() {
		return this.aelProtocoloInternoUnids;
	}

	public void setAelProtocoloInternoUnids(
			AelProtocoloInternoUnids aelProtocoloInternoUnids) {
		this.aelProtocoloInternoUnids = aelProtocoloInternoUnids;
	}
	

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	/*
	@Column(name = "SER_MATRICULA", nullable = false, precision = 7, scale = 0)
	public Integer getSerMatricula() {
		return this.serMatricula;
	}

	public void setSerMatricula(Integer serMatricula) {
		this.serMatricula = serMatricula;
	}

	@Column(name = "SER_VIN_CODIGO", nullable = false, precision = 3, scale = 0)
	public Short getSerVinCodigo() {
		return this.serVinCodigo;
	}

	public void setSerVinCodigo(Short serVinCodigo) {
		this.serVinCodigo = serVinCodigo;
	}
	*/
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_EXECUCAO", length = 7)
	public Date getDtExecucao() {
		return this.dtExecucao;
	}

	public void setDtExecucao(Date dtExecucao) {
		this.dtExecucao = dtExecucao;
	}

	@Column(name = "IDENTIFICADOR_COMPLEMENTAR", length = 3)
	@Length(max = 3)
	public String getIdentificadorComplementar() {
		return this.identificadorComplementar;
	}

	public void setIdentificadorComplementar(String identificadorComplementar) {
		this.identificadorComplementar = identificadorComplementar;
	}

	@Column(name = "CONDICAO_PAC", length = 2)
	@Enumerated(EnumType.STRING)
	public DominioCondicaoPaciente getCondicaoPac() {
		return this.condicaoPac;
	}

	public void setCondicaoPac(DominioCondicaoPaciente condicaoPac) {
		this.condicaoPac = condicaoPac;
	}

	@Column(name = "NRO_FILME", precision = 7, scale = 0)
	public Integer getNroFilme() {
		return this.nroFilme;
	}

	public void setNroFilme(Integer nroFilme) {
		this.nroFilme = nroFilme;
	}

	@Column(name = "OBSERVACAO", length = 240)
	@Length(max = 240)
	public String getObservacao() {
		return this.observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}

	/*
	@Column(name = "SER_MATRICULA_ALTERADO", precision = 7, scale = 0)
	public Integer getSerMatriculaAlterado() {
		return this.serMatriculaAlterado;
	}

	public void setSerMatriculaAlterado(Integer serMatriculaAlterado) {
		this.serMatriculaAlterado = serMatriculaAlterado;
	}

	@Column(name = "SER_VIN_CODIGO_ALTERADO", precision = 3, scale = 0)
	public Short getSerVinCodigoAlterado() {
		return this.serVinCodigoAlterado;
	}

	public void setSerVinCodigoAlterado(Short serVinCodigoAlterado) {
		this.serVinCodigoAlterado = serVinCodigoAlterado;
	}
	*/

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_ALTERADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_ALTERADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorAlterado() {
		return this.servidorAlterado;
	}

	public void setServidorAlterado(RapServidores servidorAlterado) {
		this.servidorAlterado = servidorAlterado;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 7)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

		
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "UFE_EMA_EXA_SIGLA", referencedColumnName = "EMA_EXA_SIGLA", nullable = false),
			@JoinColumn(name = "UFE_EMA_MAN_SEQ", referencedColumnName = "EMA_MAN_SEQ", nullable = false),
			@JoinColumn(name = "UFE_UNF_SEQ", referencedColumnName = "UNF_SEQ", nullable = false)})
	public AelUnfExecutaExames getUnfExecutaExames() {
		return unfExecutaExames;
	}

	public void setUnfExecutaExames(AelUnfExecutaExames unfExecutaExames) {
		this.unfExecutaExames = unfExecutaExames;
	}
	
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EQU_SEQ")
	public AelEquipamentos getEquipamento() {
		return equipamento;
	}

	public void setEquipamento(AelEquipamentos equipamento) {
		this.equipamento = equipamento;
	}
	
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "ISE_SOE_SEQ", referencedColumnName = "SOE_SEQ", nullable = true),
			@JoinColumn(name = "ISE_SEQP", referencedColumnName = "SEQP", nullable = true)})
	public AelItemSolicitacaoExames getItemSolicitacaoExames() {
		return itemSolicitacaoExames;
	}

	public void setItemSolicitacaoExames(
			AelItemSolicitacaoExames itemSolicitacaoExames) {
		this.itemSolicitacaoExames = itemSolicitacaoExames;
	}
	
	
	@Transient
	public String getDescricaoConvenio() {
		
		if(this.itemSolicitacaoExames != null 
				&& this.itemSolicitacaoExames.getSolicitacaoExame() != null
				&& this.itemSolicitacaoExames.getSolicitacaoExame().getConvenioSaude() != null) {
			
			return this.itemSolicitacaoExames
				.getSolicitacaoExame().getConvenioSaude().getDescricao();
		}
		return null;
	}
	
	
	@Transient
	public DominioOrigemAtendimento getOrigemAtendimento() {
		AghAtendimentos atendimento = null;
		AelAtendimentoDiversos atendimentoDiversos = null;
		
		if(this.itemSolicitacaoExames != null 
				&& this.itemSolicitacaoExames.getSolicitacaoExame() != null) {
			atendimento = this.itemSolicitacaoExames
				.getSolicitacaoExame().getAtendimento();
			atendimentoDiversos = this.itemSolicitacaoExames
				.getSolicitacaoExame().getAtendimentoDiverso();
		}
		
		
		if(atendimento != null){
			// Se o atendimento existir retorna: A origem do mesmo
			return atendimento.getOrigem();
		} else{ 
			// Se o atendimento NAO existir: Consulta em atendimento diversos
			if(atendimentoDiversos == null){
				// Se o atendimento diverso NAO existir: Retorna nulo
				return null;
			} else if(atendimentoDiversos.getAbsCandidatosDoadores() == null){
				// Se o atendimento diverso existir e NÃO existir cadastro: Retorna nulo
				return null;
			} else{
				// Para nenhuma das condicoes a origem do atendimento sera: Doacao de sangue
				return DominioOrigemAtendimento.D;
			}
		}
	}
	
	
	public enum Fields {
		PIU_PAC_CODIGO("id.piuPacCodigo"),//
		SEQUENCIA_UNIDADE_FUNCIONAL("id.unidadeFuncional.seq"),//
		UFE_EMA_EXA_SIGLA("unfExecutaExames.id.emaExaSigla"),//
		UFE_EMA_MAN_SEQ("unfExecutaExames.id.emaManSeq"),//
		UFE_UNF_SEQ("unfExecutaExames.id.unfSeq.seq"),//
		NRO_CONTROLE_EXAME_PACIENTE("id.seqp"),//
		EQUIPAMENTO_SEQ("equipamento.seq"),//
		UNF_EXECUTA_EXAMES("unfExecutaExames"),//
		EQUIPAMENTO("equipamento"),//
		ITEM_SOLICITACAO_EXAME("itemSolicitacaoExames"),//
		ISE_SOE_SEQ("itemSolicitacaoExames.id.soeSeq"),//
		ISE_SEQP("itemSolicitacaoExames.id.seqp"),//
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}	
	

	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AelPacUnidFuncionais)) {
			return false;
		}
		AelPacUnidFuncionais other = (AelPacUnidFuncionais) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

	
}

package br.gov.mec.aghu.model;

// Generated 02/02/2010 13:27:24 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * FcuAgrupamentoGccs generated by hbm2java
 */
@Entity
@SequenceGenerator(name="fcuAgcSq1", sequenceName="AGH.FCU_AGC_SQ1", allocationSize = 1)
@Table(name = "FCU_AGRUPAMENTO_GCCS", schema = "AGH")

public class FcuAgrupamentoGccs extends BaseEntitySeq<Short> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7676279123273183244L;
	private Short seq;
	private RapServidores servidor;
	private String descricao;
	private DominioSituacao situacao;
	private Date criadoEm;
	private Short ordem;
	private Set<FcuGrupoCentroCustos> gruposCentroCustos = new HashSet<FcuGrupoCentroCustos>(0);
	private Set<FcuGrupoCentroCustos> gruposCentroCustosCorrespondente = new HashSet<FcuGrupoCentroCustos>(0);

	public FcuAgrupamentoGccs() {
	}

	public FcuAgrupamentoGccs(Short seq, RapServidores servidor,
			String descricao) {
		this.seq = seq;
		this.servidor = servidor;
		this.descricao = descricao;
	}

	public FcuAgrupamentoGccs(Short seq, RapServidores servidor,
			String descricao, DominioSituacao situacao, Date criadoEm, Short ordem,
			Set<FcuGrupoCentroCustos> gruposCentroCustos,
			Set<FcuGrupoCentroCustos> gruposCentroCustosCorrespondente) {
		this.seq = seq;
		this.servidor = servidor;
		this.descricao = descricao;
		this.situacao = situacao;
		this.criadoEm = criadoEm;
		this.ordem = ordem;
		this.gruposCentroCustos = gruposCentroCustos;
		this.gruposCentroCustosCorrespondente = gruposCentroCustosCorrespondente;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "fcuAgcSq1")
	@Column(name = "SEQ", nullable = false, precision = 3, scale = 0)
	public Short getSeq() {
		return this.seq;
	}

	public void setSeq(Short seq) {
		this.seq = seq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 50)
	@Length(max = 50)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "SITUACAO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getSituacao() {
		return this.situacao;
	}

	public void setSituacao(DominioSituacao situacao) {
		this.situacao = situacao;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CRIADO_EM", length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "ORDEM", precision = 3, scale = 0)
	public Short getOrdem() {
		return this.ordem;
	}

	public void setOrdem(Short ordem) {
		this.ordem = ordem;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "agrupamentoGccs")
	public Set<FcuGrupoCentroCustos> getGruposCentroCustos() {
		return this.gruposCentroCustos;
	}

	public void setGruposCentroCustos(
			Set<FcuGrupoCentroCustos> gruposCentroCustos) {
		this.gruposCentroCustos = gruposCentroCustos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "agrupamentoGccsCorrespondente")
	public Set<FcuGrupoCentroCustos> getGruposCentroCustosCorrespondente() {
		return this.gruposCentroCustosCorrespondente;
	}

	public void setGruposCentroCustosCorrespondente(
			Set<FcuGrupoCentroCustos> gruposCentroCustosCorrespondente) {
		this.gruposCentroCustosCorrespondente = gruposCentroCustosCorrespondente;
	}
	
	public enum Fields {

		SEQ("seq"),
		SERVIDOR("servidor"),
		DESCRICAO("descricao"),
		SITUACAO("situacao"),
		CRIADO_EM("criadoEm"),
		ORDEM("ordem"),
		GRUPOS_CENTRO_CUSTOS("gruposCentroCustos"),
		GRUPOS_CENTRO_CUSTOS_CORRESPONDENTE("gruposCentroCustosCorrespondente");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof FcuAgrupamentoGccs)) {
			return false;
		}
		FcuAgrupamentoGccs other = (FcuAgrupamentoGccs) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

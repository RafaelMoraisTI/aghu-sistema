package br.gov.mec.aghu.model;

// Generated 11/08/2011 17:16:19 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioTipoImpressaoEtiquetas;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AelAmostraCtrlEtiquetas generated by hbm2java
 */
@Entity
@Table(name = "AEL_AMOSTRA_CTRL_ETIQUETAS", schema = "AGH")
public class AelAmostraCtrlEtiquetas extends BaseEntityId<AelAmostraCtrlEtiquetasId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 535377760658651606L;
	private AelAmostraCtrlEtiquetasId id;
	private DominioTipoImpressaoEtiquetas tipoImpressao;
	private Integer nroUnico;
	private Date dtNumeroUnico;
	private Date criadoEm;
	private String machine;
	private RapServidores rapServidor;
	private AelAmostras aelAmostras;

	public AelAmostraCtrlEtiquetas() {
	}

	public AelAmostraCtrlEtiquetas(AelAmostraCtrlEtiquetasId id,
			DominioTipoImpressaoEtiquetas tipoImpressao, Date criadoEm, RapServidores rapServidor) {
		this.id = id;
		this.tipoImpressao = tipoImpressao;
		this.criadoEm = criadoEm;
		this.rapServidor = rapServidor;
	}

	public AelAmostraCtrlEtiquetas(AelAmostraCtrlEtiquetasId id, DominioTipoImpressaoEtiquetas tipoImpressao, Integer nroUnico, Date dtNumeroUnico, Date criadoEm, String machine, RapServidores rapServidor) {
		this.id = id;
		this.tipoImpressao = tipoImpressao;
		this.nroUnico = nroUnico;
		this.dtNumeroUnico = dtNumeroUnico;
		this.criadoEm = criadoEm;
		this.machine = machine;
		this.rapServidor = rapServidor;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "amoSoeSeq", column = @Column(name = "AMO_SOE_SEQ", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "amoSeqp", column = @Column(name = "AMO_SEQP", nullable = false, precision = 3, scale = 0)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false, precision = 3, scale = 0)) })
	public AelAmostraCtrlEtiquetasId getId() {
		return this.id;
	}

	public void setId(AelAmostraCtrlEtiquetasId id) {
		this.id = id;
	}

	@Column(name = "TIPO_IMPRESSAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioTipoImpressaoEtiquetas getTipoImpressao() {
		return this.tipoImpressao;
	}

	public void setTipoImpressao(DominioTipoImpressaoEtiquetas tipoImpressao) {
		this.tipoImpressao = tipoImpressao;
	}

	@Column(name = "NRO_UNICO", precision = 6, scale = 0)
	public Integer getNroUnico() {
		return this.nroUnico;
	}

	public void setNroUnico(Integer nroUnico) {
		this.nroUnico = nroUnico;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DT_NUMERO_UNICO", length = 7)
	public Date getDtNumeroUnico() {
		return this.dtNumeroUnico;
	}

	public void setDtNumeroUnico(Date dtNumeroUnico) {
		this.dtNumeroUnico = dtNumeroUnico;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "MACHINE", length = 64)
	@Length(max = 64)
	public String getMachine() {
		return this.machine;
	}

	public void setMachine(String machine) {
		this.machine = machine;
	}

	@JoinColumns( {
		@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
		@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
		@ManyToOne(optional = false, fetch = FetchType.LAZY)
	public RapServidores getRapServidor() {
		return this.rapServidor;
	}

	public void setRapServidor(RapServidores rapServidor) {
		this.rapServidor = rapServidor;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
    @JoinColumns({
    @JoinColumn(name = "AMO_SOE_SEQ", referencedColumnName = "SOE_SEQ", nullable = false, insertable = false, updatable = false),
    @JoinColumn(name = "AMO_SEQP", referencedColumnName = "SEQP", nullable = false, insertable = false, updatable = false) })
    public AelAmostras getAelAmostras() {
		return aelAmostras;
	}
    
	public void setAelAmostras(AelAmostras aelAmostras) {
		this.aelAmostras = aelAmostras;
	}
	
	public enum Fields {
		ID("id"),
		AMO_SOE_SEQ("id.amoSoeSeq"),
		AMO_SEQP("id.amoSeqp"),
		SEQP("id.seqp"),
		TIPO_IMPRESSAO("tipoImpressao"),
		NRO_UNICO("nroUnico"),
		DT_NUMERO_UNICO("dtNumeroUnico"),
		CRIADO_EM("criadoEm"),
		MACHINE("machine"),
		SERVIDOR("rapServidor"),
		SERVIDOR_MATRICULA("rapServidor.id.matricula"),
		SERVIDOR_VIN_CONDIGO("rapServidor.id.vinCodigo");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AelAmostraCtrlEtiquetas)) {
			return false;
		}
		AelAmostraCtrlEtiquetas other = (AelAmostraCtrlEtiquetas) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

import java.io.Serializable;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AinMedicosAssistentes generated by hbm2java
 */
@Entity
@Table(name = "AIN_MEDICOS_ASSISTENTES", schema = "AGH")
public class AinMedicosAssistentes extends BaseEntityId<AinMedicosAssistentesId> implements Serializable {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 784068676500548529L;
	private AinMedicosAssistentesId id;
	private RapServidores rapServidor;
	private AghEspecialidades aghEspecialidade;
	
	
	public AinMedicosAssistentes() {
	}

	public AinMedicosAssistentes(AinMedicosAssistentesId id,
			RapServidores rapServidor, AghEspecialidades aghEspecialidade) {
		this.id = id;
		this.rapServidor = rapServidor;
		this.aghEspecialidade = aghEspecialidade;
	}
	
	/**
	 * Mapeamento para o id e seus atributos.<br/>
	 * OBS.: Os atributos do id foram mapeados para permitir o uso de join
	 * dentro de criterias e aplicar restrições.<br/>
	 * <b>Ex.:</b><br/>
	 * <code> 
	 * String strPesquisa = "AIP";<br/>
	 * <br/>
	 * Criteria criteria = session.createCriteria(AinMedicosAssistentes.class);
	 * Criteria criteriaEsp = criteria.createCriteria("aghEspecialidade");
	 * criteriaEsp.add(Restrictions.ilike("sigla", strPesquisa.toUpperCase(), MatchMode.ANYWHERE));
	 * </code>
	 */
	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "intSeq", column = @Column(name = "INT_SEQ", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "serMatricula", column = @Column(name = "SER_MATRICULA", nullable = false, precision = 7, scale = 0)),
			@AttributeOverride(name = "serVinCodigo", column = @Column(name = "SER_VIN_CODIGO", nullable = false, precision = 3, scale = 0))})
	public AinMedicosAssistentesId getId() {
		return this.id;
	}

	public void setId(AinMedicosAssistentesId id) {
		this.id = id;
	}
	
	/**
	 * Obs.: Campo com colunas mapeadas para updatable = false e insertable =
	 * false.
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", nullable = false, insertable = false, updatable = false) })
	public RapServidores getRapServidor() {
		return this.rapServidor;
	}

	public void setRapServidor(RapServidores rapServidor) {
		this.rapServidor = rapServidor;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ESP_SEQ", referencedColumnName = "SEQ", nullable = false, insertable = false, updatable = false)
	public AghEspecialidades getAghEspecialidade() {
		return this.aghEspecialidade;
	}

	public void setAghEspecialidade(AghEspecialidades aghEspecialidade) {
		this.aghEspecialidade = aghEspecialidade;
	}
	
	
	public enum Fields {
		ID("id"), 
		INT_SEQ("id.intSeq"),
		SER_MATRICULA("id.serMatricula"), 
		SER_VIN_CODIGO("id.serVinCodigo"), 
		RAP_SERVIDOR("rapServidor"),
		ESPECIALIDADE("aghEspecialidade");
		

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}



	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AinMedicosAssistentes)) {
			return false;
		}
		AinMedicosAssistentes other = (AinMedicosAssistentes) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

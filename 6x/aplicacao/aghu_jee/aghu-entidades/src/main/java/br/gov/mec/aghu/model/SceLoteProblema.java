package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * SceLoteProblema generated by hbm2java
 */
@Entity
@Table(name = "SCE_LOTE_PROBLEMAS", schema = "AGH")
public class SceLoteProblema extends BaseEntityId<SceLoteProblemaId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 21387516379570902L;
	private SceLoteProblemaId id;
	private Integer version;
	private ScoMaterial scoMaterial;
	private ScoMarcaComercial scoMarcaComercial;
	private String codigo;
	private Date dtGeracao;
	private String indBloqueio;
	private String descricao;

	public SceLoteProblema() {
	}

	public SceLoteProblema(SceLoteProblemaId id, ScoMaterial scoMaterial, String codigo, Date dtGeracao) {
		this.id = id;
		this.scoMaterial = scoMaterial;
		this.codigo = codigo;
		this.dtGeracao = dtGeracao;
	}

	public SceLoteProblema(SceLoteProblemaId id, ScoMaterial scoMaterial, ScoMarcaComercial scoMarcaComercial, String codigo,
			Date dtGeracao, String indBloqueio, String descricao) {
		this.id = id;
		this.scoMaterial = scoMaterial;
		this.scoMarcaComercial = scoMarcaComercial;
		this.codigo = codigo;
		this.dtGeracao = dtGeracao;
		this.indBloqueio = indBloqueio;
		this.descricao = descricao;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "matCodigo", column = @Column(name = "MAT_CODIGO", nullable = false)),
			@AttributeOverride(name = "numero", column = @Column(name = "NUMERO", nullable = false)) })
	public SceLoteProblemaId getId() {
		return this.id;
	}

	public void setId(SceLoteProblemaId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MAT_CODIGO", nullable = false, insertable = false, updatable = false)
	public ScoMaterial getScoMaterial() {
		return this.scoMaterial;
	}

	public void setScoMaterial(ScoMaterial scoMaterial) {
		this.scoMaterial = scoMaterial;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MCM_CODIGO")
	public ScoMarcaComercial getScoMarcaComercial() {
		return this.scoMarcaComercial;
	}

	public void setScoMarcaComercial(ScoMarcaComercial scoMarcaComercial) {
		this.scoMarcaComercial = scoMarcaComercial;
	}

	@Column(name = "CODIGO", nullable = false, length = 20)
	@Length(max = 20)
	public String getCodigo() {
		return this.codigo;
	}

	public void setCodigo(String codigo) {
		this.codigo = codigo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_GERACAO", nullable = false, length = 29)
	public Date getDtGeracao() {
		return this.dtGeracao;
	}

	public void setDtGeracao(Date dtGeracao) {
		this.dtGeracao = dtGeracao;
	}

	@Column(name = "IND_BLOQUEIO", length = 1)
	@Length(max = 1)
	public String getIndBloqueio() {
		return this.indBloqueio;
	}

	public void setIndBloqueio(String indBloqueio) {
		this.indBloqueio = indBloqueio;
	}

	@Column(name = "DESCRICAO", length = 240)
	@Length(max = 240)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		SCO_MATERIAL("scoMaterial"),
		SCO_MARCA_COMERCIAL("scoMarcaComercial"),
		CODIGO("codigo"),
		DT_GERACAO("dtGeracao"),
		IND_BLOQUEIO("indBloqueio"),
		DESCRICAO("descricao");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof SceLoteProblema)) {
			return false;
		}
		SceLoteProblema other = (SceLoteProblema) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

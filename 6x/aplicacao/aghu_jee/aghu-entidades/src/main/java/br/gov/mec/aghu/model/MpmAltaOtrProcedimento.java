package br.gov.mec.aghu.model;

// Generated 14/09/2010 17:49:55 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MpmAltaOtrProcedimentos generated by hbm2java
 */
@Entity
@Table(name = "MPM_ALTA_OTR_PROCEDIMENTOS", schema = "AGH")
public class MpmAltaOtrProcedimento extends BaseEntityId<MpmAltaOtrProcedimentoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4306128570823875926L;
	private MpmAltaOtrProcedimentoId id;
	private MpmAltaSumario mpmAltaSumarios;
	private MpmProcedEspecialDiversos mpmProcedEspecialDiversos;
	private String descOutProcedimento;
	private Date dthrOutProcedimento;
	private DominioSituacao indSituacao;
	private Boolean indCarga;
	private String complOutProcedimento;
	private MbcProcedimentoCirurgicos mbcProcedimentoCirurgicos;
	private ScoMaterial matCodigo;
	private Integer version;
	
	public MpmAltaOtrProcedimento() {
	}

	public MpmAltaOtrProcedimento(MpmAltaOtrProcedimentoId id,
			MpmAltaSumario mpmAltaSumarios, DominioSituacao indSituacao,
			Boolean indCarga) {
		this.id = id;
		this.mpmAltaSumarios = mpmAltaSumarios;
		this.indSituacao = indSituacao;
		this.indCarga = indCarga;
	}

	public MpmAltaOtrProcedimento(MpmAltaOtrProcedimentoId id,
			MpmAltaSumario mpmAltaSumarios,
			MpmProcedEspecialDiversos mpmProcedEspecialDiversos,
			String descOutProcedimento, Date dthrOutProcedimento,
			DominioSituacao indSituacao, Boolean indCarga,
			String complOutProcedimento,
			MbcProcedimentoCirurgicos mbcProcedimentoCirurgicos,
			ScoMaterial matCodigo) {
		this.id = id;
		this.mpmAltaSumarios = mpmAltaSumarios;
		this.mpmProcedEspecialDiversos = mpmProcedEspecialDiversos;
		this.descOutProcedimento = descOutProcedimento;
		this.dthrOutProcedimento = dthrOutProcedimento;
		this.indSituacao = indSituacao;
		this.indCarga = indCarga;
		this.complOutProcedimento = complOutProcedimento;
		this.mbcProcedimentoCirurgicos = mbcProcedimentoCirurgicos;
		this.matCodigo = matCodigo;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "asuApaAtdSeq", column = @Column(name = "ASU_APA_ATD_SEQ", nullable = false, precision = 7, scale = 0)),
			@AttributeOverride(name = "asuApaSeq", column = @Column(name = "ASU_APA_SEQ", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "asuSeqp", column = @Column(name = "ASU_SEQP", nullable = false, precision = 3, scale = 0)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false, precision = 3, scale = 0)) })
	public MpmAltaOtrProcedimentoId getId() {
		return this.id;
	}

	public void setId(MpmAltaOtrProcedimentoId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "ASU_APA_ATD_SEQ", referencedColumnName = "APA_ATD_SEQ", insertable = false, updatable = false),
			@JoinColumn(name = "ASU_APA_SEQ", referencedColumnName = "APA_SEQ", insertable = false, updatable = false),
			@JoinColumn(name = "ASU_SEQP", referencedColumnName = "SEQP", insertable = false, updatable = false) })
	public MpmAltaSumario getMpmAltaSumarios() {
		return this.mpmAltaSumarios;
	}

	public void setMpmAltaSumarios(MpmAltaSumario mpmAltaSumarios) {
		this.mpmAltaSumarios = mpmAltaSumarios;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PED_SEQ")
	public MpmProcedEspecialDiversos getMpmProcedEspecialDiversos() {
		return this.mpmProcedEspecialDiversos;
	}

	public void setMpmProcedEspecialDiversos(
			MpmProcedEspecialDiversos mpmProcedEspecialDiversos) {
		this.mpmProcedEspecialDiversos = mpmProcedEspecialDiversos;
	}

	@Column(name = "DESC_OUT_PROCEDIMENTO", length = 120)
	@Length(max = 120)
	public String getDescOutProcedimento() {
		return this.descOutProcedimento;
	}

	public void setDescOutProcedimento(String descOutProcedimento) {
		this.descOutProcedimento = descOutProcedimento;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_OUT_PROCEDIMENTO", length = 7)
	public Date getDthrOutProcedimento() {
		return this.dthrOutProcedimento;
	}

	public void setDthrOutProcedimento(Date dthrOutProcedimento) {
		this.dthrOutProcedimento = dthrOutProcedimento;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Column(name = "IND_CARGA", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndCarga() {
		return this.indCarga;
	}

	public void setIndCarga(Boolean indCarga) {
		this.indCarga = indCarga;
	}

	@Column(name = "COMPL_OUT_PROCEDIMENTO", length = 240)
	@Length(max = 240)
	public String getComplOutProcedimento() {
		return this.complOutProcedimento;
	}

	public void setComplOutProcedimento(String complOutProcedimento) {
		this.complOutProcedimento = complOutProcedimento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PCI_SEQ")
	public MbcProcedimentoCirurgicos getMbcProcedimentoCirurgicos() {
		return this.mbcProcedimentoCirurgicos;
	}

	public void setMbcProcedimentoCirurgicos(
			MbcProcedimentoCirurgicos mbcProcedimentoCirurgicos) {
		this.mbcProcedimentoCirurgicos = mbcProcedimentoCirurgicos;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MAT_CODIGO", nullable = true)
	public ScoMaterial getMatCodigo() {
		return this.matCodigo;
	}

	public void setMatCodigo(ScoMaterial matCodigo) {
		this.matCodigo = matCodigo;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Override
	public boolean equals(Object other) {
		if (this == other) {
			return true;
		}
		if (other == null) {
			return false;
		}
		if (!(other instanceof MpmAltaOtrProcedimento)) {
			return false;
		}
		MpmAltaOtrProcedimento castOther = (MpmAltaOtrProcedimento) other;

		return (this.getId() != null) && this.getId().equals(castOther.getId());
	}

	@Override
	public int hashCode() {
		int result = 17;

		result = 37 * result
				+ (this.getId() == null ? 0 : this.getId().hashCode());

		return result;
	}

	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void validacoes() {
		// Constraint MPM_OPC_CK4
		if (!(((this.mbcProcedimentoCirurgicos != null)
				&& (this.mpmProcedEspecialDiversos == null)
				&& (this.matCodigo == null))
				|| ((this.mbcProcedimentoCirurgicos == null)
				&& (this.mpmProcedEspecialDiversos != null)
				&& (this.matCodigo == null))
				|| ((this.mbcProcedimentoCirurgicos == null)
				&& (this.mpmProcedEspecialDiversos == null)
				&& (this.matCodigo != null)) || ((this.mbcProcedimentoCirurgicos == null)
				&& (this.mpmProcedEspecialDiversos == null)
				&& (this.matCodigo == null)))) {
			throw new BaseRuntimeException();
		}
	}

	public enum Fields {
		ID("id"), ALTA_SUMARIO("mpmAltaSumarios"), ASU_ATD_SEQ(
				"id.asuApaAtdSeq"), ASU_APA_SEQ("id.asuApaSeq"), ASU_SEQP(
				"id.asuSeqp"), MAT_CODIGO("matCodigo.codigo"), MAT_CODIGO_CODIGO(
				"matCodigo.codigo"), MAT_CODIGO_NOME("matCodigo.nome"), PCI(
				"mbcProcedimentoCirurgicos"), PCI_SEQ(
				"mbcProcedimentoCirurgicos.seq"), PED(
				"mpmProcedEspecialDiversos"), PED_SEQ(
				"mpmProcedEspecialDiversos.seq"), PCI_DESCRICAO(
				"mbcProcedimentoCirurgicos.descricao"), PED_DESCRICAO(
				"mpmProcedEspecialDiversos.descricao"), IND_SITUACAO(
				"indSituacao"), SEQP("id.seqp"),
				DTHR_OUT_PROCEDIMENTO("dthrOutProcedimento"),
				DESC_OUT_PROCEDIMENTO("descOutProcedimento"),
				COMPL_OUT_PROCEDIMENTO("complOutProcedimento");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

}
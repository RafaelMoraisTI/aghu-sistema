package br.gov.mec.aghu.model;

// Generated 03/05/2012 10:07:51 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;


import br.gov.mec.aghu.dominio.DominioSituacaoCirurgia;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MbcExtratoCirurgias generated by hbm2java
 */
@Entity
@Table(name = "MBC_EXTRATO_CIRURGIAS", schema = "AGH")
public class MbcExtratoCirurgia extends BaseEntityId<MbcExtratoCirurgiaId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8735770859356623373L;
	private MbcExtratoCirurgiaId id;
	private Integer version;
	private RapServidores servidor;
	private DominioSituacaoCirurgia situacaoCirg;
	private Date criadoEm;
	
	private MbcCirurgias cirurgia;
	
	//Transient
	private String descricaoMotivoCancelamentoEditado;

	public MbcExtratoCirurgia() {
	}

	public MbcExtratoCirurgia(MbcExtratoCirurgiaId id, Integer version,
			RapServidores servidor,
			DominioSituacaoCirurgia situacaoCirg, Date criadoEm,
			MbcCirurgias cirurgia) {
		super();
		this.id = id;
		this.version = version;
		this.servidor = servidor;
		this.situacaoCirg = situacaoCirg;
		this.criadoEm = criadoEm;
		this.cirurgia = cirurgia;
	}



	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "crgSeq", column = @Column(name = "CRG_SEQ", nullable = false)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false)) })
	public MbcExtratoCirurgiaId getId() {
		return this.id;
	}

	public void setId(MbcExtratoCirurgiaId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Column(name = "SITUACAO_CIRG", length = 4)
	@Enumerated(EnumType.STRING)
	public DominioSituacaoCirurgia getSituacaoCirg() {
		return this.situacaoCirg;
	}

	public void setSituacaoCirg(DominioSituacaoCirurgia situacaoCirg) {
		this.situacaoCirg = situacaoCirg;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
		@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
		@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO")})
	public RapServidores getServidor() {
		return servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CRG_SEQ", referencedColumnName = "SEQ", nullable = false, insertable=false, updatable=false)
	public MbcCirurgias getCirurgia() {
		return cirurgia;
	}

	public void setCirurgia(MbcCirurgias cirurgia) {
		this.cirurgia = cirurgia;
	}

	public enum Fields {

		ID("id"),
		SEQP("id.seqp"),
		SERVIDOR("servidor"),
		SERVIDOR_VINCULO("servidor.id.matricula"),
		SERVIDOR_MATRICULA("servidor.id.vinCodigo"),
		SITUACAO_CIRG("situacaoCirg"),
		CIRURGIA("cirurgia"),
		CIRURGIA_SEQ("id.crgSeq"),
		CRIADO_EM("criadoEm");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MbcExtratoCirurgia)) {
			return false;
		}
		MbcExtratoCirurgia other = (MbcExtratoCirurgia) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	
	// ##### GeradorEqualsHashCodeMain #####
	
	
	@Transient
	public String getDescricaoMotivoCancelamentoEditado() {
		return descricaoMotivoCancelamentoEditado;
	}

	public void setDescricaoMotivoCancelamentoEditado(
			String descricaoMotivoCancelamentoEditado) {
		this.descricaoMotivoCancelamentoEditado = descricaoMotivoCancelamentoEditado;
	}

	

}

package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MptPrescricaoProcedimento generated by hbm2java
 */
@Entity
@Table(name = "MPT_PRESCRICAO_PROCEDIMENTOS", schema = "AGH")
public class MptPrescricaoProcedimento extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 6781561042927175154L;
	private Integer seq;
	private Integer version;
	private MptPrescricaoProcedimento mptPrescricaoProcedimento;
	private RapServidores rapServidoresByMptPaoSerFk1;
	private RapServidores rapServidoresByMptPaoSerFk3;
	private ScoMaterial scoMaterial;
	private MptPrescricaoPaciente mptPrescricaoPaciente;
	private RapServidores rapServidoresByMptPaoSerFk2;
	private RapServidores rapServidoresByMptPaoSerFk4;
	private Date criadoEm;
	private Date alteradoEm;
	private String indSituacaoItem;
	private Date dthrIncValida;
	private Date dthrAltValida;
	private String justificativa;
	private Short quantidade;
	private String infComplementares;
	private String tipo;
	private Short duracaoTratSolicitado;
	private String indAltAndamento;
	private Short ordemImpressao;
	private Set<EceItemAdministrado> eceItemAdministradoes = new HashSet<EceItemAdministrado>(0);
	private Set<MptPrescricaoProcedimento> mptPrescricaoProcedimentoes = new HashSet<MptPrescricaoProcedimento>(0);
	
	// FIXME Implementar este relacionamento
//	private Set<FatItemContaHospitalar> fatItemContaHospitalars = new HashSet<FatItemContaHospitalar>(0);

	public MptPrescricaoProcedimento() {
	}

	public MptPrescricaoProcedimento(Integer seq, RapServidores rapServidoresByMptPaoSerFk1, ScoMaterial scoMaterial,
			MptPrescricaoPaciente mptPrescricaoPaciente, Date criadoEm, String indSituacaoItem) {
		this.seq = seq;
		this.rapServidoresByMptPaoSerFk1 = rapServidoresByMptPaoSerFk1;
		this.scoMaterial = scoMaterial;
		this.mptPrescricaoPaciente = mptPrescricaoPaciente;
		this.criadoEm = criadoEm;
		this.indSituacaoItem = indSituacaoItem;
	}

	public MptPrescricaoProcedimento(Integer seq, MptPrescricaoProcedimento mptPrescricaoProcedimento,
			RapServidores rapServidoresByMptPaoSerFk1, RapServidores rapServidoresByMptPaoSerFk3, ScoMaterial scoMaterial,
			MptPrescricaoPaciente mptPrescricaoPaciente, RapServidores rapServidoresByMptPaoSerFk2,
			RapServidores rapServidoresByMptPaoSerFk4, Date criadoEm, Date alteradoEm, String indSituacaoItem, Date dthrIncValida,
			Date dthrAltValida, String justificativa, Short quantidade, String infComplementares, String tipo,
			Short duracaoTratSolicitado, String indAltAndamento, Short ordemImpressao,
			Set<EceItemAdministrado> eceItemAdministradoes, Set<MptPrescricaoProcedimento> mptPrescricaoProcedimentoes
//			, Set<FatItemContaHospitalar> fatItemContaHospitalars
			) {
		this.seq = seq;
		this.mptPrescricaoProcedimento = mptPrescricaoProcedimento;
		this.rapServidoresByMptPaoSerFk1 = rapServidoresByMptPaoSerFk1;
		this.rapServidoresByMptPaoSerFk3 = rapServidoresByMptPaoSerFk3;
		this.scoMaterial = scoMaterial;
		this.mptPrescricaoPaciente = mptPrescricaoPaciente;
		this.rapServidoresByMptPaoSerFk2 = rapServidoresByMptPaoSerFk2;
		this.rapServidoresByMptPaoSerFk4 = rapServidoresByMptPaoSerFk4;
		this.criadoEm = criadoEm;
		this.alteradoEm = alteradoEm;
		this.indSituacaoItem = indSituacaoItem;
		this.dthrIncValida = dthrIncValida;
		this.dthrAltValida = dthrAltValida;
		this.justificativa = justificativa;
		this.quantidade = quantidade;
		this.infComplementares = infComplementares;
		this.tipo = tipo;
		this.duracaoTratSolicitado = duracaoTratSolicitado;
		this.indAltAndamento = indAltAndamento;
		this.ordemImpressao = ordemImpressao;
		this.eceItemAdministradoes = eceItemAdministradoes;
		this.mptPrescricaoProcedimentoes = mptPrescricaoProcedimentoes;
//		this.fatItemContaHospitalars = fatItemContaHospitalars;
	}

	@Id
	@Column(name = "SEQ", unique = true, nullable = false)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAO_SEQ")
	public MptPrescricaoProcedimento getMptPrescricaoProcedimento() {
		return this.mptPrescricaoProcedimento;
	}

	public void setMptPrescricaoProcedimento(MptPrescricaoProcedimento mptPrescricaoProcedimento) {
		this.mptPrescricaoProcedimento = mptPrescricaoProcedimento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByMptPaoSerFk1() {
		return this.rapServidoresByMptPaoSerFk1;
	}

	public void setRapServidoresByMptPaoSerFk1(RapServidores rapServidoresByMptPaoSerFk1) {
		this.rapServidoresByMptPaoSerFk1 = rapServidoresByMptPaoSerFk1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_ALTERA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_ALTERA", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMptPaoSerFk3() {
		return this.rapServidoresByMptPaoSerFk3;
	}

	public void setRapServidoresByMptPaoSerFk3(RapServidores rapServidoresByMptPaoSerFk3) {
		this.rapServidoresByMptPaoSerFk3 = rapServidoresByMptPaoSerFk3;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MAT_CODIGO", nullable = false)
	public ScoMaterial getScoMaterial() {
		return this.scoMaterial;
	}

	public void setScoMaterial(ScoMaterial scoMaterial) {
		this.scoMaterial = scoMaterial;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "PTE_ATD_SEQ", referencedColumnName = "ATD_SEQ", nullable = false),
			@JoinColumn(name = "PTE_SEQ", referencedColumnName = "SEQ", nullable = false) })
	public MptPrescricaoPaciente getMptPrescricaoPaciente() {
		return this.mptPrescricaoPaciente;
	}

	public void setMptPrescricaoPaciente(MptPrescricaoPaciente mptPrescricaoPaciente) {
		this.mptPrescricaoPaciente = mptPrescricaoPaciente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_INC_VALIDA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_INC_VALIDA", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMptPaoSerFk2() {
		return this.rapServidoresByMptPaoSerFk2;
	}

	public void setRapServidoresByMptPaoSerFk2(RapServidores rapServidoresByMptPaoSerFk2) {
		this.rapServidoresByMptPaoSerFk2 = rapServidoresByMptPaoSerFk2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_ALT_VALIDA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_ALT_VALIDA", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMptPaoSerFk4() {
		return this.rapServidoresByMptPaoSerFk4;
	}

	public void setRapServidoresByMptPaoSerFk4(RapServidores rapServidoresByMptPaoSerFk4) {
		this.rapServidoresByMptPaoSerFk4 = rapServidoresByMptPaoSerFk4;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 29)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@Column(name = "IND_SITUACAO_ITEM", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndSituacaoItem() {
		return this.indSituacaoItem;
	}

	public void setIndSituacaoItem(String indSituacaoItem) {
		this.indSituacaoItem = indSituacaoItem;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_INC_VALIDA", length = 29)
	public Date getDthrIncValida() {
		return this.dthrIncValida;
	}

	public void setDthrIncValida(Date dthrIncValida) {
		this.dthrIncValida = dthrIncValida;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_ALT_VALIDA", length = 29)
	public Date getDthrAltValida() {
		return this.dthrAltValida;
	}

	public void setDthrAltValida(Date dthrAltValida) {
		this.dthrAltValida = dthrAltValida;
	}

	@Column(name = "JUSTIFICATIVA", length = 240)
	@Length(max = 240)
	public String getJustificativa() {
		return this.justificativa;
	}

	public void setJustificativa(String justificativa) {
		this.justificativa = justificativa;
	}

	@Column(name = "QUANTIDADE")
	public Short getQuantidade() {
		return this.quantidade;
	}

	public void setQuantidade(Short quantidade) {
		this.quantidade = quantidade;
	}

	@Column(name = "INF_COMPLEMENTARES", length = 240)
	@Length(max = 240)
	public String getInfComplementares() {
		return this.infComplementares;
	}

	public void setInfComplementares(String infComplementares) {
		this.infComplementares = infComplementares;
	}

	@Column(name = "TIPO", length = 1)
	@Length(max = 1)
	public String getTipo() {
		return this.tipo;
	}

	public void setTipo(String tipo) {
		this.tipo = tipo;
	}

	@Column(name = "DURACAO_TRAT_SOLICITADO")
	public Short getDuracaoTratSolicitado() {
		return this.duracaoTratSolicitado;
	}

	public void setDuracaoTratSolicitado(Short duracaoTratSolicitado) {
		this.duracaoTratSolicitado = duracaoTratSolicitado;
	}

	@Column(name = "IND_ALT_ANDAMENTO", length = 1)
	@Length(max = 1)
	public String getIndAltAndamento() {
		return this.indAltAndamento;
	}

	public void setIndAltAndamento(String indAltAndamento) {
		this.indAltAndamento = indAltAndamento;
	}

	@Column(name = "ORDEM_IMPRESSAO")
	public Short getOrdemImpressao() {
		return this.ordemImpressao;
	}

	public void setOrdemImpressao(Short ordemImpressao) {
		this.ordemImpressao = ordemImpressao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mptPrescricaoProcedimento")
	public Set<EceItemAdministrado> getEceItemAdministradoes() {
		return this.eceItemAdministradoes;
	}

	public void setEceItemAdministradoes(Set<EceItemAdministrado> eceItemAdministradoes) {
		this.eceItemAdministradoes = eceItemAdministradoes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mptPrescricaoProcedimento")
	public Set<MptPrescricaoProcedimento> getMptPrescricaoProcedimentoes() {
		return this.mptPrescricaoProcedimentoes;
	}

	public void setMptPrescricaoProcedimentoes(Set<MptPrescricaoProcedimento> mptPrescricaoProcedimentoes) {
		this.mptPrescricaoProcedimentoes = mptPrescricaoProcedimentoes;
	}

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mptPrescricaoProcedimento")
//	public Set<FatItemContaHospitalar> getFatItemContaHospitalars() {
//		return this.fatItemContaHospitalars;
//	}
//
//	public void setFatItemContaHospitalars(Set<FatItemContaHospitalar> fatItemContaHospitalars) {
//		this.fatItemContaHospitalars = fatItemContaHospitalars;
//	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		MPT_PRESCRICAO_PROCEDIMENTOS("mptPrescricaoProcedimento"),
		RAP_SERVIDORES_BY_MPT_PAO_SER_FK1("rapServidoresByMptPaoSerFk1"),
		RAP_SERVIDORES_BY_MPT_PAO_SER_FK3("rapServidoresByMptPaoSerFk3"),
		SCO_MATERIAL("scoMaterial"),
		SCO_MATERIAL_CODIGO("scoMaterial.codigo"),
		MPT_PRESCRICAO_PACIENTE("mptPrescricaoPaciente"),
		MPT_PRESCRICAO_PACIENTE_PTE_ATD_SEQ("mptPrescricaoPaciente.id.atdSeq"),
		MPT_PRESCRICAO_PACIENTE_PTE_SEQ("mptPrescricaoPaciente.id.seq"),
		RAP_SERVIDORES_BY_MPT_PAO_SER_FK2("rapServidoresByMptPaoSerFk2"),
		RAP_SERVIDORES_BY_MPT_PAO_SER_FK4("rapServidoresByMptPaoSerFk4"),
		CRIADO_EM("criadoEm"),
		ALTERADO_EM("alteradoEm"),
		IND_SITUACAO_ITEM("indSituacaoItem"),
		DTHR_INC_VALIDA("dthrIncValida"),
		DTHR_ALT_VALIDA("dthrAltValida"),
		JUSTIFICATIVA("justificativa"),
		QUANTIDADE("quantidade"),
		INF_COMPLEMENTARES("infComplementares"),
		TIPO("tipo"),
		DURACAO_TRAT_SOLICITADO("duracaoTratSolicitado"),
		IND_ALT_ANDAMENTO("indAltAndamento"),
		ORDEM_IMPRESSAO("ordemImpressao"),
		ECE_ITEM_ADMINISTRADOES("eceItemAdministradoes"),
		MPT_PRESCRICAO_PROCEDIMENTOES("mptPrescricaoProcedimentoes"),
//		FAT_ITEM_CONTA_HOSPITALARS("fatItemContaHospitalars")
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MptPrescricaoProcedimento)) {
			return false;
		}
		MptPrescricaoProcedimento other = (MptPrescricaoProcedimento) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * FsoPlanilhaOrcamento generated by hbm2java
 */
@Entity
@Table(name = "FSO_PLANILHA_ORCAMENTO", schema = "AGH")
public class FsoPlanilhaOrcamento extends BaseEntityId<FsoPlanilhaOrcamentoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -6377505133299352942L;
	private FsoPlanilhaOrcamentoId id;
	private CtbTipoFluxo ctbTipoFluxo;

	public FsoPlanilhaOrcamento() {
	}

	public FsoPlanilhaOrcamento(FsoPlanilhaOrcamentoId id) {
		this.id = id;
	}

	public FsoPlanilhaOrcamento(FsoPlanilhaOrcamentoId id, CtbTipoFluxo ctbTipoFluxo) {
		this.id = id;
		this.ctbTipoFluxo = ctbTipoFluxo;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "dtCompetencia", column = @Column(name = "DT_COMPETENCIA", nullable = false, length = 29)),
			@AttributeOverride(name = "ntpGnpTabCodigo", column = @Column(name = "NTP_GNP_TAB_CODIGO", nullable = false)),
			@AttributeOverride(name = "ntpGnpCodigo", column = @Column(name = "NTP_GNP_CODIGO", nullable = false)),
			@AttributeOverride(name = "ntpCodigo", column = @Column(name = "NTP_CODIGO", nullable = false)),
			@AttributeOverride(name = "ntpSubCodigo", column = @Column(name = "NTP_SUB_CODIGO", nullable = false)),
			@AttributeOverride(name = "fonteRecurso", column = @Column(name = "FONTE_RECURSO", nullable = false)),
			@AttributeOverride(name = "projInst", column = @Column(name = "PROJ_INST", nullable = false)),
			@AttributeOverride(name = "realizado", column = @Column(name = "REALIZADO", precision = 17, scale = 17)),
			@AttributeOverride(name = "orcado", column = @Column(name = "ORCADO", precision = 17, scale = 17)),
			@AttributeOverride(name = "alteracao", column = @Column(name = "ALTERACAO", precision = 17, scale = 17)),
			@AttributeOverride(name = "saldo", column = @Column(name = "SALDO", precision = 17, scale = 17)),
			@AttributeOverride(name = "acumulado", column = @Column(name = "ACUMULADO", precision = 17, scale = 17)),
			@AttributeOverride(name = "tfxCodigo", column = @Column(name = "TFX_CODIGO")),
			@AttributeOverride(name = "orcadoAcumulado", column = @Column(name = "ORCADO_ACUMULADO", precision = 17, scale = 17)),
			@AttributeOverride(name = "avaliador", column = @Column(name = "AVALIADOR")),
			@AttributeOverride(name = "metaVpa", column = @Column(name = "META_VPA", precision = 17, scale = 17)),
			@AttributeOverride(name = "vincAvaliador", column = @Column(name = "VINC_AVALIADOR")),
			@AttributeOverride(name = "version", column = @Column(name = "VERSION", nullable = false)) })
	public FsoPlanilhaOrcamentoId getId() {
		return this.id;
	}

	public void setId(FsoPlanilhaOrcamentoId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TFX_CODIGO", insertable = false, updatable = false)
	public CtbTipoFluxo getCtbTipoFluxo() {
		return this.ctbTipoFluxo;
	}

	public void setCtbTipoFluxo(CtbTipoFluxo ctbTipoFluxo) {
		this.ctbTipoFluxo = ctbTipoFluxo;
	}

	public enum Fields {

		ID("id"),
		CTB_TIPO_FLUXOS("ctbTipoFluxo");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof FsoPlanilhaOrcamento)) {
			return false;
		}
		FsoPlanilhaOrcamento other = (FsoPlanilhaOrcamento) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

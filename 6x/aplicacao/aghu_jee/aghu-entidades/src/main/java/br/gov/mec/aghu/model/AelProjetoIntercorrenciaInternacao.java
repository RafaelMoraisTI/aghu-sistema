package br.gov.mec.aghu.model;

// Generated 22/06/2010 18:06:02 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AelProjetoIntercInternacs generated by hbm2java
 */
@Entity
@Table(name = "AEL_PROJETO_INTERC_INTERNACS", schema = "AGH")

public class AelProjetoIntercorrenciaInternacao extends BaseEntityId<AelProjetoIntercorrenciaInternacaoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2293297240021006829L;
	private AelProjetoIntercorrenciaInternacaoId id;
	private AelProjetoPacientes projetoPaciente;
	private RapServidores servidor;
	private AinInternacao internacao;
	private String justificativa;
	private Date criadoEm;
	private Boolean efetivado;

	public AelProjetoIntercorrenciaInternacao() {
	}

	public AelProjetoIntercorrenciaInternacao(AelProjetoIntercorrenciaInternacaoId id,
			AelProjetoPacientes projetoPaciente, RapServidores servidor,
			String justificativa, Date criadoEm, Boolean efetivado) {
		this.id = id;
		this.projetoPaciente = projetoPaciente;
		this.servidor = servidor;
		this.justificativa = justificativa;
		this.criadoEm = criadoEm;
		this.efetivado = efetivado;
	}

	public AelProjetoIntercorrenciaInternacao(AelProjetoIntercorrenciaInternacaoId id,
			AelProjetoPacientes projetoPaciente, RapServidores servidor,
			AinInternacao internacao, String justificativa, Date criadoEm,
			Boolean efetivado) {
		this.id = id;
		this.projetoPaciente = projetoPaciente;
		this.servidor = servidor;
		this.internacao = internacao;
		this.justificativa = justificativa;
		this.criadoEm = criadoEm;
		this.efetivado = efetivado;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "ppjPjqSeq", column = @Column(name = "PPJ_PJQ_SEQ", nullable = false, precision = 7, scale = 0)),
			@AttributeOverride(name = "ppjPacCodigo", column = @Column(name = "PPJ_PAC_CODIGO", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false, precision = 3, scale = 0)) })
	public AelProjetoIntercorrenciaInternacaoId getId() {
		return this.id;
	}

	public void setId(AelProjetoIntercorrenciaInternacaoId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "PPJ_PJQ_SEQ", referencedColumnName = "PJQ_SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "PPJ_PAC_CODIGO", referencedColumnName = "PAC_CODIGO", nullable = false, insertable = false, updatable = false) })
	public AelProjetoPacientes getProjetoPaciente() {
		return this.projetoPaciente;
	}

	public void setProjetoPaciente(AelProjetoPacientes projetoPaciente) {
		this.projetoPaciente = projetoPaciente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "INT_SEQ")
	public AinInternacao getInternacao() {
		return this.internacao;
	}

	public void setInternacao(AinInternacao internacao) {
		this.internacao = internacao;
	}

	@Column(name = "JUSTIFICATIVA", nullable = false, length = 4000)
	@Length(max = 4000)
	public String getJustificativa() {
		return this.justificativa;
	}

	public void setJustificativa(String justificativa) {
		this.justificativa = justificativa;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "EFETIVADO", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getEfetivado() {
		return this.efetivado;
	}

	public void setEfetivado(Boolean efetivado) {
		this.efetivado = efetivado;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		AelProjetoIntercorrenciaInternacao other = (AelProjetoIntercorrenciaInternacao) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}

	public enum Fields {
		ID_PPJPJQSEQ("id.ppjPjqSeq"), ID_PPJPACCODIGO("id.ppjPacCodigo"), ID_SEQP(
				"id.seqp");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

}

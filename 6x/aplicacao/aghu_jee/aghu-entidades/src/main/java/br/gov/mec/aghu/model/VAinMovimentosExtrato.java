package br.gov.mec.aghu.model;

// Generated 17/05/2010 15:01:02 by Hibernate Tools 3.3.0.GA

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.Table;

import org.hibernate.annotations.Immutable;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * VAinMovimentosExtrato generated by hbm2java
 */
@Entity
@Table(name = "V_AIN_MOVIMENTOS_EXTRATO_AGHU", schema = "AGH")
@Immutable
public class VAinMovimentosExtrato extends BaseEntityId<VAinMovimentosExtratoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5063328905401066741L;
	private VAinMovimentosExtratoId id;
	
	//private AinTiposMvtoInternacao tiposMvtoInternacao;
	//private AghEspecialidades especialidade;
	//private AghUnidadesFuncionais unidadeFuncional;
	//private AinInternacao internacao;
	//private RapServidores servidorResponsavel;
	
	public VAinMovimentosExtrato() {
	}

	public VAinMovimentosExtrato(VAinMovimentosExtratoId id) {
		this.id = id;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "ordem", column = @Column(name = "ORDEM", precision = 22, scale = 0)),
			@AttributeOverride(name = "intSeq", column = @Column(name = "INT_SEQ", precision = 8, scale = 0)),
			@AttributeOverride(name = "dthrLancamento", column = @Column(name = "DTHR_LANCAMENTO", length = 7)),
			@AttributeOverride(name = "tmiSeq", column = @Column(name = "TMI_SEQ", precision = 2, scale = 0)),
			@AttributeOverride(name = "espSeq", column = @Column(name = "ESP_SEQ", precision = 22, scale = 0)),
			@AttributeOverride(name = "ltoLtoId", column = @Column(name = "LTO_LTO_ID", length = 14)),
			@AttributeOverride(name = "qrtNumero", column = @Column(name = "QRT_NUMERO", precision = 4, scale = 0)),
			@AttributeOverride(name = "qrtDescricao", column = @Column(name = "QRT_DESCRICAO", precision = 4, scale = 0)),
			@AttributeOverride(name = "unfSeq", column = @Column(name = "UNF_SEQ", precision = 4, scale = 0)),
			@AttributeOverride(name = "criadoEm", column = @Column(name = "CRIADO_EM", length = 7)),
			@AttributeOverride(name = "serVinCodigo", column = @Column(name = "SER_VIN_CODIGO", precision = 22, scale = 0)),
			@AttributeOverride(name = "serMatricula", column = @Column(name = "SER_MATRICULA", precision = 22, scale = 0)),
			@AttributeOverride(name = "serMatriculaGerado", column = @Column(name = "SER_MATRICULA_GERADO", precision = 7, scale = 0)),
			@AttributeOverride(name = "serVinCodigoGerado", column = @Column(name = "SER_VIN_CODIGO_GERADO", precision = 3, scale = 0)) })
	public VAinMovimentosExtratoId getId() {
		return this.id;
	}

	public void setId(VAinMovimentosExtratoId id) {
		this.id = id;
	}
	
/*	public void setTiposMvtoInternacao(AinTiposMvtoInternacao tiposMvtoInternacao) {
		this.tiposMvtoInternacao = tiposMvtoInternacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TMI_SEQ", nullable = false)
	public AinTiposMvtoInternacao getTiposMvtoInternacao() {
		return tiposMvtoInternacao;
	}*/

	/*public void setEspecialidade(AghEspecialidades especialidade) {
		this.especialidade = especialidade;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ESP_SEQ", nullable = false)
	public AghEspecialidades getEspecialidade() {
		return especialidade;
	}*/

/*	public void setUnidadeFuncional(AghUnidadesFuncionais unidadeFuncional) {
		this.unidadeFuncional = unidadeFuncional;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ", nullable = false)
	public AghUnidadesFuncionais getUnidadeFuncional() {
		return unidadeFuncional;
	}

	public void setInternacao(AinInternacao internacao) {
		this.internacao = internacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "INT_SEQ", nullable = false)
	public AinInternacao getInternacao() {
		return internacao;
	}	*/
	

	/*public void setServidorResponsavel(RapServidores servidorResponsavel) {
		this.servidorResponsavel = servidorResponsavel;
	}
	@JoinColumns( {
		@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA" , nullable = false),
		@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO" , nullable = false) })
	@ManyToOne(fetch = FetchType.LAZY)
	public RapServidores getServidorResponsavel() {
		return servidorResponsavel;
	}*/



	public enum Fields {

		ORDEM("id.ordem"),
		INT_SEQ("id.intSeq"),
		/*INTERNACAO("internacao"),
		PACIENTE("internacao.paciente"),
		DATAINTERNACAO("internacao.dthrInternacao"),*/
		/*
		 NOME_SERVIDOR("pessoaFisica.nome"),
		 SERVIDOR_RESPONSAVEL("servidorResponsavel"),
		 ESPECIALIDADE("especialidade"),
		 */
		
		DTHR_LANCAMENTO("id.dthrLancamento"),
		TMI_SEQ("id.tmiSeq"),
		QRT_DESCRICAO("id.qrtDescricao"),
		ESP_SEQ("id.espSeq"),
		LTO_LTO_ID("id.ltoLtoId"),
		QRT_NUMERO("id.qrtNumero"),
		UNF_SEQ("id.unfSeq"),
		CRIADO_EM("id.criadoEm"),
		SER_VIN_CODIGO("id.serVinCodigo"),
		SER_MATRICULA("id.serMatricula"),
		SER_MATRICULA_GERADO("id.serMatriculaGerado"),
		SER_VIN_CODIGO_GERADO("id.serVinCodigoGerado");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}
		@Override
		public String toString() {
			return fields;
		}
	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof VAinMovimentosExtrato)) {
			return false;
		}
		VAinMovimentosExtrato other = (VAinMovimentosExtrato) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

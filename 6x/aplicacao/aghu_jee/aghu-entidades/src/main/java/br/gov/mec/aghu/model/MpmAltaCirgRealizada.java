package br.gov.mec.aghu.model;

// Generated 14/09/2010 17:49:55 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MpmAltaCirgRealizadas generated by hbm2java
 */
@Entity
@Table(name = "MPM_ALTA_CIRG_REALIZADAS", schema = "AGH")
public class MpmAltaCirgRealizada extends BaseEntityId<MpmAltaCirgRealizadaId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7381744878245708965L;
	private MpmAltaCirgRealizadaId id;
	private MpmAltaSumario altaSumario;
	private String descCirurgia;
	private Date dthrCirurgia;
	private DominioSituacao indSituacao;
	private Boolean indCarga;
	private MbcProcedimentoCirurgicos procedimentoCirurgico;
	private MbcProcEspPorCirurgias procedimentoEspCirurgia;
	private Integer version;

	public MpmAltaCirgRealizada() {
	}

	public MpmAltaCirgRealizada(MpmAltaCirgRealizadaId id,
			MpmAltaSumario mpmAltaSumarios, String descCirurgia,
			Date dthrCirurgia, DominioSituacao indSituacao, Boolean indCarga,
			MbcProcedimentoCirurgicos procedimentoCirurgico) {
		this.id = id;
		this.altaSumario = mpmAltaSumarios;
		this.descCirurgia = descCirurgia;
		this.dthrCirurgia = dthrCirurgia;
		this.indSituacao = indSituacao;
		this.indCarga = indCarga;
		this.procedimentoCirurgico = procedimentoCirurgico;
	}

	public MpmAltaCirgRealizada(MpmAltaCirgRealizadaId id,
			MpmAltaSumario mpmAltaSumarios, String descCirurgia,
			Date dthrCirurgia, DominioSituacao indSituacao, Boolean indCarga,
			MbcProcedimentoCirurgicos procedimentoCirurgico,
			MbcProcEspPorCirurgias procedimentoEspCirurgia) {
		this.id = id;
		this.altaSumario = mpmAltaSumarios;
		this.descCirurgia = descCirurgia;
		this.dthrCirurgia = dthrCirurgia;
		this.indSituacao = indSituacao;
		this.indCarga = indCarga;
		this.procedimentoCirurgico = procedimentoCirurgico;
		this.procedimentoEspCirurgia = procedimentoEspCirurgia;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "asuApaAtdSeq", column = @Column(name = "ASU_APA_ATD_SEQ", nullable = false, precision = 7, scale = 0)),
			@AttributeOverride(name = "asuApaSeq", column = @Column(name = "ASU_APA_SEQ", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "asuSeqp", column = @Column(name = "ASU_SEQP", nullable = false, precision = 3, scale = 0)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false, precision = 3, scale = 0)) })
	public MpmAltaCirgRealizadaId getId() {
		return this.id;
	}

	public void setId(MpmAltaCirgRealizadaId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "ASU_APA_ATD_SEQ", referencedColumnName = "APA_ATD_SEQ", insertable = false, updatable = false),
			@JoinColumn(name = "ASU_APA_SEQ", referencedColumnName = "APA_SEQ", insertable = false, updatable = false),
			@JoinColumn(name = "ASU_SEQP", referencedColumnName = "SEQP", insertable = false, updatable = false) })
	public MpmAltaSumario getAltaSumario() {
		return this.altaSumario;
	}

	public void setAltaSumario(MpmAltaSumario mpmAltaSumarios) {
		this.altaSumario = mpmAltaSumarios;
	}

	@Column(name = "DESC_CIRURGIA", nullable = false, length = 120)
	@Length(max = 120)
	public String getDescCirurgia() {
		return this.descCirurgia;
	}

	public void setDescCirurgia(String descCirurgia) {
		this.descCirurgia = descCirurgia;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_CIRURGIA", nullable = false, length = 7)
	public Date getDthrCirurgia() {
		return this.dthrCirurgia;
	}

	public void setDthrCirurgia(Date dthrCirurgia) {
		this.dthrCirurgia = dthrCirurgia;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Column(name = "IND_CARGA", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndCarga() {
		return this.indCarga;
	}

	public void setIndCarga(Boolean indCarga) {
		this.indCarga = indCarga;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PCI_SEQ", referencedColumnName = "SEQ", nullable = false)
	public MbcProcedimentoCirurgicos getProcedimentoCirurgico() {
		return this.procedimentoCirurgico;
	}

	public void setProcedimentoCirurgico(
			MbcProcedimentoCirurgicos procedimentoCirurgico) {
		this.procedimentoCirurgico = procedimentoCirurgico;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "PPC_CRG_SEQ", referencedColumnName = "CRG_SEQ"),
			@JoinColumn(name = "PPC_EPR_PCI_SEQ", referencedColumnName = "EPR_PCI_SEQ"),
			@JoinColumn(name = "PPC_EPR_ESP_SEQ", referencedColumnName = "EPR_ESP_SEQ"),
			@JoinColumn(name = "PPC_IND_RESP_PROC", referencedColumnName = "IND_RESP_PROC") })
	public MbcProcEspPorCirurgias getProcedimentoEspCirurgia() {
		return this.procedimentoEspCirurgia;
	}

	public void setProcedimentoEspCirurgia(
			MbcProcEspPorCirurgias procedimentoEspCirurgia) {
		this.procedimentoEspCirurgia = procedimentoEspCirurgia;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + (this.id == null ? 0 : this.id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MpmAltaCirgRealizada)) {
			return false;
		}
		MpmAltaCirgRealizada other = (MpmAltaCirgRealizada) obj;
		return (this.getId() != null && this.getId().equals(other.getId()));
	}

	public enum Fields {
		ALTASUMARIO("altaSumario"), ASU_APA_ATD_SEQ("id.asuApaAtdSeq"), ASU_APA_SEQ(
				"id.asuApaSeq"), ASU_SEQP("id.asuSeqp"), DTHR_CIRURGIA(
				"dthrCirurgia"), PROC_ESP_CIR("procedimentoEspCirurgia"), IND_CARGA(
				"indCarga"), IND_SITUACAO("indSituacao"), SEQP("id.seqp"),
				DESCRICAO("descCirurgia"), PROCEDIMENTO_ESP("procedimentoEspCirurgia");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}
}

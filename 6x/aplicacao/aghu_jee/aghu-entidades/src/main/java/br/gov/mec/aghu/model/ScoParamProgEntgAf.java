package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioIndFrequenciaEntrega;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * ScoParamProgEntgAf generated by hbm2java
 */
@Entity
@Table(name = "SCO_PARAM_PROG_ENTG_AF", schema = "AGH")
public class ScoParamProgEntgAf extends BaseEntityId<ScoParamProgEntgAfId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8160278678326763561L;
	private ScoParamProgEntgAfId id;
	private Integer version;
	private ScoSolicitacaoDeCompra scoSolicitacaoDeCompra;
	private ScoItemAutorizacaoForn scoItemAutorizacaoForn;
	private Integer matCodigo;
	private Integer qtdeTotalItem;
	private Integer qtdeParcela;
	private String umdCodigo;
	private DominioIndFrequenciaEntrega indFreqEntrega;
	private Short diaEntrega;
	private Short freqDias;
	private Short nroParcelas;
	private Date dtInicioEntrega;
	private String observacao;

	public ScoParamProgEntgAf() {
	}

	public ScoParamProgEntgAf(ScoParamProgEntgAfId id, ScoSolicitacaoDeCompra scoSolicitacaoDeCompra) {
		this.id = id;
		this.scoSolicitacaoDeCompra = scoSolicitacaoDeCompra;
	}

	public ScoParamProgEntgAf(ScoParamProgEntgAfId id, ScoSolicitacaoDeCompra scoSolicitacaoDeCompra,
			ScoItemAutorizacaoForn scoItemAutorizacaoForn, Integer matCodigo, Integer qtdeTotalItem, Integer qtdeParcela,
			String umdCodigo, DominioIndFrequenciaEntrega indFreqEntrega, Short diaEntrega, Short freqDias, Short nroParcelas, Date dtInicioEntrega,
			String observacao) {
		this.id = id;
		this.scoSolicitacaoDeCompra = scoSolicitacaoDeCompra;
		this.scoItemAutorizacaoForn = scoItemAutorizacaoForn;
		this.matCodigo = matCodigo;
		this.qtdeTotalItem = qtdeTotalItem;
		this.qtdeParcela = qtdeParcela;
		this.umdCodigo = umdCodigo;
		this.indFreqEntrega = indFreqEntrega;
		this.diaEntrega = diaEntrega;
		this.freqDias = freqDias;
		this.nroParcelas = nroParcelas;
		this.dtInicioEntrega = dtInicioEntrega;
		this.observacao = observacao;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "slcNumero", column = @Column(name = "SLC_NUMERO", nullable = false)),
			@AttributeOverride(name = "seq", column = @Column(name = "SEQ", nullable = false)) })
	public ScoParamProgEntgAfId getId() {
		return this.id;
	}

	public void setId(ScoParamProgEntgAfId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SLC_NUMERO", nullable = false, insertable = false, updatable = false)
	public ScoSolicitacaoDeCompra getScoSolicitacaoDeCompra() {
		return this.scoSolicitacaoDeCompra;
	}

	public void setScoSolicitacaoDeCompra(ScoSolicitacaoDeCompra scoSolicitacaoDeCompra) {
		this.scoSolicitacaoDeCompra = scoSolicitacaoDeCompra;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "IAF_AFN_NUMERO", referencedColumnName = "AFN_NUMERO"),
			@JoinColumn(name = "IAF_NUMERO", referencedColumnName = "NUMERO") })
	public ScoItemAutorizacaoForn getScoItemAutorizacaoForn() {
		return this.scoItemAutorizacaoForn;
	}

	public void setScoItemAutorizacaoForn(ScoItemAutorizacaoForn scoItemAutorizacaoForn) {
		this.scoItemAutorizacaoForn = scoItemAutorizacaoForn;
	}

	@Column(name = "MAT_CODIGO")
	public Integer getMatCodigo() {
		return this.matCodigo;
	}

	public void setMatCodigo(Integer matCodigo) {
		this.matCodigo = matCodigo;
	}

	@Column(name = "QTDE_TOTAL_ITEM")
	public Integer getQtdeTotalItem() {
		return this.qtdeTotalItem;
	}

	public void setQtdeTotalItem(Integer qtdeTotalItem) {
		this.qtdeTotalItem = qtdeTotalItem;
	}

	@Column(name = "QTDE_PARCELA")
	public Integer getQtdeParcela() {
		return this.qtdeParcela;
	}

	public void setQtdeParcela(Integer qtdeParcela) {
		this.qtdeParcela = qtdeParcela;
	}

	@Column(name = "UMD_CODIGO", length = 3)
	@Length(max = 3)
	public String getUmdCodigo() {
		return this.umdCodigo;
	}

	public void setUmdCodigo(String umdCodigo) {
		this.umdCodigo = umdCodigo;
	}

	@Column(name = "IND_FREQ_ENTREGA", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioIndFrequenciaEntrega getIndFreqEntrega() {
		return this.indFreqEntrega;
	}

	public void setIndFreqEntrega(DominioIndFrequenciaEntrega indFreqEntrega) {
		this.indFreqEntrega = indFreqEntrega;
	}

	@Column(name = "DIA_ENTREGA")
	public Short getDiaEntrega() {
		return this.diaEntrega;
	}

	public void setDiaEntrega(Short diaEntrega) {
		this.diaEntrega = diaEntrega;
	}

	@Column(name = "FREQ_DIAS")
	public Short getFreqDias() {
		return this.freqDias;
	}

	public void setFreqDias(Short freqDias) {
		this.freqDias = freqDias;
	}

	@Column(name = "NRO_PARCELAS")
	public Short getNroParcelas() {
		return this.nroParcelas;
	}

	public void setNroParcelas(Short nroParcelas) {
		this.nroParcelas = nroParcelas;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_INICIO_ENTREGA", length = 29)
	public Date getDtInicioEntrega() {
		return this.dtInicioEntrega;
	}

	public void setDtInicioEntrega(Date dtInicioEntrega) {
		this.dtInicioEntrega = dtInicioEntrega;
	}

	@Column(name = "OBSERVACAO", length = 240)
	@Length(max = 240)
	public String getObservacao() {
		return this.observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		SCO_SOLICITACAO_DE_COMPRA("scoSolicitacaoDeCompra.numero"),
		SCO_ITEM_AUTORIZACAO_FORN("scoItemAutorizacaoForn"),
		MAT_CODIGO("matCodigo"),
		QTDE_TOTAL_ITEM("qtdeTotalItem"),
		QTDE_PARCELA("qtdeParcela"),
		UMD_CODIGO("umdCodigo"),
		IND_FREQ_ENTREGA("indFreqEntrega"),
		DIA_ENTREGA("diaEntrega"),
		FREQ_DIAS("freqDias"),
		NRO_PARCELAS("nroParcelas"),
		DT_INICIO_ENTREGA("dtInicioEntrega"),
		OBSERVACAO("observacao");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof ScoParamProgEntgAf)) {
			return false;
		}
		ScoParamProgEntgAf other = (ScoParamProgEntgAf) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

// Generated 15/05/2012 11:21:35 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioEtapaProcessamento;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * SigProcessamentoCustoLogs generated by hbm2java
 */
@Entity
@SequenceGenerator(name = "sigPlgSq1", sequenceName = "SIG_PLG_SQ1", allocationSize = 1)
@Table(name = "sig_processamento_custo_logs", schema = "agh")
public class SigProcessamentoCustoLog extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 4812805108924856271L;
	private Integer seq;
	private SigProcessamentoCusto sigProcessamentoCustos;
	private Date criadoEm;
	private RapServidores rapServidores;
	private DominioEtapaProcessamento etapa;
	private String descricao;
	private SigProcessamentoPassos sigProcessamentoPassos;
	private Integer version;

	public SigProcessamentoCustoLog() {
	}

	public SigProcessamentoCustoLog(Integer seq, SigProcessamentoCusto sigProcessamentoCustos, Date criadoEm, RapServidores rapServidores,
			DominioEtapaProcessamento etapa, String descricao) {
		this.seq = seq;
		this.sigProcessamentoCustos = sigProcessamentoCustos;
		this.criadoEm = criadoEm;
		this.rapServidores = rapServidores;
		this.etapa = etapa;
		this.descricao = descricao;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "sigPlgSq1")
	@Column(name = "seq", unique = true, nullable = false)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "pmu_seq", nullable = false, referencedColumnName = "seq")
	public SigProcessamentoCusto getSigProcessamentoCustos() {
		return this.sigProcessamentoCustos;
	}

	public void setSigProcessamentoCustos(SigProcessamentoCusto sigProcessamentoCustos) {
		this.sigProcessamentoCustos = sigProcessamentoCustos;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "criado_em", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidores() {
		return rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@Column(name = "etapa", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioEtapaProcessamento getEtapa() {
		return this.etapa;
	}

	public void setEtapa(DominioEtapaProcessamento etapa) {
		this.etapa = etapa;
	}

	@Column(name = "descricao", nullable = false, length = 4000)
	@Length(max = 4000)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "prp_seq", nullable = true, referencedColumnName = "seq")
	public SigProcessamentoPassos getSigProcessamentoPassos() {
		return sigProcessamentoPassos;
	}

	public void setSigProcessamentoPassos(SigProcessamentoPassos sigProcessamentoPassos) {
		this.sigProcessamentoPassos = sigProcessamentoPassos;
	}

	@Column(name = "VERSION")
	@Version
	public Integer getVersion() {
		return version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	public enum Fields {

		SEQ("seq"),
		PROCESSAMENTO_CUSTO("sigProcessamentoCustos"),
		CRIADO_EM("criadoEm"),
		SERVIDOR_RESPONSAVEL("rapServidores"),
		ETAPA_PROCESSAMENTO("etapa"),
		DESCRICAO("descricao"),
		PASSO_PROCESSAMENTO("sigProcessamentoPassos");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}

	@Override
	public boolean equals(Object other) {
		if (!(other instanceof SigProcessamentoCustoLog)) {
			return false;
		}
		SigProcessamentoCustoLog castOther = (SigProcessamentoCustoLog) other;
		return new EqualsBuilder().append(this.seq, castOther.getSeq()).isEquals();
	}

	@Override
	public int hashCode() {
		return new HashCodeBuilder().append(this.seq).toHashCode();
	}

}

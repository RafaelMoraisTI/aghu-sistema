package br.gov.mec.aghu.model;

// Generated 27/12/2010 20:08:36 by Hibernate Tools 3.3.0.GA

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AipLocalizaPacientes generated by hbm2java
 */
@Entity
@Table(name = "AIP_LOCALIZA_PACIENTES", schema = "AGH")

public class AipLocalizaPaciente extends BaseEntityId<AipLocalizaPacienteId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 781189550988127979L;
	private AipLocalizaPacienteId id;
	private String local;
	private Date data;
	private String eventoTipo;
	private AghAtendimentos atendimento;
	private Integer crgSeq;
	private String nome;

	public AipLocalizaPaciente() {
	}

	public AipLocalizaPaciente(AipLocalizaPacienteId id, String local,
			Date data, String eventoTipo, String nome) {
		this.id = id;
		this.local = local;
		this.data = data;
		this.eventoTipo = eventoTipo;
		this.nome = nome;
	}

	public AipLocalizaPaciente(AipLocalizaPacienteId id, String local,
			Date data, String eventoTipo, AghAtendimentos atendimento, Integer crgSeq,
			String nome) {
		this.id = id;
		this.local = local;
		this.data = data;
		this.eventoTipo = eventoTipo;
		this.atendimento = atendimento;
		this.crgSeq = crgSeq;
		this.nome = nome;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "pacCodigo", column = @Column(name = "PAC_CODIGO", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false, precision = 6, scale = 0)) })
	public AipLocalizaPacienteId getId() {
		return this.id;
	}

	public void setId(AipLocalizaPacienteId id) {
		this.id = id;
	}

	@Column(name = "LOCAL", nullable = false, length = 100)
	public String getLocal() {
		return this.local;
	}

	public void setLocal(String local) {
		this.local = local;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DATA", nullable = false, length = 7)
	public Date getData() {
		return this.data;
	}

	public void setData(Date data) {
		this.data = data;
	}

	@Column(name = "EVENTO_TIPO", nullable = false, length = 2)
	public String getEventoTipo() {
		return this.eventoTipo;
	}

	public void setEventoTipo(String eventoTipo) {
		this.eventoTipo = eventoTipo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ATD_SEQ")
	public AghAtendimentos getAtendimento() {
		return this.atendimento;
	}

	public void setAtendimento(AghAtendimentos atendimento) {
		this.atendimento = atendimento;
	}

	@Column(name = "CRG_SEQ", precision = 8, scale = 0)
	public Integer getCrgSeq() {
		return this.crgSeq;
	}

	public void setCrgSeq(Integer crgSeq) {
		this.crgSeq = crgSeq;
	}

	@Column(name = "NOME", nullable = false, length = 50)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		AipLocalizaPaciente other = (AipLocalizaPaciente) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}
	
	public enum Fields {
		DATA("data"),
		PAC_CODIGO("id.pacCodigo"),
		ATD_SEQ("atendimento.seq"),
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}
	
}

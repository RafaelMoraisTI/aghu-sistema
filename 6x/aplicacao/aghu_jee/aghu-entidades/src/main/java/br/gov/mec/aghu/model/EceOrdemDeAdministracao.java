package br.gov.mec.aghu.model;

// Generated 27/12/2010 20:08:36 by Hibernate Tools 3.3.0.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import br.gov.mec.aghu.dominio.DominioSituacaoOrdemDeAdministracao;
import br.gov.mec.aghu.dominio.DominioTurno;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * EceOrdemDeAdministracoes generated by hbm2java
 */
@Entity
@SequenceGenerator(name="eceOdaSq1", sequenceName="AGH.ECE_ODA_SQ1", allocationSize = 1)
@Table(name = "ECE_ORDEM_DE_ADMINISTRACOES", schema = "AGH")

public class EceOrdemDeAdministracao extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -310453072016552702L;
	private Integer seq;
	private EpePrescricaoEnfermagem prescricaoEnfermagem;
	private MpmPrescricaoMedica prescricaoMedica;
	private DominioTurno turno;
	private DominioSituacaoOrdemDeAdministracao situacao;
	private Date dataReferencia;
	private Date inicioValidade;
	private Date fimValidade;
	private Date dthrImpresso;
	private RapServidores servidorAuxiliar;
	private RapServidores servidorEnfermeira;
	private Date criadoEm;
	private RapServidores servidor;
	private Date alteradoEm;
	private Date dthrMovimentacao;
	private MptPrescricaoPaciente prescricaoPaciente;
	private Set<EceOrdemXLocalizacao> ordensXLocalizacao = new HashSet<EceOrdemXLocalizacao>(
			0);



	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "eceOdaSq1")
	@Column(name = "SEQ", unique = true, nullable = false, precision = 8, scale = 0)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "PEN_ATD_SEQ", referencedColumnName = "ATD_SEQ"),
			@JoinColumn(name = "PEN_SEQ", referencedColumnName = "SEQ") })
	public EpePrescricaoEnfermagem getPrescricaoEnfermagem() {
		return this.prescricaoEnfermagem;
	}

	public void setPrescricaoEnfermagem(
			EpePrescricaoEnfermagem prescricaoEnfermagem) {
		this.prescricaoEnfermagem = prescricaoEnfermagem;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "PME_ATD_SEQ", referencedColumnName = "ATD_SEQ"),
			@JoinColumn(name = "PME_SEQ", referencedColumnName = "SEQ") })
	public MpmPrescricaoMedica getPrescricaoMedica() {
		return this.prescricaoMedica;
	}

	public void setPrescricaoMedica(
			MpmPrescricaoMedica prescricaoMedica) {
		this.prescricaoMedica = prescricaoMedica;
	}


	@Column(name = "TURNO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioTurno getTurno() {
		return this.turno;
	}

	public void setTurno(DominioTurno turno) {
		this.turno = turno;
	}

	@Column(name = "SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacaoOrdemDeAdministracao getSituacao() {
		return this.situacao;
	}

	public void setSituacao(DominioSituacaoOrdemDeAdministracao situacao) {
		this.situacao = situacao;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DATA_REFERENCIA", length = 7)
	public Date getDataReferencia() {
		return this.dataReferencia;
	}

	public void setDataReferencia(Date dataReferencia) {
		this.dataReferencia = dataReferencia;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "INICIO_VALIDADE", length = 7)
	public Date getInicioValidade() {
		return this.inicioValidade;
	}

	public void setInicioValidade(Date inicioValidade) {
		this.inicioValidade = inicioValidade;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "FIM_VALIDADE", length = 7)
	public Date getFimValidade() {
		return this.fimValidade;
	}

	public void setFimValidade(Date fimValidade) {
		this.fimValidade = fimValidade;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTHR_IMPRESSO", length = 7)
	public Date getDthrImpresso() {
		return this.dthrImpresso;
	}

	public void setDthrImpresso(Date dthrImpresso) {
		this.dthrImpresso = dthrImpresso;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_AUXILIAR", referencedColumnName = "MATRICULA", nullable = true),
				   @JoinColumn(name = "SER_VIN_CODIGO_AUXILIAR", referencedColumnName = "VIN_CODIGO", nullable = true) })
	public RapServidores getServidorAuxiliar() {
		return servidorAuxiliar;
	}
	
	public void setServidorAuxiliar(RapServidores servidorAuxiliar) {
		this.servidorAuxiliar = servidorAuxiliar;
	}	

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_ENFERMEIRA", referencedColumnName = "MATRICULA", nullable = true),
				   @JoinColumn(name = "SER_VIN_CODIGO_ENFERMEIRA", referencedColumnName = "VIN_CODIGO", nullable = true) })
	public RapServidores getServidorEnfermeira() {
		return servidorEnfermeira;
	}
	
	public void setServidorEnfermeira(RapServidores servidorEnfermeira) {
		this.servidorEnfermeira = servidorEnfermeira;
	}
	
	@Temporal(TemporalType.DATE)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
				   @JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return servidor;
	}
	
	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}
	
	@Temporal(TemporalType.DATE)
	@Column(name = "ALTERADO_EM", length = 7)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTHR_MOVIMENTACAO", length = 7)
	public Date getDthrMovimentacao() {
		return this.dthrMovimentacao;
	}

	public void setDthrMovimentacao(Date dthrMovimentacao) {
		this.dthrMovimentacao = dthrMovimentacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "PTE_ATD_SEQ", referencedColumnName = "ATD_SEQ"),
			@JoinColumn(name = "PTE_SEQ", referencedColumnName = "SEQ") })
	public MptPrescricaoPaciente getPrescricaoPaciente() {
		return this.prescricaoPaciente;
	}

	public void setPrescricaoPaciente(
			MptPrescricaoPaciente prescricaoPaciente) {
		this.prescricaoPaciente = prescricaoPaciente;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ordemAdministracao")
	public Set<EceOrdemXLocalizacao> getOrdensXLocalizacao() {
		return this.ordensXLocalizacao;
	}

	public void setOrdensXLocalizacao(
			Set<EceOrdemXLocalizacao> ordensXLocalizacao) {
		this.ordensXLocalizacao = ordensXLocalizacao;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((seq == null) ? 0 : seq.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		EceOrdemDeAdministracao other = (EceOrdemDeAdministracao) obj;
		if (seq == null) {
			if (other.seq != null) {
				return false;
			}
		} else if (!seq.equals(other.seq)) {
			return false;
		}
		return true;
	}
	
	

	public enum Fields {

		SEQ("seq"),
		PRESCRICAO_ENFERMAGEM("prescricaoEnfermagem"),
		PRESCRICAO_MEDICA("prescricaoMedica"),
		TURNO("turno"),
		SITUACAO("situacao"),
		DATA_REFERENCIA("dataReferencia"),
		INICIO_VALIDADE("inicioValidade"),
		FIM_VALIDADE("fimValidade"),
		DTHR_IMPRESSO("dthrImpresso"),
		CRIADO_EM("criadoEm"),
		ALTERADO_EM("alteradoEm"),
		DTHR_MOVIMENTACAO("dthrMovimentacao"),
		ORDENS_X_LOCALIZACAO("ordensXLocalizacao"),
		PME_ATD_SEQ("prescricaoMedica.id.atdSeq"),
		PEN_ATD_SEQ("prescricaoEnfermagem.id.atdSeq"),
		PTE_ATD_SEQ("prescricaoPaciente.id.atdSeq");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}

}

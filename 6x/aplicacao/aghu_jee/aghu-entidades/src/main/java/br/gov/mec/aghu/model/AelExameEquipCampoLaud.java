package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Version;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AelExameEquipCampoLaud generated by hbm2java
 */
@Entity
@Table(name = "AEL_EXAME_EQUIP_CAMPOS_LAUD", schema = "AGH")
public class AelExameEquipCampoLaud extends BaseEntityId<AelExameEquipCampoLaudId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 5615997555779138399L;
	private AelExameEquipCampoLaudId id;
	private Integer version;
	private AelParametroCamposLaudo aelParametroCamposLaudo;
	private AelExameEquipamento aelExameEquipamento;
	private Short ordem;

	public AelExameEquipCampoLaud() {
	}

	public AelExameEquipCampoLaud(AelExameEquipCampoLaudId id, AelParametroCamposLaudo aelParametroCamposLaudo,
			AelExameEquipamento aelExameEquipamento, Short ordem) {
		this.id = id;
		this.aelParametroCamposLaudo = aelParametroCamposLaudo;
		this.aelExameEquipamento = aelExameEquipamento;
		this.ordem = ordem;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "pclVelEmaExaSigla", column = @Column(name = "PCL_VEL_EMA_EXA_SIGLA", nullable = false, length = 5)),
			@AttributeOverride(name = "pclVelEmaManSeq", column = @Column(name = "PCL_VEL_EMA_MAN_SEQ", nullable = false)),
			@AttributeOverride(name = "pclVelSeqp", column = @Column(name = "PCL_VEL_SEQP", nullable = false)),
			@AttributeOverride(name = "pclCalSeq", column = @Column(name = "PCL_CAL_SEQ", nullable = false)),
			@AttributeOverride(name = "pclSeqp", column = @Column(name = "PCL_SEQP", nullable = false)),
			@AttributeOverride(name = "eeqEemEmaExaSigla", column = @Column(name = "EEQ_EEM_EMA_EXA_SIGLA", nullable = false, length = 5)),
			@AttributeOverride(name = "eeqEemEmaManSeq", column = @Column(name = "EEQ_EEM_EMA_MAN_SEQ", nullable = false)),
			@AttributeOverride(name = "eeqEemEquSeq", column = @Column(name = "EEQ_EEM_EQU_SEQ", nullable = false)),
			@AttributeOverride(name = "eeqEemProgramacao", column = @Column(name = "EEQ_EEM_PROGRAMACAO", nullable = false, length = 1)),
			@AttributeOverride(name = "eeqCodigo", column = @Column(name = "EEQ_CODIGO", nullable = false, length = 3)),
			@AttributeOverride(name = "eeqNumero", column = @Column(name = "EEQ_NUMERO", nullable = false, length = 2)) })
	public AelExameEquipCampoLaudId getId() {
		return this.id;
	}

	public void setId(AelExameEquipCampoLaudId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "PCL_VEL_EMA_EXA_SIGLA", referencedColumnName = "VEL_EMA_EXA_SIGLA", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "PCL_VEL_EMA_MAN_SEQ", referencedColumnName = "VEL_EMA_MAN_SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "PCL_VEL_SEQP", referencedColumnName = "VEL_SEQP", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "PCL_CAL_SEQ", referencedColumnName = "CAL_SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "PCL_SEQP", referencedColumnName = "SEQP", nullable = false, insertable = false, updatable = false) })
	public AelParametroCamposLaudo getAelParametroCamposLaudo() {
		return this.aelParametroCamposLaudo;
	}

	public void setAelParametroCamposLaudo(AelParametroCamposLaudo aelParametroCamposLaudo) {
		this.aelParametroCamposLaudo = aelParametroCamposLaudo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "EEQ_EEM_EMA_EXA_SIGLA", referencedColumnName = "EEM_EMA_EXA_SIGLA", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "EEQ_EEM_EMA_MAN_SEQ", referencedColumnName = "EEM_EMA_MAN_SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "EEQ_EEM_EQU_SEQ", referencedColumnName = "EEM_EQU_SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "EEQ_EEM_PROGRAMACAO", referencedColumnName = "EEM_PROGRAMACAO", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "EEQ_CODIGO", referencedColumnName = "CODIGO", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "EEQ_NUMERO", referencedColumnName = "NUMERO", nullable = false, insertable = false, updatable = false) })
	public AelExameEquipamento getAelExameEquipamento() {
		return this.aelExameEquipamento;
	}

	public void setAelExameEquipamento(AelExameEquipamento aelExameEquipamento) {
		this.aelExameEquipamento = aelExameEquipamento;
	}

	@Column(name = "ORDEM", nullable = false)
	public Short getOrdem() {
		return this.ordem;
	}

	public void setOrdem(Short ordem) {
		this.ordem = ordem;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		AEL_PARAMETRO_CAMPOS_LAUDO("aelParametroCamposLaudo"),
		AEL_EXAME_EQUIPAMENTO("aelExameEquipamento"),
		ORDEM("ordem");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AelExameEquipCampoLaud)) {
			return false;
		}
		AelExameEquipCampoLaud other = (AelExameEquipCampoLaud) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

// Generated 08/02/2010 17:25:25 by Hibernate Tools 3.2.5.Beta

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.annotations.Parameter;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioIndRespProc;
import br.gov.mec.aghu.dominio.DominioLocalCobrancaProcedimentoAmbulatorialRealizado;
import br.gov.mec.aghu.dominio.DominioOrigemProcedimentoAmbulatorialRealizado;
import br.gov.mec.aghu.dominio.DominioSituacaoProcedimentoAmbulatorio;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * FatProcedAmbRealizados generated by hbm2java
 */
@Entity
@Table(name = "FAT_PROCED_AMB_REALIZADOS", schema = "AGH")
@SequenceGenerator(name="fatPmrSq1", sequenceName="AGH.FAT_PMR_SQ1", allocationSize = 1)
@org.hibernate.annotations.Cache(usage=org.hibernate.annotations.CacheConcurrencyStrategy.TRANSACTIONAL)
public class FatProcedAmbRealizado extends BaseEntitySeq<Long> implements java.io.Serializable {

	// TODO ajustar esse POJO com FKs, nomenclatura correta de atributos e
	// version quando for implementada persistencia sobre essa entidade ou no
	// desenvolvimento do m√≥dulo de faturamento.
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 694872524665700561L;
	private Long seq;
	private FatProcedHospInternos procedimentoHospitalarInterno;
	private String alteradoPor;
	private Date alteradoEm;
	private String criadoPor;
	private Date criadoEm;
	private Date dthrRealizado;
	private DominioSituacaoProcedimentoAmbulatorio situacao;
	private DominioLocalCobrancaProcedimentoAmbulatorialRealizado localCobranca;
	private Short quantidade;
	private BigDecimal valor;

	private FatCompetencia fatCompetencia;
	private AghCid cid;
	
	private AelItemSolicitacaoExames itemSolicitacaoExame;
	private RapServidores servidor;
	private AghUnidadesFuncionais unidadeFuncional;
	private AghEspecialidades especialidade;
	private AipPacientes paciente;
	private FatConvenioSaudePlano convenioSaudePlano = new FatConvenioSaudePlano();
	private FatConvenioSaude convenioSaude;
	private DominioOrigemProcedimentoAmbulatorialRealizado indOrigem;
	private Integer ppcCrgSeq;
	private Integer ppcEprPciSeq;
	private Short ppcEprEspSeq;
	private DominioIndRespProc ppcIndRespProc;
	private AghAtendimentos atendimento;
	private Boolean indPendente;
	private Short qtdeFaturada;
	private Long txaTrgSeq;
	private Short txaSeqp;
	private Long tdcTrgSeq;
	private Short tdcSeqp;
	private RapServidores servidorResponsavel;
	private Set<AacAtendimentoApacs> atendimentosApac = new HashSet<AacAtendimentoApacs>(0);
	private Set<FatCandidatosApacOtorrino> candidatosApacOtorrino = new HashSet<FatCandidatosApacOtorrino>(0);
	
	private Set<FatItemContaHospitalar> itensContaHospitalar = new HashSet<FatItemContaHospitalar>(0);
	private Set<FatItemContaApac> itensContaApac = new HashSet<FatItemContaApac>(0);
	private Set<FatListaPacApac> listaPacApacs = new HashSet<FatListaPacApac>(0);
	private Set<FatEspelhoSismama> espelhosSismamas = new HashSet<FatEspelhoSismama>(0);
	private Set<FatEspelhoProcedAmb> fatEspelhosProcedAmb = new HashSet<FatEspelhoProcedAmb>(0);
	
	private MbcProcEspPorCirurgias procEspPorCirurgia;
	private AacConsultaProcedHospitalar consultaProcedHospitalar;
	private AacConsultas consulta;
	private Integer version;
	private Integer atendimentoSeq;
	
	
	public FatProcedAmbRealizado() {
	}

	@SuppressWarnings({"PMD.ExcessiveParameterList"})
	public FatProcedAmbRealizado(
			Long seq,
			FatProcedHospInternos procedimentoHospitalarInterno,
			String alteradoPor,
			Date alteradoEm,
			String criadoPor,
			Date criadoEm,
			Date dthrRealizado,
			DominioSituacaoProcedimentoAmbulatorio situacao,
			DominioLocalCobrancaProcedimentoAmbulatorialRealizado localCobranca,
			Short quantidade, BigDecimal valor, FatCompetencia fatCompetencia,
			AghCid cid, AelItemSolicitacaoExames itemSolicitacaoExame,
			Integer prhPhiSeq, RapServidores servidor,
			AghUnidadesFuncionais unidadeFuncional,
			AghEspecialidades especialidade, AipPacientes paciente,
			FatConvenioSaudePlano convenioSaudePlano,
			DominioOrigemProcedimentoAmbulatorialRealizado indOrigem,
			Integer ppcCrgSeq, Integer ppcEprPciSeq, Short ppcEprEspSeq,
			DominioIndRespProc ppcIndRespProc, AghAtendimentos atendimento,
			Boolean indPendente, Short qtdeFaturada, Long txaTrgSeq,
			Short txaSeqp, Long tdcTrgSeq, Short tdcSeqp, 
			RapServidores servidorResponsavel,
			Set<AacAtendimentoApacs> atendimentosApac,
			Set<FatCandidatosApacOtorrino> candidatosApacOtorrino,
			Set<FatItemContaHospitalar> itensContaHospitalar,
			Set<FatItemContaApac> itensContaApac,
			Set<FatListaPacApac> listaPacApacs,
			Set<FatEspelhoSismama> espelhosSismamas,
			MbcProcEspPorCirurgias procEspPorCirurgia,
			AacConsultaProcedHospitalar consultaProcedHospitalar,
			AacConsultas consulta, Integer version) {
		super();
		this.seq = seq;
		this.procedimentoHospitalarInterno = procedimentoHospitalarInterno;
		this.alteradoPor = alteradoPor;
		this.alteradoEm = alteradoEm;
		this.criadoPor = criadoPor;
		this.criadoEm = criadoEm;
		this.dthrRealizado = dthrRealizado;
		this.situacao = situacao;
		this.localCobranca = localCobranca;
		this.quantidade = quantidade;
		this.valor = valor;
		this.fatCompetencia = fatCompetencia;
		this.cid = cid;
		this.itemSolicitacaoExame = itemSolicitacaoExame;
		this.servidor = servidor;
		this.unidadeFuncional = unidadeFuncional;
		this.especialidade = especialidade;
		this.paciente = paciente;
		this.convenioSaudePlano = convenioSaudePlano;
		this.indOrigem = indOrigem;
		this.ppcCrgSeq = ppcCrgSeq;
		this.ppcEprPciSeq = ppcEprPciSeq;
		this.ppcEprEspSeq = ppcEprEspSeq;
		this.ppcIndRespProc = ppcIndRespProc;
		this.atendimento = atendimento;
		this.indPendente = indPendente;
		this.qtdeFaturada = qtdeFaturada;
		this.txaTrgSeq = txaTrgSeq;
		this.txaSeqp = txaSeqp;
		this.tdcTrgSeq = tdcTrgSeq;
		this.tdcSeqp = tdcSeqp;
		this.servidorResponsavel = servidorResponsavel;
		this.atendimentosApac = atendimentosApac;
		this.candidatosApacOtorrino = candidatosApacOtorrino;
		this.itensContaHospitalar = itensContaHospitalar;
		this.itensContaApac = itensContaApac;
		this.listaPacApacs = listaPacApacs;
		this.espelhosSismamas = espelhosSismamas;
		this.procEspPorCirurgia = procEspPorCirurgia;
		this.consultaProcedHospitalar = consultaProcedHospitalar;
		this.consulta = consulta;
		this.version = version;
	}


	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "fatPmrSq1")
	@Column(name = "SEQ", nullable = false, precision = 10, scale = 0)
	public Long getSeq() {
		return this.seq;
	}

	public void setSeq(Long seq) {
		this.seq = seq;
	}

	@Column(name = "ALTERADO_POR", length = 30)
	@Length(max = 30)
	public String getAlteradoPor() {
		return this.alteradoPor;
	}

	public void setAlteradoPor(String alteradoPor) {
		this.alteradoPor = alteradoPor;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 7)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@Column(name = "CRIADO_POR", nullable = false, length = 30)
	@Length(max = 30)
	public String getCriadoPor() {
		return this.criadoPor;
	}

	public void setCriadoPor(String criadoPor) {
		this.criadoPor = criadoPor;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_REALIZADO", nullable = false, length = 7)
	public Date getDthrRealizado() {
		return this.dthrRealizado;
	}

	public void setDthrRealizado(Date dthrRealizado) {
		this.dthrRealizado = dthrRealizado;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length=1)
	@org.hibernate.annotations.Type(parameters = { @Parameter(name = "enumClassName", value = "br.gov.mec.aghu.dominio.DominioSituacaoProcedimentoAmbulatorio") }, type = "br.gov.mec.aghu.core.model.jpa.DominioStringUserType")
	public DominioSituacaoProcedimentoAmbulatorio getSituacao() {
		return this.situacao;
	}

	public void setSituacao(DominioSituacaoProcedimentoAmbulatorio situacao) {
		this.situacao = situacao;
	}

	@Column(name = "LOCAL_COBRANCA", nullable = false, length = 1)
	@org.hibernate.annotations.Type(parameters = { @Parameter(name = "enumClassName", value = "br.gov.mec.aghu.dominio.DominioLocalCobrancaProcedimentoAmbulatorialRealizado") }, type = "br.gov.mec.aghu.core.model.jpa.DominioStringUserType")
	public DominioLocalCobrancaProcedimentoAmbulatorialRealizado getLocalCobranca() {
		return this.localCobranca;
	}

	public void setLocalCobranca(DominioLocalCobrancaProcedimentoAmbulatorialRealizado localCobranca) {
		this.localCobranca = localCobranca;
	}

	@Column(name = "QUANTIDADE", precision = 4, scale = 0)
	public Short getQuantidade() {
		return this.quantidade;
	}

	public void setQuantidade(Short quantidade) {
		this.quantidade = quantidade;
	}

	@Column(name = "VALOR", precision = 15)
	public BigDecimal getValor() {
		return this.valor;
	}

	public void setValor(BigDecimal valor) {
		this.valor = valor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PHI_SEQ", nullable = false)
	public FatProcedHospInternos getProcedimentoHospitalarInterno() {
		return procedimentoHospitalarInterno;
	}

	public void setProcedimentoHospitalarInterno(
			FatProcedHospInternos procedimentoHospitalarInterno) {
		this.procedimentoHospitalarInterno = procedimentoHospitalarInterno;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable=false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable=false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}


	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ", nullable = false)
	public AghUnidadesFuncionais getUnidadeFuncional() {
		return unidadeFuncional;
	}

	public void setUnidadeFuncional(AghUnidadesFuncionais unidadeFuncional) {
		this.unidadeFuncional = unidadeFuncional;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ESP_SEQ", referencedColumnName = "SEQ")
	public AghEspecialidades getEspecialidade() {
		return especialidade;
	}

	public void setEspecialidade(AghEspecialidades especialidade) {
		this.especialidade = especialidade;
	}
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO", referencedColumnName = "CODIGO")
	public AipPacientes getPaciente() {
		return this.paciente;
	}

	public void setPaciente(AipPacientes paciente) {
		this.paciente = paciente;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "CSP_SEQ", referencedColumnName = "SEQ", nullable=false),
			@JoinColumn(name = "CSP_CNV_CODIGO", referencedColumnName = "CNV_CODIGO", nullable=false) })
	public FatConvenioSaudePlano getConvenioSaudePlano() {
		return convenioSaudePlano;
	}

	public void setConvenioSaudePlano(FatConvenioSaudePlano convenioSaudePlano) {
		this.convenioSaudePlano = convenioSaudePlano;
	}

	@Column(name = "IND_ORIGEM", length = 3)
	@Enumerated(EnumType.STRING)
	public DominioOrigemProcedimentoAmbulatorialRealizado getIndOrigem() {
		return this.indOrigem;
	}

	public void setIndOrigem(DominioOrigemProcedimentoAmbulatorialRealizado indOrigem) {
		this.indOrigem = indOrigem;
	}

	@Column(name = "PPC_CRG_SEQ", precision = 8, scale = 0)
	public Integer getPpcCrgSeq() {
		return this.ppcCrgSeq;
	}

	public void setPpcCrgSeq(Integer ppcCrgSeq) {
		this.ppcCrgSeq = ppcCrgSeq;
	}

	@Column(name = "PPC_EPR_PCI_SEQ", precision = 5, scale = 0)
	public Integer getPpcEprPciSeq() {
		return this.ppcEprPciSeq;
	}

	public void setPpcEprPciSeq(Integer ppcEprPciSeq) {
		this.ppcEprPciSeq = ppcEprPciSeq;
	}

	@Column(name = "PPC_EPR_ESP_SEQ", precision = 4, scale = 0)
	public Short getPpcEprEspSeq() {
		return this.ppcEprEspSeq;
	}

	public void setPpcEprEspSeq(Short ppcEprEspSeq) {
		this.ppcEprEspSeq = ppcEprEspSeq;
	}

	@Column(name = "PPC_IND_RESP_PROC", length = 4)
	@Enumerated(EnumType.STRING)
	public DominioIndRespProc getPpcIndRespProc() {
		return this.ppcIndRespProc;
	}

	public void setPpcIndRespProc(DominioIndRespProc ppcIndRespProc) {
		this.ppcIndRespProc = ppcIndRespProc;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ATD_SEQ")
	public AghAtendimentos getAtendimento() {
		return this.atendimento;
	}

	public void setAtendimento(AghAtendimentos atendimento) {
		this.atendimento = atendimento;
	}

	@Column(name = "ATD_SEQ", precision = 7, scale = 0, insertable=false, updatable= false)
	public Integer getAtendimentoSeq() {
		return this.atendimentoSeq;
	}
	
	public void setAtendimentoSeq(final Integer atendimentoSeq) {
		this.atendimentoSeq = atendimentoSeq;
	}
	
	@Column(name = "IND_PENDENTE", length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndPendente() {
		return this.indPendente;
	}

	public void setIndPendente(Boolean indPendente) {
		this.indPendente = indPendente;
	}

	@Column(name = "QTDE_FATURADA", precision = 4, scale = 0)
	public Short getQtdeFaturada() {
		return this.qtdeFaturada;
	}

	public void setQtdeFaturada(Short qtdeFaturada) {
		this.qtdeFaturada = qtdeFaturada;
	}

	@Column(name = "TXA_TRG_SEQ", precision = 14, scale = 0)
	public Long getTxaTrgSeq() {
		return this.txaTrgSeq;
	}

	public void setTxaTrgSeq(Long txaTrgSeq) {
		this.txaTrgSeq = txaTrgSeq;
	}

	@Column(name = "TXA_SEQP", precision = 4, scale = 0)
	public Short getTxaSeqp() {
		return this.txaSeqp;
	}

	public void setTxaSeqp(Short txaSeqp) {
		this.txaSeqp = txaSeqp;
	}

	@Column(name = "TDC_TRG_SEQ", precision = 14, scale = 0)
	public Long getTdcTrgSeq() {
		return this.tdcTrgSeq;
	}

	public void setTdcTrgSeq(Long tdcTrgSeq) {
		this.tdcTrgSeq = tdcTrgSeq;
	}

	@Column(name = "TDC_SEQP", precision = 4, scale = 0)
	public Short getTdcSeqp() {
		return this.tdcSeqp;
	}

	public void setTdcSeqp(Short tdcSeqp) {
		this.tdcSeqp = tdcSeqp;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_RESP", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_RESP", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorResponsavel() {
		return servidorResponsavel;
	}

	public void setServidorResponsavel(RapServidores servidorResponsavel) {
		this.servidorResponsavel = servidorResponsavel;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fatProcedAmbRealizado")
	public Set<AacAtendimentoApacs> getAtendimentosApac() {
		return atendimentosApac;
	}

	public void setAtendimentosApac(Set<AacAtendimentoApacs> atendimentosApac) {
		this.atendimentosApac = atendimentosApac;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "procedimentoAmbRealizado")
	public Set<FatCandidatosApacOtorrino> getCandidatosApacOtorrino() {
		return candidatosApacOtorrino;
	}

	public void setCandidatosApacOtorrino(
			Set<FatCandidatosApacOtorrino> candidatosApacOtorrino) {
		this.candidatosApacOtorrino = candidatosApacOtorrino;
	}

	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "procedimentoAmbRealizado")
	public Set<FatItemContaHospitalar> getItensContaHospitalar() {
		return itensContaHospitalar;
	}

	public void setItensContaHospitalar(
			Set<FatItemContaHospitalar> itensContaHospitalar) {
		this.itensContaHospitalar = itensContaHospitalar;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "procedimentoAmbRealizado")
	public Set<FatItemContaApac> getItensContaApac() {
		return itensContaApac;
	}

	public void setItensContaApac(Set<FatItemContaApac> itensContaApac) {
		this.itensContaApac = itensContaApac;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "procedAmbRealizado")
	public Set<FatListaPacApac> getListaPacApacs() {
		return listaPacApacs;
	}

	public void setListaPacApacs(Set<FatListaPacApac> listaPacApacs) {
		this.listaPacApacs = listaPacApacs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "procedAmbRealizado")
	public Set<FatEspelhoSismama> getEspelhosSismamas() {
		return espelhosSismamas;
	}

	public void setEspelhosSismamas(Set<FatEspelhoSismama> espelhosSismamas) {
		this.espelhosSismamas = espelhosSismamas;
	}

	@JoinColumns( {
		@JoinColumn(name = "ISE_SEQP", referencedColumnName = "SEQP"),
		@JoinColumn(name = "ISE_SOE_SEQ", referencedColumnName = "SOE_SEQ") })
	@ManyToOne(fetch = FetchType.LAZY)
	public AelItemSolicitacaoExames getItemSolicitacaoExame() {
		return this.itemSolicitacaoExame;
	}

	public void setItemSolicitacaoExame(
			AelItemSolicitacaoExames itemSolicitacaoExame) {
		this.itemSolicitacaoExame = itemSolicitacaoExame;
	}
	
	@JoinColumns( {
		@JoinColumn(name = "PRH_CON_NUMERO", referencedColumnName = "CON_NUMERO"),
		@JoinColumn(name = "PRH_PHI_SEQ", referencedColumnName = "PHI_SEQ") })
	@ManyToOne(fetch = FetchType.LAZY)
	public AacConsultaProcedHospitalar getConsultaProcedHospitalar() {
		return consultaProcedHospitalar;
	}

	public void setConsultaProcedHospitalar(
			AacConsultaProcedHospitalar consultaProcedHospitalar) {
		this.consultaProcedHospitalar = consultaProcedHospitalar;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PRH_CON_NUMERO", nullable = false, insertable = false, updatable = false)
	public AacConsultas getConsulta() {
		return consulta;
	}

	public void setConsulta(AacConsultas consulta) {
		this.consulta = consulta;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "CPE_MODULO", referencedColumnName = "MODULO", nullable = false),
			@JoinColumn(name = "CPE_MES", referencedColumnName = "MES", nullable = false),
			@JoinColumn(name = "CPE_ANO", referencedColumnName = "ANO", nullable = false),
			@JoinColumn(name = "CPE_DT_HR_INICIO", referencedColumnName = "DT_HR_INICIO", nullable = false) })
	public FatCompetencia getFatCompetencia() {
		return fatCompetencia;
	}

	public void setFatCompetencia(FatCompetencia fatCompetencia) {
		this.fatCompetencia = fatCompetencia;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( @JoinColumn(name = "CID_SEQ", referencedColumnName = "SEQ") )
	public AghCid getCid() {
		return cid;
	}

	public void setCid(AghCid cid) {
		this.cid = cid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( { @JoinColumn(name = "PPC_CRG_SEQ", 		referencedColumnName="CRG_SEQ", 	  updatable = false, insertable = false),
					@JoinColumn(name = "PPC_EPR_PCI_SEQ", 	referencedColumnName="EPR_PCI_SEQ",   updatable = false, insertable = false),
					@JoinColumn(name = "PPC_EPR_ESP_SEQ", 	referencedColumnName="EPR_ESP_SEQ",   updatable = false, insertable = false),
					@JoinColumn(name = "PPC_IND_RESP_PROC", referencedColumnName="IND_RESP_PROC", updatable = false, insertable = false)
				  }
				)
	public MbcProcEspPorCirurgias getProcEspPorCirurgia() {
		return procEspPorCirurgia;
	}

	public void setProcEspPorCirurgia(MbcProcEspPorCirurgias procEspPorCirurgia) {
		this.procEspPorCirurgia = procEspPorCirurgia;
	}
	
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "procedimentoAmbRealizado")
	public Set<FatEspelhoProcedAmb> getFatEspelhosProcedAmb() {
		return fatEspelhosProcedAmb;
	}

	public void setFatEspelhosProcedAmb(
			Set<FatEspelhoProcedAmb> fatEspelhosProcedAmb) {
		this.fatEspelhosProcedAmb = fatEspelhosProcedAmb;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CSP_CNV_CODIGO", insertable = false, updatable = false, nullable=false)
	public FatConvenioSaude getConvenioSaude() {
		return convenioSaude;
	}

	public void setConvenioSaude(FatConvenioSaude convenioSaude) {
		this.convenioSaude = convenioSaude;
	}

	
	public enum Fields {
		
		SEQ("seq"), 
		PAC_CODIGO("paciente.codigo"), 
		PRH_CON_NUMERO("consultaProcedHospitalar.id.conNumero"),
		PRH_PHI_SEQ("consultaProcedHospitalar.id.phiSeq"),
		PPC_CRG_SEQ("ppcCrgSeq"),
		PPC_IND_RESP_PROC("ppcIndRespProc"),
		PPC_EPR_ESP_SEQ("ppcEprEspSeq"),
		PPC_EPR_PCI_SEQ("ppcEprPciSeq"),
		SITUACAO("situacao"),
		ATENDIMENTO("atendimento"),
		PACIENTE("paciente"),
		
		ITEM_SOLICITACAO_EXAME_SEQ("itemSolicitacaoExame.id.seqp"),
		ISE_SEQP("itemSolicitacaoExame.id.seqp"),
		SOLICITACAO_EXAME_SEQ("itemSolicitacaoExame.id.soeSeq"),
		ISE_SOE_SEQ("itemSolicitacaoExame.id.soeSeq"),
		
		ITEM_SOLICITACAO_EXAME("itemSolicitacaoExame"),
		CSP_CNV_CODIGO("convenioSaudePlano.id.cnvCodigo"),
		CSP("convenioSaudePlano"),
		CONVENIO_SAUDE("convenioSaude"),
		CSP_SEQ("convenioSaudePlano.id.seq"),
		PHI_SEQ("procedimentoHospitalarInterno.seq"),
		CONSULTA("consulta"),
		NUMERO_CONSULTA("consulta.numero"),
		IND_PENDENTE("indPendente"),
		DTHR_REALIZADO("dthrRealizado"),
		IND_ORIGEM("indOrigem"),
		UNF_SEQ("unidadeFuncional.seq"),
		UNIDADE_FUNCIONAL("unidadeFuncional"),
		ESP_SEQ("especialidade.seq"),
		IND_SITUACAO("situacao"),
		LOCAL_COBRANCA("localCobranca"),
		ESPECIALIDADE("especialidade"),
		ATD_SEQ("atendimento.seq"),
		PROCEDIMENTO_HOSPITALAR_INTERNO("procedimentoHospitalarInterno"),
		QUANTIDADE("quantidade"),
		CONSULTA_PROCED_HOSPITALAR("consultaProcedHospitalar"),
		PROC_ESP_POR_CIRURGIA("procEspPorCirurgia"),
		ALTERADO_POR("alteradoPor"),
		ALTERADO_EM("alteradoEm"),
		CRIADO_POR("criadoPor"),
		CRIADO_EM("criadoEm"),
		VALOR("valor"),
		SERVIDOR("servidor"),
		SERVIDOR_RESPONSAVEL("servidorResponsavel"),
		CONVENIO_SAUDE_PLANO("convenioSaudePlano"),
		CNV_CODIGO("convenioSaudePlano.id.cnvCodigo"),
		CNV_SEQ_PLANO("convenioSaudePlano.id.seq"),
		QTDE_FATURADA("qtdeFaturada"),
		TXA_TRG_SEQ("txaTrgSeq"),
		TXA_SEQP("txaSeqp"),
		TDC_TRG_SEQ("tdcTrgSeq"),
		TDC_SEQP("tdcSeqp"),
		VERSION("version"),
		CPE_DT_HR_INICIO("fatCompetencia." + FatCompetencia.Fields.DT_HR_INICIO.toString()),
		CPE_MODULO("fatCompetencia." + FatCompetencia.Fields.MODULO.toString()),
		CPE_MES("fatCompetencia." + FatCompetencia.Fields.MES.toString()),
		CPE_ANO("fatCompetencia." + FatCompetencia.Fields.ANO.toString()),
		CID("cid"),
		FAT_ESPELHOS_PROCED_AMB("fatEspelhosProcedAmb"),
		FAT_COMPETENCIA("fatCompetencia")
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}


	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((seq == null) ? 0 : seq.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		FatProcedAmbRealizado other = (FatProcedAmbRealizado) obj;
		if (seq == null) {
			if (other.seq != null) {
				return false;
			}
		} else if (!seq.equals(other.seq)) {
			return false;
		}
		return true;
	}

}

package br.gov.mec.aghu.model;

// Generated 15/03/2011 13:46:58 by Hibernate Tools 3.2.5.Beta

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Version;


import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * FatMotivosDesdobrClinica generated by hbm2java
 */
@Entity
@Table(name = "FAT_MOTIVOS_DESDOBR_CLINICA", schema = "AGH")
public class FatMotivoDesdobrClinica extends BaseEntityId<FatMotivoDesdobrClinicaId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1329530893472925948L;

	private FatMotivoDesdobrClinicaId id;
	
	private FatMotivoDesdobramento motivoDesdobramento;

	private AghClinicas aghClinicas;

	
	private Integer version;
	
	public FatMotivoDesdobrClinica() {
	}

	public FatMotivoDesdobrClinica(FatMotivoDesdobrClinicaId id) {
		this.id = id;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "mdsSeq", column = @Column(name = "MDS_SEQ", nullable = false, precision = 2, scale = 0)),
			@AttributeOverride(name = "clcCodigo", column = @Column(name = "CLC_CODIGO", nullable = false, precision = 2, scale = 0)) })
	public FatMotivoDesdobrClinicaId getId() {
		return this.id;
	}

	public void setId(FatMotivoDesdobrClinicaId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MDS_SEQ", nullable = false, insertable = false, updatable = false)
	public FatMotivoDesdobramento getMotivoDesdobramento() {
		return motivoDesdobramento;
	}

	public void setMotivoDesdobramento(FatMotivoDesdobramento motivoDesdobramento) {
		this.motivoDesdobramento = motivoDesdobramento;
	}
	

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CLC_CODIGO", nullable = false, insertable = false, updatable = false)
	public AghClinicas getAghClinicas() {
		return aghClinicas;
	}
	
	public void setAghClinicas(AghClinicas aghClinicas) {
		this.aghClinicas = aghClinicas;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}	

	@Override
	public int hashCode() {
		HashCodeBuilder umHashCodeBuilder = new HashCodeBuilder();
		umHashCodeBuilder.append(this.getId());
		return umHashCodeBuilder.toHashCode();
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof FatMotivoDesdobrClinica)) {
			return false;
		}
		FatMotivoDesdobrClinica other = (FatMotivoDesdobrClinica) obj;
		EqualsBuilder umEqualsBuilder = new EqualsBuilder();
		umEqualsBuilder.append(this.getId(), other.getId());	
		return umEqualsBuilder.isEquals();
	}
	
	public enum Fields {

		MDS_SEQ("id.mdsSeq"),
		CLC_CODIGO("id.clcCodigo"),
		MOTIVO_DESDOBRAMENTO("motivoDesdobramento"),
		AGH_CLINICAS("aghClinicas");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
		
	}

}

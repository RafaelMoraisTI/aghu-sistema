package br.gov.mec.aghu.model;

// Generated 21/03/2013 11:47:42 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.search.annotations.Indexed;

import br.gov.mec.aghu.dominio.DominioStatusRelatorio;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * AipControleEscalaCirurgia generated by hbm2java
 */
@Entity
@Table(name = "aip_controle_escala_cirurgia", schema = "agh")
@Indexed
@SequenceGenerator(name="aipAecSq1", sequenceName="agh.aip_aec_sq1", allocationSize = 1)
public class AipControleEscalaCirurgia extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 6256358420720028198L;
	
	private Integer seq;
	private Integer version;
	private AghUnidadesFuncionais unidadesFuncionais;
	private DominioStatusRelatorio status;
	private Date dataExec;
	private Date dataInicio;
	private Date dataFim;
	private RapServidores servidor;
	
	

	public AipControleEscalaCirurgia() {}

		

	public AipControleEscalaCirurgia(Integer seq, Integer version,
			AghUnidadesFuncionais unidadesFuncionais, DominioStatusRelatorio status,
			Date dataExec, Date dataInicio, Date dataFim, RapServidores servidor) {
		super();
		this.seq = seq;
		this.version = version;
		this.unidadesFuncionais = unidadesFuncionais;
		this.status = status;
		this.dataExec = dataExec;
		this.dataInicio = dataInicio;
		this.dataFim = dataFim;
		this.servidor = servidor;
	}


	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "aipAecSq1")
	@Column(name = "seq", unique = true, nullable = false)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "version", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ")
	public AghUnidadesFuncionais getUnidadesFuncionais() {
		return unidadesFuncionais;
	}

	public void setUnidadesFuncionais(AghUnidadesFuncionais unidadesFuncionais) {
		this.unidadesFuncionais = unidadesFuncionais;
	}

	@Column(name = "status", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioStatusRelatorio getStatus() {
		return this.status;
	}

	public void setStatus(DominioStatusRelatorio status) {
		this.status = status;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "data_exec", nullable = false, length = 29)
	public Date getDataExec() {
		return this.dataExec;
	}

	public void setDataExec(Date dataExec) {
		this.dataExec = dataExec;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "data_inicio", length = 29)
	public Date getDataInicio() {
		return this.dataInicio;
	}

	public void setDataInicio(Date dataInicio) {
		this.dataInicio = dataInicio;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "data_fim", length = 29)
	public Date getDataFim() {
		return this.dataFim;
	}

	public void setDataFim(Date dataFim) {
		this.dataFim = dataFim;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}



	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((seq == null) ? 0 : seq.hashCode());
		return result;
	}



	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AipControleEscalaCirurgia)) {
			return false;
		}
		AipControleEscalaCirurgia other = (AipControleEscalaCirurgia) obj;
		if (seq == null) {
			if (other.seq != null) {
				return false;
			}
		} else if (!seq.equals(other.seq)) {
			return false;
		}
		return true;
	}
	
	
	
	public enum Fields {
		SEQ("seq"),//
		UNF_SEQ("unidadesFuncionais.seq"),//
		SER_MATRICULA("servidor.id.matricula"),//
		SER_VIN_CODIGO("servidor.id.vinCodigo"),//
		STATUS("status"),//
		DATA_EXEC("dataExec"),//
		DATA_INICIO("dataInicio"),//
		DATA_FIM("dataFim"),//
		;
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}

	}
	
}

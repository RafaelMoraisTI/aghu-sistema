package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * RapRefeitorio generated by hbm2java
 */
@Entity
@SequenceGenerator(name="rapRftSq1", sequenceName="AGH.RAP_RFT_SQ1", allocationSize = 1)
@Table(name = "RAP_REFEITORIO", schema = "AGH")
public class RapRefeitorio extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 9091977383179250099L;
	private Integer seq;
	private Integer version;
	private RapRefeitorioLog rapRefeitorioLog;
	private Date dtRefeicao;
	private Integer codStarh;

	public RapRefeitorio() {
	}

	public RapRefeitorio(Integer seq, Date dtRefeicao, Integer codStarh) {
		this.seq = seq;
		this.dtRefeicao = dtRefeicao;
		this.codStarh = codStarh;
	}

	public RapRefeitorio(Integer seq, RapRefeitorioLog rapRefeitorioLog, Date dtRefeicao, Integer codStarh) {
		this.seq = seq;
		this.rapRefeitorioLog = rapRefeitorioLog;
		this.dtRefeicao = dtRefeicao;
		this.codStarh = codStarh;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "rapRftSq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RLO_SEQ")
	public RapRefeitorioLog getRapRefeitorioLog() {
		return this.rapRefeitorioLog;
	}

	public void setRapRefeitorioLog(RapRefeitorioLog rapRefeitorioLog) {
		this.rapRefeitorioLog = rapRefeitorioLog;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_REFEICAO", nullable = false, length = 29)
	public Date getDtRefeicao() {
		return this.dtRefeicao;
	}

	public void setDtRefeicao(Date dtRefeicao) {
		this.dtRefeicao = dtRefeicao;
	}

	@Column(name = "COD_STARH", nullable = false)
	public Integer getCodStarh() {
		return this.codStarh;
	}

	public void setCodStarh(Integer codStarh) {
		this.codStarh = codStarh;
	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		RAP_REFEITORIO_LOG("rapRefeitorioLog"),
		DT_REFEICAO("dtRefeicao"),
		COD_STARH("codStarh");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof RapRefeitorio)) {
			return false;
		}
		RapRefeitorio other = (RapRefeitorio) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

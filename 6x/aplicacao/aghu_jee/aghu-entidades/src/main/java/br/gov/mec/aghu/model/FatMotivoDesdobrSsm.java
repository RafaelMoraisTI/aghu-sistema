package br.gov.mec.aghu.model;

// Generated 15/03/2011 13:46:58 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * FatMotivosDesdobrSsm generated by hbm2java
 */
@Entity
@Table(name = "FAT_MOTIVOS_DESDOBR_SSM", schema = "AGH")
public class FatMotivoDesdobrSsm extends BaseEntityId<FatMotivoDesdobrSsmId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -7530522293163009385L;
	private FatMotivoDesdobrSsmId id;
	private DominioSituacao indSituacao;
	private Short diasInternacao;
	private Date criadoEm;
	private String criadoPor;
	private Date alteradoEm;
	private String alteradoPor;
	private FatMotivoDesdobramento motivoDesdobramento;
	private FatItensProcedHospitalar itemProcedimentoHospitalar;
	private Integer version;

	public FatMotivoDesdobrSsm() {
	}

	public FatMotivoDesdobrSsm(FatMotivoDesdobrSsmId id) {
		this.id = id;
	}

	public FatMotivoDesdobrSsm(FatMotivoDesdobrSsmId id, DominioSituacao indSituacao,
			Short diasInternacao, Date criadoEm, String criadoPor,
			Date alteradoEm, String alteradoPor) {
		this.id = id;
		this.indSituacao = indSituacao;
		this.diasInternacao = diasInternacao;
		this.criadoEm = criadoEm;
		this.criadoPor = criadoPor;
		this.alteradoEm = alteradoEm;
		this.alteradoPor = alteradoPor;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "mdsSeq", column = @Column(name = "MDS_SEQ", nullable = false, precision = 2, scale = 0)),
			@AttributeOverride(name = "iphSeq", column = @Column(name = "IPH_SEQ", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "iphPhoSeq", column = @Column(name = "IPH_PHO_SEQ", nullable = false, precision = 4, scale = 0)) })
	public FatMotivoDesdobrSsmId getId() {
		return this.id;
	}

	public void setId(FatMotivoDesdobrSsmId id) {
		this.id = id;
	}

	@Column(name = "IND_SITUACAO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Column(name = "DIAS_INTERNACAO", precision = 3, scale = 0)
	public Short getDiasInternacao() {
		return this.diasInternacao;
	}

	public void setDiasInternacao(Short diasInternacao) {
		this.diasInternacao = diasInternacao;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CRIADO_EM", length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "CRIADO_POR", length = 30)
	@Length(max = 30)
	public String getCriadoPor() {
		return this.criadoPor;
	}

	public void setCriadoPor(String criadoPor) {
		this.criadoPor = criadoPor;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "ALTERADO_EM", length = 7)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@Column(name = "ALTERADO_POR", length = 30)
	@Length(max = 30)
	public String getAlteradoPor() {
		return this.alteradoPor;
	}

	public void setAlteradoPor(String alteradoPor) {
		this.alteradoPor = alteradoPor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MDS_SEQ", nullable = false, insertable = false, updatable = false)
	public FatMotivoDesdobramento getMotivoDesdobramento() {
		return motivoDesdobramento;
	}

	public void setMotivoDesdobramento(FatMotivoDesdobramento motivoDesdobramento) {
		this.motivoDesdobramento = motivoDesdobramento;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
        @JoinColumn(name = "IPH_SEQ", nullable = false, insertable = false, updatable = false, referencedColumnName = "SEQ"),
        @JoinColumn(name = "IPH_PHO_SEQ", nullable = false, insertable = false, updatable = false, referencedColumnName = "PHO_SEQ")
    })
	public FatItensProcedHospitalar getItemProcedimentoHospitalar() {
		return itemProcedimentoHospitalar;
	}

	public void setItemProcedimentoHospitalar(
			FatItensProcedHospitalar itemProcedimentoHospitalar) {
		this.itemProcedimentoHospitalar = itemProcedimentoHospitalar;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		FatMotivoDesdobrSsm other = (FatMotivoDesdobrSsm) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}

	public enum Fields {
		
		MDS_SEQ("id.mdsSeq"),
		IPH_SEQ("id.iphSeq"),
		IPH_PHO_SEQ("id.iphPhoSeq"),
		IND_SITUACAO("indSituacao"),
		DIAS_INTERNACAO("diasInternacao"),
		CRIADO_EM("criadoEm"),
		CRIADO_POR("criadoPor"),
		ALTERADO_EM("alteradoEm"),
		ALTERADO_POR("alteradoPor"),
		MOTIVO_DESDOBRAMENTO("motivoDesdobramento"),
		ITEM_PROCEDIMENTO_HOSPITALAR("itemProcedimentoHospitalar");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
		
	}

}

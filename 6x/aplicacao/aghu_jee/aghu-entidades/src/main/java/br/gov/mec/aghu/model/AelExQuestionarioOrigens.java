package br.gov.mec.aghu.model;

// Generated 20/06/2011 14:50:45 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;

import br.gov.mec.aghu.dominio.DominioTipoTransporteQuestionario;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AelExQuestionarioOrigens generated by hbm2java
 */
@Entity
@Table(name = "AEL_EX_QUESTIONARIO_ORIGENS", schema = "AGH")
public class AelExQuestionarioOrigens extends BaseEntityId<AelExQuestionarioOrigensId> implements java.io.Serializable {

	private static final long serialVersionUID = 3469895171525226690L;
	
	private AelExQuestionarioOrigensId id;
	private AelExamesQuestionario aelExamesQuestionario;
	private Integer nroVias;
	private Date alteradoEm;
	private RapServidores servidor;
	private DominioTipoTransporteQuestionario tipoTransporte;

	public AelExQuestionarioOrigens() {
	}

	public AelExQuestionarioOrigens(AelExQuestionarioOrigensId id,
			AelExamesQuestionario aelExamesQuestionario) {
		this.id = id;
		this.aelExamesQuestionario = aelExamesQuestionario;
	}

	public AelExQuestionarioOrigens(AelExQuestionarioOrigensId id,
			AelExamesQuestionario aelExamesQuestionario, Integer nroVias,
			Date alteradoEm, RapServidores servidor) {
		this.id = id;
		this.aelExamesQuestionario = aelExamesQuestionario;
		this.nroVias = nroVias;
		this.alteradoEm = alteradoEm;
		this.servidor = servidor;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "eqeEmaExaSigla", column = @Column(name = "EQE_EMA_EXA_SIGLA", nullable = false, length = 5)),
			@AttributeOverride(name = "eqeEmaManSeq", column = @Column(name = "EQE_EMA_MAN_SEQ", nullable = false, precision = 5, scale = 0)),
			@AttributeOverride(name = "eqeQtnSeq", column = @Column(name = "EQE_QTN_SEQ", nullable = false, precision = 5, scale = 0)),
			@AttributeOverride(name = "origemAtendimento", column = @Column(name = "ORIGEM_ATENDIMENTO", nullable = false, length = 1)) })
	public AelExQuestionarioOrigensId getId() {
		return this.id;
	}

	public void setId(AelExQuestionarioOrigensId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "EQE_EMA_EXA_SIGLA", referencedColumnName = "EMA_EXA_SIGLA", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "EQE_EMA_MAN_SEQ", referencedColumnName = "EMA_MAN_SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "EQE_QTN_SEQ", referencedColumnName = "QTN_SEQ", nullable = false, insertable = false, updatable = false) })
	public AelExamesQuestionario getAelExamesQuestionario() {
		return this.aelExamesQuestionario;
	}

	public void setAelExamesQuestionario(
			AelExamesQuestionario aelExamesQuestionario) {
		this.aelExamesQuestionario = aelExamesQuestionario;
	}

	@Column(name = "NRO_VIAS")
	public Integer getNroVias() {
		return this.nroVias;
	}

	public void setNroVias(Integer nroVias) {
		this.nroVias = nroVias;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM")
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
		@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
		@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false)})
	public RapServidores getServidor() {
		return servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@Column(name = "TIPO_TRANSPORTE", nullable = false)
	@Enumerated(EnumType.STRING)
	@NotNull
	public DominioTipoTransporteQuestionario getTipoTransporte() {
		return tipoTransporte;
	}

	public void setTipoTransporte(DominioTipoTransporteQuestionario tipoTransporte) {
		this.tipoTransporte = tipoTransporte;
	}



	public enum Fields {
		EQE_EMA_EXA_SIGLA("id.eqeEmaExaSigla"),
		EQE_QTN_SEQ("id.eqeQtnSeq"),
		EQE_EMA_MAN_SEQ("id.eqeEmaManSeq"),
		ORIGEM_QUESTIONARIO("id.origemQuestionario"),
		EXAME_QUESTIONARIO("aelExamesQuestionario"),
		TIPO_TRANSPORTE("tipoTransporte")
		;
		
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}
		
		/*		AND eqo.eqe_ema_exa_sigla = eqe.ema_exa_sigla
		AND eqo.eqe_ema_man_seq   = eqe.ema_man_seq
		AND eqo.eqe_qtn_seq       = eqe.qtn_seq
		AND (eqo.origem_atendimento = 'T' OR
		     eqo.origem_atendimento = c_origem_atend);*/

		@Override
		public String toString() {
			return this.fields;
		}
	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AelExQuestionarioOrigens)) {
			return false;
		}
		AelExQuestionarioOrigens other = (AelExQuestionarioOrigens) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

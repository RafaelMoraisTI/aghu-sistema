package br.gov.mec.aghu.model;

// Generated 10/08/2010 17:33:16 by Hibernate Tools 3.3.0.GA

import java.util.Calendar;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import org.apache.commons.lang3.time.DateUtils;

import br.gov.mec.aghu.dominio.DominioSituacaoPrescricao;
import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.exception.BusinessExceptionCode;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MptPrescricaoPaciente generated by hbm2java
 */
@Entity
@Table(name = "MPT_PRESCRICAO_PACIENTES", uniqueConstraints = @UniqueConstraint(columnNames = {
		"ATD_SEQ", "DT_PREV_EXECUCAO" }))

public class MptPrescricaoPaciente extends BaseEntityId<MptPrescricaoPacienteId> implements java.io.Serializable {

	// TODO Implementar coluna version quando utilizar essa entidade para
	// persistencia

	/**
	 * 
	 */
	private static final long serialVersionUID = -622276971943247808L;
	private MptPrescricaoPacienteId id;
	private FatProcedHospInternos procedimentoHospitalarInterno;
	private RapServidores servidor;
	private MptPrescricaoPaciente prescricaoPaciente;
	private RapServidores servidorValido;
	private AghAtendimentos atendimento;
	private Date dataPrevisaoExecucao;
	private Short ciclo;
	private MptPrescricaoCiclo prescricaoCiclo;
	private Short dia;
	private Date criadoEm;
	private Date alteradoEm;
	private DominioSituacaoPrescricao situacao;
	private Date dthrMovimento;
	private String complCiclo;
	private Date dthrInicioMvtoPendente;
	/*private Integer citVpaPtaSeq;
	private Byte citVpaSeqp;
	private Short citSeqp;*/
	private Integer lote;
	private Date dthrValida;
	private Boolean reimpressao;
	private Date dataPrevisaoAgenda;
	private Byte quantidadeSessoes;
	private String observacao;
	private Boolean sessoesContinuas;
	private AacConsultas consulta;
	private String justificativa;
	private Short duracaoTratamento;
	private Boolean prescricaoImpressao;
	private MpaProtocoloAssistencial protocoloAssistencial;
	private MpaCadIntervaloTempo intervaloTempo;
	private Set<FatItemContaHospitalar> itensContasHospitalares = new HashSet<FatItemContaHospitalar>(
			0);
	private Set<MptPrescricaoPaciente> prescricoesPacientes = new HashSet<MptPrescricaoPaciente>(
			0);
	private Set<MptPrescIntervaloTempo> prescricoesIntervaloTempo = new HashSet<MptPrescIntervaloTempo>(
			0);
	
	private Set<MptAgendaPrescricao> mptAgendaPrescricoes = new HashSet<MptAgendaPrescricao>();
	
	private Set<MptPrescricaoMedicamento> prescricoesMedicamentos;
	
	private Integer conNumero;
	
	private Short tempoAdministracao;
	
	private Integer serMatricula;
	
	private Short serVinCodigo;
	
	private Integer serMatriculaValida;
	
	private Short serVinCodigoValida;
	
	public MptPrescricaoPaciente() {
	}

	public MptPrescricaoPaciente(MptPrescricaoPacienteId id,
			RapServidores servidor, AghAtendimentos atendimento,
			Date dataPrevisaoExecucao, Date criadoEm,
			DominioSituacaoPrescricao situacao, Integer lote,
			Boolean reimpressao) {
		this.id = id;
		this.servidor = servidor;
		this.atendimento = atendimento;
		this.dataPrevisaoExecucao = dataPrevisaoExecucao;
		this.criadoEm = criadoEm;
		this.situacao = situacao;
		this.lote = lote;
		this.reimpressao = reimpressao;
	}

	@SuppressWarnings({"PMD.ExcessiveParameterList"})
	public MptPrescricaoPaciente(MptPrescricaoPacienteId id,
			FatProcedHospInternos procedimentoHospitalarInterno,
			RapServidores servidor, MptPrescricaoPaciente prescricaoPaciente,
			RapServidores servidorValido, AghAtendimentos atendimento,
			Date dataPrevisaoExecucao, Short ciclo, Short dia, Date criadoEm,
			Date alteradoEm, DominioSituacaoPrescricao situacao,
			Date dthrMovimento, String complCiclo, Date dthrInicioMvtoPendente,
			/*Integer citVpaPtaSeq, Byte citVpaSeqp, Short citSeqp,*/ Integer lote,
			Date dthrValida, Boolean reimpressao, Date dataPrevisaoAgenda,
			Byte quantidadeSessoes, String observacao,
			Boolean sessoesContinuas, AacConsultas consulta, String justificativa,
			Short duracaoTratamento, Boolean prescricaoImpressao,
			Set<FatItemContaHospitalar> itensContasHospitalares,
			Set<MptPrescricaoPaciente> prescricoesPacientes) {
		this.id = id;
		this.procedimentoHospitalarInterno = procedimentoHospitalarInterno;
		this.servidor = servidor;
		this.prescricaoPaciente = prescricaoPaciente;
		this.servidorValido = servidorValido;
		this.atendimento = atendimento;
		this.dataPrevisaoExecucao = dataPrevisaoExecucao;
		this.ciclo = ciclo;
		this.dia = dia;
		this.criadoEm = criadoEm;
		this.alteradoEm = alteradoEm;
		this.situacao = situacao;
		this.dthrMovimento = dthrMovimento;
		this.complCiclo = complCiclo;
		this.dthrInicioMvtoPendente = dthrInicioMvtoPendente;
		/*this.citVpaPtaSeq = citVpaPtaSeq;
		this.citVpaSeqp = citVpaSeqp;
		this.citSeqp = citSeqp;*/
		this.lote = lote;
		this.dthrValida = dthrValida;
		this.reimpressao = reimpressao;
		this.dataPrevisaoAgenda = dataPrevisaoAgenda;
		this.quantidadeSessoes = quantidadeSessoes;
		this.observacao = observacao;
		this.sessoesContinuas = sessoesContinuas;
		this.consulta = consulta;
		this.justificativa = justificativa;
		this.duracaoTratamento = duracaoTratamento;
		this.prescricaoImpressao = prescricaoImpressao;
		this.itensContasHospitalares = itensContasHospitalares;
		this.prescricoesPacientes = prescricoesPacientes;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "atdSeq", column = @Column(name = "ATD_SEQ", nullable = false, precision = 7, scale = 0)),
			@AttributeOverride(name = "seq", column = @Column(name = "SEQ", nullable = false, precision = 8, scale = 0)) })
	public MptPrescricaoPacienteId getId() {
		return this.id;
	}

	public void setId(MptPrescricaoPacienteId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PHI_SEQ")
	public FatProcedHospInternos getProcedimentoHospitalarInterno() {
		return this.procedimentoHospitalarInterno;
	}

	public void setProcedimentoHospitalarInterno(
			FatProcedHospInternos procedimentoHospitalarInterno) {
		this.procedimentoHospitalarInterno = procedimentoHospitalarInterno;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "PTE_ATD_SEQ", referencedColumnName = "ATD_SEQ"),
			@JoinColumn(name = "PTE_SEQ", referencedColumnName = "SEQ") })
	public MptPrescricaoPaciente getPrescricaoPaciente() {
		return this.prescricaoPaciente;
	}

	public void setPrescricaoPaciente(MptPrescricaoPaciente prescricaoPaciente) {
		this.prescricaoPaciente = prescricaoPaciente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA_VALIDA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_VALIDA", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorValido() {
		return this.servidorValido;
	}

	public void setServidorValido(RapServidores servidorValido) {
		this.servidorValido = servidorValido;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ATD_SEQ", nullable = false, insertable = false, updatable = false)
	public AghAtendimentos getAtendimento() {
		return this.atendimento;
	}

	public void setAtendimento(AghAtendimentos atendimento) {
		this.atendimento = atendimento;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DT_PREV_EXECUCAO", nullable = false, length = 7)
	public Date getDataPrevisaoExecucao() {
		return this.dataPrevisaoExecucao;
	}

	public void setDataPrevisaoExecucao(Date dataPrevisaoExecucao) {
		this.dataPrevisaoExecucao = dataPrevisaoExecucao;
	}

	@Column(name = "CICLO")
	public Short getCiclo() {
		return this.ciclo;
	}

	public void setCiclo(Short ciclo) {
		this.ciclo = ciclo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CICLO", insertable = false, updatable = false)
	public MptPrescricaoCiclo getPrescricaoCiclo() {
		return prescricaoCiclo;
	}
	
	public void setPrescricaoCiclo(MptPrescricaoCiclo prescricaoCiclo) {
		this.prescricaoCiclo = prescricaoCiclo;
	}

	@Column(name = "DIA")
	public Short getDia() {
		return this.dia;
	}

	public void setDia(Short dia) {
		this.dia = dia;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "ALTERADO_EM", length = 7)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacaoPrescricao getSituacao() {
		return this.situacao;
	}

	public void setSituacao(DominioSituacaoPrescricao situacao) {
		this.situacao = situacao;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTHR_MOVIMENTO", length = 7)
	public Date getDthrMovimento() {
		return this.dthrMovimento;
	}

	public void setDthrMovimento(Date dthrMovimento) {
		this.dthrMovimento = dthrMovimento;
	}

	@Column(name = "COMPL_CICLO", length = 60)
	public String getComplCiclo() {
		return this.complCiclo;
	}

	public void setComplCiclo(String complCiclo) {
		this.complCiclo = complCiclo;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTHR_INICIO_MVTO_PENDENTE", length = 7)
	public Date getDthrInicioMvtoPendente() {
		return this.dthrInicioMvtoPendente;
	}

	public void setDthrInicioMvtoPendente(Date dthrInicioMvtoPendente) {
		this.dthrInicioMvtoPendente = dthrInicioMvtoPendente;
	}

	/*@Column(name = "CIT_VPA_PTA_SEQ", updatable=false, insertable=false)
	public Integer getCitVpaPtaSeq() {
		return this.citVpaPtaSeq;
	}

	public void setCitVpaPtaSeq(Integer citVpaPtaSeq) {
		this.citVpaPtaSeq = citVpaPtaSeq;
	}*/

/*	@Column(name = "CIT_VPA_SEQP", precision = 2, scale = 0, updatable=false, insertable=false)
	public Byte getCitVpaSeqp() {
		return this.citVpaSeqp;
	}

	public void setCitVpaSeqp(Byte citVpaSeqp) {
		this.citVpaSeqp = citVpaSeqp;
	}*/

	/*@Column(name = "CIT_SEQP", updatable=false, insertable=false)
	public Short getCitSeqp() {
		return this.citSeqp;
	}

	public void setCitSeqp(Short citSeqp) {
		this.citSeqp = citSeqp;
	}*/

	@Column(name = "LOTE", nullable = false, precision = 8, scale = 0)
	public Integer getLote() {
		return this.lote;
	}

	public void setLote(Integer lote) {
		this.lote = lote;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTHR_VALIDA", length = 7)
	public Date getDthrValida() {
		return this.dthrValida;
	}

	public void setDthrValida(Date dthrValida) {
		this.dthrValida = dthrValida;
	}

	@Column(name = "IND_REIMPRESSAO", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getReimpressao() {
		return this.reimpressao;
	}

	public void setReimpressao(Boolean reimpressao) {
		this.reimpressao = reimpressao;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DT_PREV_AGENDA", length = 7)
	public Date getDataPrevisaoAgenda() {
		return this.dataPrevisaoAgenda;
	}

	public void setDataPrevisaoAgenda(Date dataPrevisaoAgenda) {
		this.dataPrevisaoAgenda = dataPrevisaoAgenda;
	}

	@Column(name = "QTDE_SESSOES", precision = 2, scale = 0)
	public Byte getQuantidadeSessoes() {
		return this.quantidadeSessoes;
	}

	public void setQuantidadeSessoes(Byte quantidadeSessoes) {
		this.quantidadeSessoes = quantidadeSessoes;
	}

	@Column(name = "OBSERVACAO", length = 2000)
	public String getObservacao() {
		return this.observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}

	@Column(name = "IND_SESSOES_CONTINUAS", length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getSessoesContinuas() {
		return this.sessoesContinuas;
	}

	public void setSessoesContinuas(Boolean sessoesContinuas) {
		this.sessoesContinuas = sessoesContinuas;
	}

	@Column(name = "JUSTIFICATIVA", length = 2000)
	public String getJustificativa() {
		return this.justificativa;
	}

	public void setJustificativa(String justificativa) {
		this.justificativa = justificativa;
	}

	@Column(name = "DURACAO_TRATAMENTO")
	public Short getDuracaoTratamento() {
		return this.duracaoTratamento;
	}

	public void setDuracaoTratamento(Short duracaoTratamento) {
		this.duracaoTratamento = duracaoTratamento;
	}

	@Column(name = "IND_PRCR_IMPRESSAO", length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getPrescricaoImpressao() {
		return this.prescricaoImpressao;
	}

	public void setPrescricaoImpressao(Boolean prescricaoImpressao) {
		this.prescricaoImpressao = prescricaoImpressao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "prescricaoPaciente")
	public Set<FatItemContaHospitalar> getItensContasHospitalares() {
		return this.itensContasHospitalares;
	}

	public void setItensContasHospitalares(
			Set<FatItemContaHospitalar> itensContasHospitalares) {
		this.itensContasHospitalares = itensContasHospitalares;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "prescricaoPaciente")
	public Set<MptPrescricaoPaciente> getPrescricoesPacientes() {
		return this.prescricoesPacientes;
	}

	public void setPrescricoesPacientes(
			Set<MptPrescricaoPaciente> prescricoesPacientes) {
		this.prescricoesPacientes = prescricoesPacientes;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		MptPrescricaoPaciente other = (MptPrescricaoPaciente) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}

	private enum PrescricaoPacientesExceptionCode implements
			BusinessExceptionCode {
		MPT_PTE_CK2, MPT_PTE_CK4
	}

	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void validarConstraints() {

		if (DateUtils
				.truncate(this.dataPrevisaoExecucao, Calendar.DAY_OF_MONTH)
				.before(DateUtils
						.truncate(this.criadoEm, Calendar.DAY_OF_MONTH))) {
			throw new BaseRuntimeException(
					PrescricaoPacientesExceptionCode.MPT_PTE_CK2);
		}

		boolean condicao1 = (this.quantidadeSessoes == null && sessoesContinuas);
		boolean condicao2 = (this.quantidadeSessoes != null && !sessoesContinuas);
		boolean condicao3 = (this.quantidadeSessoes == null && !sessoesContinuas);
		if (!(condicao1 || condicao2 || condicao3)) {
			throw new BaseRuntimeException(
					PrescricaoPacientesExceptionCode.MPT_PTE_CK4);
		}
	}

	public enum Fields {

		ID("id"),
		PROCEDIMENTO_HOSPITALAR_INTERNO("procedimentoHospitalarInterno"),
		SERVIDOR("servidor"),
		PRESCRICAO_PACIENTE("prescricaoPaciente"),
		SERVIDOR_VALIDO("servidorValido"),
		ATENDIMENTO("atendimento"),
		DATA_PREVISAO_EXECUCAO("dataPrevisaoExecucao"),
		CICLO("ciclo"),
		PRESCRICAO_CICLO("prescricaoCiclo"),
		DIA("dia"),
		CRIADO_EM("criadoEm"),
		ALTERADO_EM("alteradoEm"),
		SITUACAO("situacao"),
		DTHR_MOVIMENTO("dthrMovimento"),
		COMPL_CICLO("complCiclo"),
		DTHR_INICIO_MVTO_PENDENTE("dthrInicioMvtoPendente"),
		CIT_VPA_PTA_SEQ("intervaloTempo.id.vpaPtaSeq"),
		CIT_VPA_SEQP("intervaloTempo.id.vpaSeqp"),
		CIT_SEQP("intervaloTempo.id.seqp"),
		LOTE("lote"),
		DTHR_VALIDA("dthrValida"),
		REIMPRESSAO("reimpressao"),
		DATA_PREVISAO_AGENDA("dataPrevisaoAgenda"),
		QUANTIDADE_SESSOES("quantidadeSessoes"),
		OBSERVACAO("observacao"),
		SESSOES_CONTINUAS("sessoesContinuas"),
		CON_NUMERO("consulta.numero"),
		JUSTIFICATIVA("justificativa"),
		DURACAO_TRATAMENTO("duracaoTratamento"),
		PRESCRICAO_IMPRESSAO("prescricaoImpressao"),
		ITENS_CONTAS_HOSPITALARES("itensContasHospitalares"),
		PRESCRICOES_PACIENTES("prescricoesPacientes"),
		ATENDIMENTO_SEQ("atendimento.seq"),
		SEQ("id.seq"),
		ATD_SEQ("id.atdSeq"),
		PRESC_INTERVALO_TEMPO("prescricoesIntervaloTempo"),
		PROTOCOLO_ASSISTENCIAL("protocoloAssistencial"),
		AGENDA_PRESCRICAO("mptAgendaPrescricoes"),
		FILHOS(PRESCRICOES_PACIENTES.toString()+"."+PRESCRICAO_PACIENTE.toString()),
		MPT_PRESCRICAO_MEDICAMENTOS("prescricoesMedicamentos"),
		CONNUMERO("conNumero"),
		SER_MATRICULA_VALIDA("serMatriculaValida"),
		SER_VIN_CODIGO_VALIDA("serVinCodigoValida"),
		SER_MATRICULA("serMatricula"),
		SER_VIN_CODIGO("serVinCodigo"),
		TEMPO_ADMINISTRACAO("tempoAdministracao");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mptPrescricaoPaciente")
	public Set<MptPrescIntervaloTempo> getPrescricoesIntervaloTempo() {
		return prescricoesIntervaloTempo;
	}

	public void setPrescricoesIntervaloTempo(
			Set<MptPrescIntervaloTempo> prescricoesIntervaloTempo) {
		this.prescricoesIntervaloTempo = prescricoesIntervaloTempo;
	}
	
	public void setProtocoloAssistencial(MpaProtocoloAssistencial protocoloAssistencial) {
		this.protocoloAssistencial = protocoloAssistencial;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name="CIT_VPA_PTA_SEQ", referencedColumnName="SEQ", insertable = false, updatable = false )
	public MpaProtocoloAssistencial getProtocoloAssistencial() {
		return protocoloAssistencial;
	}
	
	public void setIntervaloTempo(MpaCadIntervaloTempo intervaloTempo) {
		this.intervaloTempo = intervaloTempo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CIT_VPA_SEQP", referencedColumnName = "VPA_SEQP"),
			@JoinColumn(name = "CIT_VPA_PTA_SEQ", referencedColumnName = "VPA_PTA_SEQ"),
			@JoinColumn(name = "CIT_SEQP", referencedColumnName = "SEQP") })
	public MpaCadIntervaloTempo getIntervaloTempo() {
		return intervaloTempo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name="CON_NUMERO", referencedColumnName="NUMERO")
	public AacConsultas getConsulta() {
		return consulta;
	}

	public void setConsulta(AacConsultas consulta) {
		this.consulta = consulta;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "prescricaoPaciente")
	public Set<MptAgendaPrescricao> getMptAgendaPrescricoes() {
		return mptAgendaPrescricoes;
	}

	public void setMptAgendaPrescricoes(
			Set<MptAgendaPrescricao> mptAgendaPrescricoes) {
		this.mptAgendaPrescricoes = mptAgendaPrescricoes;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "prescricaoPaciente")
	public Set<MptPrescricaoMedicamento> getPrescricoesMedicamentos() {
		return prescricoesMedicamentos;
	}

	public void setPrescricoesMedicamentos(
			Set<MptPrescricaoMedicamento> prescricoesMedicamentos) {
		this.prescricoesMedicamentos = prescricoesMedicamentos;
	}

	@Column(name="CON_NUMERO", insertable = false, updatable = false)
	public Integer getConNumero() {
		return conNumero;
	}
	
	public void setConNumero(Integer conNumero) {
		this.conNumero = conNumero;
}

	@Column(name="SER_MATRICULA_VALIDA", insertable = false, updatable = false)
	public Integer getSerMatriculaValida() {
		return serMatriculaValida;
	}

	public void setSerMatriculaValida(Integer serMatriculaValida) {
		this.serMatriculaValida = serMatriculaValida;
	}
	
	@Column(name="TEMPO_ADMINISTRACAO")
	public Short getTempoAdministracao() {
		return tempoAdministracao;
	}

	public void setTempoAdministracao(Short tempoAdministracao) {
		this.tempoAdministracao = tempoAdministracao;
	}

	@Column(name="SER_MATRICULA", insertable = false, updatable = false)
	public Integer getSerMatricula() {
		return serMatricula;
	}

	public void setSerMatricula(Integer serMatricula) {
		this.serMatricula = serMatricula;
	}

	@Column(name="SER_VIN_CODIGO", insertable = false, updatable = false)
	public Short getSerVinCodigo() {
		return serVinCodigo;
	}

	public void setSerVinCodigo(Short serVinCodigo) {
		this.serVinCodigo = serVinCodigo;
	}
	
	@Column(name="SER_VIN_CODIGO_VALIDA", insertable = false, updatable = false)
	public Short getSerVinCodigoValida() {
		return serVinCodigoValida;
	}

	public void setSerVinCodigoValida(Short serVinCodigoValida) {
		this.serVinCodigoValida = serVinCodigoValida;
	}	
		
}

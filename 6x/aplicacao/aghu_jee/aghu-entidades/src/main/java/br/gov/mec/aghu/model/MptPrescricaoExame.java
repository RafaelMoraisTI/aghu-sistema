package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MptPrescricaoExame generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mptPxaSq1", sequenceName="AGH.MPT_PXA_SQ1", allocationSize = 1)
@Table(name = "MPT_PRESCRICAO_EXAMES", schema = "AGH")
public class MptPrescricaoExame extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 4915782498267073744L;
	private Integer seq;
	private Integer version;
	private RapServidores rapServidoresByMptPxaSerFk1;
	private RapServidores rapServidoresByMptPxaSerFk2;
	private MptPrescricaoPaciente mptPrescricaoPaciente;
	private MpaCadOrdExame mpaCadOrdExame;
	private Date criadoEm;
	private Date dthrProgramada;
	private Short ordem;
	private Date alteradoEm;
	private Set<MptItemPrescricaoExame> mptItemPrescricaoExamees = new HashSet<MptItemPrescricaoExame>(0);

	public MptPrescricaoExame() {
	}

	public MptPrescricaoExame(Integer seq, RapServidores rapServidoresByMptPxaSerFk1, MptPrescricaoPaciente mptPrescricaoPaciente,
			MpaCadOrdExame mpaCadOrdExame, Date criadoEm) {
		this.seq = seq;
		this.rapServidoresByMptPxaSerFk1 = rapServidoresByMptPxaSerFk1;
		this.mptPrescricaoPaciente = mptPrescricaoPaciente;
		this.mpaCadOrdExame = mpaCadOrdExame;
		this.criadoEm = criadoEm;
	}

	public MptPrescricaoExame(Integer seq, RapServidores rapServidoresByMptPxaSerFk1, RapServidores rapServidoresByMptPxaSerFk2,
			MptPrescricaoPaciente mptPrescricaoPaciente, MpaCadOrdExame mpaCadOrdExame, Date criadoEm, Date dthrProgramada,
			Short ordem, Date alteradoEm, Set<MptItemPrescricaoExame> mptItemPrescricaoExamees) {
		this.seq = seq;
		this.rapServidoresByMptPxaSerFk1 = rapServidoresByMptPxaSerFk1;
		this.rapServidoresByMptPxaSerFk2 = rapServidoresByMptPxaSerFk2;
		this.mptPrescricaoPaciente = mptPrescricaoPaciente;
		this.mpaCadOrdExame = mpaCadOrdExame;
		this.criadoEm = criadoEm;
		this.dthrProgramada = dthrProgramada;
		this.ordem = ordem;
		this.alteradoEm = alteradoEm;
		this.mptItemPrescricaoExamees = mptItemPrescricaoExamees;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mptPxaSq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByMptPxaSerFk1() {
		return this.rapServidoresByMptPxaSerFk1;
	}

	public void setRapServidoresByMptPxaSerFk1(RapServidores rapServidoresByMptPxaSerFk1) {
		this.rapServidoresByMptPxaSerFk1 = rapServidoresByMptPxaSerFk1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_ALTERA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_ALTERA", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMptPxaSerFk2() {
		return this.rapServidoresByMptPxaSerFk2;
	}

	public void setRapServidoresByMptPxaSerFk2(RapServidores rapServidoresByMptPxaSerFk2) {
		this.rapServidoresByMptPxaSerFk2 = rapServidoresByMptPxaSerFk2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "PTE_ATD_SEQ", referencedColumnName = "ATD_SEQ", nullable = false),
			@JoinColumn(name = "PTE_SEQ", referencedColumnName = "SEQ", nullable = false) })
	public MptPrescricaoPaciente getMptPrescricaoPaciente() {
		return this.mptPrescricaoPaciente;
	}

	public void setMptPrescricaoPaciente(MptPrescricaoPaciente mptPrescricaoPaciente) {
		this.mptPrescricaoPaciente = mptPrescricaoPaciente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "COX_SEQ", nullable = false)
	public MpaCadOrdExame getMpaCadOrdExame() {
		return this.mpaCadOrdExame;
	}

	public void setMpaCadOrdExame(MpaCadOrdExame mpaCadOrdExame) {
		this.mpaCadOrdExame = mpaCadOrdExame;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_PROGRAMADA", length = 29)
	public Date getDthrProgramada() {
		return this.dthrProgramada;
	}

	public void setDthrProgramada(Date dthrProgramada) {
		this.dthrProgramada = dthrProgramada;
	}

	@Column(name = "ORDEM")
	public Short getOrdem() {
		return this.ordem;
	}

	public void setOrdem(Short ordem) {
		this.ordem = ordem;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 29)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mptPrescricaoExame")
	public Set<MptItemPrescricaoExame> getMptItemPrescricaoExamees() {
		return this.mptItemPrescricaoExamees;
	}

	public void setMptItemPrescricaoExamees(Set<MptItemPrescricaoExame> mptItemPrescricaoExamees) {
		this.mptItemPrescricaoExamees = mptItemPrescricaoExamees;
	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		RAP_SERVIDORES_BY_MPT_PXA_SER_FK1("rapServidoresByMptPxaSerFk1"),
		RAP_SERVIDORES_BY_MPT_PXA_SER_FK2("rapServidoresByMptPxaSerFk2"),
		MPT_PRESCRICAO_PACIENTE("mptPrescricaoPaciente"),
		MPA_CAD_ORD_EXAMES("mpaCadOrdExame"),
		CRIADO_EM("criadoEm"),
		DTHR_PROGRAMADA("dthrProgramada"),
		ORDEM("ordem"),
		ALTERADO_EM("alteradoEm"),
		MPT_ITEM_PRESCRICAO_EXAMEES("mptItemPrescricaoExamees");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MptPrescricaoExame)) {
			return false;
		}
		MptPrescricaoExame other = (MptPrescricaoExame) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

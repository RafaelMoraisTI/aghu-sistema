package br.gov.mec.aghu.model;

// Generated 24/02/2010 18:52:08 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import javax.validation.constraints.NotNull;

import br.gov.mec.aghu.dominio.DominioIndPendenteAmbulatorio;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MamEvolucoes generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mamEvoSq1", sequenceName="AGH.MAM_EVO_SQ1", allocationSize = 1)
@Table(name = "MAM_EVOLUCOES", schema = "AGH")
public class MamEvolucoes extends BaseEntitySeq<Long> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 415815724182469739L;
	private Long seq;
	private MamEvolucoes evolucao;
	private MamTriagens mamTriagens;
	private Date dthrCriacao;
	private Date dthrValida;
	private Date dthrMvto;
	private Date dthrValidaMvto;
	private AipPacientes paciente;
	private AacConsultas consulta;
	private DominioIndPendenteAmbulatorio pendente;
	private Boolean impresso;
	private RapServidores servidor;
	private RapServidores servidorValida;
	private RapServidores servidorMvto;
	private RapServidores servidorValidaMvto;
	private MamRegistro registro;
	private AghAtendimentos atendimento;
	private Boolean indImpressoPasta;
	private Set<MamEvolucoes> evolucoes = new HashSet<MamEvolucoes>(0);
	private Set<MamRespostaEvolucoes> respostasEvolucoes = new HashSet<MamRespostaEvolucoes>(0);
	private Set<MamItemEvolucoes> itensEvolucoes = new HashSet<MamItemEvolucoes>(0);
	private Integer version;

	public MamEvolucoes() {
	}

	public MamEvolucoes(Long seq, Date dthrCriacao, AipPacientes paciente,
			DominioIndPendenteAmbulatorio pendente, Boolean impresso, RapServidores servidor) {
		this.seq = seq;
		this.dthrCriacao = dthrCriacao;
		this.paciente = paciente;
		this.pendente = pendente;
		this.impresso = impresso;
		this.servidor = servidor;
	}

	public MamEvolucoes(Long seq, MamEvolucoes evolucao,
			MamTriagens mamTriagens, Date dthrCriacao, Date dthrValida,
			Date dthrMvto, Date dthrValidaMvto, AipPacientes paciente,
			AacConsultas consulta, DominioIndPendenteAmbulatorio pendente, Boolean impresso,
			RapServidores servidor, RapServidores servidorValida, RapServidores servidorMvto, 
			RapServidores servidorValidaMvto, MamRegistro registro, AghAtendimentos atendimento,
			Boolean indImpressoPasta, Set<MamEvolucoes> evolucoes) {
		this.seq = seq;
		this.evolucao = evolucao;
		this.mamTriagens = mamTriagens;
		this.dthrCriacao = dthrCriacao;
		this.dthrValida = dthrValida;
		this.dthrMvto = dthrMvto;
		this.dthrValidaMvto = dthrValidaMvto;
		this.paciente = paciente;
		this.consulta = consulta;
		this.pendente = pendente;
		this.impresso = impresso;
		this.servidor = servidor;
		this.servidorValida = servidorValida;
		this.servidorMvto = servidorMvto;
		this.servidorValidaMvto = servidorValidaMvto;
		this.registro = registro;
		this.atendimento = atendimento;
		this.indImpressoPasta = indImpressoPasta;
		this.evolucoes = evolucoes;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mamEvoSq1")
	@Column(name = "SEQ", nullable = false, precision = 14, scale = 0)
	public Long getSeq() {
		return this.seq;
	}

	public void setSeq(Long seq) {
		this.seq = seq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EVO_SEQ")
	public MamEvolucoes getEvolucao() {
		return this.evolucao;
	}

	public void setEvolucao(MamEvolucoes evolucao) {
		this.evolucao = evolucao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TRG_SEQ")
	public MamTriagens getMamTriagens() {
		return this.mamTriagens;
	}

	public void setMamTriagens(MamTriagens mamTriagens) {
		this.mamTriagens = mamTriagens;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_CRIACAO", nullable = false)
	@NotNull
	public Date getDthrCriacao() {
		return this.dthrCriacao;
	}

	public void setDthrCriacao(Date dthrCriacao) {
		this.dthrCriacao = dthrCriacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_VALIDA", length = 7)
	public Date getDthrValida() {
		return this.dthrValida;
	}

	public void setDthrValida(Date dthrValida) {
		this.dthrValida = dthrValida;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_MVTO", length = 7)
	public Date getDthrMvto() {
		return this.dthrMvto;
	}

	public void setDthrMvto(Date dthrMvto) {
		this.dthrMvto = dthrMvto;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_VALIDA_MVTO", length = 7)
	public Date getDthrValidaMvto() {
		return this.dthrValidaMvto;
	}

	public void setDthrValidaMvto(Date dthrValidaMvto) {
		this.dthrValidaMvto = dthrValidaMvto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO", nullable = false)
	@NotNull
	public AipPacientes getPaciente() {
		return this.paciente;
	}

	public void setPaciente(AipPacientes paciente) {
		this.paciente = paciente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CON_NUMERO")
	public AacConsultas getConsulta() {
		return this.consulta;
	}

	public void setConsulta(AacConsultas consulta) {
		this.consulta = consulta;
	}

	@Column(name = "IND_PENDENTE", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioIndPendenteAmbulatorio getPendente() {
		return this.pendente;
	}

	public void setPendente(DominioIndPendenteAmbulatorio pendente) {
		this.pendente = pendente;
	}

	@Column(name = "IND_IMPRESSO", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getImpresso() {
		return this.impresso;
	}

	public void setImpresso(Boolean impresso) {
		this.impresso = impresso;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
			@NotNull
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(
			RapServidores servidor) {
		this.servidor = servidor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_VALIDA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_VALIDA", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorValida() {
		return this.servidorValida;
	}
	
	public void setServidorValida(RapServidores servidorValida) {
		this.servidorValida = servidorValida;
	}	
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_MVTO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_MVTO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorMvto() {
		return this.servidorMvto;
	}
	
	public void setServidorMvto(RapServidores servidorMvto) {
		this.servidorMvto = servidorMvto;
	}	
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_VALIDA_MVTO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_VALIDA_MVTO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorValidaMvto() {
		return this.servidorValidaMvto;
	}
	
	public void setServidorValidaMvto(RapServidores servidorValidaMvto) {
		this.servidorValidaMvto = servidorValidaMvto;
	}	

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RGT_SEQ")
	public MamRegistro getRegistro() {
		return this.registro;
	}

	public void setRegistro(MamRegistro registro) {
		this.registro = registro;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ATD_SEQ")
	public AghAtendimentos getAtendimento() {
		return atendimento;
	}

	public void setAtendimento(AghAtendimentos atendimento) {
		this.atendimento = atendimento;
	}

	@Column(name = "IND_IMPRESSO_PASTA", length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndImpressoPasta() {
		return this.indImpressoPasta;
	}

	public void setIndImpressoPasta(Boolean indImpressoPasta) {
		this.indImpressoPasta = indImpressoPasta;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "evolucao")
	public Set<MamEvolucoes> getEvolucoes() {
		return this.evolucoes;
	}

	public void setEvolucoes(Set<MamEvolucoes> evolucoes) {
		this.evolucoes = evolucoes;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "evolucao")
	public Set<MamRespostaEvolucoes> getRespostasEvolucoes() {
		return this.respostasEvolucoes;
	}

	public void setRespostasEvolucoes(Set<MamRespostaEvolucoes> respostasEvolucoes) {
		this.respostasEvolucoes = respostasEvolucoes;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "evolucao")
	public Set<MamItemEvolucoes> getItensEvolucoes() {
		return this.itensEvolucoes;
	}

	public void setItensEvolucoes(Set<MamItemEvolucoes> itensEvolucoes) {
		this.itensEvolucoes = itensEvolucoes;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}	
	
	
	public enum Fields {
		PAC_CODIGO("paciente.codigo"),
		CON_NUMERO("consulta.numero"), 
		DTHR_VALIDA_MVTO("dthrValidaMvto"),
		IND_PENDENTE("pendente"), 
		CONSULTA("consulta"), 
		DTHR_CRIACAO("dthrCriacao"), 
		PENDENTE("pendente"),
		DTHR_MOVIMENTO("dthrMvto"), 
		SEQ("seq"), 
		EVO_SEQ("evolucao.seq"), 
		EVOLUCAO("evolucao"),
		EVOLUCOES("evolucoes"),
		ITENS_EVOLUCOES("itensEvolucoes"), 
		DTHR_VALIDA("dthrValida"), 
		REGISTRO("registro"),
		TRG_SEQ("mamTriagens.seq"), 
		RGT_SEQ("registro.seq"), 
		ATENDIMENTO("atendimento"),
		SERVIDOR("servidor"),
		SERVIDOR_MATRICULA("servidor.id.matricula"), 
		SERVIDOR_VIN_CODIGO("servidor.id.vinCodigo"),
		SERVIDOR_MATRICULA_VALIDA("servidorValida.id.matricula"), 
		SERVIDOR_VIN_CODIGO_VALIDA("servidorValida.id.vinCodigo"),
		RESPOSTA("respostasEvolucoes");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}

	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MamEvolucoes)) {
			return false;
		}
		MamEvolucoes other = (MamEvolucoes) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MamImpDiagnostica generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mamImtSq1", sequenceName="AGH.MAM_IMT_SQ1", allocationSize = 1)
@Table(name = "MAM_IMP_DIAGNOSTICAS", schema = "AGH")
public class MamImpDiagnostica extends BaseEntitySeq<Long> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5873579199741697690L;
	private Long seq;
	private Integer version;
	private RapServidores rapServidoresByMamImtSerFk3;
	private MamImpDiagnostica mamImpDiagnostica;
	private AacConsultas aacConsultas;
	private RapServidores rapServidoresByMamImtSerFk1;
	private RapServidores rapServidoresByMamImtSerFk4;
	private MamRegistro mamRegistro;
	private RapServidores rapServidoresByMamImtSerFk2;
	private AipPacientes aipPacientes;
	private Date dthrCriacao;
	private Date dthrValida;
	private Date dthrMvto;
	private Date dthrValidaMvto;
	private String indPendente;
	private Long trgSeq;
	private Set<MamImpDiagXCid> mamImpDiagXCides = new HashSet<MamImpDiagXCid>(0);
	private Set<MamImpDiagnostica> mamImpDiagnosticaes = new HashSet<MamImpDiagnostica>(0);

	public MamImpDiagnostica() {
	}

	public MamImpDiagnostica(Long seq, RapServidores rapServidoresByMamImtSerFk1, AipPacientes aipPacientes, Date dthrCriacao,
			String indPendente) {
		this.seq = seq;
		this.rapServidoresByMamImtSerFk1 = rapServidoresByMamImtSerFk1;
		this.aipPacientes = aipPacientes;
		this.dthrCriacao = dthrCriacao;
		this.indPendente = indPendente;
	}

	public MamImpDiagnostica(Long seq, RapServidores rapServidoresByMamImtSerFk3, MamImpDiagnostica mamImpDiagnostica,
			AacConsultas aacConsultas, RapServidores rapServidoresByMamImtSerFk1, RapServidores rapServidoresByMamImtSerFk4,
			MamRegistro mamRegistro, RapServidores rapServidoresByMamImtSerFk2, AipPacientes aipPacientes, Date dthrCriacao,
			Date dthrValida, Date dthrMvto, Date dthrValidaMvto, String indPendente, Long trgSeq,
			Set<MamImpDiagXCid> mamImpDiagXCides, Set<MamImpDiagnostica> mamImpDiagnosticaes) {
		this.seq = seq;
		this.rapServidoresByMamImtSerFk3 = rapServidoresByMamImtSerFk3;
		this.mamImpDiagnostica = mamImpDiagnostica;
		this.aacConsultas = aacConsultas;
		this.rapServidoresByMamImtSerFk1 = rapServidoresByMamImtSerFk1;
		this.rapServidoresByMamImtSerFk4 = rapServidoresByMamImtSerFk4;
		this.mamRegistro = mamRegistro;
		this.rapServidoresByMamImtSerFk2 = rapServidoresByMamImtSerFk2;
		this.aipPacientes = aipPacientes;
		this.dthrCriacao = dthrCriacao;
		this.dthrValida = dthrValida;
		this.dthrMvto = dthrMvto;
		this.dthrValidaMvto = dthrValidaMvto;
		this.indPendente = indPendente;
		this.trgSeq = trgSeq;
		this.mamImpDiagXCides = mamImpDiagXCides;
		this.mamImpDiagnosticaes = mamImpDiagnosticaes;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mamImtSq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Long getSeq() {
		return this.seq;
	}

	public void setSeq(Long seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_MVTO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_MVTO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMamImtSerFk3() {
		return this.rapServidoresByMamImtSerFk3;
	}

	public void setRapServidoresByMamImtSerFk3(RapServidores rapServidoresByMamImtSerFk3) {
		this.rapServidoresByMamImtSerFk3 = rapServidoresByMamImtSerFk3;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IMT_SEQ")
	public MamImpDiagnostica getMamImpDiagnostica() {
		return this.mamImpDiagnostica;
	}

	public void setMamImpDiagnostica(MamImpDiagnostica mamImpDiagnostica) {
		this.mamImpDiagnostica = mamImpDiagnostica;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CON_NUMERO")
	public AacConsultas getAacConsultas() {
		return this.aacConsultas;
	}

	public void setAacConsultas(AacConsultas aacConsultas) {
		this.aacConsultas = aacConsultas;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByMamImtSerFk1() {
		return this.rapServidoresByMamImtSerFk1;
	}

	public void setRapServidoresByMamImtSerFk1(RapServidores rapServidoresByMamImtSerFk1) {
		this.rapServidoresByMamImtSerFk1 = rapServidoresByMamImtSerFk1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_VALIDA_MVTO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_VALIDA_MVTO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMamImtSerFk4() {
		return this.rapServidoresByMamImtSerFk4;
	}

	public void setRapServidoresByMamImtSerFk4(RapServidores rapServidoresByMamImtSerFk4) {
		this.rapServidoresByMamImtSerFk4 = rapServidoresByMamImtSerFk4;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RGT_SEQ")
	public MamRegistro getMamRegistro() {
		return this.mamRegistro;
	}

	public void setMamRegistro(MamRegistro mamRegistro) {
		this.mamRegistro = mamRegistro;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_VALIDA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_VALIDA", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMamImtSerFk2() {
		return this.rapServidoresByMamImtSerFk2;
	}

	public void setRapServidoresByMamImtSerFk2(RapServidores rapServidoresByMamImtSerFk2) {
		this.rapServidoresByMamImtSerFk2 = rapServidoresByMamImtSerFk2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO", nullable = false)
	public AipPacientes getAipPacientes() {
		return this.aipPacientes;
	}

	public void setAipPacientes(AipPacientes aipPacientes) {
		this.aipPacientes = aipPacientes;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_CRIACAO", nullable = false, length = 29)
	public Date getDthrCriacao() {
		return this.dthrCriacao;
	}

	public void setDthrCriacao(Date dthrCriacao) {
		this.dthrCriacao = dthrCriacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_VALIDA", length = 29)
	public Date getDthrValida() {
		return this.dthrValida;
	}

	public void setDthrValida(Date dthrValida) {
		this.dthrValida = dthrValida;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_MVTO", length = 29)
	public Date getDthrMvto() {
		return this.dthrMvto;
	}

	public void setDthrMvto(Date dthrMvto) {
		this.dthrMvto = dthrMvto;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_VALIDA_MVTO", length = 29)
	public Date getDthrValidaMvto() {
		return this.dthrValidaMvto;
	}

	public void setDthrValidaMvto(Date dthrValidaMvto) {
		this.dthrValidaMvto = dthrValidaMvto;
	}

	@Column(name = "IND_PENDENTE", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndPendente() {
		return this.indPendente;
	}

	public void setIndPendente(String indPendente) {
		this.indPendente = indPendente;
	}

	@Column(name = "TRG_SEQ")
	public Long getTrgSeq() {
		return this.trgSeq;
	}

	public void setTrgSeq(Long trgSeq) {
		this.trgSeq = trgSeq;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mamImpDiagnostica")
	public Set<MamImpDiagXCid> getMamImpDiagXCides() {
		return this.mamImpDiagXCides;
	}

	public void setMamImpDiagXCides(Set<MamImpDiagXCid> mamImpDiagXCides) {
		this.mamImpDiagXCides = mamImpDiagXCides;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mamImpDiagnostica")
	public Set<MamImpDiagnostica> getMamImpDiagnosticaes() {
		return this.mamImpDiagnosticaes;
	}

	public void setMamImpDiagnosticaes(Set<MamImpDiagnostica> mamImpDiagnosticaes) {
		this.mamImpDiagnosticaes = mamImpDiagnosticaes;
	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		RAP_SERVIDORES_BY_MAM_IMT_SER_FK3("rapServidoresByMamImtSerFk3"),
		MAM_IMP_DIAGNOSTICAS("mamImpDiagnostica"),
		AAC_CONSULTAS("aacConsultas"),
		RAP_SERVIDORES_BY_MAM_IMT_SER_FK1("rapServidoresByMamImtSerFk1"),
		RAP_SERVIDORES_BY_MAM_IMT_SER_FK4("rapServidoresByMamImtSerFk4"),
		MAM_REGISTRO("mamRegistro"),
		RAP_SERVIDORES_BY_MAM_IMT_SER_FK2("rapServidoresByMamImtSerFk2"),
		AIP_PACIENTES("aipPacientes"),
		DTHR_CRIACAO("dthrCriacao"),
		DTHR_VALIDA("dthrValida"),
		DTHR_MVTO("dthrMvto"),
		DTHR_VALIDA_MVTO("dthrValidaMvto"),
		IND_PENDENTE("indPendente"),
		TRG_SEQ("trgSeq"),
		MAM_IMP_DIAG_X_CIDES("mamImpDiagXCides"),
		MAM_IMP_DIAGNOSTICAES("mamImpDiagnosticaes"),
		RGT_SEQ("mamRegistro.seq"),
		CON_NUMERO("aacConsultas.numero");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MamImpDiagnostica)) {
			return false;
		}
		MamImpDiagnostica other = (MamImpDiagnostica) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

// Generated 14/09/2010 17:49:55 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AssociationOverride;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;


import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioIndPendenteItemPrescricao;
import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.exception.BusinessExceptionCode;
import br.gov.mec.aghu.core.utils.DateUtil;

/**
 * MpmPrescricaoDietas generated by hbm2java
 */

@Entity
@Table(name = "MPM_PRESCRICAO_DIETAS", schema = "AGH")
@AssociationOverride(name = "servidorMovimentado", joinColumns = {
		@JoinColumn(name = "SER_MATRICULA_MOVIMENTADA"),
		@JoinColumn(name = "SER_VIN_CODIGO_MOVIMENTADA") })
public class MpmPrescricaoDieta extends ItemPrescricaoMedica<MpmPrescricaoDietaId> implements Cloneable{

	/**
	 * 
	 */
	private static final long serialVersionUID = 7226787635996732505L;
	private static final String MSG_AVAL_NUTRICIONISTA = "Avaliação Nutricionista;";
	private static final String MSG_BI = "BI;";

	private MpmPrescricaoDietaId id;
	private MpmPrescricaoDieta mpmPrescricaoDietas;
	private RapServidores rapServidores;
	private Boolean indAvalNutricionista;
	private Boolean indItemRecomendadoAlta;
	private Date dthrInicio;
	private String observacao;
	private Boolean indItemRecTransferencia;
	private Boolean indBombaInfusao;
	private Set<MpmItemPrescricaoDieta> itemPrescricaoDieta = new HashSet<MpmItemPrescricaoDieta>(
			0);
	private Set<MpmPrescricaoDieta> prescricaoDieta = new HashSet<MpmPrescricaoDieta>(
			0);

	private enum PrescricaoDietasExceptionCode implements BusinessExceptionCode {
		ERRO_DATA_FIM_MENOR_DATA_INICIO, ERRO_ITEM_RECOMENDADO_ALTA_PENDENTE
	}

	private Integer version;
	private Integer pdtAtdSeqPrcrAnt;
	private Long pdtSeqPrcrAnt;

	public MpmPrescricaoDieta() {
	}

	public MpmPrescricaoDieta(MpmPrescricaoDietaId id) {
		this.id = id;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "atdSeq", column = @Column(name = "ATD_SEQ", nullable = false, precision = 7, scale = 0)),
			@AttributeOverride(name = "seq", column = @Column(name = "SEQ", nullable = false, precision = 14, scale = 0)) })
	public MpmPrescricaoDietaId getId() {
		return this.id;
	}

	public void setId(MpmPrescricaoDietaId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "PDT_ATD_SEQ", referencedColumnName = "ATD_SEQ"),
			@JoinColumn(name = "PDT_SEQ", referencedColumnName = "SEQ") })
	public MpmPrescricaoDieta getMpmPrescricaoDietas() {
		return this.mpmPrescricaoDietas;
	}

	public void setMpmPrescricaoDietas(MpmPrescricaoDieta mpmPrescricaoDietas) {
		this.mpmPrescricaoDietas = mpmPrescricaoDietas;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@Column(name = "IND_AVAL_NUTRICIONISTA", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndAvalNutricionista() {
		return this.indAvalNutricionista;
	}

	public void setIndAvalNutricionista(Boolean indAvalNutricionista) {
		this.indAvalNutricionista = indAvalNutricionista;
	}

	/**
	 * Indica se o item foi recomendado na alta.
	 * 
	 * @return
	 */
	@Column(name = "IND_ITEM_RECOMENDADO_ALTA", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndItemRecomendadoAlta() {
		return this.indItemRecomendadoAlta;
	}

	public void setIndItemRecomendadoAlta(Boolean indItemRecomendadoAlta) {
		this.indItemRecomendadoAlta = indItemRecomendadoAlta;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_INICIO", nullable = false, length = 7)
	public Date getDthrInicio() {
		return this.dthrInicio;
	}

	public void setDthrInicio(Date dthrInicio) {
		this.dthrInicio = dthrInicio;
	}

	@Column(name = "OBSERVACAO", length = 500)
	@Length(max = 500)
	public String getObservacao() {
		return this.observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}

	@Column(name = "IND_ITEM_REC_TRANSFERENCIA", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndItemRecTransferencia() {
		return this.indItemRecTransferencia;
	}

	public void setIndItemRecTransferencia(Boolean indItemRecTransferencia) {
		this.indItemRecTransferencia = indItemRecTransferencia;
	}

	@Column(name = "IND_BOMBA_INFUSAO", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndBombaInfusao() {
		return this.indBombaInfusao;
	}

	public void setIndBombaInfusao(Boolean indBombaInfusao) {
		this.indBombaInfusao = indBombaInfusao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "prescricaoDieta")
	public Set<MpmItemPrescricaoDieta> getItemPrescricaoDieta() {
		return this.itemPrescricaoDieta;
	}

	public void setItemPrescricaoDieta(
			Set<MpmItemPrescricaoDieta> itemPrescricaoDieta) {
		this.itemPrescricaoDieta = itemPrescricaoDieta;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mpmPrescricaoDietas")
	public Set<MpmPrescricaoDieta> getPrescricaoDieta() {
		return this.prescricaoDieta;
	}

	public void setPrescricaoDieta(Set<MpmPrescricaoDieta> prescricaoDieta) {
		this.prescricaoDieta = prescricaoDieta;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	// outros
	@Column(name = "PDT_ATD_SEQ_PRCR_ANT", length = 9)
	public Integer getPdtAtdSeqPrcrAnt() {
		return pdtAtdSeqPrcrAnt;
	}

	public void setPdtAtdSeqPrcrAnt(Integer pdtAtdSeqPrcrAnt) {
		this.pdtAtdSeqPrcrAnt = pdtAtdSeqPrcrAnt;
	}

	@Column(name = "PDT_SEQ_PRCR_ANT", length = 14)
	public Long getPdtSeqPrcrAnt() {
		return pdtSeqPrcrAnt;
	}

	public void setPdtSeqPrcrAnt(Long pdtSeqPrcrAnt) {
		this.pdtSeqPrcrAnt = pdtSeqPrcrAnt;
	}

	@Override
	public int hashCode() {
		return new HashCodeBuilder().append(this.id).toHashCode();
	}

	@Override
	public boolean equals(Object other) {
		if (!(other instanceof MpmPrescricaoDieta)) {
			return false;
		}
		MpmPrescricaoDieta castOther = (MpmPrescricaoDieta) other;
		return new EqualsBuilder().append(this.id, castOther.getId())
				.isEquals();
	}

	@Override
	public String toString() {
		return new ToStringBuilder(this).append("id", this.id).toString();
	}

	/**
	 * Função de validação dos dados antes que ocorra a persistência.
	 */
	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void valida() {

		// CONSTRAINT MPM_PDT_CK4
		if (!(this.dthrFim == null || (this.dthrFim != null && DateUtil
				.validaDataMaiorIgual(this.dthrFim, this.dthrInicio)))) {
			throw new BaseRuntimeException(
					PrescricaoDietasExceptionCode.ERRO_DATA_FIM_MENOR_DATA_INICIO);
		}

		// CONSTRAINT MPM_PDT_CK5
		// (ind_item_recomendado_alta = 'S' and ind_pendente = 'N') or
		// (ind_item_recomendado_alta = 'N')
		// O item recomendado na alta deve estar confirmado.
		if (this.indItemRecomendadoAlta
				&& !DominioIndPendenteItemPrescricao.N.equals(this.indPendente)) {
			throw new BaseRuntimeException(
					PrescricaoDietasExceptionCode.ERRO_ITEM_RECOMENDADO_ALTA_PENDENTE);
		}
		// if (!(((this.indItemRecomendadoAlta != null &&
		// this.indItemRecomendadoAlta) && (this.indItemRecomendadoAlta != null
		// && !this.indItemRecomendadoAlta)) || (this.indItemRecomendadoAlta !=
		// null && !this.indItemRecomendadoAlta))) {
		// throw new BaseRuntimeException(
		// PrescricaoDietasExceptionCode.ERRO_ITEM_RECOMENDADO_ALTA_PENDENTE);
		// }

	}

	/**
	 * FIELDS
	 * 
	 * @author bsoliveira
	 * 
	 */
	public enum Fields {
		MPM_PRECRICAO_DIETA_ID("id"), ATD_SEQ("id.atdSeq"), SEQ("id.seq"),
				MPM_PRESCRICAO_MEDICA("prescricaoMedica"), MPM_PRESCRICAO_MEDICA_ID(
				"prescricaoMedica.id"), PME_SEQ("prescricaoMedica.id.seq"), MPM_PRESCRICAO_DIETA(
				"mpmPrescricaoDietas"), MPM_PRESCRICAO_DIETA_SEQ("mpmPrescricaoDietas.id.seq"),
				MPM_PRESCRICAO_DIETA_ATD_SEQ("mpmPrescricaoDietas.id.atdSeq"),
				RAP_SERVIDORES("rapServidores"), RAP_SERVIDORES_MOV(
				"servidorMovimentado"), IND_PENDENTE("indPendente"), IND_AVAL_NUTRICIONISTA(
				"indAvalNutricionista"), DTHR_INICIO("dthrInicio"), CRIADO_EM(
				"criadoEm"), DTHR_FIM("dthrFim"), OBSERVACAO("observacao"), ALTERADO_EM(
				"alteradoEm"), IND_ITEM_REC_TRANSFERENCIA(
				"indItemRecTransferencia"), IND_BOMBA_INFUSAO("indBombaInfusao"), SET_MPM_ITEM_PRESCRICAO_DIETA(
				"itemPrescricaoDieta"), SET_MPM_PRESCRICAO_DIETA(
				"prescricaoDieta"), IND_ITEM_RECOMENDADO_ALTA(
				"indItemRecomendadoAlta"),
				SERVIDOR_VALIDACAO("servidorValidacao");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	/**
	 * Retorna descrição formatada.
	 * 
	 * bsoliveira 01/10/2010
	 * 
	 * PROCEDURE MPMP_POPULA_DIETA
	 * 
	 */
	@Override
	@Transient
	public String getDescricaoFormatada() {

		final String ESPACAMENTO = " ";
		StringBuffer descricao = new StringBuffer();

		Set<MpmItemPrescricaoDieta> setItemPrescricaoDieta = this
				.getItemPrescricaoDieta();

		for (MpmItemPrescricaoDieta itemPrescricaoDieta : setItemPrescricaoDieta) {

			descricao.append(itemPrescricaoDieta.getDescricaoFormatada());

		}

		if (this.indAvalNutricionista != null
				&& this.indAvalNutricionista.booleanValue()) {

			descricao.append(MSG_AVAL_NUTRICIONISTA).append(ESPACAMENTO);

		}

		if (this.indBombaInfusao != null && this.indBombaInfusao.booleanValue()) {

			descricao.append(MSG_BI).append(ESPACAMENTO);

		}

		if (this.observacao != null) {

			descricao.append(this.observacao).append(';');

		}

		return descricao.toString().trim();

	}

	@Override
	@Transient
	public ItemPrescricaoMedica getAnterior() {
		return this.getMpmPrescricaoDietas();
	}

	@Override
	public Object clone() throws CloneNotSupportedException{
		return super.clone();
	}
	
	@Override
	@Transient
	public boolean possuiFilhos() {
		return prescricaoDieta.size() > 0;
	}
	
}

package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AesRegime generated by hbm2java
 */
@Entity
@Table(name = "AES_REGIMES", schema = "AGH")
public class AesRegime extends BaseEntityId<AesRegimeId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 8476702871317656676L;
	private AesRegimeId id;
	private Integer version;
	private AesTipoRegime aesTipoRegime;
	private AesSubgrupoTrabalho aesSubgrupoTrabalho;
	private RapServidores rapServidoresByAesRegSerFk1;
	private RapServidores rapServidoresByAesRegSerFk2;
	private Date dtInicio;
	private Date dtFim;
	private Short horasFolga;
	private Set<AesEscala> aesEscalaes = new HashSet<AesEscala>(0);
	private Set<AesModificacaoEscEncerrada> aesModificacaoEscEncerradas = new HashSet<AesModificacaoEscEncerrada>(0);

	public AesRegime() {
	}

	public AesRegime(AesRegimeId id, AesTipoRegime aesTipoRegime, AesSubgrupoTrabalho aesSubgrupoTrabalho,
			RapServidores rapServidoresByAesRegSerFk1, RapServidores rapServidoresByAesRegSerFk2, Date dtInicio) {
		this.id = id;
		this.aesTipoRegime = aesTipoRegime;
		this.aesSubgrupoTrabalho = aesSubgrupoTrabalho;
		this.rapServidoresByAesRegSerFk1 = rapServidoresByAesRegSerFk1;
		this.rapServidoresByAesRegSerFk2 = rapServidoresByAesRegSerFk2;
		this.dtInicio = dtInicio;
	}

	public AesRegime(AesRegimeId id, AesTipoRegime aesTipoRegime, AesSubgrupoTrabalho aesSubgrupoTrabalho,
			RapServidores rapServidoresByAesRegSerFk1, RapServidores rapServidoresByAesRegSerFk2, Date dtInicio, Date dtFim,
			Short horasFolga, Set<AesEscala> aesEscalaes, Set<AesModificacaoEscEncerrada> aesModificacaoEscEncerradas) {
		this.id = id;
		this.aesTipoRegime = aesTipoRegime;
		this.aesSubgrupoTrabalho = aesSubgrupoTrabalho;
		this.rapServidoresByAesRegSerFk1 = rapServidoresByAesRegSerFk1;
		this.rapServidoresByAesRegSerFk2 = rapServidoresByAesRegSerFk2;
		this.dtInicio = dtInicio;
		this.dtFim = dtFim;
		this.horasFolga = horasFolga;
		this.aesEscalaes = aesEscalaes;
		this.aesModificacaoEscEncerradas = aesModificacaoEscEncerradas;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "serMatricula", column = @Column(name = "SER_MATRICULA", nullable = false)),
			@AttributeOverride(name = "serVinCodigo", column = @Column(name = "SER_VIN_CODIGO", nullable = false)),
			@AttributeOverride(name = "seq", column = @Column(name = "SEQ", nullable = false)) })
	public AesRegimeId getId() {
		return this.id;
	}

	public void setId(AesRegimeId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TRE_CODIGO", nullable = false)
	public AesTipoRegime getAesTipoRegime() {
		return this.aesTipoRegime;
	}

	public void setAesTipoRegime(AesTipoRegime aesTipoRegime) {
		this.aesTipoRegime = aesTipoRegime;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "STR_GTR_ARE_CODIGO", referencedColumnName = "GTR_ARE_CODIGO", nullable = false),
			@JoinColumn(name = "STR_GTR_CCT_CODIGO", referencedColumnName = "GTR_CCT_CODIGO", nullable = false),
			@JoinColumn(name = "STR_GTR_TGT_CODIGO", referencedColumnName = "GTR_TGT_CODIGO", nullable = false),
			@JoinColumn(name = "STR_CODIGO", referencedColumnName = "CODIGO", nullable = false) })
	public AesSubgrupoTrabalho getAesSubgrupoTrabalho() {
		return this.aesSubgrupoTrabalho;
	}

	public void setAesSubgrupoTrabalho(AesSubgrupoTrabalho aesSubgrupoTrabalho) {
		this.aesSubgrupoTrabalho = aesSubgrupoTrabalho;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false, insertable = false, updatable = false) })
	public RapServidores getRapServidoresByAesRegSerFk1() {
		return this.rapServidoresByAesRegSerFk1;
	}

	public void setRapServidoresByAesRegSerFk1(RapServidores rapServidoresByAesRegSerFk1) {
		this.rapServidoresByAesRegSerFk1 = rapServidoresByAesRegSerFk1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_E_MANTIDO", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO_E_MANTIDO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByAesRegSerFk2() {
		return this.rapServidoresByAesRegSerFk2;
	}

	public void setRapServidoresByAesRegSerFk2(RapServidores rapServidoresByAesRegSerFk2) {
		this.rapServidoresByAesRegSerFk2 = rapServidoresByAesRegSerFk2;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_INICIO", nullable = false, length = 29)
	public Date getDtInicio() {
		return this.dtInicio;
	}

	public void setDtInicio(Date dtInicio) {
		this.dtInicio = dtInicio;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_FIM", length = 29)
	public Date getDtFim() {
		return this.dtFim;
	}

	public void setDtFim(Date dtFim) {
		this.dtFim = dtFim;
	}

	@Column(name = "HORAS_FOLGA")
	public Short getHorasFolga() {
		return this.horasFolga;
	}

	public void setHorasFolga(Short horasFolga) {
		this.horasFolga = horasFolga;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "aesRegime")
	public Set<AesEscala> getAesEscalaes() {
		return this.aesEscalaes;
	}

	public void setAesEscalaes(Set<AesEscala> aesEscalaes) {
		this.aesEscalaes = aesEscalaes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "aesRegime")
	public Set<AesModificacaoEscEncerrada> getAesModificacaoEscEncerradas() {
		return this.aesModificacaoEscEncerradas;
	}

	public void setAesModificacaoEscEncerradas(Set<AesModificacaoEscEncerrada> aesModificacaoEscEncerradas) {
		this.aesModificacaoEscEncerradas = aesModificacaoEscEncerradas;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		AES_TIPOS_REGIME("aesTipoRegime"),
		AES_SUBGRUPOS_TRABALHO("aesSubgrupoTrabalho"),
		RAP_SERVIDORES_BY_AES_REG_SER_FK1("rapServidoresByAesRegSerFk1"),
		RAP_SERVIDORES_BY_AES_REG_SER_FK2("rapServidoresByAesRegSerFk2"),
		DT_INICIO("dtInicio"),
		DT_FIM("dtFim"),
		HORAS_FOLGA("horasFolga"),
		AES_ESCALAES("aesEscalaes"),
		AES_MODIFICACAO_ESC_ENCERRADAS("aesModificacaoEscEncerradas");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AesRegime)) {
			return false;
		}
		AesRegime other = (AesRegime) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

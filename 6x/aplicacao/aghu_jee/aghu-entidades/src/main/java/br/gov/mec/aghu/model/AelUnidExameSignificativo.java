package br.gov.mec.aghu.model;

// Generated 18/03/2011 10:47:15 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AelUnidExameSignificativos generated by hbm2java
 */
@Entity
@Table(name = "AEL_UNID_EXAME_SIGNIFICATIVOS", schema = "AGH")
public class AelUnidExameSignificativo extends BaseEntityId<AelUnidExameSignificativoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2595162548763688225L;
	private AelUnidExameSignificativoId id;
	private Integer version;
	private Date criadoEm;
	private Integer serMatricula;
	private Short serVinCodigo;
	private String indPrenatal;
	private Boolean indCargaExame;
	
	/*
	 * ADICIONADOS PARA FAZER O JOIN NA CRITERIA (insertable = false, updatable = false)
	 */
	private AelExamesMaterialAnalise aelExamesMaterialAnalise;
	private AghUnidadesFuncionais aghUnidadesFuncionais;
	

	public AelUnidExameSignificativo() {
	}

	public AelUnidExameSignificativo(AelUnidExameSignificativoId id,
			Date criadoEm, Integer serMatricula, Short serVinCodigo) {
		this.id = id;
		this.criadoEm = criadoEm;
		this.serMatricula = serMatricula;
		this.serVinCodigo = serVinCodigo;
	}

	public AelUnidExameSignificativo(AelUnidExameSignificativoId id,
			Date criadoEm, Integer serMatricula, Short serVinCodigo,
			String indPrenatal) {
		this.id = id;
		this.criadoEm = criadoEm;
		this.serMatricula = serMatricula;
		this.serVinCodigo = serVinCodigo;
		this.indPrenatal = indPrenatal;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "unfSeq", column = @Column(name = "UNF_SEQ", nullable = false)),
			@AttributeOverride(name = "emaExaSigla", column = @Column(name = "EMA_EXA_SIGLA", nullable = false, length = 5)),
			@AttributeOverride(name = "emaManSeq", column = @Column(name = "EMA_MAN_SEQ", nullable = false)) })
	public AelUnidExameSignificativoId getId() {
		return this.id;
	}

	public void setId(AelUnidExameSignificativoId id) {
		this.id = id;
	}
	
	/*
	 * ADICIONADO PARA FAZER O JOIN NA CRITERIA (insertable = false, updatable = false)
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "EMA_EXA_SIGLA", referencedColumnName = "EXA_SIGLA", insertable = false, updatable = false),
			@JoinColumn(name = "EMA_MAN_SEQ", referencedColumnName = "MAN_SEQ", insertable = false, updatable = false) })
	public AelExamesMaterialAnalise getAelExamesMaterialAnalise() {
		return this.aelExamesMaterialAnalise;
	}

	/*
	 * ADICIONADO PARA FAZER O JOIN NA CRITERIA (insertable = false, updatable = false)
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ", insertable = false, updatable = false)
	public AghUnidadesFuncionais getAghUnidadesFuncionais() {
		return this.aghUnidadesFuncionais;
	}
	
	/*
	 * ADICIONADO PARA FAZER O JOIN NA CRITERIA (insertable = false, updatable = false)
	 */
	public void setAelExamesMaterialAnalise(AelExamesMaterialAnalise aelExamesMaterialAnalise) {
		this.aelExamesMaterialAnalise = aelExamesMaterialAnalise;
	}

	/*
	 * ADICIONADO PARA FAZER O JOIN NA CRITERIA (insertable = false, updatable = false)
	 */
	public void setAghUnidadesFuncionais(AghUnidadesFuncionais aghUnidadesFuncionais) {
		this.aghUnidadesFuncionais = aghUnidadesFuncionais;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "SER_MATRICULA", nullable = false)
	public Integer getSerMatricula() {
		return this.serMatricula;
	}

	public void setSerMatricula(Integer serMatricula) {
		this.serMatricula = serMatricula;
	}

	@Column(name = "SER_VIN_CODIGO", nullable = false)
	public Short getSerVinCodigo() {
		return this.serVinCodigo;
	}

	public void setSerVinCodigo(Short serVinCodigo) {
		this.serVinCodigo = serVinCodigo;
	}

	@Column(name = "IND_PRENATAL", length = 1)
	@Length(max = 1)
	public String getIndPrenatal() {
		return this.indPrenatal;
	}

	public void setIndPrenatal(String indPrenatal) {
		this.indPrenatal = indPrenatal;
	}
	
	
	@Column(name = "IND_CARGA_EXAME", length = 1, nullable = false)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndCargaExame() {
		return indCargaExame;
	}

	public void setIndCargaExame(Boolean indCargaExame) {
		this.indCargaExame = indCargaExame;
	}



	public enum Fields {

		EMA_EXA_SIGLA("id.emaExaSigla"),
		EMA_MAN_SEQ("id.emaManSeq"),
		UNF_SEQ("id.unfSeq"),
		EXAME_MATERIAL_ANALISE("aelExamesMaterialAnalise"),
		UNIDADE_FUNCIONAL("aghUnidadesFuncionais"),
		IND_CARGA_EXAME("indCargaExame"),
		;
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AelUnidExameSignificativo)) {
			return false;
		}
		AelUnidExameSignificativo other = (AelUnidExameSignificativo) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

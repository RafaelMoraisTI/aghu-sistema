package br.gov.mec.aghu.model;

// Generated 25/10/2011 14:46:21 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

import br.gov.mec.aghu.dominio.DominioSituacaoMedicamento;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AfaItemGrupoApresMdtos generated by hbm2java
 */

@Entity
@Table(name = "AFA_ITEM_GRUPO_APRES_MDTOS", schema = "AGH")
public class AfaItemGrupoApresMdtos extends BaseEntityId<AfaItemGrupoApresMdtosId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 5946114417822106098L;
	private AfaItemGrupoApresMdtosId id;
	private Integer version;
	private AfaTipoApresentacaoMedicamento tipoApresentacaoMedicamento;
	private AfaGrupoApresMdtos grupoApresMdtos;
	private Date criadoEm;
	private RapServidores rapServidores;
	private DominioSituacaoMedicamento indSituacao;

	public AfaItemGrupoApresMdtos() {
	}

	public AfaItemGrupoApresMdtos(AfaItemGrupoApresMdtosId id,
			AfaTipoApresentacaoMedicamento afaTipoApresMdtos,
			AfaGrupoApresMdtos afaGrupoApresMdtos, Date criadoEm,
			DominioSituacaoMedicamento indSituacao) {
		this.id = id;
		this.tipoApresentacaoMedicamento = afaTipoApresMdtos;
		this.grupoApresMdtos = afaGrupoApresMdtos;
		this.criadoEm = criadoEm;
		this.indSituacao = indSituacao;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "gamSeq", column = @Column(name = "GAM_SEQ", nullable = false)),
			@AttributeOverride(name = "tprSigla", column = @Column(name = "TPR_SIGLA", nullable = false, length = 3)) })
	public AfaItemGrupoApresMdtosId getId() {
		return this.id;
	}
	
	public void setId(AfaItemGrupoApresMdtosId id) {
		this.id = id;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return rapServidores;
	}
	
	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacaoMedicamento getIndSituacao() {
		return this.indSituacao;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	public void setIndSituacao(DominioSituacaoMedicamento indSituacao) {
		this.indSituacao = indSituacao;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TPR_SIGLA", nullable = false, insertable = false, updatable = false)
	public AfaTipoApresentacaoMedicamento getTipoApresentacaoMedicamento() {
		return tipoApresentacaoMedicamento;
	}

	public void setTipoApresentacaoMedicamento(
			AfaTipoApresentacaoMedicamento tipoApresentacaoMedicamento) {
		this.tipoApresentacaoMedicamento = tipoApresentacaoMedicamento;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "GAM_SEQ", nullable = false, insertable = false, updatable = false)
	public AfaGrupoApresMdtos getGrupoApresMdtos() {
		return grupoApresMdtos;
	}

	public void setGrupoApresMdtos(AfaGrupoApresMdtos grupoApresMdtos) {
		this.grupoApresMdtos = grupoApresMdtos;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}
	
	public enum Fields {
		ID("id"),
		GRUPO_APRES_MDTOS("grupoApresMdtos"),
		TIPO_APRESENTACAO_MEDICAMENTO("tipoApresentacaoMedicamento"),
		CRIADO_EM("criadoEm"),
		RAP_SERVIDORES("rapServidores"),
		IND_SITUACAO("indSituacao"),
		SIGLA("id.tprSigla");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}
	
	@Override
	public int hashCode() {
		return new HashCodeBuilder().append(this.id).toHashCode();
	}

	@Override
	public boolean equals(Object other) {
		if (!(other instanceof AfaItemGrupoApresMdtos)) {
			return false;
		}
		AfaItemGrupoApresMdtos castOther = (AfaItemGrupoApresMdtos) other;
		return new EqualsBuilder().append(this.getId(), castOther.getId())
				.isEquals();
	}

	@Override
	public String toString() {
		return new ToStringBuilder(this).append("id", this.id).toString();
	}

}

package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * ScoExcMaterialTributacao generated by hbm2java
 */
@Entity
@Table(name = "SCO_EXC_MATERIAL_TRIBUTACOES", schema = "AGH")
public class ScoExcMaterialTributacao extends BaseEntityId<ScoExcMaterialTributacaoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 142482232429452989L;
	private ScoExcMaterialTributacaoId id;
	private Integer version;
	private RapServidores rapServidores;
	private ScoMaterial scoMaterial;
	private Integer friCodigo;
	private Date criadoEm;
	private Date alteradoEm;
	private Short gmtCodigo;
	private Long cn5Numero;
	private Date dtValidadeExc;
	private String tipoTributo;
	private String imposto;
	private Float aliquota;
	private Short crtCodigo;

	public ScoExcMaterialTributacao() {
	}

	public ScoExcMaterialTributacao(ScoExcMaterialTributacaoId id, RapServidores rapServidores, ScoMaterial scoMaterial,
			Date criadoEm) {
		this.id = id;
		this.rapServidores = rapServidores;
		this.scoMaterial = scoMaterial;
		this.criadoEm = criadoEm;
	}

	public ScoExcMaterialTributacao(ScoExcMaterialTributacaoId id, RapServidores rapServidores, ScoMaterial scoMaterial,
			Integer friCodigo, Date criadoEm, Date alteradoEm, Short gmtCodigo, Long cn5Numero, Date dtValidadeExc,
			String tipoTributo, String imposto, Float aliquota, Short crtCodigo) {
		this.id = id;
		this.rapServidores = rapServidores;
		this.scoMaterial = scoMaterial;
		this.friCodigo = friCodigo;
		this.criadoEm = criadoEm;
		this.alteradoEm = alteradoEm;
		this.gmtCodigo = gmtCodigo;
		this.cn5Numero = cn5Numero;
		this.dtValidadeExc = dtValidadeExc;
		this.tipoTributo = tipoTributo;
		this.imposto = imposto;
		this.aliquota = aliquota;
		this.crtCodigo = crtCodigo;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "matCodigo", column = @Column(name = "MAT_CODIGO", nullable = false)),
			@AttributeOverride(name = "classificacao", column = @Column(name = "CLASSIFICACAO", nullable = false, length = 1)) })
	public ScoExcMaterialTributacaoId getId() {
		return this.id;
	}

	public void setId(ScoExcMaterialTributacaoId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MAT_CODIGO", nullable = false, insertable = false, updatable = false)
	public ScoMaterial getScoMaterial() {
		return this.scoMaterial;
	}

	public void setScoMaterial(ScoMaterial scoMaterial) {
		this.scoMaterial = scoMaterial;
	}

	@Column(name = "FRI_CODIGO")
	public Integer getFriCodigo() {
		return this.friCodigo;
	}

	public void setFriCodigo(Integer friCodigo) {
		this.friCodigo = friCodigo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 29)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@Column(name = "GMT_CODIGO")
	public Short getGmtCodigo() {
		return this.gmtCodigo;
	}

	public void setGmtCodigo(Short gmtCodigo) {
		this.gmtCodigo = gmtCodigo;
	}

	@Column(name = "CN5_NUMERO")
	public Long getCn5Numero() {
		return this.cn5Numero;
	}

	public void setCn5Numero(Long cn5Numero) {
		this.cn5Numero = cn5Numero;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_VALIDADE_EXC", length = 29)
	public Date getDtValidadeExc() {
		return this.dtValidadeExc;
	}

	public void setDtValidadeExc(Date dtValidadeExc) {
		this.dtValidadeExc = dtValidadeExc;
	}

	@Column(name = "TIPO_TRIBUTO", length = 1)
	@Length(max = 1)
	public String getTipoTributo() {
		return this.tipoTributo;
	}

	public void setTipoTributo(String tipoTributo) {
		this.tipoTributo = tipoTributo;
	}

	@Column(name = "IMPOSTO", length = 10)
	@Length(max = 10)
	public String getImposto() {
		return this.imposto;
	}

	public void setImposto(String imposto) {
		this.imposto = imposto;
	}

	@Column(name = "ALIQUOTA", precision = 8, scale = 8)
	public Float getAliquota() {
		return this.aliquota;
	}

	public void setAliquota(Float aliquota) {
		this.aliquota = aliquota;
	}

	@Column(name = "CRT_CODIGO")
	public Short getCrtCodigo() {
		return this.crtCodigo;
	}

	public void setCrtCodigo(Short crtCodigo) {
		this.crtCodigo = crtCodigo;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		RAP_SERVIDORES("rapServidores"),
		SCO_MATERIAL("scoMaterial"),
		FRI_CODIGO("friCodigo"),
		CRIADO_EM("criadoEm"),
		ALTERADO_EM("alteradoEm"),
		GMT_CODIGO("gmtCodigo"),
		CN5_NUMERO("cn5Numero"),
		DT_VALIDADE_EXC("dtValidadeExc"),
		TIPO_TRIBUTO("tipoTributo"),
		IMPOSTO("imposto"),
		ALIQUOTA("aliquota"),
		CRT_CODIGO("crtCodigo");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof ScoExcMaterialTributacao)) {
			return false;
		}
		ScoExcMaterialTributacao other = (ScoExcMaterialTributacao) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

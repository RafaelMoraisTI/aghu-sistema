package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

import br.gov.mec.aghu.view.VMpmDosagem;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AfaItemNptPadrao generated by hbm2java
 */
@Entity
@Table(name = "AFA_ITEM_NPT_PADROES", schema = "AGH")
public class AfaItemNptPadrao extends BaseEntityId<AfaItemNptPadraoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 4487855002365239784L;
	private AfaItemNptPadraoId id;
	private Integer version;
	private AfaComposicaoNptPadrao afaComposicaoNptPadrao;
	private RapServidores rapServidores;
	private AfaFormaDosagem afaFormaDosagem;
	private AfaComponenteNpt afaComponenteNpt;
	private Double qtde;
	private Date criadoEm;
	private Date alteradoEm;
	private VMpmDosagem vMpmDosagem;


	public AfaItemNptPadrao() {
	}

	public AfaItemNptPadrao(AfaItemNptPadraoId id, AfaComposicaoNptPadrao afaComposicaoNptPadrao, RapServidores rapServidores,
			AfaFormaDosagem afaFormaDosagem, AfaComponenteNpt afaComponenteNpt, Date criadoEm) {
		this.id = id;
		this.afaComposicaoNptPadrao = afaComposicaoNptPadrao;
		this.rapServidores = rapServidores;
		this.afaFormaDosagem = afaFormaDosagem;
		this.afaComponenteNpt = afaComponenteNpt;
		this.criadoEm = criadoEm;
	}

	public AfaItemNptPadrao(AfaItemNptPadraoId id, AfaComposicaoNptPadrao afaComposicaoNptPadrao, RapServidores rapServidores,
			AfaFormaDosagem afaFormaDosagem, AfaComponenteNpt afaComponenteNpt, Double qtde, Date criadoEm, Date alteradoEm) {
		this.id = id;
		this.afaComposicaoNptPadrao = afaComposicaoNptPadrao;
		this.rapServidores = rapServidores;
		this.afaFormaDosagem = afaFormaDosagem;
		this.afaComponenteNpt = afaComponenteNpt;
		this.qtde = qtde;
		this.criadoEm = criadoEm;
		this.alteradoEm = alteradoEm;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "cntFnpSeq", column = @Column(name = "CNT_FNP_SEQ", nullable = false)),
			@AttributeOverride(name = "cntSeqp", column = @Column(name = "CNT_SEQP", nullable = false)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false)) })
	public AfaItemNptPadraoId getId() {
		return this.id;
	}

	public void setId(AfaItemNptPadraoId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CNT_FNP_SEQ", referencedColumnName = "FNP_SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CNT_SEQP", referencedColumnName = "SEQP", nullable = false, insertable = false, updatable = false) })
	public AfaComposicaoNptPadrao getAfaComposicaoNptPadrao() {
		return this.afaComposicaoNptPadrao;
	}

	public void setAfaComposicaoNptPadrao(AfaComposicaoNptPadrao afaComposicaoNptPadrao) {
		this.afaComposicaoNptPadrao = afaComposicaoNptPadrao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FDS_SEQ", nullable = false)
	public AfaFormaDosagem getAfaFormaDosagem() {
		return this.afaFormaDosagem;
	}

	public void setAfaFormaDosagem(AfaFormaDosagem afaFormaDosagem) {
		this.afaFormaDosagem = afaFormaDosagem;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CNP_MED_MAT_CODIGO", nullable = false)
	public AfaComponenteNpt getAfaComponenteNpt() {
		return this.afaComponenteNpt;
	}

	public void setAfaComponenteNpt(AfaComponenteNpt afaComponenteNpt) {
		this.afaComponenteNpt = afaComponenteNpt;
	}

	@Column(name = "QTDE", precision = 17, scale = 17)
	public Double getQtde() {
		return this.qtde;
	}

	public void setQtde(Double qtde) {
		this.qtde = qtde;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 29)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name="FDS_SEQ" ,referencedColumnName = "SEQ_DOSAGEM" ,insertable= false ,updatable= false)
	public VMpmDosagem getvMpmDosagem() {
        return vMpmDosagem;
	}

	public void setvMpmDosagem(VMpmDosagem vMpmDosagem) {
        this.vMpmDosagem = vMpmDosagem;
	}



	public enum Fields {

		ID("id"),
		VERSION("version"),
		AFA_COMPOSICAO_NPT_PADROES("afaComposicaoNptPadrao"),
		RAP_SERVIDORES("rapServidores"),
		AFA_FORMA_DOSAGEM("afaFormaDosagem"),
		AFA_COMPONENTE_NPT("afaComponenteNpt"),
		QTDE("qtde"),
		CRIADO_EM("criadoEm"),
		ALTERADO_EM("alteradoEm"),
		V_MPM_DOSAGEM("vMpmDosagem"),
		ID_CNT_FNP_SEQ("id.cntFnpSeq"),
		ID_CNT_SEQ_P("id.cntSeqp");


		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AfaItemNptPadrao)) {
			return false;
		}
		AfaItemNptPadrao other = (AfaItemNptPadrao) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

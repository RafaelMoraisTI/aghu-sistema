package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.exception.BusinessExceptionCode;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MbcDisponibilidadeHorario generated by hbm2java
 */
@Entity
@Table(name = "MBC_DISPONIBILIDADE_HORARIOS", schema = "AGH")
public class MbcDisponibilidadeHorario extends BaseEntityId<MbcDisponibilidadeHorarioId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2884586350873724078L;
	private MbcDisponibilidadeHorarioId id;
	private Integer version;
	private MbcSalaCirurgica mbcSalaCirurgica;
	private Date data;
	private Date dthrInicio;
	private Date dthrFim;

	private enum MbcDisponibilidadeHorarioExceptionCode implements BusinessExceptionCode {
		MBC_DPH_CK1
	}
	
	public MbcDisponibilidadeHorario() {
	}

	public MbcDisponibilidadeHorario(MbcDisponibilidadeHorarioId id, MbcSalaCirurgica mbcSalaCirurgica, Date data,
			Date dthrInicio, Date dthrFim) {
		this.id = id;
		this.mbcSalaCirurgica = mbcSalaCirurgica;
		this.data = data;
		this.dthrInicio = dthrInicio;
		this.dthrFim = dthrFim;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "sessionid", column = @Column(name = "SESSIONID", nullable = false, precision = 17, scale = 17)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false)) })
	public MbcDisponibilidadeHorarioId getId() {
		return this.id;
	}

	public void setId(MbcDisponibilidadeHorarioId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SCI_UNF_SEQ", referencedColumnName = "UNF_SEQ", nullable = false),
			@JoinColumn(name = "SCI_SEQP", referencedColumnName = "SEQP", nullable = false) })
	public MbcSalaCirurgica getMbcSalaCirurgica() {
		return this.mbcSalaCirurgica;
	}

	public void setMbcSalaCirurgica(MbcSalaCirurgica mbcSalaCirurgica) {
		this.mbcSalaCirurgica = mbcSalaCirurgica;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATA", nullable = false, length = 29)
	public Date getData() {
		return this.data;
	}

	public void setData(Date data) {
		this.data = data;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_INICIO", nullable = false, length = 29)
	public Date getDthrInicio() {
		return this.dthrInicio;
	}

	public void setDthrInicio(Date dthrInicio) {
		this.dthrInicio = dthrInicio;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_FIM", nullable = false, length = 29)
	public Date getDthrFim() {
		return this.dthrFim;
	}

	public void setDthrFim(Date dthrFim) {
		this.dthrFim = dthrFim;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		MBC_SALA_CIRURGICA("mbcSalaCirurgica"),
		DATA("data"),
		DTHR_INICIO("dthrInicio"),
		DTHR_FIM("dthrFim"),
		SCI_UNF_SEQ("mbcSalaCirurgica.id.unfSeq"),
		SCI_SEQP("mbcSalaCirurgica.id.seqp");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MbcDisponibilidadeHorario)) {
			return false;
		}
		MbcDisponibilidadeHorario other = (MbcDisponibilidadeHorario) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####
	
	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void validacoes() {
		if (this.dthrInicio.after(this.dthrFim)) {
			throw new BaseRuntimeException(MbcDisponibilidadeHorarioExceptionCode.MBC_DPH_CK1);
		}
	}

}

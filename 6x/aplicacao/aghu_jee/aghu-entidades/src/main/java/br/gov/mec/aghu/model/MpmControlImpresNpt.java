package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MpmControlImpresNpt generated by hbm2java
 */
@Entity
@Table(name = "MPM_CONTROL_IMPRES_NPTS", schema = "AGH")
public class MpmControlImpresNpt extends BaseEntityId<MpmControlImpresNptId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7236758396771861700L;
	private MpmControlImpresNptId id;
	private Integer version;
	private MpmPrescricaoMedica mpmPrescricaoMedica;
	private MpmPrescricaoNpt mpmPrescricaoNpt;
	private String indImpressaoFarmacia;
	private String indImpressaoLaudo;
	private String indImpressaoFormMedico;

	public MpmControlImpresNpt() {
	}

	public MpmControlImpresNpt(MpmControlImpresNptId id, MpmPrescricaoMedica mpmPrescricaoMedica,
			MpmPrescricaoNpt mpmPrescricaoNpt) {
		this.id = id;
		this.mpmPrescricaoMedica = mpmPrescricaoMedica;
		this.mpmPrescricaoNpt = mpmPrescricaoNpt;
	}

	public MpmControlImpresNpt(MpmControlImpresNptId id, MpmPrescricaoMedica mpmPrescricaoMedica,
			MpmPrescricaoNpt mpmPrescricaoNpt, String indImpressaoFarmacia, String indImpressaoLaudo, String indImpressaoFormMedico) {
		this.id = id;
		this.mpmPrescricaoMedica = mpmPrescricaoMedica;
		this.mpmPrescricaoNpt = mpmPrescricaoNpt;
		this.indImpressaoFarmacia = indImpressaoFarmacia;
		this.indImpressaoLaudo = indImpressaoLaudo;
		this.indImpressaoFormMedico = indImpressaoFormMedico;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "pnpAtdSeq", column = @Column(name = "PNP_ATD_SEQ", nullable = false)),
			@AttributeOverride(name = "pnpSeq", column = @Column(name = "PNP_SEQ", nullable = false)),
			@AttributeOverride(name = "pmeAtdSeq", column = @Column(name = "PME_ATD_SEQ", nullable = false)),
			@AttributeOverride(name = "pmeSeq", column = @Column(name = "PME_SEQ", nullable = false)) })
	public MpmControlImpresNptId getId() {
		return this.id;
	}

	public void setId(MpmControlImpresNptId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "PME_ATD_SEQ", referencedColumnName = "ATD_SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "PME_SEQ", referencedColumnName = "SEQ", nullable = false, insertable = false, updatable = false) })
	public MpmPrescricaoMedica getMpmPrescricaoMedica() {
		return this.mpmPrescricaoMedica;
	}

	public void setMpmPrescricaoMedica(MpmPrescricaoMedica mpmPrescricaoMedica) {
		this.mpmPrescricaoMedica = mpmPrescricaoMedica;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "PNP_ATD_SEQ", referencedColumnName = "ATD_SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "PNP_SEQ", referencedColumnName = "SEQ", nullable = false, insertable = false, updatable = false) })
	public MpmPrescricaoNpt getMpmPrescricaoNpt() {
		return this.mpmPrescricaoNpt;
	}

	public void setMpmPrescricaoNpt(MpmPrescricaoNpt mpmPrescricaoNpt) {
		this.mpmPrescricaoNpt = mpmPrescricaoNpt;
	}

	@Column(name = "IND_IMPRESSAO_FARMACIA", length = 1)
	@Length(max = 1)
	public String getIndImpressaoFarmacia() {
		return this.indImpressaoFarmacia;
	}

	public void setIndImpressaoFarmacia(String indImpressaoFarmacia) {
		this.indImpressaoFarmacia = indImpressaoFarmacia;
	}

	@Column(name = "IND_IMPRESSAO_LAUDO", length = 1)
	@Length(max = 1)
	public String getIndImpressaoLaudo() {
		return this.indImpressaoLaudo;
	}

	public void setIndImpressaoLaudo(String indImpressaoLaudo) {
		this.indImpressaoLaudo = indImpressaoLaudo;
	}

	@Column(name = "IND_IMPRESSAO_FORM_MEDICO", length = 1)
	@Length(max = 1)
	public String getIndImpressaoFormMedico() {
		return this.indImpressaoFormMedico;
	}

	public void setIndImpressaoFormMedico(String indImpressaoFormMedico) {
		this.indImpressaoFormMedico = indImpressaoFormMedico;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		MPM_PRESCRICAO_MEDICA("mpmPrescricaoMedica"),
		MPM_PRESCRICAO_NPT("mpmPrescricaoNpt"),
		IND_IMPRESSAO_FARMACIA("indImpressaoFarmacia"),
		IND_IMPRESSAO_LAUDO("indImpressaoLaudo"),
		IND_IMPRESSAO_FORM_MEDICO("indImpressaoFormMedico");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MpmControlImpresNpt)) {
			return false;
		}
		MpmControlImpresNpt other = (MpmControlImpresNpt) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

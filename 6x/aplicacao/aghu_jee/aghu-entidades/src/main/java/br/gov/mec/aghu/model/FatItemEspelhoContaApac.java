package br.gov.mec.aghu.model;

// Generated 15/03/2011 13:46:58 by Hibernate Tools 3.2.5.Beta

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * FatItensEspelhosContaApac generated by hbm2java
 */
@Entity
@Table(name = "FAT_ITENS_ESPELHOS_CONTA_APAC", schema = "AGH")
public class FatItemEspelhoContaApac extends BaseEntityId<FatItemEspelhoContaApacId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 5529515293271743181L;
	private FatItemEspelhoContaApacId id;
	private FatItemContaApac fatItemContaApac;
	private FatEspelhoContaApac fatEspelhoContaApac;
	private FatItensProcedHospitalar itensProcedHospitalar;

	public FatItemEspelhoContaApac() {
	}

	public FatItemEspelhoContaApac(FatItemEspelhoContaApacId id) {
		this.id = id;
	}

	public FatItemEspelhoContaApac(FatItemEspelhoContaApacId id,
			FatItemContaApac fatItemContaApac,
			FatEspelhoContaApac fatEspelhoContaApac) {
		this.id = id;
		this.fatItemContaApac = fatItemContaApac;
		this.fatEspelhoContaApac = fatEspelhoContaApac;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "atvProfissional", column = @Column(name = "ATV_PROFISSIONAL", precision = 2, scale = 0)),
			@AttributeOverride(name = "capAtmNumero", column = @Column(name = "CAP_ATM_NUMERO", precision = 13, scale = 0)),
			@AttributeOverride(name = "capIcaSeqp", column = @Column(name = "CAP_ICA_SEQP", precision = 3, scale = 0)),
			@AttributeOverride(name = "capSeqp", column = @Column(name = "CAP_SEQP", precision = 2, scale = 0)),
			@AttributeOverride(name = "indConsistente", column = @Column(name = "IND_CONSISTENTE", length = 1)),
			@AttributeOverride(name = "iphPhoSeq", column = @Column(name = "IPH_PHO_SEQ", precision = 4, scale = 0)),
			@AttributeOverride(name = "iphSeq", column = @Column(name = "IPH_SEQ", precision = 8, scale = 0)),
			@AttributeOverride(name = "procedimentoHosp", column = @Column(name = "PROCEDIMENTO_HOSP", precision = 10, scale = 0)),
			@AttributeOverride(name = "quantidade", column = @Column(name = "QUANTIDADE", precision = 6, scale = 0)),
			@AttributeOverride(name = "seqpContinuacao", column = @Column(name = "SEQP_CONTINUACAO", precision = 1, scale = 0)),
			@AttributeOverride(name = "vlrAnestes", column = @Column(name = "VLR_ANESTES", precision = 14)),
			@AttributeOverride(name = "vlrProc", column = @Column(name = "VLR_PROC", precision = 14)),
			@AttributeOverride(name = "vlrSadt", column = @Column(name = "VLR_SADT", precision = 14)),
			@AttributeOverride(name = "vlrServHosp", column = @Column(name = "VLR_SERV_HOSP", precision = 14)),
			@AttributeOverride(name = "vlrServProf", column = @Column(name = "VLR_SERV_PROF", precision = 14)),
			@AttributeOverride(name = "fccSeq", column = @Column(name = "FCC_SEQ", precision = 5, scale = 0)),
			@AttributeOverride(name = "fcfSeq", column = @Column(name = "FCF_SEQ", precision = 5, scale = 0)),
			@AttributeOverride(name = "indTeto", column = @Column(name = "IND_TETO", length = 1)),
			@AttributeOverride(name = "codAtvProf", column = @Column(name = "COD_ATV_PROF", length = 6)) })
	public FatItemEspelhoContaApacId getId() {
		return this.id;
	}

	public void setId(FatItemEspelhoContaApacId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "CAP_ATM_NUMERO", referencedColumnName = "CAP_ATM_NUMERO", insertable = false, updatable = false),
			@JoinColumn(name = "CAP_SEQP", referencedColumnName = "CAP_SEQP", insertable = false, updatable = false),
			@JoinColumn(name = "CAP_ICA_SEQP", referencedColumnName = "SEQP", insertable = false, updatable = false) })
	public FatItemContaApac getFatItemContaApac() {
		return this.fatItemContaApac;
	}

	public void setFatItemContaApac(FatItemContaApac fatItemContaApac) {
		this.fatItemContaApac = fatItemContaApac;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "CAP_ATM_NUMERO", referencedColumnName = "CAP_ATM_NUMERO", insertable = false, updatable = false),
			@JoinColumn(name = "CAP_SEQP", referencedColumnName = "CAP_SEQP", insertable = false, updatable = false),
			@JoinColumn(name = "SEQP_CONTINUACAO", referencedColumnName = "SEQP_CONTINUACAO", insertable = false, updatable = false) })
	public FatEspelhoContaApac getFatEspelhoContaApac() {
		return this.fatEspelhoContaApac;
	}

	public void setFatEspelhoContaApac(
			FatEspelhoContaApac fatEspelhoContaApac) {
		this.fatEspelhoContaApac = fatEspelhoContaApac;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "IPH_PHO_SEQ", referencedColumnName = "PHO_SEQ", insertable = false, updatable = false),
			@JoinColumn(name = "IPH_SEQ", referencedColumnName = "SEQ", insertable = false, updatable = false) })
	public FatItensProcedHospitalar getItensProcedHospitalar() {
		return itensProcedHospitalar;
	}

	public void setItensProcedHospitalar(
			final FatItensProcedHospitalar itensProcedHospitalar) {
		this.itensProcedHospitalar = itensProcedHospitalar;
	}

	public enum Fields {

		ID("id"),
		FAT_ITEM_CONTA_APAC("fatItemContaApac"),
		FAT_ESPELHO_CONTA_APAC("fatEspelhoContaApac"),
		ITENS_PROCED_HOSPITALAR("itensProcedHospitalar"),
		IND_CONSISTENTE("id.indConsistente"),
		PROCEDIMENTO_HOSP("id.procedimentoHosp"),
		QUANTIDADE("id.quantidade");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof FatItemEspelhoContaApac)) {
			return false;
		}
		FatItemEspelhoContaApac other = (FatItemEspelhoContaApac) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

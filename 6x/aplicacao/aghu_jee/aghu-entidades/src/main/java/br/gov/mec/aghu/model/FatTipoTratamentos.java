package br.gov.mec.aghu.model;

// Generated 19/03/2010 17:30:52 by Hibernate Tools 3.2.5.Beta

import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * FatTipoTratamentos generated by hbm2java
 */
@Entity
@SequenceGenerator(name="fatTptSq1", sequenceName="AGH.FAT_TPT_SQ1", allocationSize = 1)
@Table(name = "FAT_TIPO_TRATAMENTOS", schema = "AGH")
public class FatTipoTratamentos extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5517350371097383018L;
	private Integer seq;
	private Integer codigo;
	private String descricao;
	
	private AghCid cid;
	private FatItensProcedHospitalar itemProcedimentoHospitalar;
	private FatItensProcedHospitalar itemProcedimentoHospitalarPrimCobr;
	private FatItensProcedHospitalar itemProcedimentoHospitalarSegCobr;
	private Integer version;

	private Set<MptTratamentoTerapeutico> tratamentosTerapeuticos;
	private Set<FatEspecialidadeTratamento> fatEspecialidadeTratamentos;
	
	
	
	public FatTipoTratamentos() {
	}

	public FatTipoTratamentos(Integer seq, Integer codigo, String descricao) {
		this.seq = seq;
		this.codigo = codigo;
		this.descricao = descricao;
	}


	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "fatTptSq1")
	@Column(name = "SEQ", nullable = false, precision = 6, scale = 0)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Column(name = "CODIGO", nullable = false, precision = 6, scale = 0)
	public Integer getCodigo() {
		return this.codigo;
	}

	public void setCodigo(Integer codigo) {
		this.codigo = codigo;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 60)
	@Length(max = 60)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tipoTratamento")
	public Set<MptTratamentoTerapeutico> getTratamentosTerapeuticos() {
		return tratamentosTerapeuticos;
	}

	public void setTratamentosTerapeuticos(
			Set<MptTratamentoTerapeutico> tratamentosTerapeuticos) {
		this.tratamentosTerapeuticos = tratamentosTerapeuticos;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CID_SEQ")
	public AghCid getCid() {
		return this.cid;
	}

	public void setCid(AghCid cid) {
		this.cid = cid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "IPH_PHO_SEQ", referencedColumnName = "PHO_SEQ"),
			@JoinColumn(name = "IPH_SEQ", referencedColumnName = "SEQ") })
	public FatItensProcedHospitalar getItemProcedimentoHospitalar() {
		return itemProcedimentoHospitalar;
	}

	public void setItemProcedimentoHospitalar(
			FatItensProcedHospitalar itemProcedimentoHospitalar) {
		this.itemProcedimentoHospitalar = itemProcedimentoHospitalar;
	}
	

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "IPH_PHO_SEQ_PRIMEIRA_COB", referencedColumnName = "PHO_SEQ"),
			@JoinColumn(name = "IPH_SEQ_PRIMEIRA_COB", referencedColumnName = "SEQ") })
	public FatItensProcedHospitalar getItemProcedimentoHospitalarPrimCobr() {
		return itemProcedimentoHospitalarPrimCobr;
	}

	public void setItemProcedimentoHospitalarPrimCobr(
			FatItensProcedHospitalar itemProcedimentoHospitalarPrimCobr) {
		this.itemProcedimentoHospitalarPrimCobr = itemProcedimentoHospitalarPrimCobr;
	}


	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "IPH_PHO_SEQ_SEGUNDA_COB", referencedColumnName = "PHO_SEQ"),
			@JoinColumn(name = "IPH_SEQ_SEGUNDA_COB", referencedColumnName = "SEQ") })
	public FatItensProcedHospitalar getItemProcedimentoHospitalarSegCobr() {
		return itemProcedimentoHospitalarSegCobr;
	}

	public void setItemProcedimentoHospitalarSegCobr(
			FatItensProcedHospitalar itemProcedimentoHospitalarSegCobr) {
		this.itemProcedimentoHospitalarSegCobr = itemProcedimentoHospitalarSegCobr;
	}

	public void setFatEspecialidadeTratamentos(Set<FatEspecialidadeTratamento> fatEspecialidadeTratamentos) {
		this.fatEspecialidadeTratamentos = fatEspecialidadeTratamentos;
	}

	@OneToMany(mappedBy = "fatTipoTratamentos", fetch = FetchType.LAZY)
	public Set<FatEspecialidadeTratamento> getFatEspecialidadeTratamentos() {
		return fatEspecialidadeTratamentos;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	
	public enum Fields {
		SEQ("seq"),
		CODIGO("codigo"),
		DESCRICAO("descricao"),
		FAT_TIPO_TRATAMENTO("tratamentosTerapeuticos"),
		ESPECIALIDADE_TRATAMENTO("fatEspecialidadeTratamentos"),
		
		CID("cid"),
		CID_SEQ("cid.seq"),
		

		ITEM_PROCED_HOSPITALAR("itemProcedimentoHospitalar"),
		IPH_SEQ("itemProcedimentoHospitalar.id.seq"),
		IPH_PHO_SEQ("itemProcedimentoHospitalar.id.phoSeq"),

		ITEM_PROCED_HOSPITALAR_SEG_COBR("itemProcedimentoHospitalarSegCobr"),
		IPH_SEQ_SEGUNDA_COB("itemProcedimentoHospitalar.id.seq"),
		IPH_PHO_SEQ_SEGUNDA_COB("itemProcedimentoHospitalar.id.phoSeq"),
		
		ITEM_PROCED_HOSPITALAR_PRIM_COBR("itemProcedimentoHospitalarPrimCobr"),
		IPH_SEQ_PRIMEIRA_COB("itemProcedimentoHospitalar.id.seq"),
		IPH_PHO_SEQ_PRIMEIRA_COB("itemProcedimentoHospitalar.id.phoSeq");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}
	

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((seq == null) ? 0 : seq.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj){
			return true;
		}
		if (obj == null){
			return false;
		}
		if (getClass() != obj.getClass()){
			return false;
		}
		FatTipoTratamentos other = (FatTipoTratamentos) obj;
		if (seq == null) {
			if (other.seq != null){
				return false;
			}
		} else if (!seq.equals(other.seq)){
			return false;
		}
		return true;
	}
}

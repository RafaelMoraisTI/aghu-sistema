package br.gov.mec.aghu.model;

// Generated 13/05/2010 13:46:08 by Hibernate Tools 3.3.0.GA

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Version;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * FatConvPlanoAcomodacoes generated by hbm2java
 */
@Entity
@Table(name = "FAT_CONV_PLANO_ACOMODACOES", schema = "AGH")
public class FatConvPlanoAcomodacoes extends BaseEntityId<FatConvPlanoAcomodacoesId> implements java.io.Serializable {
	private static final long serialVersionUID = -3169381715518962939L;

	private FatConvPlanoAcomodacoesId id;

	private AinAcomodacoes acomodacao;
	
	private Integer version;
	
	/**
	 * convenioSaudePlano 
	 */
	private FatConvenioSaudePlano convenioSaudePlano;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "CSP_CNV_CODIGO", referencedColumnName = "CNV_CODIGO", insertable = false, updatable = false),
			@JoinColumn(name = "CSP_SEQ", referencedColumnName = "SEQ", insertable = false, updatable = false) })
	public FatConvenioSaudePlano getConvenioSaudePlano() {
		return this.convenioSaudePlano;
	}

	public void setConvenioSaudePlano(FatConvenioSaudePlano convenioSaudePlano) {
		this.convenioSaudePlano = convenioSaudePlano;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ACM_SEQ", nullable = false, insertable = false, updatable = false)
	public AinAcomodacoes getAcomodacao() {
		return acomodacao;
	}

	public void setAcomodacao(AinAcomodacoes acomodacao) {
		this.acomodacao = acomodacao;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "cspCnvCodigo", column = @Column(name = "CSP_CNV_CODIGO", nullable = false, precision = 3, scale = 0)),
			@AttributeOverride(name = "cspSeq", column = @Column(name = "CSP_SEQ", nullable = false, precision = 2, scale = 0)),
			@AttributeOverride(name = "acmSeq", column = @Column(name = "ACM_SEQ", nullable = false, precision = 2, scale = 0)) })
	public FatConvPlanoAcomodacoesId getId() {
		return this.id;
	}

	public void setId(FatConvPlanoAcomodacoesId id) {
		this.id = id;
	}
	
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	public enum Fields {
		CONVENIO_SAUDE_PLANO("convenioSaudePlano"),
		AIN_ACOMODACAO("acomodacao");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((acomodacao == null) ? 0 : acomodacao.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		FatConvPlanoAcomodacoes other = (FatConvPlanoAcomodacoes) obj;
		if (acomodacao == null) {
			if (other.acomodacao != null) {
				return false;
			}
		} else if (!acomodacao.equals(other.acomodacao)) {
			return false;
		}
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}

}

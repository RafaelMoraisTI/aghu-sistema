package br.gov.mec.aghu.model;

// Generated 14/09/2010 17:49:55 by Hibernate Tools 3.2.5.Beta

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;




import org.hibernate.annotations.Immutable;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSimNao;
import br.gov.mec.aghu.core.model.BaseJournal;

/**
 * MpmParecerUsoMdtosJn generated by hbm2java
 */
@SuppressWarnings({"PMD.AghuUsoIndevidoDaEnumDominioSimNaoEntity"})
@Entity
@Table(name = "MPM_PARECER_USO_MDTOS_JN", schema = "AGH")
@SequenceGenerator(name = "mpmPumJnSeq", sequenceName = "AGH.MPM_PUM_JN_SEQ", allocationSize = 1)

@Immutable
public class MpmParecerUsoMdtoJn extends BaseJournal implements
		java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 8774784645043781858L;
	private BigDecimal seq;
	private BigDecimal jumSeq;
	private Short tpmSeq;
	private Integer serMatricula;
	private Short serVinCodigo;
	private Integer serMatriculaVisualizado;
	private Short serVinCodigoVisualizado;
	private Date dthrParecer;
	private DominioSimNao indParecerVerificado;
	private String observacao;
	private MpmParecerUsoMdto mpmParecerUsoMdto;
	private MpmTipoParecerUsoMdto mpmTipoParecerUsoMdto;
	private RapServidores servidorMatricula;
	private RapServidores usuario;
	 
	public MpmParecerUsoMdtoJn() {
	}
	
	@Id
	@Column(name = "SEQ_JN", unique = true, nullable = false)
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mpmPumJnSeq")
	@Override
	public Integer getSeqJn() {
		return super.getSeqJn();
	}
	
	@Column(name = "SEQ", nullable = false, precision = 22, scale = 0)
	public BigDecimal getSeq() {
		return this.seq;
	}

	public void setSeq(final BigDecimal seq) {
		this.seq = seq;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SEQ", insertable = false, updatable = false)
	public MpmParecerUsoMdto getMpmParecerUsoMdto() {
		return this.mpmParecerUsoMdto;
	}
	
	public void setMpmParecerUsoMdto(MpmParecerUsoMdto mpmParecerUsoMdto){
		this.mpmParecerUsoMdto = mpmParecerUsoMdto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "JN_USER", referencedColumnName="USUARIO", insertable = false, updatable = false)
	public RapServidores getUsuario() {
		return this.usuario;
	}
	
	public void setUsuario(RapServidores usuario){
		this.usuario = usuario;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( { @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", insertable = false, updatable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO",  insertable = false, updatable = false) })
	public RapServidores getServidorMatricula() {
		return this.servidorMatricula;
	}
	
	public void setServidorMatricula(RapServidores servidorMatricula){
		this.servidorMatricula = servidorMatricula;
	}
	
	@Column(name = "JUM_SEQ", precision = 22, scale = 0)
	public BigDecimal getJumSeq() {
		return this.jumSeq;
	}

	public void setJumSeq(final BigDecimal jumSeq) {
		this.jumSeq = jumSeq;
	}

	@Column(name = "TPM_SEQ", precision = 4, scale = 0)
	public Short getTpmSeq() {
		return this.tpmSeq;
	}

	public void setTpmSeq(final Short tpmSeq) {
		this.tpmSeq = tpmSeq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TPM_SEQ", insertable = false, updatable = false)
	public MpmTipoParecerUsoMdto getMpmTipoParecerUsoMdto() {
		return this.mpmTipoParecerUsoMdto;
	}
	
	public void setMpmTipoParecerUsoMdto(MpmTipoParecerUsoMdto mpmTipoParecerUsoMdto){
		this.mpmTipoParecerUsoMdto = mpmTipoParecerUsoMdto;
	}
	
	@Column(name = "SER_MATRICULA", precision = 7, scale = 0)
	public Integer getSerMatricula() {
		return this.serMatricula;
	}

	public void setSerMatricula(final Integer serMatricula) {
		this.serMatricula = serMatricula;
	}

	@Column(name = "SER_VIN_CODIGO", precision = 3, scale = 0)
	public Short getSerVinCodigo() {
		return this.serVinCodigo;
	}

	public void setSerVinCodigo(final Short serVinCodigo) {
		this.serVinCodigo = serVinCodigo;
	}

	@Column(name = "SER_MATRICULA_VISUALIZADO", precision = 7, scale = 0)
	public Integer getSerMatriculaVisualizado() {
		return this.serMatriculaVisualizado;
	}

	public void setSerMatriculaVisualizado(final Integer serMatriculaVisualizado) {
		this.serMatriculaVisualizado = serMatriculaVisualizado;
	}

	@Column(name = "SER_VIN_CODIGO_VISUALIZADO", precision = 3, scale = 0)
	public Short getSerVinCodigoVisualizado() {
		return this.serVinCodigoVisualizado;
	}

	public void setSerVinCodigoVisualizado(final Short serVinCodigoVisualizado) {
		this.serVinCodigoVisualizado = serVinCodigoVisualizado;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_PARECER", length = 7)
	public Date getDthrParecer() {
		return this.dthrParecer;
	}

	public void setDthrParecer(final Date dthrParecer) {
		this.dthrParecer = dthrParecer;
	}

	@Column(name = "IND_PARECER_VERIFICADO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSimNao getIndParecerVerificado() {
		return this.indParecerVerificado;
	}

	public void setIndParecerVerificado(final DominioSimNao parecerVerificado) {
		this.indParecerVerificado = parecerVerificado;
	}

	@Column(name = "OBSERVACAO", length = 2000)
	@Length(max = 2000)
	public String getObservacao() {
		return this.observacao;
	}

	public void setObservacao(final String observacao) {
		this.observacao = observacao;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((getSeqJn() == null) ? 0 : getSeqJn().hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		MpmParecerUsoMdtoJn other = (MpmParecerUsoMdtoJn) obj;
		if (getSeqJn() == null) {
			if (other.getSeqJn() != null) {
				return false;
			}
		} else if (!getSeqJn().equals(other.getSeqJn())) {
			return false;
		}
		return true;
	}

	public enum Fields {

		SEQ("seq"),
		JUM_SEQ("jumSeq"),
		TPM_SEQ("tpmSeq"),
		SER_MATRICULA("serMatricula"),
		SER_VIN_CODIGO("serVinCodigo"),
		SER_MATRICULA_VISUALIZADO("serMatriculaVisualizado"),
		SER_VIN_CODIGO_VISUALIZADO("serVinCodigoVisualizado"),
		SERVIDOR_MATRICULA("servidorMatricula"),
		DTHR_PARECER("dthrParecer"),
		IND_PARECER_VERIFICADO("indParecerVerificado"),
		JN_USER("nomeUsuario"),
		JN_DATE_TIME("dataAlteracao"),
		JN_OPERATION("operacao"),
		SEQ_JN("seqJn"),
		MPM_PARECER_USO_MDTO("mpmParecerUsoMdto"),
		MPM_TIPO_PARECER_USO_MDTO("mpmTipoParecerUsoMdto"),
		USUARIO("usuario"),
		OBSERVACAO("observacao");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}

}

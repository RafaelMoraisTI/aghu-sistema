package br.gov.mec.aghu.model;

// Generated 15/03/2011 13:46:58 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * FatProcedimentosCbo generated by hbm2java
 */
@Entity
@Table(name = "FAT_PROCEDIMENTOS_CBO", schema = "AGH", uniqueConstraints = @UniqueConstraint(columnNames = {"CBO_SEQ", "IPH_PHO_SEQ", "IPH_SEQ"}))
@SequenceGenerator(name = "fatProcedimentoCboSeq", sequenceName = "AGH.FAT_PC_SEQ", allocationSize = 1)
@org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.TRANSACTIONAL)
public class FatProcedimentoCbo extends BaseEntitySeq<Integer> implements java.io.Serializable {

	private static final long serialVersionUID = -4036886348411458518L;

	private Integer seq;

	private Date dtInicio;

	private Date dtFim;

	private FatItensProcedHospitalar itemProcedHosp;

	private FatCbos cbo;

	private Integer version;

	public FatProcedimentoCbo() {
	}

	public FatProcedimentoCbo(final Integer seq) {
		this.seq = seq;
	}

	/**
	 * Construtor com campos obrigatórios, exceto seq e version que são gerados
	 * automáticamente.
	 * 
	 * @param itemProcedHosp
	 * @param cbo
	 * @param dtInicio
	 */
	public FatProcedimentoCbo(final FatItensProcedHospitalar itemProcedHosp, final FatCbos cbo, final Date dtInicio) {
		this.itemProcedHosp = itemProcedHosp;
		this.cbo = cbo;
		this.dtInicio = dtInicio;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "fatProcedimentoCboSeq")
	@Column(name = "SEQ", nullable = false, precision = 8, scale = 0)
	public Integer getSeq() {
		return seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Column(name = "DT_INICIO", nullable = false)
	public Date getDtInicio() {
		return dtInicio;
	}

	public void setDtInicio(Date dtInicio) {
		this.dtInicio = dtInicio;
	}

	@Column(name = "DT_FIM")
	public Date getDtFim() {
		return dtFim;
	}

	public void setDtFim(Date dtFim) {
		this.dtFim = dtFim;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "IPH_PHO_SEQ", referencedColumnName = "PHO_SEQ", nullable = false),
			@JoinColumn(name = "IPH_SEQ", referencedColumnName = "SEQ", nullable = false) })
	public FatItensProcedHospitalar getItemProcedHosp() {
		return itemProcedHosp;
	}

	public void setItemProcedHosp(FatItensProcedHospitalar itemProcedHosp) {
		this.itemProcedHosp = itemProcedHosp;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CBO_SEQ", referencedColumnName = "SEQ", nullable = false)
	public FatCbos getCbo() {
		return cbo;
	}

	public void setCbo(FatCbos cbo) {
		this.cbo = cbo;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	public enum Fields {
		ITEM_PROCED_HOSP("itemProcedHosp"), CBO("cbo"), IPH_PHO_SEQ("itemProcedHosp.id.phoSeq"), IPH_SEQ("itemProcedHosp.id.seq"), CBO_SEQ("cbo.seq"), SEQ(
				"seq"), DT_FIM("dtFim"), DT_INICIO("dtInicio");

		private final String field;

		private Fields(final String field) {
			this.field = field;
		}

		@Override
		public String toString() {
			return this.field;
		}
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((seq == null) ? 0 : seq.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		FatProcedimentoCbo other = (FatProcedimentoCbo) obj;
		if (seq == null) {
			if (other.seq != null) {
				return false;
			}
		} else if (!seq.equals(other.seq)) {
			return false;
		}
		return true;
	}

}

package br.gov.mec.aghu.model;

// Generated 08/02/2010 17:25:25 by Hibernate Tools 3.2.5.Beta

import java.sql.Timestamp;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;


import br.gov.mec.aghu.dominio.DominioAtivoCancelado;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * FatDadosContaSemInt generated by hbm2java
 */
@Entity
@SequenceGenerator(name = "fat_dcs_sq1", sequenceName="AGH.FAT_DCS_SQ1", allocationSize = 1)
@Table(name = "FAT_DADOS_CONTA_SEM_INT", schema = "AGH")
public class FatDadosContaSemInt extends BaseEntitySeq<Integer> implements java.io.Serializable {
	private static final long serialVersionUID = 372920578693690065L;
	
	private Integer seq;
	private Date dataInicial;
	private Date dataFinal;
	private Integer serMatricula;
	private Short serVinCodigo;
	
	private AipPacientes paciente;
	private Integer pacCodigo;
	
	private DominioAtivoCancelado indSituacao;
	private Short unfSeq;
	private AghUnidadesFuncionais unf;
	private RapServidores servidor;
	private AinTiposCaraterInternacao tipoCaraterInternacao;
	private List<FatContasInternacao> contasInternacao;
	

	/**
	 * Campos necessários para atualizar a conta hospitalar após inserção/alteração
	 */
	private Short espSeq;
	private Integer cthSeq;
	
	private Integer version;
	
	public FatDadosContaSemInt() {
	}


	public FatDadosContaSemInt(final Integer seq) {
		this.seq = seq;
	}
	
	public FatDadosContaSemInt(Integer seq, Timestamp dataInicial, Integer serMatricula, Short serVinCodigo, Integer pacCodigo,
			DominioAtivoCancelado indSituacao) {
		this.seq = seq;
		this.dataInicial = dataInicial;
		this.serMatricula = serMatricula;
		this.serVinCodigo = serVinCodigo;
		this.pacCodigo = pacCodigo;
		this.indSituacao = indSituacao;
	}

	public FatDadosContaSemInt(Integer seq, Timestamp dataInicial, Timestamp dataFinal,
			Integer serMatricula, Short serVinCodigo, Integer pacCodigo,
			DominioAtivoCancelado indSituacao, Short unfSeq) {
		this.seq = seq;
		this.dataInicial = dataInicial;
		this.dataFinal = dataFinal;
		this.serMatricula = serMatricula;
		this.serVinCodigo = serVinCodigo;
		this.pacCodigo = pacCodigo;
		this.indSituacao = indSituacao;
		this.unfSeq = unfSeq;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "fat_dcs_sq1")
	@Column(name = "SEQ", nullable = false, precision = 8, scale = 0)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATA_INICIAL", nullable = false, length = 7)
	public Date getDataInicial() {
		return this.dataInicial;
	}

	public void setDataInicial(Date dataInicial) {
		this.dataInicial = dataInicial;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATA_FINAL", length = 7)
	public Date getDataFinal() {
		return this.dataFinal;
	}

	public void setDataFinal(Date dataFinal) {
		this.dataFinal = dataFinal;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TCI_SEQ", nullable = false)
	public AinTiposCaraterInternacao getTipoCaraterInternacao() {
		return tipoCaraterInternacao;
	}
	
	public void setTipoCaraterInternacao(
			AinTiposCaraterInternacao tipoCaraterInternacao) {
		this.tipoCaraterInternacao = tipoCaraterInternacao;
	}

	@Column(name = "SER_MATRICULA", nullable = false, precision = 7, scale = 0)
	public Integer getSerMatricula() {
		return this.serMatricula;
	}

	public void setSerMatricula(Integer serMatricula) {
		this.serMatricula = serMatricula;
	}
	
	@Column(name = "SER_VIN_CODIGO", nullable = false, precision = 3, scale = 0)
	public Short getSerVinCodigo() {
		return this.serVinCodigo;
	}

	public void setSerVinCodigo(Short serVinCodigo) {
		this.serVinCodigo = serVinCodigo;
	}

	@Column(name = "PAC_CODIGO", nullable = false, precision = 8, scale = 0)
	public Integer getPacCodigo() {
		return this.pacCodigo;
	}

	public void setPacCodigo(Integer pacCodigo) {
		this.pacCodigo = pacCodigo;
	}
	
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO", referencedColumnName="CODIGO", nullable = false, insertable = false, updatable = false)
	public AipPacientes getPaciente() {
		return this.paciente;
	}

	public void setPaciente(AipPacientes paciente) {
		this.paciente = paciente;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioAtivoCancelado getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioAtivoCancelado indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Column(name = "UNF_SEQ", precision = 4, scale = 0)
	public Short getUnfSeq() {
		return this.unfSeq;
	}

	public void setUnfSeq(Short unfSeq) {
		this.unfSeq = unfSeq;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ", referencedColumnName="SEQ", insertable=false, updatable=false)	
	public AghUnidadesFuncionais getUnf() {
		
		return this.unf;
	}

	public void setUnf(AghUnidadesFuncionais unf) {
		
		this.unf = unf;
		if (unf != null) {
			this.setUnfSeq(unf.getSeq());
		} else {
			this.setUnfSeq(null);
		}
	}


	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", nullable=false, insertable = false, updatable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", nullable=false, insertable = false, updatable = false) })
	public RapServidores getServidor() {
		return servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dadosContaSemInt")
	public List<FatContasInternacao> getContasInternacao() {
		return contasInternacao;
	}

	public void setContasInternacao(List<FatContasInternacao> contasInternacao) {
		this.contasInternacao = contasInternacao;
	}
	
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((seq == null) ? 0 : seq.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		FatDadosContaSemInt other = (FatDadosContaSemInt) obj;
		if (seq == null) {
			if (other.seq != null) {
				return false;
			}
		} else if (!seq.equals(other.seq)) {
			return false;
		}
		return true;
	}

	public enum Fields {
		PACIENTE("paciente"),
		PAC_CODIGO("pacCodigo"),
		TIPO_CARATER_INTERNACAO("tipoCaraterInternacao"),
		CONTAS_INTERNACAO("contasInternacao"),
		UNF_SEQ("unfSeq"),
		SERVIDOR("servidor"),
		UNF("unf"),
		SEQ("seq"),
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}

	// ATENÇÃO: não passar este campo para entidade devido a um problema de não verificação de campo transiente ao montar os joins da query (ver PreviousEntitySearcher.buildQuery())
	@Transient
	public Short getEspSeq() {
		return espSeq;
	}


	public void setEspSeq(Short espSeq) {
		this.espSeq = espSeq;
	}

	@Transient
	public Integer getCthSeq() {
		return cthSeq;
	}

	public void setCthSeq(Integer cthSeq) {
		this.cthSeq = cthSeq;
	}
}
package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MamSolicitacaoRetorno generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mamSorSq1", sequenceName="AGH.MAM_SOR_SQ1", allocationSize = 1)
@Table(name = "MAM_SOLICITACAO_RETORNOS", schema = "AGH")
public class MamSolicitacaoRetorno extends BaseEntitySeq<Long> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1670271036045053715L;
	private Long seq;
	private Integer version;
	private MamSolicitacaoRetorno mamSolicitacaoRetorno;
	private RapServidores rapServidoresByMamSorSerFk3;
	private RapServidores rapServidoresByMamSorSerFk5;
	private AghEspecialidades aghEspecialidades;
	private AacConsultas aacConsultasByConNumero;
	private RapServidores rapServidoresByMamSorSerFk1;
	private AacConsultas aacConsultasByConNumeroRetorno;
	private RapServidores rapServidoresByMamSorSerFk4;
	private AghEquipes aghEquipes;
	private RapServidores rapServidoresByMamSorSerFk2;
	private AipPacientes aipPacientes;
	private Date dthrCriacao;
	private Date dthrMvto;
	private Date dthrValida;
	private Date dthrValidaMvto;
	private Date dataRetorno;
	private Short qtdeMeses;
	private String indQtdeMeses;
	private String indAposExames;
	private String indData;
	private String indPendente;
	private String indImpresso;
	private Date dthrEstorno;
	private String indSeNecessario;
	private String indDiaSemana;
	private Short diaSemana;
	private Set<MamSolicitacaoRetorno> mamSolicitacaoRetornoes = new HashSet<MamSolicitacaoRetorno>(0);
	
	private Integer conNumero;
	private Integer conNumeroRetorno;
	private Short espSeq;
	private Integer eqpSeq;
	private Integer matriculaValida;
	private Short vinculoValido;
	
	public MamSolicitacaoRetorno() {
	}

	public MamSolicitacaoRetorno(Long seq, RapServidores rapServidoresByMamSorSerFk1, AipPacientes aipPacientes, Date dthrCriacao,
			String indQtdeMeses, String indAposExames, String indData, String indImpresso, String indSeNecessario) {
		this.seq = seq;
		this.rapServidoresByMamSorSerFk1 = rapServidoresByMamSorSerFk1;
		this.aipPacientes = aipPacientes;
		this.dthrCriacao = dthrCriacao;
		this.indQtdeMeses = indQtdeMeses;
		this.indAposExames = indAposExames;
		this.indData = indData;
		this.indImpresso = indImpresso;
		this.indSeNecessario = indSeNecessario;
	}

	@SuppressWarnings({"PMD.ExcessiveParameterList"})
	public MamSolicitacaoRetorno(Long seq, MamSolicitacaoRetorno mamSolicitacaoRetorno, RapServidores rapServidoresByMamSorSerFk3,
			RapServidores rapServidoresByMamSorSerFk5, AghEspecialidades aghEspecialidades, AacConsultas aacConsultasByConNumero,
			RapServidores rapServidoresByMamSorSerFk1, AacConsultas aacConsultasByConNumeroRetorno,
			RapServidores rapServidoresByMamSorSerFk4, AghEquipes aghEquipes, RapServidores rapServidoresByMamSorSerFk2,
			AipPacientes aipPacientes, Date dthrCriacao, Date dthrMvto, Date dthrValida, Date dthrValidaMvto, Date dataRetorno,
			Short qtdeMeses, String indQtdeMeses, String indAposExames, String indData, String indPendente, String indImpresso,
			Date dthrEstorno, String indSeNecessario, String indDiaSemana, Short diaSemana,
			Set<MamSolicitacaoRetorno> mamSolicitacaoRetornoes) {
		this.seq = seq;
		this.mamSolicitacaoRetorno = mamSolicitacaoRetorno;
		this.rapServidoresByMamSorSerFk3 = rapServidoresByMamSorSerFk3;
		this.rapServidoresByMamSorSerFk5 = rapServidoresByMamSorSerFk5;
		this.aghEspecialidades = aghEspecialidades;
		this.aacConsultasByConNumero = aacConsultasByConNumero;
		this.rapServidoresByMamSorSerFk1 = rapServidoresByMamSorSerFk1;
		this.aacConsultasByConNumeroRetorno = aacConsultasByConNumeroRetorno;
		this.rapServidoresByMamSorSerFk4 = rapServidoresByMamSorSerFk4;
		this.aghEquipes = aghEquipes;
		this.rapServidoresByMamSorSerFk2 = rapServidoresByMamSorSerFk2;
		this.aipPacientes = aipPacientes;
		this.dthrCriacao = dthrCriacao;
		this.dthrMvto = dthrMvto;
		this.dthrValida = dthrValida;
		this.dthrValidaMvto = dthrValidaMvto;
		this.dataRetorno = dataRetorno;
		this.qtdeMeses = qtdeMeses;
		this.indQtdeMeses = indQtdeMeses;
		this.indAposExames = indAposExames;
		this.indData = indData;
		this.indPendente = indPendente;
		this.indImpresso = indImpresso;
		this.dthrEstorno = dthrEstorno;
		this.indSeNecessario = indSeNecessario;
		this.indDiaSemana = indDiaSemana;
		this.diaSemana = diaSemana;
		this.mamSolicitacaoRetornoes = mamSolicitacaoRetornoes;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mamSorSq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Long getSeq() {
		return this.seq;
	}

	public void setSeq(Long seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SOR_SEQ")
	public MamSolicitacaoRetorno getMamSolicitacaoRetorno() {
		return this.mamSolicitacaoRetorno;
	}

	public void setMamSolicitacaoRetorno(MamSolicitacaoRetorno mamSolicitacaoRetorno) {
		this.mamSolicitacaoRetorno = mamSolicitacaoRetorno;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_MVTO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_MVTO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMamSorSerFk3() {
		return this.rapServidoresByMamSorSerFk3;
	}

	public void setRapServidoresByMamSorSerFk3(RapServidores rapServidoresByMamSorSerFk3) {
		this.rapServidoresByMamSorSerFk3 = rapServidoresByMamSorSerFk3;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_ESTORNO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_ESTORNO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMamSorSerFk5() {
		return this.rapServidoresByMamSorSerFk5;
	}

	public void setRapServidoresByMamSorSerFk5(RapServidores rapServidoresByMamSorSerFk5) {
		this.rapServidoresByMamSorSerFk5 = rapServidoresByMamSorSerFk5;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ESP_SEQ")
	public AghEspecialidades getAghEspecialidades() {
		return this.aghEspecialidades;
	}

	public void setAghEspecialidades(AghEspecialidades aghEspecialidades) {
		this.aghEspecialidades = aghEspecialidades;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CON_NUMERO")
	public AacConsultas getAacConsultasByConNumero() {
		return this.aacConsultasByConNumero;
	}

	public void setAacConsultasByConNumero(AacConsultas aacConsultasByConNumero) {
		this.aacConsultasByConNumero = aacConsultasByConNumero;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByMamSorSerFk1() {
		return this.rapServidoresByMamSorSerFk1;
	}

	public void setRapServidoresByMamSorSerFk1(RapServidores rapServidoresByMamSorSerFk1) {
		this.rapServidoresByMamSorSerFk1 = rapServidoresByMamSorSerFk1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CON_NUMERO_RETORNO")
	public AacConsultas getAacConsultasByConNumeroRetorno() {
		return this.aacConsultasByConNumeroRetorno;
	}

	public void setAacConsultasByConNumeroRetorno(AacConsultas aacConsultasByConNumeroRetorno) {
		this.aacConsultasByConNumeroRetorno = aacConsultasByConNumeroRetorno;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_VALIDA_MVTO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_VALIDA_MVTO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMamSorSerFk4() {
		return this.rapServidoresByMamSorSerFk4;
	}

	public void setRapServidoresByMamSorSerFk4(RapServidores rapServidoresByMamSorSerFk4) {
		this.rapServidoresByMamSorSerFk4 = rapServidoresByMamSorSerFk4;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EQP_SEQ")
	public AghEquipes getAghEquipes() {
		return this.aghEquipes;
	}

	public void setAghEquipes(AghEquipes aghEquipes) {
		this.aghEquipes = aghEquipes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_VALIDA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_VALIDA", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMamSorSerFk2() {
		return this.rapServidoresByMamSorSerFk2;
	}

	public void setRapServidoresByMamSorSerFk2(RapServidores rapServidoresByMamSorSerFk2) {
		this.rapServidoresByMamSorSerFk2 = rapServidoresByMamSorSerFk2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO", nullable = false)
	public AipPacientes getAipPacientes() {
		return this.aipPacientes;
	}

	public void setAipPacientes(AipPacientes aipPacientes) {
		this.aipPacientes = aipPacientes;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_CRIACAO", nullable = false, length = 29)
	public Date getDthrCriacao() {
		return this.dthrCriacao;
	}

	public void setDthrCriacao(Date dthrCriacao) {
		this.dthrCriacao = dthrCriacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_MVTO", length = 29)
	public Date getDthrMvto() {
		return this.dthrMvto;
	}

	public void setDthrMvto(Date dthrMvto) {
		this.dthrMvto = dthrMvto;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_VALIDA", length = 29)
	public Date getDthrValida() {
		return this.dthrValida;
	}

	public void setDthrValida(Date dthrValida) {
		this.dthrValida = dthrValida;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_VALIDA_MVTO", length = 29)
	public Date getDthrValidaMvto() {
		return this.dthrValidaMvto;
	}

	public void setDthrValidaMvto(Date dthrValidaMvto) {
		this.dthrValidaMvto = dthrValidaMvto;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATA_RETORNO", length = 29)
	public Date getDataRetorno() {
		return this.dataRetorno;
	}

	public void setDataRetorno(Date dataRetorno) {
		this.dataRetorno = dataRetorno;
	}

	@Column(name = "QTDE_MESES")
	public Short getQtdeMeses() {
		return this.qtdeMeses;
	}

	public void setQtdeMeses(Short qtdeMeses) {
		this.qtdeMeses = qtdeMeses;
	}

	@Column(name = "IND_QTDE_MESES", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndQtdeMeses() {
		return this.indQtdeMeses;
	}

	public void setIndQtdeMeses(String indQtdeMeses) {
		this.indQtdeMeses = indQtdeMeses;
	}

	@Column(name = "IND_APOS_EXAMES", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndAposExames() {
		return this.indAposExames;
	}

	public void setIndAposExames(String indAposExames) {
		this.indAposExames = indAposExames;
	}

	@Column(name = "IND_DATA", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndData() {
		return this.indData;
	}

	public void setIndData(String indData) {
		this.indData = indData;
	}

	@Column(name = "IND_PENDENTE", length = 1)
	@Length(max = 1)
	public String getIndPendente() {
		return this.indPendente;
	}

	public void setIndPendente(String indPendente) {
		this.indPendente = indPendente;
	}

	@Column(name = "IND_IMPRESSO", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndImpresso() {
		return this.indImpresso;
	}

	public void setIndImpresso(String indImpresso) {
		this.indImpresso = indImpresso;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_ESTORNO", length = 29)
	public Date getDthrEstorno() {
		return this.dthrEstorno;
	}

	public void setDthrEstorno(Date dthrEstorno) {
		this.dthrEstorno = dthrEstorno;
	}

	@Column(name = "IND_SE_NECESSARIO", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndSeNecessario() {
		return this.indSeNecessario;
	}

	public void setIndSeNecessario(String indSeNecessario) {
		this.indSeNecessario = indSeNecessario;
	}

	@Column(name = "IND_DIA_SEMANA", length = 1)
	@Length(max = 1)
	public String getIndDiaSemana() {
		return this.indDiaSemana;
	}

	public void setIndDiaSemana(String indDiaSemana) {
		this.indDiaSemana = indDiaSemana;
	}

	@Column(name = "DIA_SEMANA")
	public Short getDiaSemana() {
		return this.diaSemana;
	}

	public void setDiaSemana(Short diaSemana) {
		this.diaSemana = diaSemana;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mamSolicitacaoRetorno")
	public Set<MamSolicitacaoRetorno> getMamSolicitacaoRetornoes() {
		return this.mamSolicitacaoRetornoes;
	}

	public void setMamSolicitacaoRetornoes(Set<MamSolicitacaoRetorno> mamSolicitacaoRetornoes) {
		this.mamSolicitacaoRetornoes = mamSolicitacaoRetornoes;
	}
	
	@Column(name = "SER_MATRICULA_VALIDA", insertable=false, updatable=false)
	public Integer getMatriculaValida() {
		return matriculaValida;
	}
	
	public void setMatriculaValida(Integer matriculaValida) {
		this.matriculaValida = matriculaValida;
	}
	
	@Column(name = "SER_VIN_CODIGO_VALIDA", insertable=false, updatable=false)
	public Short getVinculoValido() {
		return vinculoValido;
	}
	
	public void setVinculoValido(Short vinculoValido) {
		this.vinculoValido = vinculoValido;
	}
	
	@Column(name = "CON_NUMERO", insertable=false, updatable=false)
	public Integer getConNumero() {
		return conNumero;
	}

	public void setConNumero(Integer conNumero) {
		this.conNumero = conNumero;
	}

	@Column(name = "CON_NUMERO_RETORNO", insertable=false, updatable=false)
	public Integer getConNumeroRetorno() {
		return conNumeroRetorno;
	}

	public void setConNumeroRetorno(Integer conNumeroRetorno) {
		this.conNumeroRetorno = conNumeroRetorno;
	}
	
	@Column(name = "ESP_SEQ", insertable=false, updatable=false)
	public Short getEspSeq() {
		return espSeq;
	}

	public void setEspSeq(Short espSeq) {
		this.espSeq = espSeq;
	}
	
	@Column(name = "EQP_SEQ", insertable=false, updatable=false)
	public Integer getEqpSeq() {
		return eqpSeq;
	}

	public void setEqpSeq(Integer eqpSeq) {
		this.eqpSeq = eqpSeq;
	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		MAM_SOLICITACAO_RETORNOS("mamSolicitacaoRetorno"),
		RAP_SERVIDORES_BY_MAM_SOR_SER_FK3("rapServidoresByMamSorSerFk3"),
		RAP_SERVIDORES_BY_MAM_SOR_SER_FK5("rapServidoresByMamSorSerFk5"),
		AGH_ESPECIALIDADES("aghEspecialidades"),
		AAC_CONSULTAS_BY_CON_NUMERO("aacConsultasByConNumero"),
		RAP_SERVIDORES_BY_MAM_SOR_SER_FK1("rapServidoresByMamSorSerFk1"),
		AAC_CONSULTAS_BY_CON_NUMERO_RETORNO("aacConsultasByConNumeroRetorno"),
		RAP_SERVIDORES_BY_MAM_SOR_SER_FK4("rapServidoresByMamSorSerFk4"),
		AGH_EQUIPES("aghEquipes"),
		RAP_SERVIDORES_BY_MAM_SOR_SER_FK2("rapServidoresByMamSorSerFk2"),
		AIP_PACIENTES("aipPacientes"),
		DTHR_CRIACAO("dthrCriacao"),
		DTHR_MVTO("dthrMvto"),
		DTHR_VALIDA("dthrValida"),
		DTHR_VALIDA_MVTO("dthrValidaMvto"),
		DATA_RETORNO("dataRetorno"),
		QTDE_MESES("qtdeMeses"),
		IND_QTDE_MESES("indQtdeMeses"),
		IND_APOS_EXAMES("indAposExames"),
		IND_DATA("indData"),
		IND_PENDENTE("indPendente"),
		IND_IMPRESSO("indImpresso"),
		DTHR_ESTORNO("dthrEstorno"),
		IND_SE_NECESSARIO("indSeNecessario"),
		IND_DIA_SEMANA("indDiaSemana"),
		DIA_SEMANA("diaSemana"),
		MAM_SOLICITACAO_RETORNOES("mamSolicitacaoRetornoes"),
		CON_NUMERO("conNumero"),
		CON_NUMERO_RETORNO("conNumeroRetorno"),
		EQP_SEQ("eqpSeq"),
		ESP_SEQ("espSeq")
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MamSolicitacaoRetorno)) {
			return false;
		}
		MamSolicitacaoRetorno other = (MamSolicitacaoRetorno) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

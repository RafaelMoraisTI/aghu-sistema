package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MciProcessaExportacao generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mciPxpSq1", sequenceName="AGH.MCI_PXP_SQ1", allocationSize = 1)
@Table(name = "MCI_PROCESSA_EXPORTACOES", schema = "AGH")
public class MciProcessaExportacao extends BaseEntitySeq<Short> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1972849345520860980L;
	private Short seq;
	private Integer version;
	private MciGrupoReportRotinaCci mciGrupoReportRotinaCci;
	private RapServidores rapServidores;
	private MciExportacaoDado mciExportacaoDado;
	private Date criadoEm;
	private Date periodoInicial;
	private Date periodoFinal;
	private Set<MciItemProcessaExportacao> mciItemProcessaExportacaoes = new HashSet<MciItemProcessaExportacao>(0);
	private Set<MciParamReportExportacao> mciParamReportExportacaoes = new HashSet<MciParamReportExportacao>(0);

	public MciProcessaExportacao() {
	}

	public MciProcessaExportacao(Short seq, MciGrupoReportRotinaCci mciGrupoReportRotinaCci, RapServidores rapServidores,
			MciExportacaoDado mciExportacaoDado, Date criadoEm, Date periodoInicial, Date periodoFinal) {
		this.seq = seq;
		this.mciGrupoReportRotinaCci = mciGrupoReportRotinaCci;
		this.rapServidores = rapServidores;
		this.mciExportacaoDado = mciExportacaoDado;
		this.criadoEm = criadoEm;
		this.periodoInicial = periodoInicial;
		this.periodoFinal = periodoFinal;
	}

	public MciProcessaExportacao(Short seq, MciGrupoReportRotinaCci mciGrupoReportRotinaCci, RapServidores rapServidores,
			MciExportacaoDado mciExportacaoDado, Date criadoEm, Date periodoInicial, Date periodoFinal,
			Set<MciItemProcessaExportacao> mciItemProcessaExportacaoes, Set<MciParamReportExportacao> mciParamReportExportacaoes) {
		this.seq = seq;
		this.mciGrupoReportRotinaCci = mciGrupoReportRotinaCci;
		this.rapServidores = rapServidores;
		this.mciExportacaoDado = mciExportacaoDado;
		this.criadoEm = criadoEm;
		this.periodoInicial = periodoInicial;
		this.periodoFinal = periodoFinal;
		this.mciItemProcessaExportacaoes = mciItemProcessaExportacaoes;
		this.mciParamReportExportacaoes = mciParamReportExportacaoes;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mciPxpSq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Short getSeq() {
		return this.seq;
	}

	public void setSeq(Short seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "GRR_SEQ", nullable = false)
	public MciGrupoReportRotinaCci getMciGrupoReportRotinaCci() {
		return this.mciGrupoReportRotinaCci;
	}

	public void setMciGrupoReportRotinaCci(MciGrupoReportRotinaCci mciGrupoReportRotinaCci) {
		this.mciGrupoReportRotinaCci = mciGrupoReportRotinaCci;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EDA_SEQ", nullable = false)
	public MciExportacaoDado getMciExportacaoDado() {
		return this.mciExportacaoDado;
	}

	public void setMciExportacaoDado(MciExportacaoDado mciExportacaoDado) {
		this.mciExportacaoDado = mciExportacaoDado;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PERIODO_INICIAL", nullable = false, length = 29)
	public Date getPeriodoInicial() {
		return this.periodoInicial;
	}

	public void setPeriodoInicial(Date periodoInicial) {
		this.periodoInicial = periodoInicial;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PERIODO_FINAL", nullable = false, length = 29)
	public Date getPeriodoFinal() {
		return this.periodoFinal;
	}

	public void setPeriodoFinal(Date periodoFinal) {
		this.periodoFinal = periodoFinal;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciProcessaExportacao")
	public Set<MciItemProcessaExportacao> getMciItemProcessaExportacaoes() {
		return this.mciItemProcessaExportacaoes;
	}

	public void setMciItemProcessaExportacaoes(Set<MciItemProcessaExportacao> mciItemProcessaExportacaoes) {
		this.mciItemProcessaExportacaoes = mciItemProcessaExportacaoes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciProcessaExportacao")
	public Set<MciParamReportExportacao> getMciParamReportExportacaoes() {
		return this.mciParamReportExportacaoes;
	}

	public void setMciParamReportExportacaoes(Set<MciParamReportExportacao> mciParamReportExportacaoes) {
		this.mciParamReportExportacaoes = mciParamReportExportacaoes;
	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		MCI_GRUPO_REPORT_ROTINA_CCIS("mciGrupoReportRotinaCci"),
		RAP_SERVIDORES("rapServidores"),
		MCI_EXPORTACAO_DADOS("mciExportacaoDado"),
		CRIADO_EM("criadoEm"),
		PERIODO_INICIAL("periodoInicial"),
		PERIODO_FINAL("periodoFinal"),
		MCI_ITEM_PROCESSA_EXPORTACAOES("mciItemProcessaExportacaoes"),
		MCI_PARAM_REPORT_EXPORTACAOES("mciParamReportExportacaoes");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MciProcessaExportacao)) {
			return false;
		}
		MciProcessaExportacao other = (MciProcessaExportacao) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

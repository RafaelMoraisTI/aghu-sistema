package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AfaTextoParamCalculo generated by hbm2java
 */
@Entity
@Table(name = "AFA_TEXTO_PARAM_CALCULOS", schema = "AGH")
public class AfaTextoParamCalculo extends BaseEntityId<AfaTextoParamCalculoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 4048654949838040298L;
	private AfaTextoParamCalculoId id;
	private Integer version;
	private RapServidores rapServidores;
	private AfaMedicamento afaMedicamento;
	private MpmUnidadeMedidaMedica mpmUnidadeMedidaMedica;
	private AfaViaAdministracao afaViaAdministracao;
	private Date criadoEm;
	private Double pesoInicial;
	private Double pesoFinal;
	private Integer idadeInicial;
	private Integer idadeFinal;
	private String unidIdade;
	private String texto;
	private Double doseMaximaDia;
	private String indSituacao;
	private String indValidado;
	private Integer serMatriculaValidadoPor;
	private Short serVinCodigoValidadoPor;
	private Date dthrValidacao;

	public AfaTextoParamCalculo() {
	}

	public AfaTextoParamCalculo(AfaTextoParamCalculoId id, RapServidores rapServidores, AfaMedicamento afaMedicamento,
			MpmUnidadeMedidaMedica mpmUnidadeMedidaMedica, Date criadoEm, Double pesoInicial, Double pesoFinal, Integer idadeInicial,
			Integer idadeFinal, String unidIdade, String texto, Double doseMaximaDia, String indSituacao) {
		this.id = id;
		this.rapServidores = rapServidores;
		this.afaMedicamento = afaMedicamento;
		this.mpmUnidadeMedidaMedica = mpmUnidadeMedidaMedica;
		this.criadoEm = criadoEm;
		this.pesoInicial = pesoInicial;
		this.pesoFinal = pesoFinal;
		this.idadeInicial = idadeInicial;
		this.idadeFinal = idadeFinal;
		this.unidIdade = unidIdade;
		this.texto = texto;
		this.doseMaximaDia = doseMaximaDia;
		this.indSituacao = indSituacao;
	}

	public AfaTextoParamCalculo(AfaTextoParamCalculoId id, RapServidores rapServidores, AfaMedicamento afaMedicamento,
			MpmUnidadeMedidaMedica mpmUnidadeMedidaMedica, AfaViaAdministracao afaViaAdministracao, Date criadoEm,
			Double pesoInicial, Double pesoFinal, Integer idadeInicial, Integer idadeFinal, String unidIdade, String texto,
			Double doseMaximaDia, String indSituacao, String indValidado, Integer serMatriculaValidadoPor,
			Short serVinCodigoValidadoPor, Date dthrValidacao) {
		this.id = id;
		this.rapServidores = rapServidores;
		this.afaMedicamento = afaMedicamento;
		this.mpmUnidadeMedidaMedica = mpmUnidadeMedidaMedica;
		this.afaViaAdministracao = afaViaAdministracao;
		this.criadoEm = criadoEm;
		this.pesoInicial = pesoInicial;
		this.pesoFinal = pesoFinal;
		this.idadeInicial = idadeInicial;
		this.idadeFinal = idadeFinal;
		this.unidIdade = unidIdade;
		this.texto = texto;
		this.doseMaximaDia = doseMaximaDia;
		this.indSituacao = indSituacao;
		this.indValidado = indValidado;
		this.serMatriculaValidadoPor = serMatriculaValidadoPor;
		this.serVinCodigoValidadoPor = serVinCodigoValidadoPor;
		this.dthrValidacao = dthrValidacao;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "medMatCodigo", column = @Column(name = "MED_MAT_CODIGO", nullable = false)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false)) })
	public AfaTextoParamCalculoId getId() {
		return this.id;
	}

	public void setId(AfaTextoParamCalculoId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MED_MAT_CODIGO", nullable = false, insertable = false, updatable = false)
	public AfaMedicamento getAfaMedicamento() {
		return this.afaMedicamento;
	}

	public void setAfaMedicamento(AfaMedicamento afaMedicamento) {
		this.afaMedicamento = afaMedicamento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UMM_SEQ", nullable = false)
	public MpmUnidadeMedidaMedica getMpmUnidadeMedidaMedica() {
		return this.mpmUnidadeMedidaMedica;
	}

	public void setMpmUnidadeMedidaMedica(MpmUnidadeMedidaMedica mpmUnidadeMedidaMedica) {
		this.mpmUnidadeMedidaMedica = mpmUnidadeMedidaMedica;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "VAD_SIGLA")
	public AfaViaAdministracao getAfaViaAdministracao() {
		return this.afaViaAdministracao;
	}

	public void setAfaViaAdministracao(AfaViaAdministracao afaViaAdministracao) {
		this.afaViaAdministracao = afaViaAdministracao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "PESO_INICIAL", nullable = false, precision = 17, scale = 17)
	public Double getPesoInicial() {
		return this.pesoInicial;
	}

	public void setPesoInicial(Double pesoInicial) {
		this.pesoInicial = pesoInicial;
	}

	@Column(name = "PESO_FINAL", nullable = false, precision = 17, scale = 17)
	public Double getPesoFinal() {
		return this.pesoFinal;
	}

	public void setPesoFinal(Double pesoFinal) {
		this.pesoFinal = pesoFinal;
	}

	@Column(name = "IDADE_INICIAL", nullable = false)
	public Integer getIdadeInicial() {
		return this.idadeInicial;
	}

	public void setIdadeInicial(Integer idadeInicial) {
		this.idadeInicial = idadeInicial;
	}

	@Column(name = "IDADE_FINAL", nullable = false)
	public Integer getIdadeFinal() {
		return this.idadeFinal;
	}

	public void setIdadeFinal(Integer idadeFinal) {
		this.idadeFinal = idadeFinal;
	}

	@Column(name = "UNID_IDADE", nullable = false, length = 1)
	@Length(max = 1)
	public String getUnidIdade() {
		return this.unidIdade;
	}

	public void setUnidIdade(String unidIdade) {
		this.unidIdade = unidIdade;
	}

	@Column(name = "TEXTO", nullable = false, length = 2000)
	@Length(max = 2000)
	public String getTexto() {
		return this.texto;
	}

	public void setTexto(String texto) {
		this.texto = texto;
	}

	@Column(name = "DOSE_MAXIMA_DIA", nullable = false, precision = 17, scale = 17)
	public Double getDoseMaximaDia() {
		return this.doseMaximaDia;
	}

	public void setDoseMaximaDia(Double doseMaximaDia) {
		this.doseMaximaDia = doseMaximaDia;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(String indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Column(name = "IND_VALIDADO", length = 1)
	@Length(max = 1)
	public String getIndValidado() {
		return this.indValidado;
	}

	public void setIndValidado(String indValidado) {
		this.indValidado = indValidado;
	}

	@Column(name = "SER_MATRICULA_VALIDADO_POR")
	public Integer getSerMatriculaValidadoPor() {
		return this.serMatriculaValidadoPor;
	}

	public void setSerMatriculaValidadoPor(Integer serMatriculaValidadoPor) {
		this.serMatriculaValidadoPor = serMatriculaValidadoPor;
	}

	@Column(name = "SER_VIN_CODIGO_VALIDADO_POR")
	public Short getSerVinCodigoValidadoPor() {
		return this.serVinCodigoValidadoPor;
	}

	public void setSerVinCodigoValidadoPor(Short serVinCodigoValidadoPor) {
		this.serVinCodigoValidadoPor = serVinCodigoValidadoPor;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_VALIDACAO", length = 29)
	public Date getDthrValidacao() {
		return this.dthrValidacao;
	}

	public void setDthrValidacao(Date dthrValidacao) {
		this.dthrValidacao = dthrValidacao;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		RAP_SERVIDORES("rapServidores"),
		AFA_MEDICAMENTO("afaMedicamento"),
		MPM_UNIDADE_MEDIDA_MEDICA("mpmUnidadeMedidaMedica"),
		AFA_VIA_ADMINISTRACAO("afaViaAdministracao"),
		CRIADO_EM("criadoEm"),
		PESO_INICIAL("pesoInicial"),
		PESO_FINAL("pesoFinal"),
		IDADE_INICIAL("idadeInicial"),
		IDADE_FINAL("idadeFinal"),
		UNID_IDADE("unidIdade"),
		TEXTO("texto"),
		DOSE_MAXIMA_DIA("doseMaximaDia"),
		IND_SITUACAO("indSituacao"),
		IND_VALIDADO("indValidado"),
		SER_MATRICULA_VALIDADO_POR("serMatriculaValidadoPor"),
		SER_VIN_CODIGO_VALIDADO_POR("serVinCodigoValidadoPor"),
		DTHR_VALIDACAO("dthrValidacao");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AfaTextoParamCalculo)) {
			return false;
		}
		AfaTextoParamCalculo other = (AfaTextoParamCalculo) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

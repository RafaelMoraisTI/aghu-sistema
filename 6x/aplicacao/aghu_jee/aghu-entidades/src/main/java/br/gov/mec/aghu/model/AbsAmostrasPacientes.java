package br.gov.mec.aghu.model;

// Generated 08/02/2010 17:25:25 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AbsAmostrasPacientes generated by hbm2java
 */
@Entity
@Table(name = "ABS_AMOSTRAS_PACIENTES", schema = "AGH")
public class AbsAmostrasPacientes extends BaseEntityId<AbsAmostrasPacientesId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -2692653769074789270L;
	private AbsAmostrasPacientesId id;
	private Short nroAmostra;
	private DominioSituacao indSituacao;
	private String observacao;
	private RapServidores rapServidores;
	private Date alteradoEm;
	private Byte nroSolicitacoesAtendidas;
	private Date criadoEm;
	private Set<AbsSolicitacoesPorAmostra> solicitacoesPorAmostras = new HashSet<AbsSolicitacoesPorAmostra>(
			0);
	private AipPacientes paciente;
	
	public AbsAmostrasPacientes() {
	}

	public AbsAmostrasPacientes(AbsAmostrasPacientesId id, Short nroAmostra,
			DominioSituacao indSituacao, RapServidores rapServidores) {
		this.id = id;
		this.nroAmostra = nroAmostra;
		this.indSituacao = indSituacao;
		this.rapServidores = rapServidores;
	}

	public AbsAmostrasPacientes(AbsAmostrasPacientesId id, Short nroAmostra,
			DominioSituacao indSituacao, String observacao, RapServidores rapServidores, Date alteradoEm, 
			Byte nroSolicitacoesAtendidas, Date criadoEm, Set<AbsSolicitacoesPorAmostra> solicitacoesPorAmostras) {
		this.id = id;
		this.nroAmostra = nroAmostra;
		this.indSituacao = indSituacao;
		this.observacao = observacao;
		this.rapServidores = rapServidores;
		this.alteradoEm = alteradoEm;
		this.nroSolicitacoesAtendidas = nroSolicitacoesAtendidas;
		this.criadoEm = criadoEm;
		this.solicitacoesPorAmostras = solicitacoesPorAmostras;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "pacCodigo", column = @Column(name = "PAC_CODIGO", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "dthrAmostra", column = @Column(name = "DTHR_AMOSTRA", nullable = false, length = 7)) })
	public AbsAmostrasPacientesId getId() {
		return this.id;
	}

	public void setId(AbsAmostrasPacientesId id) {
		this.id = id;
	}

	@Column(name = "NRO_AMOSTRA", nullable = false, precision = 3, scale = 0)
	public Short getNroAmostra() {
		return this.nroAmostra;
	}

	public void setNroAmostra(Short nroAmostra) {
		this.nroAmostra = nroAmostra;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Column(name = "OBSERVACAO", length = 1000)
	public String getObservacao() {
		return this.observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "ALTERADO_EM", length = 7)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@Column(name = "NRO_SOLICITACOES_ATENDIDAS", precision = 2, scale = 0)
	public Byte getNroSolicitacoesAtendidas() {
		return this.nroSolicitacoesAtendidas;
	}

	public void setNroSolicitacoesAtendidas(Byte nroSolicitacoesAtendidas) {
		this.nroSolicitacoesAtendidas = nroSolicitacoesAtendidas;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CRIADO_EM", length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "amostraPaciente")
	public Set<AbsSolicitacoesPorAmostra> getSolicitacoesPorAmostras() {
		return this.solicitacoesPorAmostras;
	}

	public void setSolicitacoesPorAmostras(
			Set<AbsSolicitacoesPorAmostra> solicitacoesPorAmostras) {
		this.solicitacoesPorAmostras = solicitacoesPorAmostras;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO", insertable= false, updatable = false)
	public AipPacientes getPaciente() {
		return paciente;
	}

	public void setPaciente(AipPacientes paciente) {
		this.paciente = paciente;
	}
	
	public enum Fields {
		PACIENTE_CODIGO("id.pacCodigo"), DATA_HORA_AMOSTRA("id.dthrAmostra"), SITUACAO("indSituacao"), PACIENTE("paciente"),
		CRIADO_EM("criadoEm");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}	


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AbsAmostrasPacientes)) {
			return false;
		}
		AbsAmostrasPacientes other = (AbsAmostrasPacientes) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

// Generated 24/09/2009 17:21:40 by Hibernate Tools 3.2.5.Beta

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.Version;


import org.apache.lucene.analysis.br.BrazilianAnalyzer;
import org.hibernate.search.annotations.Analyzer;
import org.hibernate.search.annotations.DocumentId;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.FieldBridge;
import org.hibernate.search.annotations.Index;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.Store;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.lucene.Fonetizador;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AipSinonimosOcupacao generated by hbm2java
 */
@Entity
@Table(name = "AIP_SINONIMOS_OCUPACAO", schema = "AGH")
@Indexed
public class AipSinonimosOcupacao extends BaseEntityId<AipSinonimosOcupacaoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8747316203438047319L;
	private AipSinonimosOcupacaoId id;
	private AipOcupacoes aipOcupacoes;
	private String descricao;
	private Integer version;

	public AipSinonimosOcupacao() {
	}

	public AipSinonimosOcupacao(AipSinonimosOcupacaoId id,
			AipOcupacoes aipOcupacoes, String descricao) {
		this.id = id;
		this.aipOcupacoes = aipOcupacoes;
		this.descricao = descricao;
	}

	@EmbeddedId 
	@DocumentId
	@FieldBridge(impl = AipSinonimosOcupacaoIdBridge.class)
	@AttributeOverrides( {
			@AttributeOverride(name = "ocpCodigo", column = @Column(name = "OCP_CODIGO", nullable = false, precision = 6, scale = 0)),
			@AttributeOverride(name = "codigo", column = @Column(name = "CODIGO", nullable = false, precision = 5, scale = 0)) })
	public AipSinonimosOcupacaoId getId() {
		return this.id;
	}

	public void setId(AipSinonimosOcupacaoId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "OCP_CODIGO", nullable = false, insertable = false, updatable = false)
	public AipOcupacoes getAipOcupacoes() {
		return this.aipOcupacoes;
	}

	public void setAipOcupacoes(AipOcupacoes aipOcupacoes) {
		this.aipOcupacoes = aipOcupacoes;
	}

	@Column(name = "DESCRICAO", unique = true, nullable = false, length = 60)
	@Length(max = 60)
	@Field(index = Index.YES, store = Store.YES)
	@Analyzer(impl=BrazilianAnalyzer.class)
	public String getDescricao() {
		return this.descricao;
	}
	
	@Transient
	@Field(index = Index.YES, store = Store.YES)
	public String getDescricaoFonetica() {
		return Fonetizador.fonetizar(descricao);
	}
	
	@Field(index=Index.YES, store=Store.YES)
	@Transient
	public String getOrdenacaoLucene() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	public enum Fields {

		DESCRICAO("descricao"),
		OCP_CODIGO("id.ocpCodigo"),
		AIP_OCUPACOES("aipOcupacoes"),
		SEQUENCIAL("id.codigo"),
		ORDENACAOLUCENE("ordenacaoLucene"),
		DESCRICAOFONETICA("descricaoFonetica");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}

	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		AipSinonimosOcupacao other = (AipSinonimosOcupacao) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}

}

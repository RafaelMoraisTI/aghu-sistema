package br.gov.mec.aghu.model;

// Generated 11/04/2012 14:47:36 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AelExameApItemSolics generated by hbm2java
 */
@Entity
@Table(name = "AEL_EXAME_AP_ITEM_SOLICS")
public class AelExameApItemSolic extends BaseEntityId<AelExameApItemSolicId> implements java.io.Serializable {

	private static final long serialVersionUID = 397906069734776928L;
	
	private AelExameApItemSolicId id;
	private Date criadoEm;
	private Date alteradoEm;
	private AelPatologista patologista;
	private AelPatologista patologistaAlterado;
	private AelExameAp exameAp;
	private AelItemSolicitacaoExames itemSolicitacaoExames;
	
	public AelExameApItemSolic() {
	}

	public AelExameApItemSolic(final AelExameApItemSolicId id, final Date criadoEm) {
		this.id = id;
		this.criadoEm = criadoEm;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "luxSeq", column = @Column(name = "LUX_SEQ", nullable = false, precision = 14, scale = 0)),
			@AttributeOverride(name = "iseSoeSeq", column = @Column(name = "ISE_SOE_SEQ", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "iseSeqp", column = @Column(name = "ISE_SEQP", nullable = false, precision = 3, scale = 0)) })
	public AelExameApItemSolicId getId() {
		return this.id;
	}

	public void setId(final AelExameApItemSolicId id) {
		this.id = id;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(final Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 7)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(final Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LUI_SEQ")
	public AelPatologista getPatologista() {
		return patologista;
	}

	public void setPatologista(final AelPatologista patologista) {
		this.patologista = patologista;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LUI_SEQ_ALTERADO")
	public AelPatologista getPatologistaAlterado() {
		return patologistaAlterado;
	}

	public void setPatologistaAlterado(final AelPatologista patologistaAlterado) {
		this.patologistaAlterado = patologistaAlterado;
	}


	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LUX_SEQ", insertable = false, updatable = false)
	public AelExameAp getExameAp() {
		return exameAp;
	}

	public void setExameAp(AelExameAp exameAp) {
		this.exameAp = exameAp;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "ISE_SOE_SEQ", referencedColumnName = "SOE_SEQ", insertable = false, updatable = false),
			@JoinColumn(name = "ISE_SEQP", referencedColumnName = "SEQP", insertable = false, updatable = false) })
	public AelItemSolicitacaoExames getItemSolicitacaoExames() {
		return itemSolicitacaoExames;
	}

	public void setItemSolicitacaoExames(
			AelItemSolicitacaoExames itemSolicitacaoExames) {
		this.itemSolicitacaoExames = itemSolicitacaoExames;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(final Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		final AelExameApItemSolic other = (AelExameApItemSolic) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}
	
	
	public enum Fields {
		
		EXAME_AP("exameAp"),
		LUX_SEQ("exameAp.seq"),
		ISE_SOE_SEQ("id.iseSoeSeq"),
		ISE_SEQP("id.iseSeqp"),
		ITEM_SOLICITACAO_EXAMES("itemSolicitacaoExames")

		;

		private String fields;

		private Fields(final String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}


}

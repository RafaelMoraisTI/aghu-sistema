package br.gov.mec.aghu.model;

// Generated 11/06/2010 10:31:39 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

import org.hibernate.annotations.Parameter;

import br.gov.mec.aghu.dominio.DominioConfirmacaoCCI;
import br.gov.mec.aghu.dominio.DominioIndContaminacao;
import br.gov.mec.aghu.dominio.DominioMotivoEncerramentoNotificacao;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MciMvtoInfeccaoTopografias generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mciMitSq1", sequenceName="AGH.MCI_MIT_SQ1", allocationSize = 1)
@Table(name = "MCI_MVTO_INFECCAO_TOPOGRAFIAS", schema = "AGH")

public class MciMvtoInfeccaoTopografias extends BaseEntitySeq<Integer> implements java.io.Serializable {
	
	private static final long serialVersionUID = -7534840764797342608L;
	private Integer seq;
	private RapServidores servidorEncerrado;
	private RapServidores servidorConfirmado;
	private AghInstituicoesHospitalares instituicaoHospitalar;
	private AinLeitos leitoNotificado;
	private RapServidores servidor;
	private AinLeitos leito;
	private AinQuartos quarto;
	private AghUnidadesFuncionais unidadeFuncional;
	private MciEtiologiaInfeccao etiologiaInfeccao;
	private AinQuartos quartoNotificado;
	private AghUnidadesFuncionais unidadeFuncionalNotificada;
	private AghAtendimentos atendimento;
	private AipPacientes paciente;
	private MciTopografiaProcedimento topografiaProcedimento;
	private Date criadoEm;
	private Date dataInicio;
	private DominioConfirmacaoCCI confirmacaoCci;
	private Date dataFim;
	private DominioMotivoEncerramentoNotificacao motivoEncerramento;
	private DominioIndContaminacao indContaminacao;
	private MbcProcDescricoes procDescricoes;
	private Long rniPnnSeq;
	private Short rniSeqp;
	private Integer version; 	
	
	private Set<MciMvtoMedidaPreventivas> mciMvtoMedidaPreventivas =  new HashSet<MciMvtoMedidaPreventivas>(0);

	public MciMvtoInfeccaoTopografias() {
		
	}

	public MciMvtoInfeccaoTopografias(Integer seq,
			RapServidores servidor,
			AghUnidadesFuncionais unidadeFuncional,
			MciEtiologiaInfeccao etiologiaInfeccao,
			AghUnidadesFuncionais unidadeFuncionalNotificada,
			AipPacientes paciente, MciTopografiaProcedimento topografiaProcedimento, Date criadoEm, Date dataInicio,
			DominioConfirmacaoCCI confirmacaoCci) {
		this.seq = seq;
		this.servidor = servidor;
		this.unidadeFuncional = unidadeFuncional;
		this.etiologiaInfeccao = etiologiaInfeccao;
		this.unidadeFuncionalNotificada = unidadeFuncionalNotificada;
		this.paciente = paciente;
		this.topografiaProcedimento = topografiaProcedimento;
		this.criadoEm = criadoEm;
		this.dataInicio = dataInicio;
		this.confirmacaoCci = confirmacaoCci;
	}

	public MciMvtoInfeccaoTopografias(Integer seq,
			RapServidores servidorEncerrado,
			RapServidores servidorConfirmado,
			AghInstituicoesHospitalares instituicaoHospitalar,
			AinLeitos leitoNotificado,
			RapServidores servidor,
			AinLeitos leito, AinQuartos quarto,
			AghUnidadesFuncionais unidadeFuncional,
			MciEtiologiaInfeccao etiologiaInfeccao,
			AinQuartos quartoNotificado,
			AghUnidadesFuncionais unidadeFuncionalNotificada,
			AghAtendimentos atendimento, AipPacientes paciente, MciTopografiaProcedimento topografiaProcedimento,
			Date criadoEm, Date dataInicio, DominioConfirmacaoCCI confirmacaoCci, Date dataFim,
			DominioMotivoEncerramentoNotificacao motivoEncerramento, DominioIndContaminacao indContaminacao,
			MbcProcDescricoes procDescricoes, Long rniPnnSeq, Short rniSeqp) {
		this.seq = seq;
		this.servidorEncerrado = servidorEncerrado;
		this.servidorConfirmado = servidorConfirmado;
		this.instituicaoHospitalar = instituicaoHospitalar;
		this.leitoNotificado = leitoNotificado;
		this.servidor = servidor;
		this.leito = leito;
		this.quarto = quarto;
		this.unidadeFuncional = unidadeFuncional;
		this.etiologiaInfeccao = etiologiaInfeccao;
		this.quartoNotificado = quartoNotificado;
		this.unidadeFuncionalNotificada = unidadeFuncionalNotificada;
		this.atendimento = atendimento;
		this.paciente = paciente;
		this.topografiaProcedimento = topografiaProcedimento;
		this.criadoEm = criadoEm;
		this.dataInicio = dataInicio;
		this.confirmacaoCci = confirmacaoCci;
		this.dataFim = dataFim;
		this.motivoEncerramento = motivoEncerramento;
		this.indContaminacao = indContaminacao;
		this.procDescricoes = procDescricoes;
		this.rniPnnSeq = rniPnnSeq;
		this.rniSeqp = rniSeqp;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mciMitSq1")
	@Column(name = "SEQ", nullable = false, precision = 8, scale = 0)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_ENCERRADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_ENCERRADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorEncerrado() {
		return this.servidorEncerrado;
	}

	public void setServidorEncerrado(
			RapServidores servidorEncerrado) {
		this.servidorEncerrado = servidorEncerrado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_CONFIRMADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_CONFIRMADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorConfirmado() {
		return this.servidorConfirmado;
	}

	public void setServidorConfirmado(
			RapServidores servidorConfirmado) {
		this.servidorConfirmado = servidorConfirmado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IHO_SEQ")
	public AghInstituicoesHospitalares getInstituicaoHospitalar() {
		return this.instituicaoHospitalar;
	}

	public void setInstituicaoHospitalar(
			AghInstituicoesHospitalares instituicaoHospitalar) {
		this.instituicaoHospitalar = instituicaoHospitalar;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LTO_LTO_ID_NOTIFICADO")
	public AinLeitos getLeitoNotificado() {
		return this.leitoNotificado;
	}

	public void setLeitoNotificado(
			AinLeitos leitoNotificado) {
		this.leitoNotificado = leitoNotificado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(
			RapServidores servidor) {
		this.servidor = servidor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LTO_LTO_ID")
	public AinLeitos getLeito() {
		return this.leito;
	}

	public void setLeito(AinLeitos leito) {
		this.leito = leito;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "QRT_NUMERO")
	public AinQuartos getQuarto() {
		return this.quarto;
	}

	public void setQuarto(AinQuartos quarto) {
		this.quarto = quarto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ", nullable = false)
	public AghUnidadesFuncionais getUnidadeFuncional() {
		return this.unidadeFuncional;
	}

	public void setUnidadeFuncional(
			AghUnidadesFuncionais unidadeFuncional) {
		this.unidadeFuncional = unidadeFuncional;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EIN_TIPO", nullable = false)
	public MciEtiologiaInfeccao getEtiologiaInfeccao() {
		return this.etiologiaInfeccao;
	}

	public void setEtiologiaInfeccao(
			MciEtiologiaInfeccao etiologiaInfeccao) {
		this.etiologiaInfeccao = etiologiaInfeccao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "QRT_NUMERO_NOTIFICADO")
	public AinQuartos getQuartoNotificado() {
		return this.quartoNotificado;
	}

	public void setQuartoNotificado(
			AinQuartos quartoNotificado) {
		this.quartoNotificado = quartoNotificado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ_NOTIFICADO", nullable = false)
	public AghUnidadesFuncionais getUnidadeFuncionalNotificada() {
		return this.unidadeFuncionalNotificada;
	}

	public void setUnidadeFuncionalNotificada(
			AghUnidadesFuncionais unidadeFuncionalNotificada) {
		this.unidadeFuncionalNotificada = unidadeFuncionalNotificada;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ATD_SEQ")
	public AghAtendimentos getAtendimento() {
		return this.atendimento;
	}

	public void setAtendimento(AghAtendimentos atendimento) {
		this.atendimento = atendimento;
	}

	@ManyToOne(fetch = FetchType.LAZY, optional = false)
	@JoinColumn(name = "PAC_CODIGO", nullable = false, referencedColumnName = "CODIGO")
	public AipPacientes getPaciente() {
		return paciente;
	}

	public void setPaciente(AipPacientes paciente) {
		this.paciente = paciente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TOP_SEQ", referencedColumnName = "SEQ", nullable = false)
	public MciTopografiaProcedimento getTopografiaProcedimento() {
		return topografiaProcedimento;
	}

	public void setTopografiaProcedimento(
			MciTopografiaProcedimento topografiaProcedimento) {
		this.topografiaProcedimento = topografiaProcedimento;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_INICIO", nullable = false, length = 7)
	public Date getDataInicio() {
		return this.dataInicio;
	}

	public void setDataInicio(Date dataInicio) {
		this.dataInicio = dataInicio;
	}

	@Column(name = "IND_CONFIRMACAO_CCI", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioConfirmacaoCCI getConfirmacaoCci() {
		return this.confirmacaoCci;
	}

	public void setConfirmacaoCci(DominioConfirmacaoCCI confirmacaoCci) {
		this.confirmacaoCci = confirmacaoCci;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_FIM", length = 7)
	public Date getDataFim() {
		return this.dataFim;
	}

	public void setDataFim(Date dataFim) {
		this.dataFim = dataFim;
	}

	@Column(name = "MOTIVO_ENCERRAMENTO")
	@org.hibernate.annotations.Type(parameters = { @Parameter(name = "enumClassName", value = "br.gov.mec.aghu.dominio.DominioMotivoEncerramentoNotificacao") }, type = "br.gov.mec.aghu.core.model.jpa.DominioUserType")
	public DominioMotivoEncerramentoNotificacao getMotivoEncerramento() {
		return this.motivoEncerramento;
	}

	public void setMotivoEncerramento(DominioMotivoEncerramentoNotificacao motivoEncerramento) {
		this.motivoEncerramento = motivoEncerramento;
	}

	@Column(name = "IND_CONTAMINACAO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioIndContaminacao getIndContaminacao() {
		return indContaminacao;
	}

	public void setIndContaminacao(DominioIndContaminacao indContaminacao) {
		this.indContaminacao = indContaminacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "POD_DCG_CRG_SEQ", referencedColumnName = "DCG_CRG_SEQ"),
			@JoinColumn(name = "POD_DCG_SEQP", referencedColumnName = "DCG_SEQP"),
			@JoinColumn(name = "POD_SEQP", referencedColumnName = "SEQP")})
	public MbcProcDescricoes getProcDescricoes() {
		return procDescricoes;
	}

	public void setProcDescricoes(MbcProcDescricoes procDescricoes) {
		this.procDescricoes = procDescricoes;
	}

	@Column(name = "RNI_PNN_SEQ", precision = 14, scale = 0)
	public Long getRniPnnSeq() {
		return this.rniPnnSeq;
	}

	public void setRniPnnSeq(Long rniPnnSeq) {
		this.rniPnnSeq = rniPnnSeq;
	}

	@Column(name = "RNI_SEQP", precision = 4, scale = 0)
	public Short getRniSeqp() {
		return this.rniSeqp;
	}

	public void setRniSeqp(Short rniSeqp) {
		this.rniSeqp = rniSeqp;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciMvtoInfeccaoTopografias")
	public Set<MciMvtoMedidaPreventivas> getMciMvtoMedidaPreventivas() {
		return mciMvtoMedidaPreventivas;
	}

	public void setMciMvtoMedidaPreventivas(
			Set<MciMvtoMedidaPreventivas> mciMvtoMedidaPreventivas) {
		this.mciMvtoMedidaPreventivas = mciMvtoMedidaPreventivas;
	}



	public enum Fields {
		SEQ("seq"),
		UNF_SEQ("unidadeFuncional.seq"),
		UNF_SEQ_NOTIFICADO("unidadeFuncionalNotificada.seq"),
		EIN_TIPO("etiologiaInfeccao.codigo"),
		PACIENTE("paciente"),
		COD_PACIENTE("paciente.codigo"), 
		ATENDIMENTO("atendimento"),
		ATENDIMENTO_SEQ("atendimento.seq"),
		CONFIRMACAO_CCI("confirmacaoCci"),
		TOPOGRAFIA_PROCEDIMENTO("topografiaProcedimento"),
		TOPOGRAFIA_PROCEDIMENTO_SEQ("topografiaProcedimento.seq"),
		ETIOLOGIA_INFECCAO("etiologiaInfeccao"),
		ETIOLOGIA_INFECCAO_CODIGO("etiologiaInfeccao.codigo"),
		INSTITUICAO_HOSPITALAR_SEQ("instituicaoHospitalar.seq"),
		MVTO_MEDIDA_PREVENTIVAS("mciMvtoMedidaPreventivas"),
		MVTO_MEDIDA_PREVENTIVAS_SEQ("mciMvtoMedidaPreventivas.seq"),
		CRIADO_EM("criadoEm"),
		DT_INICIO("dataInicio"),
		SERVIDOR_MATRICULA("servidor.id.matricula"),
		SERVIDOR_VIN_CODIGO("servidor.id.vinCodigo"),
		SERVIDOR_ENCERRADO_MATRICULA("servidorEncerrado.id.matricula"),
		SERVIDOR_ENCERRADO_VIN_CODIGO("servidorEncerrado.id.vinCodigo"),
		SERVIDOR_CONFIRMADO_MATRICULA("servidorConfirmado.id.matricula"),
		SERVIDOR_CONFIRMADO_VIN_CODIGO("servidorConfirmado.id.vinCodigo"),
		QRT_NUMERO("quarto.numero"),
		QRT_NUMERO_NOTIFICADO("quartoNotificado.numero"),
		LTO_LTO_ID("leito.leitoID"),
		LTO_LTO_ID_NOTIFICADO("leitoNotificado.leitoID"),
		DT_FIM("dataFim"),
		MOTIVO_ENCERRAMENTO("motivoEncerramento"),
		IND_CONTAMINACAO("indContaminacao"),
		PROC_DESCRICOES("procDescricoes"),
		POD_DCG_CRG_SEQ("procDescricoes.id.dcgCrgSeq"),
		POD_DCG_SEQP("procDescricoes.id.dcgSeqp"),
		POD_SEQP("procDescricoes.id.seqp"),
		RNI_PNN_SEQ("rniPnnSeq"),
		RNI_SEQP("rniSeqp")
		;
		
		/*@JoinColumn(name = "POD_DCG_CRG_SEQ", referencedColumnName = "DCG_CRG_SEQ"),
		@JoinColumn(name = "POD_DCG_SEQP", referencedColumnName = "DCG_SEQP"),
		@JoinColumn(name = "POD_SEQP", referencedColumnName = "SEQP")})*/

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((seq == null) ? 0 : seq.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		MciMvtoInfeccaoTopografias other = (MciMvtoInfeccaoTopografias) obj;
		if (seq == null) {
			if (other.seq != null) {
				return false;
			}
		} else if (!seq.equals(other.seq)) {
			return false;
		}
		return true;
	}
	
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}
	 
	
}

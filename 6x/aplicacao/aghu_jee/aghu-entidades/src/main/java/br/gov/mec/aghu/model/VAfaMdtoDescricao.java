package br.gov.mec.aghu.model;

// Generated 25/11/2010 10:49:28 by Hibernate Tools 3.3.0.GA

import javax.persistence.AttributeOverride;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;


import org.hibernate.annotations.Immutable;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * VAfaMdtoDescricao generated by hbm2java
 */

@Entity
@Table(name = "V_AFA_MDTO_DESCRICAO", schema = "AGH")
@Immutable
public class VAfaMdtoDescricao extends BaseEntityId<VAfaMdtoDescricaoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8621381733013258923L;
	private VAfaMdtoDescricaoId id;
	private AfaMedicamento medicamento;
	private String medDescricao;
	private String medDescricaoEd;
	private String medDescricaoCodigo;
	private String medDescricaoCodEd;

	public VAfaMdtoDescricao() {
	}

	public VAfaMdtoDescricao(VAfaMdtoDescricaoId id, String medDescricao,
			String medDescricaoEd, String medDescricaoCodigo,
			String medDescricaoCodEd) {
		this.id = id;
		this.medDescricao = medDescricao;
		this.medDescricaoEd = medDescricaoEd;
		this.medDescricaoCodigo = medDescricaoCodigo;
		this.medDescricaoCodEd = medDescricaoCodEd;
	}

	@EmbeddedId
	@AttributeOverride(name = "medMatCodigo", column = @Column(name = "MED_MAT_CODIGO", nullable = false, precision = 6, scale = 0))
	public VAfaMdtoDescricaoId getId() {
		return this.id;
	}

	public void setId(VAfaMdtoDescricaoId id) {
		this.id = id;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MED_MAT_CODIGO", referencedColumnName = "MAT_CODIGO", insertable = false, updatable = false)
	public AfaMedicamento getMedicamento() {
		return this.medicamento;
	}

	public void setMedicamento(AfaMedicamento medicamento) {
		this.medicamento = medicamento;
	}
	
	@Column(name = "MED_DESCRICAO", length = 117)
	@Length(max = 117)
	public String getMedDescricao() {
		return this.medDescricao;
	}

	public void setMedDescricao(String medDescricao) {
		this.medDescricao = medDescricao;
	}

	@Column(name = "MED_DESCRICAO_ED", length = 117)
	@Length(max = 117)
	public String getMedDescricaoEd() {
		return this.medDescricaoEd;
	}

	public void setMedDescricaoEd(String medDescricaoEd) {
		this.medDescricaoEd = medDescricaoEd;
	}

	@Column(name = "MED_DESCRICAO_CODIGO", length = 165)
	@Length(max = 165)
	public String getMedDescricaoCodigo() {
		return this.medDescricaoCodigo;
	}

	public void setMedDescricaoCodigo(String medDescricaoCodigo) {
		this.medDescricaoCodigo = medDescricaoCodigo;
	}

	@Column(name = "MED_DESCRICAO_COD_ED", length = 165)
	@Length(max = 165)
	public String getMedDescricaoCodEd() {
		return this.medDescricaoCodEd;
	}

	public void setMedDescricaoCodEd(String medDescricaoCodEd) {
		this.medDescricaoCodEd = medDescricaoCodEd;
	}
	
	public enum Fields {

		MED_MAT_CODIGO("id.medMatCodigo"), MED_DESCRICAO("medDescricao"), MED_DESCRICAO_ED("medDescricaoEd"),
		MED_DESCRICAO_CODIGO("medDescricaoCodigo"), MED_DESCRICAO_COD_ED("medDescricaoCodEd"), 
		MEDICAMENTO("medicamento");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
		
	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof VAfaMdtoDescricao)) {
			return false;
		}
		VAfaMdtoDescricao other = (VAfaMdtoDescricao) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

// Generated 15/03/2011 13:46:58 by Hibernate Tools 3.2.5.Beta

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * FatGrupos generated by hbm2java
 */
@Entity
@SequenceGenerator(name="fatGrpSq1", sequenceName="AGH.FAT_GRP_SQ1", allocationSize = 1)
@Table(name = "FAT_GRUPOS", schema = "AGH", uniqueConstraints = @UniqueConstraint(columnNames = "CODIGO"))
public class FatGrupo extends BaseEntitySeq<Short> implements java.io.Serializable {
	private static final long serialVersionUID = -4046422070092014461L;
	
	private Short seq;
	private Short codigo;
	private String descricao;
	private DominioSituacao indSituacao;
	private Set<FatSubGrupo> subGrupos = new HashSet<FatSubGrupo>(0);
	private Integer version;

	public FatGrupo() {
	}


	public FatGrupo(Short seq, Short codigo, String descricao,
			DominioSituacao indSituacao, Set<FatSubGrupo> subGrupos) {
		this.seq = seq;
		this.codigo = codigo;
		this.descricao = descricao;
		this.indSituacao = indSituacao;
		this.subGrupos = subGrupos;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "fatGrpSq1")
	@Column(name = "SEQ", unique = true, nullable = false, precision = 3, scale = 0)
	public Short getSeq() {
		return this.seq;
	}

	public void setSeq(Short seq) {
		this.seq = seq;
	}

	@Column(name = "CODIGO", unique = true, nullable = false, precision = 3, scale = 0)
	public Short getCodigo() {
		return this.codigo;
	}

	public void setCodigo(Short codigo) {
		this.codigo = codigo;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 100)
	@Length(max = 100)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "IND_SITUACAO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fatGrupo")
	public Set<FatSubGrupo> getSubGrupos() {
		return subGrupos;
	}

	public void setSubGrupos(Set<FatSubGrupo> subGrupos) {
		this.subGrupos = subGrupos;
	}
	
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}



	public enum Fields {
		SEQ("seq"),
		CODIGO("codigo"),
		DESCRICAO("descricao"),
		IND_SITUACAO("indSituacao");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}



	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((seq == null) ? 0 : seq.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		FatGrupo other = (FatGrupo) obj;
		if (seq == null) {
			if (other.seq != null) {
				return false;
			}
		} else if (!seq.equals(other.seq)) {
			return false;
		}
		return true;
	}
	
	
	
}

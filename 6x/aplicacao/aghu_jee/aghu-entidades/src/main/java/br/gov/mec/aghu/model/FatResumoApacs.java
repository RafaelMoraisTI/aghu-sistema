package br.gov.mec.aghu.model;

// Generated 08/02/2010 17:25:25 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSimNao;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * FatResumoApacs generated by hbm2java
 */
@SuppressWarnings({"PMD.AghuUsoIndevidoDaEnumDominioSimNaoEntity"})
@Entity
@Table(name = "FAT_RESUMO_APACS", schema = "AGH")
public class FatResumoApacs extends BaseEntityId<FatResumoApacsId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1027089612005622285L;
	private FatResumoApacsId id;
	private FatProcedHospInternos procedimentoHospitalarInterno;
	private Date dtInicio;
	private Date dtFinal;
	private String indSelecao;
	private Short quantidadeBera;
	private Short quantidadeOtoemissoes;
	private DominioSimNao indAparelho;
	private Byte quantidadeAparelho;
	private Short grcSeq;
	private Integer version;

	public FatResumoApacs() {
	}

	public FatResumoApacs(FatResumoApacsId id, Date dtInicio, Date dtFinal,
			FatProcedHospInternos procedimentoHospitalarInterno, Short grcSeq) {
		this.id = id;
		this.dtInicio = dtInicio;
		this.dtFinal = dtFinal;
		this.procedimentoHospitalarInterno = procedimentoHospitalarInterno;
		this.grcSeq = grcSeq;
	}

	public FatResumoApacs(FatResumoApacsId id, Date dtInicio, Date dtFinal,
			String indSelecao, Short quantidadeBera,
			Short quantidadeOtoemissoes, FatProcedHospInternos procedimentoHospitalarInterno, DominioSimNao indAparelho,
			Byte quantidadeAparelho, Short grcSeq) {
		this.id = id;
		this.dtInicio = dtInicio;
		this.dtFinal = dtFinal;
		this.indSelecao = indSelecao;
		this.quantidadeBera = quantidadeBera;
		this.quantidadeOtoemissoes = quantidadeOtoemissoes;
		this.procedimentoHospitalarInterno = procedimentoHospitalarInterno;
		this.indAparelho = indAparelho;
		this.quantidadeAparelho = quantidadeAparelho;
		this.grcSeq = grcSeq;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "pacCodigo", column = @Column(name = "PAC_CODIGO", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "atmNumero", column = @Column(name = "ATM_NUMERO", unique = true, nullable = false, precision = 13, scale = 0)) })
	public FatResumoApacsId getId() {
		return this.id;
	}

	public void setId(FatResumoApacsId id) {
		this.id = id;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DT_INICIO", nullable = false, length = 7)
	public Date getDtInicio() {
		return this.dtInicio;
	}

	public void setDtInicio(Date dtInicio) {
		this.dtInicio = dtInicio;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DT_FINAL", nullable = false, length = 7)
	public Date getDtFinal() {
		return this.dtFinal;
	}

	public void setDtFinal(Date dtFinal) {
		this.dtFinal = dtFinal;
	}

	@Column(name = "IND_SELECAO", length = 1)
	@Length(max = 1)
	public String getIndSelecao() {
		return this.indSelecao;
	}

	public void setIndSelecao(String indSelecao) {
		this.indSelecao = indSelecao;
	}

	@Column(name = "QUANTIDADE_BERA", precision = 3, scale = 0)
	public Short getQuantidadeBera() {
		return this.quantidadeBera;
	}

	public void setQuantidadeBera(Short quantidadeBera) {
		this.quantidadeBera = quantidadeBera;
	}

	@Column(name = "QUANTIDADE_OTOEMISSOES", precision = 3, scale = 0)
	public Short getQuantidadeOtoemissoes() {
		return this.quantidadeOtoemissoes;
	}

	public void setQuantidadeOtoemissoes(Short quantidadeOtoemissoes) {
		this.quantidadeOtoemissoes = quantidadeOtoemissoes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PHI_SEQ", nullable = false)
	public FatProcedHospInternos getProcedimentoHospitalarInterno() {
		return procedimentoHospitalarInterno;
	}

	public void setProcedimentoHospitalarInterno(
			FatProcedHospInternos procedimentoHospitalarInterno) {
		this.procedimentoHospitalarInterno = procedimentoHospitalarInterno;
	}

	@Column(name = "IND_APARELHO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSimNao getIndAparelho() {
		return this.indAparelho;
	}

	public void setIndAparelho(DominioSimNao indAparelho) {
		this.indAparelho = indAparelho;
	}

	@Column(name = "QUANTIDADE_APARELHO", precision = 2, scale = 0)
	public Byte getQuantidadeAparelho() {
		return this.quantidadeAparelho;
	}

	public void setQuantidadeAparelho(Byte quantidadeAparelho) {
		this.quantidadeAparelho = quantidadeAparelho;
	}

	@Column(name = "GRC_SEQ", nullable = false, precision = 4, scale = 0)
	public Short getGrcSeq() {
		return this.grcSeq;
	}

	public void setGrcSeq(Short grcSeq) {
		this.grcSeq = grcSeq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj){
			return true;
		}
		if (obj == null){
			return false;
		}
		if (getClass() != obj.getClass()){
			return false;
		}
		FatResumoApacs other = (FatResumoApacs) obj;
		if (id == null) {
			if (other.id != null){
				return false;
			}
		} else if (!id.equals(other.id)){
			return false;
		}
		return true;
	}

	public enum Fields {
		PAC_CODIGO("id.pacCodigo"),
		ATM_NUMERO("id.atmNumero"),
		DT_FINAL("dtFinal"),
		DT_INICIO("dtInicio"),
		IND_APARELHO("indAparelho"),
		PHI_SEQ("procedimentoHospitalarInterno.seq"), 
		QUANTIDADE_APARELHO("quantidadeAparelho"),
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}
	
}

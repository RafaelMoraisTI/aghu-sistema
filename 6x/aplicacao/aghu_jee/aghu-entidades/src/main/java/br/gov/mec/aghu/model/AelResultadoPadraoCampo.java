package br.gov.mec.aghu.model;

// Generated 25/01/2012 16:25:37 by Hibernate Tools 3.4.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Version;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AelResulPadroesCampos generated by hbm2java
 */
@Entity
@Table(name = "AEL_RESUL_PADROES_CAMPOS", schema = "AGH")
public class AelResultadoPadraoCampo extends BaseEntityId<AelResultadoPadraoCampoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 4871555729667033360L;
	private AelResultadoPadraoCampoId id;
	private Integer version;
	private Long valor;
	private AelParametroCamposLaudo parametroCampoLaudo;
	private AelCampoLaudo campoLaudo;
	private AelResultadoCaracteristica resultadoCaracteristica;
	private AelResultadoCodificado resultadoCodificado;
	private RapServidores servidor;
	private AelDescricoesResulPadrao descricaoResulPadrao;
	private AelResultadosPadrao resultadoPadrao;
	

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "rpaSeq", column = @Column(name = "RPA_SEQ", nullable = false)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false)) })
	public AelResultadoPadraoCampoId getId() {
		return this.id;
	}
	
	@OneToOne(fetch = FetchType.LAZY, mappedBy = "resultadoPadraoCampo")
	public AelDescricoesResulPadrao getDescricaoResulPadrao() {
		return descricaoResulPadrao;
	}

	public void setDescricaoResulPadrao(AelDescricoesResulPadrao descricaoResulPadrao) {
		this.descricaoResulPadrao = descricaoResulPadrao;
	}


	public void setId(AelResultadoPadraoCampoId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = true)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Column(name = "VALOR")
	public Long getValor() {
		return this.valor;
	}

	public void setValor(Long valor) {
		this.valor = valor;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "PCL_VEL_EMA_EXA_SIGLA", referencedColumnName = "VEL_EMA_EXA_SIGLA"),
			@JoinColumn(name = "PCL_VEL_EMA_MAN_SEQ", referencedColumnName = "VEL_EMA_MAN_SEQ"),
			@JoinColumn(name = "PCL_VEL_SEQP", referencedColumnName = "VEL_SEQP"),
			@JoinColumn(name = "PCL_CAL_SEQ", referencedColumnName = "CAL_SEQ"),
			@JoinColumn(name = "PCL_SEQP", referencedColumnName = "SEQP")})
	public AelParametroCamposLaudo getParametroCampoLaudo() {
		return this.parametroCampoLaudo;
	}

	public void setParametroCampoLaudo(
			AelParametroCamposLaudo parametroCampoLaudo) {
		this.parametroCampoLaudo = parametroCampoLaudo;
	}


	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CAL_SEQ")
	public AelCampoLaudo getCampoLaudo() {
		return campoLaudo;
	}

	public void setCampoLaudo(AelCampoLaudo campoLaudo) {
		this.campoLaudo = campoLaudo;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CAC_SEQ")
	public AelResultadoCaracteristica getResultadoCaracteristica() {
		return resultadoCaracteristica;
	}

	public void setResultadoCaracteristica(
			AelResultadoCaracteristica resultadoCaracteristica) {
		this.resultadoCaracteristica = resultadoCaracteristica;
	}
	
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "RCD_GTC_SEQ", referencedColumnName = "GTC_SEQ"),
			@JoinColumn(name = "RCD_SEQP", referencedColumnName = "SEQP") })
	public AelResultadoCodificado getResultadoCodificado() {
		return resultadoCodificado;
	}
	

	public void setResultadoCodificado(AelResultadoCodificado resultadoCodificado) {
		this.resultadoCodificado = resultadoCodificado;
	}


	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}
	
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RPA_SEQ", nullable = false, insertable = false, updatable = false)
	public AelResultadosPadrao getResultadoPadrao() {
		return resultadoPadrao;
	}

	public void setResultadoPadrao(AelResultadosPadrao resultadoPadrao) {
		this.resultadoPadrao = resultadoPadrao;
	}
	

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AelResultadoPadraoCampo)){
			return false;
		}
		AelResultadoPadraoCampo other = (AelResultadoPadraoCampo) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())){
			return false;
		}
		return true;
	}

	public enum Fields {
		ID("id"),//
		RPA_SEQ("id.rpaSeq"),//
		SEQP("id.seqp"),//
		VALOR("valor"),//
		PARAMETRO_CAMPO_LAUDO("parametroCampoLaudo"),//
		CAMPO_LAUDO("campoLaudo"),//
		RESULTADO_CARACTERISTICA("resultadoCaracteristica"),//
		RESULTADO_CODIFICADO("resultadoCodificado"),//
		SERVIDOR("servidor"),//
		CAL_SEQ("campoLaudo.seq"),//
		PCL_CAL_SEQ("parametroCampoLaudo.id.calSeq"),//
		DESCRICAO_RESUL_PADRAO("descricaoResulPadrao"),
		RESULTADO_PADRAO("resultadoPadrao");//
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}

	}
}

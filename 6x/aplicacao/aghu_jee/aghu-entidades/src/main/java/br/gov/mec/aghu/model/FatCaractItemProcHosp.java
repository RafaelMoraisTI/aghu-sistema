package br.gov.mec.aghu.model;

// Generated 28/04/2010 18:27:18 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * FatCaractItemProcHosp generated by hbm2java
 */
@Entity
@Table(name = "FAT_CARACT_ITEM_PROC_HOSP", schema = "AGH")
@org.hibernate.annotations.Cache(usage=org.hibernate.annotations.CacheConcurrencyStrategy.TRANSACTIONAL)
public class FatCaractItemProcHosp extends BaseEntityId<FatCaractItemProcHospId> implements java.io.Serializable {
	private static final long serialVersionUID = 362084873771091294L;
	
	private FatCaractItemProcHospId id;
	private Integer iphSeq;
	private Short iphPhoSeq;
	private FatItensProcedHospitalar itemProcedimentoHospitalar;
	private RapServidores servidor;
	private RapServidores servidorAlterado;
	private FatTipoCaractItens tipoCaracteristicaItem;
	private Integer valorNumerico;
	private String valorChar;
	private Date valorData;
	private Date criadoEm;
	private Date alteradoEm;
	private Integer version;

	public FatCaractItemProcHosp() {
	}

	public FatCaractItemProcHosp(FatCaractItemProcHospId id,
			FatItensProcedHospitalar itemProcedimentoHospitalar,
			FatTipoCaractItens tipoCaracteristicaItem) {
		this.id = id;
		this.itemProcedimentoHospitalar = itemProcedimentoHospitalar;
		this.tipoCaracteristicaItem = tipoCaracteristicaItem;
	}

	public FatCaractItemProcHosp(FatCaractItemProcHospId id,
			RapServidores servidorAlterado,
			FatItensProcedHospitalar itemProcedimentoHospitalar,
			RapServidores servidor,
			FatTipoCaractItens tipoCaracteristicaItem, Integer valorNumerico,
			String valorChar, Date valorData, Date criadoEm, Date alteradoEm) {
		this.id = id;
		this.servidorAlterado = servidorAlterado;
		this.itemProcedimentoHospitalar = itemProcedimentoHospitalar;
		this.servidor = servidor;
		this.tipoCaracteristicaItem = tipoCaracteristicaItem;
		this.valorNumerico = valorNumerico;
		this.valorChar = valorChar;
		this.valorData = valorData;
		this.criadoEm = criadoEm;
		this.alteradoEm = alteradoEm;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "iphPhoSeq", column = @Column(name = "IPH_PHO_SEQ", nullable = false, precision = 4, scale = 0)),
			@AttributeOverride(name = "iphSeq", column = @Column(name = "IPH_SEQ", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "tctSeq", column = @Column(name = "TCT_SEQ", nullable = false, precision = 22, scale = 0)) })
	public FatCaractItemProcHospId getId() {
		return this.id;
	}

	public void setId(FatCaractItemProcHospId id) {
		this.id = id;
	}
	
	@Column(name = "IPH_SEQ", precision = 8, scale = 0, insertable = false, updatable= false)	
	public Integer getIphSeq() {
		return iphSeq;
	}
	
	@Column(name = "IPH_PHO_SEQ", precision = 8, scale = 0, insertable = false, updatable= false)	
	public Short getIphPhoSeq() {
		return iphPhoSeq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_ALTERADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_ALTERADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorAlterado() {
		return this.servidorAlterado;
	}

	public void setServidorAlterado(
			RapServidores servidorAlterado) {
		this.servidorAlterado = servidorAlterado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "IPH_PHO_SEQ", referencedColumnName = "PHO_SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "IPH_SEQ", referencedColumnName = "SEQ", nullable = false, insertable = false, updatable = false) })
	public FatItensProcedHospitalar getItemProcedimentoHospitalar() {
		return this.itemProcedimentoHospitalar;
	}

	public void setItemProcedimentoHospitalar(
			FatItensProcedHospitalar itemProcedimentoHospitalar) {
		this.itemProcedimentoHospitalar = itemProcedimentoHospitalar;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(
			RapServidores servidor) {
		this.servidor = servidor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TCT_SEQ", nullable = false, insertable = false, updatable = false)
	public FatTipoCaractItens getTipoCaracteristicaItem() {
		return this.tipoCaracteristicaItem;
	}

	public void setTipoCaracteristicaItem(FatTipoCaractItens tipoCaracteristicaItem) {
		this.tipoCaracteristicaItem = tipoCaracteristicaItem;
	}

	@Column(name = "VALOR_NUMERICO", precision = 8, scale = 0)
	public Integer getValorNumerico() {
		return this.valorNumerico;
	}

	public void setValorNumerico(Integer valorNumerico) {
		this.valorNumerico = valorNumerico;
	}

	@Column(name = "VALOR_CHAR", length = 240)
	@Length(max = 240)
	public String getValorChar() {
		return this.valorChar;
	}

	public void setValorChar(String valorChar) {
		this.valorChar = valorChar;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "VALOR_DATA", length = 7)
	public Date getValorData() {
		return this.valorData;
	}

	public void setValorData(Date valorData) {
		this.valorData = valorData;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 7)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}
	
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		FatCaractItemProcHosp other = (FatCaractItemProcHosp) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}



	public enum Fields {
		IPH_SEQ("id.iphSeq"),
		IPH_PHO_SEQ("id.iphPhoSeq"),
		TCT_SEQ("id.tctSeq"),
		VALOR_CHAR("valorChar"),
		ITEM_PROCEDIMENTO_HOSPITALAR("itemProcedimentoHospitalar"),
		SERVIDOR("servidor"),
		SERVIDOR_ALTERADO("servidorAlterado"),
		TIPO_CARACTERISTICA_ITEM("tipoCaracteristicaItem"),
		SEQ_TIPO_CARACTERISTICA_ITEM("tipoCaracteristicaItem" + "." + FatTipoCaractItens.Fields.SEQ.toString()),
		VALOR_NUMERICO("valorNumerico"),
		VALOR_DATA("valorData"),
		CRIADO_EM("criadoEm"),
		ALTERADO_EM("alteradoEm");
		
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}



	public void setIphSeq(Integer iphSeq) {
		this.iphSeq = iphSeq;
	}

	public void setIphPhoSeq(Short iphPhoSeq) {
		this.iphPhoSeq = iphPhoSeq;
	}

}

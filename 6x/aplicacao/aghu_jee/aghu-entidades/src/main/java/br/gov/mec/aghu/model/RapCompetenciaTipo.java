package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * RapCompetenciaTipo generated by hbm2java
 */
@Entity
@Table(name = "RAP_COMPETENCIAS_TIPO", schema = "AGH")
public class RapCompetenciaTipo extends BaseEntityId<RapCompetenciaTipoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8584626582822025222L;
	private RapCompetenciaTipoId id;
	private Integer version;
	private RapServidores rapServidoresByRapCptSerFk2;
	private RapTipoCompetencia rapTipoCompetencia;
	private RapCompetencia rapCompetencia;
	private RapServidores rapServidoresByRapCptSerFk1;
	private String indInstitucional;
	private String ajuda;
	private Date dtInicio;
	private Date dtFim;
	private Date criadoEm;
	private Date alteradoEm;
	private Set<RapCompetenciaPerfil> rapCompetenciaPerfils = new HashSet<RapCompetenciaPerfil>(0);
	private Set<RapItemAvaliacaoServ> rapItemAvaliacaoServs = new HashSet<RapItemAvaliacaoServ>(0);

	public RapCompetenciaTipo() {
	}

	public RapCompetenciaTipo(RapCompetenciaTipoId id, RapTipoCompetencia rapTipoCompetencia, RapCompetencia rapCompetencia,
			RapServidores rapServidoresByRapCptSerFk1, String indInstitucional, Date dtInicio, Date criadoEm) {
		this.id = id;
		this.rapTipoCompetencia = rapTipoCompetencia;
		this.rapCompetencia = rapCompetencia;
		this.rapServidoresByRapCptSerFk1 = rapServidoresByRapCptSerFk1;
		this.indInstitucional = indInstitucional;
		this.dtInicio = dtInicio;
		this.criadoEm = criadoEm;
	}

	public RapCompetenciaTipo(RapCompetenciaTipoId id, RapServidores rapServidoresByRapCptSerFk2,
			RapTipoCompetencia rapTipoCompetencia, RapCompetencia rapCompetencia, RapServidores rapServidoresByRapCptSerFk1,
			String indInstitucional, String ajuda, Date dtInicio, Date dtFim, Date criadoEm, Date alteradoEm,
			Set<RapCompetenciaPerfil> rapCompetenciaPerfils, Set<RapItemAvaliacaoServ> rapItemAvaliacaoServs) {
		this.id = id;
		this.rapServidoresByRapCptSerFk2 = rapServidoresByRapCptSerFk2;
		this.rapTipoCompetencia = rapTipoCompetencia;
		this.rapCompetencia = rapCompetencia;
		this.rapServidoresByRapCptSerFk1 = rapServidoresByRapCptSerFk1;
		this.indInstitucional = indInstitucional;
		this.ajuda = ajuda;
		this.dtInicio = dtInicio;
		this.dtFim = dtFim;
		this.criadoEm = criadoEm;
		this.alteradoEm = alteradoEm;
		this.rapCompetenciaPerfils = rapCompetenciaPerfils;
		this.rapItemAvaliacaoServs = rapItemAvaliacaoServs;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "tcmCodigo", column = @Column(name = "TCM_CODIGO", nullable = false, length = 2)),
			@AttributeOverride(name = "comSeq", column = @Column(name = "COM_SEQ", nullable = false)) })
	public RapCompetenciaTipoId getId() {
		return this.id;
	}

	public void setId(RapCompetenciaTipoId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_ALTERADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_ALTERADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByRapCptSerFk2() {
		return this.rapServidoresByRapCptSerFk2;
	}

	public void setRapServidoresByRapCptSerFk2(RapServidores rapServidoresByRapCptSerFk2) {
		this.rapServidoresByRapCptSerFk2 = rapServidoresByRapCptSerFk2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TCM_CODIGO", nullable = false, insertable = false, updatable = false)
	public RapTipoCompetencia getRapTipoCompetencia() {
		return this.rapTipoCompetencia;
	}

	public void setRapTipoCompetencia(RapTipoCompetencia rapTipoCompetencia) {
		this.rapTipoCompetencia = rapTipoCompetencia;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "COM_SEQ", nullable = false, insertable = false, updatable = false)
	public RapCompetencia getRapCompetencia() {
		return this.rapCompetencia;
	}

	public void setRapCompetencia(RapCompetencia rapCompetencia) {
		this.rapCompetencia = rapCompetencia;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_CRIADO", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO_CRIADO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByRapCptSerFk1() {
		return this.rapServidoresByRapCptSerFk1;
	}

	public void setRapServidoresByRapCptSerFk1(RapServidores rapServidoresByRapCptSerFk1) {
		this.rapServidoresByRapCptSerFk1 = rapServidoresByRapCptSerFk1;
	}

	@Column(name = "IND_INSTITUCIONAL", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndInstitucional() {
		return this.indInstitucional;
	}

	public void setIndInstitucional(String indInstitucional) {
		this.indInstitucional = indInstitucional;
	}

	@Column(name = "AJUDA", length = 300)
	@Length(max = 300)
	public String getAjuda() {
		return this.ajuda;
	}

	public void setAjuda(String ajuda) {
		this.ajuda = ajuda;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_INICIO", nullable = false, length = 29)
	public Date getDtInicio() {
		return this.dtInicio;
	}

	public void setDtInicio(Date dtInicio) {
		this.dtInicio = dtInicio;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_FIM", length = 29)
	public Date getDtFim() {
		return this.dtFim;
	}

	public void setDtFim(Date dtFim) {
		this.dtFim = dtFim;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 29)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rapCompetenciaTipo")
	public Set<RapCompetenciaPerfil> getRapCompetenciaPerfils() {
		return this.rapCompetenciaPerfils;
	}

	public void setRapCompetenciaPerfils(Set<RapCompetenciaPerfil> rapCompetenciaPerfils) {
		this.rapCompetenciaPerfils = rapCompetenciaPerfils;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rapCompetenciaTipo")
	public Set<RapItemAvaliacaoServ> getRapItemAvaliacaoServs() {
		return this.rapItemAvaliacaoServs;
	}

	public void setRapItemAvaliacaoServs(Set<RapItemAvaliacaoServ> rapItemAvaliacaoServs) {
		this.rapItemAvaliacaoServs = rapItemAvaliacaoServs;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		RAP_SERVIDORES_BY_RAP_CPT_SER_FK2("rapServidoresByRapCptSerFk2"),
		RAP_TIPOS_COMPETENCIA("rapTipoCompetencia"),
		RAP_COMPETENCIAS("rapCompetencia"),
		RAP_SERVIDORES_BY_RAP_CPT_SER_FK1("rapServidoresByRapCptSerFk1"),
		IND_INSTITUCIONAL("indInstitucional"),
		AJUDA("ajuda"),
		DT_INICIO("dtInicio"),
		DT_FIM("dtFim"),
		CRIADO_EM("criadoEm"),
		ALTERADO_EM("alteradoEm"),
		RAP_COMPETENCIA_PERFILS("rapCompetenciaPerfils"),
		RAP_ITEM_AVALIACAO_SERVS("rapItemAvaliacaoServs");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof RapCompetenciaTipo)) {
			return false;
		}
		RapCompetenciaTipo other = (RapCompetenciaTipo) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

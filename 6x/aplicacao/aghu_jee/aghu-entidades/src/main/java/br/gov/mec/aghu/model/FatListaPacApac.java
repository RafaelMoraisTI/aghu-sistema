package br.gov.mec.aghu.model;

// Generated 15/03/2011 13:46:58 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * FatListaPacApacs generated by hbm2java
 */
@Entity
@SequenceGenerator(name="fatLppSq1", sequenceName="AGH.FAT_LPP_SQ1", allocationSize = 1)
@Table(name = "FAT_LISTA_PAC_APACS", schema = "AGH")
public class FatListaPacApac extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1590888419642059340L;
	private Integer seq;
	private FatTipoTratamentos tipoTratamento;
	private AipPacientes paciente;
	private Date dtEmAvaliacao;
	private Date dtConfirmado;
	private Date dtProcedimento;
	private DominioSituacao indSituacao;
	private Date criadoEm;
	private RapServidores servidor;
	private Date alteradoEm;
	private RapServidores servidorAltera;
	private FatProcedAmbRealizado procedAmbRealizado;
	private Set<FatLaudoPacApac> laudosPacApac = new HashSet<FatLaudoPacApac>(0);

	public FatListaPacApac() {
	}

	public FatListaPacApac(Integer seq, FatTipoTratamentos tipoTratamento, AipPacientes paciente,
			DominioSituacao indSituacao, RapServidores servidor,
			RapServidores servidorAltera) {
		this.seq = seq;
		this.tipoTratamento = tipoTratamento;
		this.paciente = paciente;
		this.indSituacao = indSituacao;
		this.servidor = servidor;
		this.servidorAltera = servidorAltera;
	}

	public FatListaPacApac(Integer seq, FatTipoTratamentos tipoTratamento, AipPacientes paciente,
			Date dtEmAvaliacao, Date dtConfirmado, Date dtProcedimento,
			DominioSituacao indSituacao, Date criadoEm, RapServidores servidor,
			Date alteradoEm, RapServidores servidorAltera,
			FatProcedAmbRealizado procedAmbRealizado,
			Set<FatLaudoPacApac> laudosPacApac) {
		this.seq = seq;
		this.tipoTratamento = tipoTratamento;
		this.paciente = paciente;
		this.dtEmAvaliacao = dtEmAvaliacao;
		this.dtConfirmado = dtConfirmado;
		this.dtProcedimento = dtProcedimento;
		this.indSituacao = indSituacao;
		this.criadoEm = criadoEm;
		this.servidor = servidor;
		this.alteradoEm = alteradoEm;
		this.servidorAltera = servidorAltera;
		this.procedAmbRealizado = procedAmbRealizado;
		this.laudosPacApac = laudosPacApac;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "fatLppSq1")
	@Column(name = "SEQ", unique = true, nullable = false, precision = 8, scale = 0)
	public Integer getSeq() {
		return this.seq;
	}
	
	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TPT_SEQ", nullable = false)
	public FatTipoTratamentos getTipoTratamento() {
		return tipoTratamento;
	}

	public void setTipoTratamento(FatTipoTratamentos tipoTratamento) {
		this.tipoTratamento = tipoTratamento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO", nullable = false)
	public AipPacientes getPaciente() {
		return this.paciente;
	}

	public void setPaciente(AipPacientes paciente) {
		this.paciente = paciente;
	}
	

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_EM_AVALIACAO", length = 7)
	public Date getDtEmAvaliacao() {
		return this.dtEmAvaliacao;
	}

	public void setDtEmAvaliacao(Date dtEmAvaliacao) {
		this.dtEmAvaliacao = dtEmAvaliacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_CONFIRMADO", length = 7)
	public Date getDtConfirmado() {
		return this.dtConfirmado;
	}

	public void setDtConfirmado(Date dtConfirmado) {
		this.dtConfirmado = dtConfirmado;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_PROCEDIMENTO", length = 7)
	public Date getDtProcedimento() {
		return this.dtProcedimento;
	}

	public void setDtProcedimento(Date dtProcedimento) {
		this.dtProcedimento = dtProcedimento;
	}

	
	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}
	

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}


	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}
	

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 7)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_ALTERA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO_ALTERA", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidorAltera() {
		return servidorAltera;
	}

	public void setServidorAltera(RapServidores servidorAltera) {
		this.servidorAltera = servidorAltera;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PMR_SEQ")
	public FatProcedAmbRealizado getProcedAmbRealizado() {
		return procedAmbRealizado;
	}

	public void setProcedAmbRealizado(FatProcedAmbRealizado procedAmbRealizado) {
		this.procedAmbRealizado = procedAmbRealizado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fatListaPacApac")
	public Set<FatLaudoPacApac> getLaudosPacApac() {
		return laudosPacApac;
	}

	public void setLaudosPacApac(Set<FatLaudoPacApac> laudosPacApac) {
		this.laudosPacApac = laudosPacApac;
	}



	public enum Fields {
		SEQ("seq"),
		PROCED_AMB_REALIZADO("procedAmbRealizado"),
		TIPO_TRATAMENTO("tipoTratamento"),
		TPT_SEQ("tipoTratamento.seq"),
		DT_CONFIRMADO("dtConfirmado"),
		IND_SITUACAO("indSituacao"), 
		PAC_CODIGO("paciente.codigo"), 
		RAP_SERVIDORES("servidor"), 
		PACICENTE("paciente");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((seq == null) ? 0 : seq.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		FatListaPacApac other = (FatListaPacApac) obj;
		if (seq == null) {
			if (other.seq != null) {
				return false;
			}
		} else if (!seq.equals(other.seq)) {
			return false;
		}
		return true;
	}
	
	

}

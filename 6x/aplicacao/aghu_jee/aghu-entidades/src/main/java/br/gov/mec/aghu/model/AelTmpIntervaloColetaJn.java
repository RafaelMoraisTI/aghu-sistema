package br.gov.mec.aghu.model;

// Generated 28/03/2011 16:33:50 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import org.hibernate.annotations.Immutable;

import br.gov.mec.aghu.core.model.BaseJournal;

/**
 * AelTmpIntervaloColetasJn generated by hbm2java
 */

@Entity
@Table(name = "AEL_TMP_INTERVALO_COLETAS_JN", schema = "AGH")
@SequenceGenerator(name = "aelTiljJnSeq", sequenceName = "AGH.AEL_TIL_jn_seq", allocationSize = 1)
@Immutable
public class AelTmpIntervaloColetaJn extends BaseJournal implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1365044047656747311L;
	private Short icoSeq;
	private Short seqp;
	private Short tempo;
	private Date criadoEm;
	private RapServidores servidor;

	@Id
    @Column(name = "SEQ_JN", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.AUTO, generator = "aelTiljJnSeq")
    @Override
    public Integer getSeqJn() {
        return super.getSeqJn();
    }
	
	public AelTmpIntervaloColetaJn() {
	}

	public AelTmpIntervaloColetaJn(Short icoSeq, Short seqp, RapServidores servidor) {
		this.icoSeq = icoSeq;
		this.seqp = seqp;
		this.servidor = servidor;
	}

	public AelTmpIntervaloColetaJn(Short icoSeq, Short seqp, Short tempo,
			Date criadoEm, RapServidores servidor) {
		this.icoSeq = icoSeq;
		this.seqp = seqp;
		this.tempo = tempo;
		this.criadoEm = criadoEm;
		this.servidor = servidor;
	}

	@Column(name = "ICO_SEQ", nullable = false)
	public Short getIcoSeq() {
		return this.icoSeq;
	}

	public void setIcoSeq(Short icoSeq) {
		this.icoSeq = icoSeq;
	}

	@Column(name = "SEQP", nullable = false)
	public Short getSeqp() {
		return this.seqp;
	}

	public void setSeqp(Short seqp) {
		this.seqp = seqp;
	}

	@Column(name = "TEMPO")
	public Short getTempo() {
		return this.tempo;
	}

	public void setTempo(Short tempo) {
		this.tempo = tempo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	public enum Fields {

		ICO_SEQ("icoSeq"),
		SEQP("seqp"),
		TEMPO("tempo"),
		CRIADO_EM("criadoEm"),
		SERVIDOR("servidor");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}

}

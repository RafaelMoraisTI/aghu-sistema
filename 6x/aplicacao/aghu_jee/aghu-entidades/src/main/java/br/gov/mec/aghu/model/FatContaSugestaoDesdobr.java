package br.gov.mec.aghu.model;

// Generated 09/08/2010 18:32:51 by Hibernate Tools 3.3.0.GA

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * FatContaSugestaoDesdobrs generated by hbm2java
 */
@Entity
@Table(name = "FAT_CONTA_SUGESTAO_DESDOBRS", schema = "AGH")
public class FatContaSugestaoDesdobr extends BaseEntityId<FatContaSugestaoDesdobrId> implements java.io.Serializable {
	private static final long serialVersionUID = -5088097841194440894L;
	
	private FatContaSugestaoDesdobrId id;
	private FatMotivoDesdobramento motivoDesdobramento;
	private FatContasHospitalares contaHospitalar;
	private String origem;
	private String ltoId;
	private AinLeitos leito;
	private Short quartoNumero;
	private Boolean considera;
	private String criadoPor;
	private Date criadoEm;
	private String alteradoPor;
	private Date alteradoEm;
	private VFatContaHospitalarPac viewFatContasHospitalarPac;
	private Integer version;

	public FatContaSugestaoDesdobr() {
	}

	public FatContaSugestaoDesdobr(FatContaSugestaoDesdobrId id,
			FatMotivoDesdobramento motivoDesdobramento,
			FatContasHospitalares contaHospitalar, Boolean considera) {
		this.id = id;
		this.motivoDesdobramento = motivoDesdobramento;
		this.contaHospitalar = contaHospitalar;
		this.considera = considera;
	}

	public FatContaSugestaoDesdobr(FatContaSugestaoDesdobrId id,
			FatMotivoDesdobramento motivoDesdobramento,
			FatContasHospitalares contaHospitalar, String origem,
			String ltoId, AinLeitos leito, Short quartoNumero, Boolean considera,
			String criadoPor, Date criadoEm, String alteradoPor, Date alteradoEm) {
		this.id = id;
		this.motivoDesdobramento = motivoDesdobramento;
		this.contaHospitalar = contaHospitalar;
		this.origem = origem;
		this.ltoId = ltoId;
		this.leito = leito;
		this.quartoNumero = quartoNumero;
		this.considera = considera;
		this.criadoPor = criadoPor;
		this.criadoEm = criadoEm;
		this.alteradoPor = alteradoPor;
		this.alteradoEm = alteradoEm;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "mdsSeq", column = @Column(name = "MDS_SEQ", nullable = false, precision = 2, scale = 0)),
			@AttributeOverride(name = "cthSeq", column = @Column(name = "CTH_SEQ", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "dthrSugestao", column = @Column(name = "DTHR_SUGESTAO", nullable = false, length = 7)) })
	public FatContaSugestaoDesdobrId getId() {
		return this.id;
	}

	public void setId(FatContaSugestaoDesdobrId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MDS_SEQ", nullable = false, insertable = false, updatable = false)
	public FatMotivoDesdobramento getMotivoDesdobramento() {
		return this.motivoDesdobramento;
	}

	public void setMotivoDesdobramento(
			FatMotivoDesdobramento motivoDesdobramento) {
		this.motivoDesdobramento = motivoDesdobramento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CTH_SEQ", nullable = false, insertable = false, updatable = false)
	public FatContasHospitalares getContaHospitalar() {
		return this.contaHospitalar;
	}

	public void setContaHospitalar(
			FatContasHospitalares contaHospitalar) {
		this.contaHospitalar = contaHospitalar;
	}

	@Column(name = "ORIGEM", length = 3)
	public String getOrigem() {
		return this.origem;
	}

	public void setOrigem(String origem) {
		this.origem = origem;
	}

	@Column(name = "LTO_ID", length = 14)
	public String getLtoId() {
		return this.ltoId;
	}

	public void setLtoId(String ltoId) {
		this.ltoId = ltoId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LTO_ID", insertable = false, updatable = false)
	public AinLeitos getLeito() {
		return this.leito;
	}

	public void setLeito(AinLeitos leito) {
		this.leito = leito;
	}
	
	@Column(name = "QRT_NUMERO", precision = 4, scale = 0)
	public Short getQuartoNumero() {
		return this.quartoNumero;
	}

	public void setQuartoNumero(Short quartoNumero) {
		this.quartoNumero = quartoNumero;
	}

	@Column(name = "IND_CONSIDERA", nullable = false, length=1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getConsidera() {
		return this.considera;
	}

	public void setConsidera(Boolean considera) {
		this.considera = considera;
	}

	@Column(name = "CRIADO_POR", length = 30)
	public String getCriadoPor() {
		return this.criadoPor;
	}

	public void setCriadoPor(String criadoPor) {
		this.criadoPor = criadoPor;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "ALTERADO_POR", length = 30)
	public String getAlteradoPor() {
		return this.alteradoPor;
	}

	public void setAlteradoPor(String alteradoPor) {
		this.alteradoPor = alteradoPor;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 7)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CTH_SEQ", nullable = false, insertable = false, updatable = false)
	public VFatContaHospitalarPac getViewFatContasHospitalarPac() {
		return viewFatContasHospitalarPac;
	}
	
	public void setViewFatContasHospitalarPac(VFatContaHospitalarPac viewFatContasHospitalarPac) {
		this.viewFatContasHospitalarPac = viewFatContasHospitalarPac;
	}
	
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	public enum Fields {

		CTH_SEQ("id.cthSeq"), MDS_SEQ("id.mdsSeq"), IND_CONSIDERA("considera"), LTO_ID("ltoId"), DTHR_SUGESTAO("id.dthrSugestao"), ORIGEM(
				"origem"), CONTA_HOSPITALAR("contaHospitalar"), VIEW_FAT_CONTAS_HOSPITALAR_PAC("viewFatContasHospitalarPac"),
				FAT_MOTIVO_DESDOBRAMENTO("motivoDesdobramento");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof FatContaSugestaoDesdobr)) {
			return false;
		}
		FatContaSugestaoDesdobr other = (FatContaSugestaoDesdobr) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}

}

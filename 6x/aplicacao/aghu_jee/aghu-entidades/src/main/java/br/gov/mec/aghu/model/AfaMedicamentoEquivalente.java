package br.gov.mec.aghu.model;

// Generated 27/04/2011 12:34:12 by Hibernate Tools 3.3.0.GA

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.dominio.DominioTipoEquivalentesMedicamento;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AfaMdtoEquivalentes generated by hbm2java
 */

@Entity
@Table(name = "AFA_MDTO_EQUIVALENTES", schema = "AGH")
public class AfaMedicamentoEquivalente extends BaseEntityId<AfaMedicamentoEquivalenteId> implements java.io.Serializable {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 6280929735384137205L;
	private AfaMedicamentoEquivalenteId id;
	private Integer version;
	private Date criadoEm;
	private DominioSituacao indSituacao;
	
	private RapServidores rapServidores;
	
	private DominioTipoEquivalentesMedicamento tipo;
	
	private AfaMedicamento medicamento;
	private AfaMedicamento medicamentoEquivalente;

	public AfaMedicamentoEquivalente() {
	}

	public enum Fields {

		MED_MAT_CODIGO("id.medMatCodigo"),
		MEDICAMENTO("medicamento"),
		MED_MAT_CODIGO_EQUIVALENTE("id.medMatCodigoEquivalente"),
		IND_SITUACAO("indSituacao"),
		MEDICAMENTO_EQUIVALENTE("medicamentoEquivalente"),
		SERVIDOR("rapServidores");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}

	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "medMatCodigo", column = @Column(name = "MED_MAT_CODIGO", nullable = false)),
			@AttributeOverride(name = "medMatCodigoEquivalente", column = @Column(name = "MED_MAT_CODIGO_EQUIVALENTE", nullable = false)) })
	public AfaMedicamentoEquivalenteId getId() {
		return this.id;
	}

	public void setId(AfaMedicamentoEquivalenteId id) {
		this.id = id;
	}
	
	//***** Utilizado somente para fazer joins em consultas com CRITERIA *****
	//***** Nao e possivel fazer Join atraves de atributos de chave composta *****
	//*****Acessar atrituto mapeado na chave composta "id" desta entidade *****
	@ManyToOne
	@JoinColumn(name = "MED_MAT_CODIGO", insertable = false, updatable = false)
	public AfaMedicamento getMedicamento() {
		return medicamento;
	}

	public void setMedicamento(AfaMedicamento medicamento) {
		this.medicamento = medicamento;
	}
	
	@ManyToOne
	@JoinColumn(name = "MED_MAT_CODIGO_EQUIVALENTE", insertable = false, updatable = false)
	public AfaMedicamento getMedicamentoEquivalente() {
		return medicamentoEquivalente;
	}

	public void setMedicamentoEquivalente(AfaMedicamento medicamentoEquivalente) {
		this.medicamentoEquivalente = medicamentoEquivalente;
	}
	//*****************************************************************************
	

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@Column(name = "TIPO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioTipoEquivalentesMedicamento getTipo() {
		return tipo;
	}

	public void setTipo(DominioTipoEquivalentesMedicamento tipo) {
		this.tipo = tipo;
	}
	
	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}
	
	/*@Column(name = "IND_SITUACAO", nullable = false, updatable = true)
	@Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserTypeActive")
	public Boolean getIndSituacao() {
		return indSituacao;
	}

	public void setIndSituacao(Boolean indSituacao) {
		this.indSituacao = indSituacao;
	}*/


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AfaMedicamentoEquivalente)) {
			return false;
		}
		AfaMedicamentoEquivalente other = (AfaMedicamentoEquivalente) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

// Generated 25/03/2011 14:19:14 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.PostLoad;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;


import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AelExameDeptConvenios generated by hbm2java
 */
@Entity
@Table(name = "AEL_EXAME_DEPT_CONVENIOS", schema = "AGH")
public class AelExameDeptConvenio extends BaseEntityId<AelExameDeptConvenioId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -3248106735993476731L;
	private AelExameDeptConvenioId id;
	private Integer version;
	private DominioSituacao indSituacao;
	private Date criadoEm;
	private String planoDesc;
	private String convenioDesc;

	private RapServidores rapServidor;
	private FatConvenioSaudePlano fatConvenioPlano;
	private AelExamesDependentes exameDependente;

	public AelExameDeptConvenio() {
	}

	public AelExameDeptConvenio(AelExameDeptConvenioId id,
			DominioSituacao indSituacao, Date criadoEm, RapServidores rapServidor) {
		this.id = id;
		this.indSituacao = indSituacao;
		this.criadoEm = criadoEm;
		this.rapServidor = rapServidor;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "exdEmaExaSigla", column = @Column(name = "EXD_EMA_EXA_SIGLA", nullable = false, length = 5)),
			@AttributeOverride(name = "exdEmaManSeq", column = @Column(name = "EXD_EMA_MAN_SEQ", nullable = false)),
			@AttributeOverride(name = "exdEmaExaSiglaEhDependent", column = @Column(name = "EXD_EMA_EXA_SIGLA_EH_DEPENDENT", nullable = false, length = 5)),
			@AttributeOverride(name = "exdEmaManSeqEhDependente", column = @Column(name = "EXD_EMA_MAN_SEQ_EH_DEPENDENTE", nullable = false)),
			@AttributeOverride(name = "cspCnvCodigo", column = @Column(name = "CSP_CNV_CODIGO", nullable = false)),
			@AttributeOverride(name = "cspSeq", column = @Column(name = "CSP_SEQ", nullable = false)) })
	public AelExameDeptConvenioId getId() {
		return this.id;
	}

	public void setId(AelExameDeptConvenioId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@JoinColumns( {
		@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
		@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
		@ManyToOne(optional = false, fetch = FetchType.LAZY)
	public RapServidores getRapServidor() {
		return this.rapServidor;
	}

	public void setRapServidor(RapServidores rapServidor) {
		this.rapServidor = rapServidor;
	}

	@JoinColumns( {
		@JoinColumn(name = "CSP_CNV_CODIGO", referencedColumnName = "CNV_CODIGO", nullable=false, insertable=false, updatable=false),
		@JoinColumn(name = "CSP_SEQ", referencedColumnName = "SEQ", nullable=false, insertable=false, updatable=false) })
		@ManyToOne(fetch = FetchType.EAGER)
	public FatConvenioSaudePlano getFatConvenioPlano() {
		return fatConvenioPlano;
	}

	public void setFatConvenioPlano(FatConvenioSaudePlano fatConvenioPlano) {
		this.fatConvenioPlano = fatConvenioPlano;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
		@JoinColumn(name = "EXD_EMA_EXA_SIGLA", referencedColumnName = "EMA_EXA_SIGLA", nullable = false, insertable=false, updatable=false),
		@JoinColumn(name = "EXD_EMA_MAN_SEQ", referencedColumnName = "EMA_MAN_SEQ", nullable = false, insertable=false, updatable=false),
		@JoinColumn(name = "EXD_EMA_EXA_SIGLA_EH_DEPENDENT", referencedColumnName = "EMA_EXA_SIGLA_EH_DEPENDENTE", nullable = false, insertable=false, updatable=false),
		@JoinColumn(name = "EXD_EMA_MAN_SEQ_EH_DEPENDENTE", referencedColumnName = "EMA_MAN_SEQ_EH_DEPENDENTE", nullable = false, insertable=false, updatable=false) })
	public AelExamesDependentes getExameDependente() {
		return exameDependente;
	}
	
	public void setExameDependente(AelExamesDependentes exameDependente) {
		this.exameDependente = exameDependente;
	}

	public enum Fields {
		CNV_CODIGO("id.cspCnvCodigo"), 
		SEQ("id.cspSeq"),
		EXD_EMA_EXA_SIGLA("id.exdEmaExaSigla"),
		EXD_EMA_MAN_SEQ("id.exdEmaManSeq"),
		EXD_EMA_EXA_SIGLA_EH_DEPEN("id.exdEmaExaSiglaEhDependent"),
		EXD_EMA_EXA_SEQ_EH_DEPEN("id.exdEmaManSeqEhDependente"),
		EXAME_DEPENDENTE("exameDependente"),
		EXAME_DEPENDENTE_SITUACAO("exameDependente.indSituacao"),
		EXAME_DEPENDENTE_OPCIONAL("exameDependente.indOpcional"),
		CONVENIO_SAUDE_PLANO("fatConvenioPlano"),
		IND_SITUACAO("indSituacao");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}

	@Transient
	public String getPlanoDesc() {
		return planoDesc;
	}

	public void setPlanoDesc(String planoDesc) {
		this.planoDesc = planoDesc;
	}

	@Transient
	public String getConvenioDesc() {
		return convenioDesc;
	}

	public void setConvenioDesc(String convenioDesc) {
		this.convenioDesc = convenioDesc;
	}
	
	@PostLoad
	protected void setDescPlanoEConvenio(){
		setPlanoDesc(getFatConvenioPlano().getDescricao());
		setConvenioDesc(getFatConvenioPlano().getConvenioSaude().getDescricao());
	}

	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AelExameDeptConvenio)) {
			return false;
		}
		AelExameDeptConvenio other = (AelExameDeptConvenio) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}
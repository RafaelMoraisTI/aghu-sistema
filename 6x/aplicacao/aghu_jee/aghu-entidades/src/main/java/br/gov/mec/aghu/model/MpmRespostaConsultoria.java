package br.gov.mec.aghu.model;

// Generated 14/09/2010 17:49:55 by Hibernate Tools 3.2.5.Beta

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;

import org.hibernate.annotations.Type;

import br.gov.mec.aghu.dominio.DominioFinalizacao;
import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MpmRespostaConsultoria generated by hbm2java
 */
@Entity
@Table(name = "MPM_RESPOSTA_CONSULTORIAS", schema = "AGH")
public class MpmRespostaConsultoria extends BaseEntityId<MpmRespostaConsultoriaId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -6353251457046140709L;
	private MpmRespostaConsultoriaId id;
	private MpmTipoRespostaConsultoria tipoRespostaConsultoria;
	private MpmSolicitacaoConsultoria solicitacaoConsultoria;
	private RapServidores servidor;
	private DominioSituacao situacao;
	private String descricao;
	private DominioFinalizacao finalizacao;
	public MpmRespostaConsultoria() {
	}

	public MpmRespostaConsultoria(MpmRespostaConsultoriaId id,
			MpmTipoRespostaConsultoria tipoRespostaConsultoria,
			MpmSolicitacaoConsultoria solicitacaoConsultoria,
			RapServidores servidor, DominioSituacao situacao,
			String descricao, DominioFinalizacao finalizacao) {
		this.id = id;
		this.tipoRespostaConsultoria = tipoRespostaConsultoria;
		this.solicitacaoConsultoria = solicitacaoConsultoria;
		this.servidor = servidor;
		this.situacao = situacao;
		this.descricao = descricao;
		this.finalizacao = finalizacao;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "scnAtdSeq", column = @Column(name = "SCN_ATD_SEQ", nullable = false, precision = 7, scale = 0)),
			@AttributeOverride(name = "scnSeq", column = @Column(name = "SCN_SEQ", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "trcSeq", column = @Column(name = "TRC_SEQ", nullable = false, precision = 3, scale = 0)),
			@AttributeOverride(name = "criadoEm", column = @Column(name = "CRIADO_EM", nullable = false, length = 7)) })
	public MpmRespostaConsultoriaId getId() {
		return this.id;
	}

	public void setId(MpmRespostaConsultoriaId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TRC_SEQ", nullable = false, insertable = false, updatable = false)
	public MpmTipoRespostaConsultoria getTipoRespostaConsultoria() {
		return this.tipoRespostaConsultoria;
	}

	public void setTipoRespostaConsultoria(
			MpmTipoRespostaConsultoria tipoRespostaConsultoria) {
		this.tipoRespostaConsultoria = tipoRespostaConsultoria;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SCN_ATD_SEQ", referencedColumnName = "ATD_SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "SCN_SEQ", referencedColumnName = "SEQ", nullable = false, insertable = false, updatable = false) })
	public MpmSolicitacaoConsultoria getSolicitacaoConsultoria() {
		return this.solicitacaoConsultoria;
	}

	public void setSolicitacaoConsultoria(
			MpmSolicitacaoConsultoria solicitacaoConsultoria) {
		this.solicitacaoConsultoria = solicitacaoConsultoria;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@Column(name = "IND_SITUACAO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getSituacao() {
		return situacao;
	}

	public void setSituacao(DominioSituacao situacao) {
		this.situacao = situacao;
	}

	@Column(name = "DESCRICAO", nullable = false)
	@Lob
	@Type(type="text")
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "IND_FINALIZACAO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioFinalizacao getFinalizacao() {
		return this.finalizacao;
	}

	public void setFinalizacao(DominioFinalizacao finalizacao) {
		this.finalizacao = finalizacao;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		MpmRespostaConsultoria other = (MpmRespostaConsultoria) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}

	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void validacoes() {
		if (this.situacao == null) {
			this.situacao = DominioSituacao.A;
		}
	}	
	
	public enum Fields {
		
		SCN_ATD_SEQ("id.scnAtdSeq"),
		SCN_SEQ("id.scnSeq"),
		TRC_SEQ("id.trcSeq"),
		CRIADO_EM("id.criadoEm"),
		TIPO_RESPOSTA_CONSULTORIA("tipoRespostaConsultoria"),
		SOLICITACAO_CONSULTORIA("solicitacaoConsultoria"),
		SERVIDOR("servidor"),
		SER_VIN_CODIGO("servidor.id.vinCodigo"),
		SER_MATRICULA("servidor.id.matricula"),
		SITUACAO("situacao"),
		DESCRICAO("descricao"),
		FINALIZACAO("finalizacao");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
		
	}
	
}

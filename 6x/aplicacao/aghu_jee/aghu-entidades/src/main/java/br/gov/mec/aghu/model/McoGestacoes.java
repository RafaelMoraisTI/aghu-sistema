package br.gov.mec.aghu.model;

// Generated 26/02/2010 17:37:25 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioGravidez;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * McoGestacoes generated by hbm2java
 */
@SuppressWarnings({"PMD.AghuUsoIndevidoDaEnumDominioSimNaoEntity"})
@Entity
@Table(name = "MCO_GESTACOES", schema = "AGH")
public class McoGestacoes extends BaseEntityId<McoGestacoesId> implements java.io.Serializable {

	private static final long serialVersionUID = -2634702037638256219L;
	private McoGestacoesId id;
	private Byte gesta;
	private Byte para;
	private Byte cesarea;
	private Byte aborto;
	private Date dtUltMenstruacao;
	private Date dtPrimEco;
	private Byte igPrimEco;
	private Date dtInformadaIg;
	private Byte igAtualSemanas;
	private Byte igAtualDias;
	private Date dtProvavelParto;
	private Byte numConsPrn;
	private Date dtPrimConsPrn;
	private Boolean indMesmoPai;
	private String grupoSanguineoPai;
	private String fatorRhPai;
	private String obsExames;
	private String gemelar;
	private Boolean vatCompleta;
	private String usoMedicamentos;
	private Date criadoEm;
	private RapServidores servidor;
	private Integer serMatricula;
	private Short serVinCodigo;
	private Byte igPrimEcoDias;
	private Date dthrSumarioAltaMae;
	private DominioGravidez gravidez;
	private Byte ectopica;
	private String justificativa;
	private Set<McoAtendTrabPartos> mcoAtendTrabPartoses = new HashSet<McoAtendTrabPartos>(0);
	private Set<McoRecemNascidos> mcoRecemNascidoses = new HashSet<McoRecemNascidos>(0);
	private Set<McoMedicamentoTrabPartos> mcoMedicamentoTrabPartoses = new HashSet<McoMedicamentoTrabPartos>(0);
	private Set<McoNascimentos> mcoNascimentoses = new HashSet<McoNascimentos>(0);
	private Set<McoResultadoExameSignifs> mcoResultadoExameSignifses = new HashSet<McoResultadoExameSignifs>(0);
	private Set<McoLogImpressoes> mcoLogImpressoeses = new HashSet<McoLogImpressoes>(0);
	private Set<McoIntercorrenciaGestacoes> mcoIntercorrenciaGestacoeses = new HashSet<McoIntercorrenciaGestacoes>(0);
	private Set<McoGestacaoPacientes> mcoGestacaoPacienteses = new HashSet<McoGestacaoPacientes>(0);
	private Set<McoAnamneseEfs> mcoAnamneseEfses = new HashSet<McoAnamneseEfs>(0);
//	private Set<AghAtendimentos> aghAtendimentos = new HashSet<AghAtendimentos>(0);
	
	private McoBolsaRotas bolsaRota;

	//private AipPacientesDadosCns pacienteDadosCns;
	
	//private AipRegSanguineos registroSanguineo;
	
	private AipPacientes paciente;
	
	public McoGestacoes() {
	}
	
	public McoGestacoes(McoGestacoesId id) {
		this.id = id;
	}

	public McoGestacoes(McoGestacoesId id, Byte gesta, Byte para, Byte cesarea,
			Byte aborto, Boolean vatCompleta, Date criadoEm, Integer serMatricula,
			Short serVinCodigo, DominioGravidez gravidez, Byte ectopica) {
		this.id = id;
		this.gesta = gesta;
		this.para = para;
		this.cesarea = cesarea;
		this.aborto = aborto;
		this.vatCompleta = vatCompleta;
		this.criadoEm = criadoEm;
		this.serMatricula = serMatricula;
		this.serVinCodigo = serVinCodigo;
		this.gravidez = gravidez;
		this.ectopica = ectopica;
	}

	@SuppressWarnings({"PMD.ExcessiveParameterList"})
	public McoGestacoes(McoGestacoesId id, Byte gesta, Byte para, Byte cesarea,
			Byte aborto, Date dtUltMenstruacao, Date dtPrimEco, Byte igPrimEco,
			Date dtInformadaIg, Byte igAtualSemanas, Byte igAtualDias,
			Date dtProvavelParto, Byte numConsPrn, Date dtPrimConsPrn,
			Boolean indMesmoPai, String grupoSanguineoPai, String fatorRhPai,
			String obsExames, String gemelar, Boolean vatCompleta,
			String usoMedicamentos, Date criadoEm, Integer serMatricula,
			Short serVinCodigo, Byte igPrimEcoDias, Date dthrSumarioAltaMae,
			DominioGravidez gravidez, Byte ectopica, String justificativa,
			Set<McoAtendTrabPartos> mcoAtendTrabPartoses,
			Set<McoRecemNascidos> mcoRecemNascidoses,
			Set<McoMedicamentoTrabPartos> mcoMedicamentoTrabPartoses,
			Set<McoNascimentos> mcoNascimentoses,
			Set<McoResultadoExameSignifs> mcoResultadoExameSignifses,
			Set<McoLogImpressoes> mcoLogImpressoeses,
			Set<McoIntercorrenciaGestacoes> mcoIntercorrenciaGestacoeses,
			Set<McoGestacaoPacientes> mcoGestacaoPacienteses,
			Set<McoAnamneseEfs> mcoAnamneseEfses) {
		this.id = id;
		this.gesta = gesta;
		this.para = para;
		this.cesarea = cesarea;
		this.aborto = aborto;
		this.dtUltMenstruacao = dtUltMenstruacao;
		this.dtPrimEco = dtPrimEco;
		this.igPrimEco = igPrimEco;
		this.dtInformadaIg = dtInformadaIg;
		this.igAtualSemanas = igAtualSemanas;
		this.igAtualDias = igAtualDias;
		this.dtProvavelParto = dtProvavelParto;
		this.numConsPrn = numConsPrn;
		this.dtPrimConsPrn = dtPrimConsPrn;
		this.indMesmoPai = indMesmoPai;
		this.grupoSanguineoPai = grupoSanguineoPai;
		this.fatorRhPai = fatorRhPai;
		this.obsExames = obsExames;
		this.gemelar = gemelar;
		this.vatCompleta = vatCompleta;
		this.usoMedicamentos = usoMedicamentos;
		this.criadoEm = criadoEm;
		this.serMatricula = serMatricula;
		this.serVinCodigo = serVinCodigo;
		this.igPrimEcoDias = igPrimEcoDias;
		this.dthrSumarioAltaMae = dthrSumarioAltaMae;
		this.gravidez = gravidez;
		this.ectopica = ectopica;
		this.justificativa = justificativa;
		this.mcoAtendTrabPartoses = mcoAtendTrabPartoses;
		this.mcoRecemNascidoses = mcoRecemNascidoses;
		this.mcoMedicamentoTrabPartoses = mcoMedicamentoTrabPartoses;
		this.mcoNascimentoses = mcoNascimentoses;
		this.mcoResultadoExameSignifses = mcoResultadoExameSignifses;
		this.mcoLogImpressoeses = mcoLogImpressoeses;
		this.mcoIntercorrenciaGestacoeses = mcoIntercorrenciaGestacoeses;
		this.mcoGestacaoPacienteses = mcoGestacaoPacienteses;
		this.mcoAnamneseEfses = mcoAnamneseEfses;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "pacCodigo", column = @Column(name = "PAC_CODIGO", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false, precision = 3, scale = 0)) })
	@NotNull
	public McoGestacoesId getId() {
		return this.id;
	}

	public void setId(McoGestacoesId id) {
		this.id = id;
	}

	@Column(name = "GESTA", nullable = false, precision = 2, scale = 0)
	@NotNull
	public Byte getGesta() {
		return this.gesta;
	}

	public void setGesta(Byte gesta) {
		this.gesta = gesta;
	}

	@Column(name = "PARA", nullable = false, precision = 2, scale = 0)
	@NotNull
	public Byte getPara() {
		return this.para;
	}

	public void setPara(Byte para) {
		this.para = para;
	}

	@Column(name = "CESAREA", nullable = false, precision = 2, scale = 0)
	@NotNull
	public Byte getCesarea() {
		return this.cesarea;
	}

	public void setCesarea(Byte cesarea) {
		this.cesarea = cesarea;
	}

	@Column(name = "ABORTO", nullable = false, precision = 2, scale = 0)
	@NotNull
	public Byte getAborto() {
		return this.aborto;
	}

	public void setAborto(Byte aborto) {
		this.aborto = aborto;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DT_ULT_MENSTRUACAO", length = 7)
	public Date getDtUltMenstruacao() {
		return this.dtUltMenstruacao;
	}

	public void setDtUltMenstruacao(Date dtUltMenstruacao) {
		this.dtUltMenstruacao = dtUltMenstruacao;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DT_PRIM_ECO", length = 7)
	public Date getDtPrimEco() {
		return this.dtPrimEco;
	}

	public void setDtPrimEco(Date dtPrimEco) {
		this.dtPrimEco = dtPrimEco;
	}

	@Column(name = "IG_PRIM_ECO", precision = 2, scale = 0)
	public Byte getIgPrimEco() {
		return this.igPrimEco;
	}

	public void setIgPrimEco(Byte igPrimEco) {
		this.igPrimEco = igPrimEco;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DT_INFORMADA_IG", length = 7)
	public Date getDtInformadaIg() {
		return this.dtInformadaIg;
	}

	public void setDtInformadaIg(Date dtInformadaIg) {
		this.dtInformadaIg = dtInformadaIg;
	}

	@Column(name = "IG_ATUAL_SEMANAS", precision = 2, scale = 0)
	public Byte getIgAtualSemanas() {
		return this.igAtualSemanas;
	}

	public void setIgAtualSemanas(Byte igAtualSemanas) {
		this.igAtualSemanas = igAtualSemanas;
	}

	@Column(name = "IG_ATUAL_DIAS", precision = 2, scale = 0)
	public Byte getIgAtualDias() {
		return this.igAtualDias;
	}

	public void setIgAtualDias(Byte igAtualDias) {
		this.igAtualDias = igAtualDias;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DT_PROVAVEL_PARTO", length = 7)
	public Date getDtProvavelParto() {
		return this.dtProvavelParto;
	}

	public void setDtProvavelParto(Date dtProvavelParto) {
		this.dtProvavelParto = dtProvavelParto;
	}

	@Column(name = "NUM_CONS_PRN", precision = 2, scale = 0)
	public Byte getNumConsPrn() {
		return this.numConsPrn;
	}

	public void setNumConsPrn(Byte numConsPrn) {
		this.numConsPrn = numConsPrn;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DT_PRIM_CONS_PRN", length = 7)
	public Date getDtPrimConsPrn() {
		return this.dtPrimConsPrn;
	}

	public void setDtPrimConsPrn(Date dtPrimConsPrn) {
		this.dtPrimConsPrn = dtPrimConsPrn;
	}

	@Column(name = "IND_MESMO_PAI", length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndMesmoPai() {
		return this.indMesmoPai;
	}

	public void setIndMesmoPai(Boolean indMesmoPai) {
		this.indMesmoPai = indMesmoPai;
	}

	@Column(name = "GRUPO_SANGUINEO_PAI", length = 2)
	@Length(max = 2)
	public String getGrupoSanguineoPai() {
		return this.grupoSanguineoPai;
	}

	public void setGrupoSanguineoPai(String grupoSanguineoPai) {
		this.grupoSanguineoPai = grupoSanguineoPai;
	}

	@Column(name = "FATOR_RH_PAI", length = 1)
	@Length(max = 1)
	public String getFatorRhPai() {
		return this.fatorRhPai;
	}

	public void setFatorRhPai(String fatorRhPai) {
		this.fatorRhPai = fatorRhPai;
	}

	@Column(name = "OBS_EXAMES", length = 2000)
	@Length(max = 2000)
	public String getObsExames() {
		return this.obsExames;
	}

	public void setObsExames(String obsExames) {
		this.obsExames = obsExames;
	}

	@Column(name = "GEMELAR", length = 1)
	@Length(max = 1)
	public String getGemelar() {
		return this.gemelar;
	}

	public void setGemelar(String gemelar) {
		this.gemelar = gemelar;
	}

	@Column(name = "VAT_COMPLETA", nullable = false)
	@NotNull
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getVatCompleta() {
		return this.vatCompleta;
	}

	public void setVatCompleta(Boolean vatCompleta) {
		this.vatCompleta = vatCompleta;
	}

	@Column(name = "USO_MEDICAMENTOS", length = 240)
	@Length(max = 240)
	public String getUsoMedicamentos() {
		return this.usoMedicamentos;
	}

	public void setUsoMedicamentos(String usoMedicamentos) {
		this.usoMedicamentos = usoMedicamentos;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	@NotNull
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "SER_MATRICULA", nullable = false, precision = 7, scale = 0)
	@NotNull
	public Integer getSerMatricula() {
		return this.serMatricula;
	}

	public void setSerMatricula(Integer serMatricula) {
		this.serMatricula = serMatricula;
	}

	@Column(name = "SER_VIN_CODIGO", nullable = false, precision = 3, scale = 0)
	@NotNull
	public Short getSerVinCodigo() {
		return this.serVinCodigo;
	}

	public void setSerVinCodigo(Short serVinCodigo) {
		this.serVinCodigo = serVinCodigo;
	}

	@Column(name = "IG_PRIM_ECO_DIAS", precision = 2, scale = 0)
	public Byte getIgPrimEcoDias() {
		return this.igPrimEcoDias;
	}

	public void setIgPrimEcoDias(Byte igPrimEcoDias) {
		this.igPrimEcoDias = igPrimEcoDias;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTHR_SUMARIO_ALTA_MAE", length = 7)
	public Date getDthrSumarioAltaMae() {
		return this.dthrSumarioAltaMae;
	}

	public void setDthrSumarioAltaMae(Date dthrSumarioAltaMae) {
		this.dthrSumarioAltaMae = dthrSumarioAltaMae;
	}

	@Column(name = "GRAVIDEZ", nullable = false, length=3)
	@NotNull
	@Enumerated(EnumType.STRING)
	public DominioGravidez getGravidez() {
		return this.gravidez;
	}

	public void setGravidez(DominioGravidez gravidez) {
		this.gravidez = gravidez;
	}

	@Column(name = "ECTOPICA", nullable = false, precision = 2, scale = 0)
	@NotNull
	public Byte getEctopica() {
		return this.ectopica;
	}

	public void setEctopica(Byte ectopica) {
		this.ectopica = ectopica;
	}

	@Column(name = "JUSTIFICATIVA", length = 500)
	@Length(max = 500)
	public String getJustificativa() {
		return this.justificativa;
	}

	public void setJustificativa(String justificativa) {
		this.justificativa = justificativa;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mcoGestacoes")
	public Set<McoAtendTrabPartos> getMcoAtendTrabPartoses() {
		return this.mcoAtendTrabPartoses;
	}

	public void setMcoAtendTrabPartoses(
			Set<McoAtendTrabPartos> mcoAtendTrabPartoses) {
		this.mcoAtendTrabPartoses = mcoAtendTrabPartoses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mcoGestacoes")
	public Set<McoRecemNascidos> getMcoRecemNascidoses() {
		return this.mcoRecemNascidoses;
	}

	public void setMcoRecemNascidoses(Set<McoRecemNascidos> mcoRecemNascidoses) {
		this.mcoRecemNascidoses = mcoRecemNascidoses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mcoGestacoes")
	public Set<McoMedicamentoTrabPartos> getMcoMedicamentoTrabPartoses() {
		return this.mcoMedicamentoTrabPartoses;
	}

	public void setMcoMedicamentoTrabPartoses(
			Set<McoMedicamentoTrabPartos> mcoMedicamentoTrabPartoses) {
		this.mcoMedicamentoTrabPartoses = mcoMedicamentoTrabPartoses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mcoGestacoes")
	public Set<McoNascimentos> getMcoNascimentoses() {
		return this.mcoNascimentoses;
	}

	public void setMcoNascimentoses(Set<McoNascimentos> mcoNascimentoses) {
		this.mcoNascimentoses = mcoNascimentoses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mcoGestacoes")
	public Set<McoResultadoExameSignifs> getMcoResultadoExameSignifses() {
		return this.mcoResultadoExameSignifses;
	}

	public void setMcoResultadoExameSignifses(
			Set<McoResultadoExameSignifs> mcoResultadoExameSignifses) {
		this.mcoResultadoExameSignifses = mcoResultadoExameSignifses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mcoGestacoes")
	public Set<McoLogImpressoes> getMcoLogImpressoeses() {
		return this.mcoLogImpressoeses;
	}

	public void setMcoLogImpressoeses(Set<McoLogImpressoes> mcoLogImpressoeses) {
		this.mcoLogImpressoeses = mcoLogImpressoeses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mcoGestacoes")
	public Set<McoIntercorrenciaGestacoes> getMcoIntercorrenciaGestacoeses() {
		return this.mcoIntercorrenciaGestacoeses;
	}

	public void setMcoIntercorrenciaGestacoeses(
			Set<McoIntercorrenciaGestacoes> mcoIntercorrenciaGestacoeses) {
		this.mcoIntercorrenciaGestacoeses = mcoIntercorrenciaGestacoeses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mcoGestacoes")
	public Set<McoGestacaoPacientes> getMcoGestacaoPacienteses() {
		return this.mcoGestacaoPacienteses;
	}

	public void setMcoGestacaoPacienteses(
			Set<McoGestacaoPacientes> mcoGestacaoPacienteses) {
		this.mcoGestacaoPacienteses = mcoGestacaoPacienteses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mcoGestacoes")
	public Set<McoAnamneseEfs> getMcoAnamneseEfses() {
		return this.mcoAnamneseEfses;
	}

	public void setMcoAnamneseEfses(Set<McoAnamneseEfs> mcoAnamneseEfses) {
		this.mcoAnamneseEfses = mcoAnamneseEfses;
	}
	
//	@OneToMany(fetch=FetchType.LAZY, mappedBy="mcoGestacoes")
//    public Set<AghAtendimentos> getAghAtendimentos() {
//        return this.aghAtendimentos;
//    }
//    
//    public void setAghAtendimentos(Set<AghAtendimentos> aghAtendimentos) {
//        this.aghAtendimentos = aghAtendimentos;
//    }
    
    
/*    @ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO", insertable = false, updatable = false)
    public AipPacientesDadosCns getPacienteDadosCns() {
		return pacienteDadosCns;
	}

	public void setPacienteDadosCns(AipPacientesDadosCns pacienteDadosCns) {
		this.pacienteDadosCns = pacienteDadosCns;
	}*/
	
	@OneToOne
	@PrimaryKeyJoinColumn
	public McoBolsaRotas getBolsaRota() {
		return bolsaRota;
	}

	public void setBolsaRota(McoBolsaRotas bolsaRota) {
		this.bolsaRota = bolsaRota;
	}

	/**
     * Qdo o paciente for um RN(Recém Nascido), buscar o convênio da mãe para popular o campo convênio.
     * @return
     */
//    @Transient
//    public AghAtendimentos getAghAtendimentoMae() {
//    	for (AghAtendimentos atendimento : this.getAghAtendimentos()) {
//			if (atendimento.getPaciente() != null && this.getId() != null
//					&& this.getId().getPacCodigo() != null
//					&& this.getId().getPacCodigo().equals(atendimento.getPaciente().getCodigo())) {
//				return atendimento;
//			}
//		}
//    	
//		return null;
//	}
    
    

	public enum Fields {
		CODIGO_PACIENTE("id.pacCodigo"),
		SEQUENCE("id.seqp"),
		GESTACAO("gesta"),
		GRAVIDEZ("gravidez"),
		IG_ATUAL_SEMANAS("igAtualSemanas"),
		BOLSA_ROTA("bolsaRota"),
		MCO_NASCIMENTOS("mcoNascimentoses"),
		PACIENTE("paciente"),
		CRIADO_EM("criadoEm"),
		GESTA("gesta"),
		CESAREA("cesarea"),
		ABORTO("aborto"),
		MCO_RECEM_NASCIDOS("mcoRecemNascidoses"),		
//		AGH_ATENDIMENTOS("aghAtendimentos"),
		MCO_ANAMNESE_EFSES_NASCIDOS("mcoAnamneseEfses"),
		PARA("para"),
		GEMELAR("gemelar"),
        DATA_HORA_SUMARIO_ALTA_MAE("dthrSumarioAltaMae");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	
	

	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof McoGestacoes)) {
			return false;
		}
		McoGestacoes other = (McoGestacoes) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO", nullable = false, insertable = false, updatable = false)
	public AipPacientes getPaciente() {
		return paciente;
	}

	public void setPaciente(AipPacientes paciente) {
		this.paciente = paciente;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false, updatable=false, insertable=false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false, updatable=false, insertable=false) })
	public RapServidores getServidor() {
		return servidor;
	}


}

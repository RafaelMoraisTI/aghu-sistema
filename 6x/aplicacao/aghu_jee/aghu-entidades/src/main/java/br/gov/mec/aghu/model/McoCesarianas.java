package br.gov.mec.aghu.model;

// Generated 26/02/2010 17:37:25 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;

import br.gov.mec.aghu.dominio.DominioContaminacaoCesariana;
import br.gov.mec.aghu.dominio.DominioHisterorrafia;
import br.gov.mec.aghu.dominio.DominioHisterotomia;
import br.gov.mec.aghu.dominio.DominioLaparotomia;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * McoCesarianas generated by hbm2java
 */
@SuppressWarnings({"PMD.AghuUsoIndevidoDaEnumDominioSimNaoEntity"})
@Entity
@Table(name = "MCO_CESARIANAS", schema = "AGH")
public class McoCesarianas extends BaseEntityId<McoNascimentosId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5581894633686112399L;
	private McoNascimentosId id;
	private McoNascimentos mcoNascimentos;
	private Short hrDuracao;
	private DominioContaminacaoCesariana contaminacao;
	private DominioLaparotomia laparotomia;
	private DominioHisterotomia histerotomia;
	private DominioHisterorrafia histerorrafia;
	private Boolean indLaqueaduraTubaria;
	private Boolean indRafiaPeritonial;
	private Boolean indLavagemCavidade;
	private Boolean indDrenos;
	private Date criadoEm;
	private Date dthrPrevInicio;
	private Date dthrIncisao;
	private Date dthrIndicacao;
	private Short sciUnfSeq;
	private Short sciSeqp;
	private Set<McoNascIndicacoes> mcoNascIndicacoeses = new HashSet<McoNascIndicacoes>(0);

	public McoCesarianas() {
	}

	public McoCesarianas(McoNascimentos mcoNascimentos,
			Boolean indLaqueaduraTubaria, Boolean indRafiaPeritonial,
			Boolean indLavagemCavidade, Boolean indDrenos, Date criadoEm) {
		this.mcoNascimentos = mcoNascimentos;
		this.indLaqueaduraTubaria = indLaqueaduraTubaria;
		this.indRafiaPeritonial = indRafiaPeritonial;
		this.indLavagemCavidade = indLavagemCavidade;
		this.indDrenos = indDrenos;
		this.criadoEm = criadoEm;
	}

	public McoCesarianas(McoNascimentos mcoNascimentos, Short hrDuracao,
			DominioContaminacaoCesariana contaminacao, DominioLaparotomia laparotomia, DominioHisterotomia histerotomia,
			DominioHisterorrafia histerorrafia, Boolean indLaqueaduraTubaria,
			Boolean indRafiaPeritonial, Boolean indLavagemCavidade,
			Boolean indDrenos, Date criadoEm, Date dthrPrevInicio, Date dthrIncisao, Date dthrIndicacao,
			Short sciUnfSeq, Short sciSeqp,
			Set<McoNascIndicacoes> mcoNascIndicacoeses) {
		this.mcoNascimentos = mcoNascimentos;
		this.hrDuracao = hrDuracao;
		this.contaminacao = contaminacao;
		this.laparotomia = laparotomia;
		this.histerotomia = histerotomia;
		this.histerorrafia = histerorrafia;
		this.indLaqueaduraTubaria = indLaqueaduraTubaria;
		this.indRafiaPeritonial = indRafiaPeritonial;
		this.indLavagemCavidade = indLavagemCavidade;
		this.indDrenos = indDrenos;
		this.criadoEm = criadoEm;
		this.dthrPrevInicio = dthrPrevInicio;
		this.dthrIncisao = dthrIncisao;
		this.dthrIndicacao = dthrIndicacao;
		this.sciUnfSeq = sciUnfSeq;
		this.sciSeqp = sciSeqp;
		this.mcoNascIndicacoeses = mcoNascIndicacoeses;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "gsoPacCodigo", column = @Column(name = "NAS_GSO_PAC_CODIGO", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "gsoSeqp", column = @Column(name = "NAS_GSO_SEQP", nullable = false, precision = 3, scale = 0)),
			@AttributeOverride(name = "seqp", column = @Column(name = "NAS_SEQP", nullable = false, precision = 5, scale = 0)) })
	public McoNascimentosId getId() {
		return this.id;
	}

	public void setId(McoNascimentosId id) {
		this.id = id;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public McoNascimentos getMcoNascimentos() {
		return this.mcoNascimentos;
	}

	public void setMcoNascimentos(McoNascimentos mcoNascimentos) {
		this.mcoNascimentos = mcoNascimentos;
	}

	@Column(name = "HR_DURACAO", precision = 4, scale = 0)
	public Short getHrDuracao() {
		return this.hrDuracao;
	}

	public void setHrDuracao(Short hrDuracao) {
		this.hrDuracao = hrDuracao;
	}

	@Column(name = "CONTAMINACAO")
	@Enumerated(EnumType.STRING)
	public DominioContaminacaoCesariana getContaminacao() {
		return this.contaminacao;
	}

	public void setContaminacao(DominioContaminacaoCesariana contaminacao) {
		this.contaminacao = contaminacao;
	}

	@Column(name = "LAPAROTOMIA")
	@Enumerated(EnumType.STRING)
	public DominioLaparotomia getLaparotomia() {
		return this.laparotomia;
	}

	public void setLaparotomia(DominioLaparotomia laparotomia) {
		this.laparotomia = laparotomia;
	}

	@Column(name = "HISTEROTOMIA")
	@Enumerated(EnumType.STRING)
	public DominioHisterotomia getHisterotomia() {
		return this.histerotomia;
	}

	public void setHisterotomia(DominioHisterotomia histerotomia) {
		this.histerotomia = histerotomia;
	}

	@Column(name = "HISTERORRAFIA")
	@Enumerated(EnumType.STRING)
	public DominioHisterorrafia getHisterorrafia() {
		return this.histerorrafia;
	}

	public void setHisterorrafia(DominioHisterorrafia histerorrafia) {
		this.histerorrafia = histerorrafia;
	}

	@Column(name = "IND_LAQUEADURA_TUBARIA", nullable = false)
	@NotNull
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndLaqueaduraTubaria() {
		return this.indLaqueaduraTubaria;
	}

	public void setIndLaqueaduraTubaria(Boolean indLaqueaduraTubaria) {
		this.indLaqueaduraTubaria = indLaqueaduraTubaria;
	}

	@Column(name = "IND_RAFIA_PERITONIAL", nullable = false)
	@NotNull
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndRafiaPeritonial() {
		return this.indRafiaPeritonial;
	}

	public void setIndRafiaPeritonial(Boolean indRafiaPeritonial) {
		this.indRafiaPeritonial = indRafiaPeritonial;
	}

	@Column(name = "IND_LAVAGEM_CAVIDADE", nullable = false)
	@NotNull
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndLavagemCavidade() {
		return this.indLavagemCavidade;
	}

	public void setIndLavagemCavidade(Boolean indLavagemCavidade) {
		this.indLavagemCavidade = indLavagemCavidade;
	}

	@Column(name = "IND_DRENOS", nullable = false)
	@NotNull
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndDrenos() {
		return this.indDrenos;
	}

	public void setIndDrenos(Boolean indDrenos) {
		this.indDrenos = indDrenos;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTHR_PREV_INICIO", length = 7)
	public Date getDthrPrevInicio() {
		return this.dthrPrevInicio;
	}

	public void setDthrPrevInicio(Date dthrPrevInicio) {
		this.dthrPrevInicio = dthrPrevInicio;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_INCISAO", length = 7)
	public Date getDthrIncisao() {
		return dthrIncisao;
	}

	public void setDthrIncisao(Date dthrIncisao) {
		this.dthrIncisao = dthrIncisao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_INDICACAO", length = 7)
	public Date getDthrIndicacao() {
		return dthrIndicacao;
	}

	public void setDthrIndicacao(Date dthrIndicacao) {
		this.dthrIndicacao = dthrIndicacao;
	}
	
	@Column(name = "SCI_UNF_SEQ", precision = 4, scale = 0)
	public Short getSciUnfSeq() {
		return this.sciUnfSeq;
	}

	public void setSciUnfSeq(Short sciUnfSeq) {
		this.sciUnfSeq = sciUnfSeq;
	}

	@Column(name = "SCI_SEQP", precision = 3, scale = 0)
	public Short getSciSeqp() {
		return this.sciSeqp;
	}

	public void setSciSeqp(Short sciSeqp) {
		this.sciSeqp = sciSeqp;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mcoCesarianas")
	public Set<McoNascIndicacoes> getMcoNascIndicacoeses() {
		return this.mcoNascIndicacoeses;
	}

	public void setMcoNascIndicacoeses(
			Set<McoNascIndicacoes> mcoNascIndicacoeses) {
		this.mcoNascIndicacoeses = mcoNascIndicacoeses;
	}

	public enum Fields {
		
		CODIGO_PACIENTE("id.gsoPacCodigo"), 
		SEQUENCE("id.gsoSeqp"), 
		SEQP("id.seqp"),
		DTHR_INCISAO("dthrIncisao"),
		DTHR_INDICACAO("dthrIndicacao"),
		DTHR_PREV_INICIO("dthrPrevInicio"),
		HR_DURACAO("hrDuracao"),
		CONTAMINACAO("contaminacao"),
		LAPAROTOMIA("laparotomia"),
		HISTEROTOMIA("histerotomia"),
		HISTERORRAFIA("histerorrafia"),
		IND_LAQUEADURA_TUBARIA("indLaqueaduraTubaria"),
		IND_RAFIA_PERITONIAL("indRafiaPeritonial"),
		IND_LAVAGEM_CAVIDADE("indLavagemCavidade"),
		IND_DRENOS("indDrenos");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
		
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof McoCesarianas)) {
			return false;
		}
		McoCesarianas other = (McoCesarianas) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}

}

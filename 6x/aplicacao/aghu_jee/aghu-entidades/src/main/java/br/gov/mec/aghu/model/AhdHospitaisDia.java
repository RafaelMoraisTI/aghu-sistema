package br.gov.mec.aghu.model;

// Generated 04/02/2010 10:55:42 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import org.hibernate.annotations.Cascade;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.exception.BusinessExceptionCode;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * AhdHospitaisDia generated by hbm2java
 */
@Entity
@Table(name = "AHD_HOSPITAIS_DIA", schema = "AGH")
public class AhdHospitaisDia extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8916691137864916780L;

	private Integer seq;

	private AipPacientes paciente;

	private Date dthrInicio;

	private Date dthrTermino;

	private AghEspecialidades especialidade;

	private RapServidores servidor;

	private AghUnidadesFuncionais unidadeFuncional;

	private AinTiposAltaMedica tipoAltaMedica;

	private RapServidores professor;

	private Boolean indPacienteEmAtendimento;

	private FatConvenioSaude convenioSaude;
	/**
	 * verificar se é um relacionamento. No banco ñ tem FK
	 */
	private Short iphPhoSeq;
	/**
	 * verificar se é um relacionamento. No banco ñ tem FK
	 */
	private Integer iphSeq;

	private FatConvenioSaudePlano convenioSaudePlano;

	private String justificativaAltDel;

	private AinTiposCaraterInternacao tipoCaraterInternacao;

	private Date dthrPrimeiroEvento;

	private Date dthrUltimoEvento;

	private AghAtendimentos atendimento;

	public AhdHospitaisDia() {
	}

	public AhdHospitaisDia(Integer seq, AipPacientes paciente, Date dthrInicio,
			AghEspecialidades espSeq, RapServidores servidor,
			AghUnidadesFuncionais unfSeq, RapServidores professor,
			Boolean indPacienteEmAtendimento, Short iphPhoSeq, Integer iphSeq,
			FatConvenioSaudePlano convenioSaudePlano,
			AinTiposCaraterInternacao tciSeq) {
		this.seq = seq;
		this.paciente = paciente;
		this.dthrInicio = dthrInicio;
		this.especialidade = espSeq;
		this.servidor = servidor;
		this.unidadeFuncional = unfSeq;
		this.professor = professor;
		this.indPacienteEmAtendimento = indPacienteEmAtendimento;
		this.iphPhoSeq = iphPhoSeq;
		this.iphSeq = iphSeq;
		this.convenioSaudePlano = convenioSaudePlano;
		this.tipoCaraterInternacao = tciSeq;
	}

	public AhdHospitaisDia(Integer seq, AipPacientes paciente, Date dthrInicio,
			Date dthrTermino, AghEspecialidades espSeq, RapServidores servidor,
			AghUnidadesFuncionais unfSeq, AinTiposAltaMedica tamCodigo,
			RapServidores professor, Boolean indPacienteEmAtendimento,
			Short iphPhoSeq, Integer iphSeq,
			FatConvenioSaudePlano convenioSaudePlano,
			String justificativaAltDel, AinTiposCaraterInternacao tciSeq,
			Date dthrPrimeiroEvento, Date dthrUltimoEvento) {
		this.seq = seq;
		this.paciente = paciente;
		this.dthrInicio = dthrInicio;
		this.dthrTermino = dthrTermino;
		this.especialidade = espSeq;
		this.servidor = servidor;
		this.unidadeFuncional = unfSeq;
		this.tipoAltaMedica = tamCodigo;
		this.professor = professor;
		this.indPacienteEmAtendimento = indPacienteEmAtendimento;
		this.iphPhoSeq = iphPhoSeq;
		this.iphSeq = iphSeq;
		this.convenioSaudePlano = convenioSaudePlano;
		this.justificativaAltDel = justificativaAltDel;
		this.tipoCaraterInternacao = tciSeq;
		this.dthrPrimeiroEvento = dthrPrimeiroEvento;
		this.dthrUltimoEvento = dthrUltimoEvento;
	}

	@Id
	@Column(name = "SEQ", nullable = false, precision = 8, scale = 0)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CSP_CNV_CODIGO", nullable = false, insertable = false, updatable = false)
	@Cascade({
		org.hibernate.annotations.CascadeType.REFRESH
	})
	public FatConvenioSaude getConvenioSaude() {
		return this.convenioSaude;
	}

	public void setConvenioSaude(FatConvenioSaude convenioSaude) {
		this.convenioSaude = convenioSaude;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO", nullable = false)
	public AipPacientes getPaciente() {
		return this.paciente;
	}

	public void setPaciente(AipPacientes paciente) {
		this.paciente = paciente;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_INICIO", nullable = false, length = 7)
	public Date getDthrInicio() {
		return this.dthrInicio;
	}

	public void setDthrInicio(Date dthrInicio) {
		this.dthrInicio = dthrInicio;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_TERMINO", length = 7)
	public Date getDthrTermino() {
		return this.dthrTermino;
	}

	public void setDthrTermino(Date dthrTermino) {
		this.dthrTermino = dthrTermino;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	/**
	 * @param servidor
	 *            the servidor to set
	 */
	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_PROFESSOR", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_PROFESSOR", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getProfessor() {
		return this.professor;
	}

	/**
	 * @param professor
	 *            the professor to set
	 */
	public void setProfessor(RapServidores professor) {
		this.servidor = professor;
	}

	@Column(name = "IND_PACIENTE_EM_ATENDIMENTO", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndPacienteEmAtendimento() {
		return this.indPacienteEmAtendimento;
	}

	public void setIndPacienteEmAtendimento(Boolean indPacienteEmAtendimento) {
		this.indPacienteEmAtendimento = indPacienteEmAtendimento;
	}

	@Column(name = "IPH_PHO_SEQ", nullable = false, precision = 4, scale = 0)
	public Short getIphPhoSeq() {
		return this.iphPhoSeq;
	}

	public void setIphPhoSeq(Short iphPhoSeq) {
		this.iphPhoSeq = iphPhoSeq;
	}

	@Column(name = "IPH_SEQ", nullable = false, precision = 8, scale = 0)
	public Integer getIphSeq() {
		return this.iphSeq;
	}

	public void setIphSeq(Integer iphSeq) {
		this.iphSeq = iphSeq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "CSP_SEQ", referencedColumnName = "SEQ", nullable = false),
			@JoinColumn(name = "CSP_CNV_CODIGO", referencedColumnName = "CNV_CODIGO", nullable = false) })
	public FatConvenioSaudePlano getConvenioSaudePlano() {
		return this.convenioSaudePlano;
	}

	public void setConvenioSaudePlano(FatConvenioSaudePlano convenioSaudePlano) {
		this.convenioSaudePlano = convenioSaudePlano;
	}

	@Column(name = "JUSTIFICATIVA_ALT_DEL", length = 240)
	@Length(max = 240)
	public String getJustificativaAltDel() {
		return this.justificativaAltDel;
	}

	public void setJustificativaAltDel(String justificativaAltDel) {
		this.justificativaAltDel = justificativaAltDel;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_PRIMEIRO_EVENTO", length = 7)
	public Date getDthrPrimeiroEvento() {
		return this.dthrPrimeiroEvento;
	}

	public void setDthrPrimeiroEvento(Date dthrPrimeiroEvento) {
		this.dthrPrimeiroEvento = dthrPrimeiroEvento;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_ULTIMO_EVENTO", length = 7)
	public Date getDthrUltimoEvento() {
		return this.dthrUltimoEvento;
	}

	public void setDthrUltimoEvento(Date dthrUltimoEvento) {
		this.dthrUltimoEvento = dthrUltimoEvento;
	}

	private enum AhdHospitaisDiaExceptionCode implements BusinessExceptionCode {
		DTHR_TERMINO_INVALIDA
	}

	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void validacoes() {
		if (this.dthrTermino != null
				&& this.dthrTermino.compareTo(this.dthrInicio) < 0) {
			throw new BaseRuntimeException(
					AhdHospitaisDiaExceptionCode.DTHR_TERMINO_INVALIDA);
		}
	}

	/**
	 * @param tipoAltaMedica
	 *            the tipoAltaMedica to set
	 */
	public void setTipoAltaMedica(AinTiposAltaMedica tipoAltaMedica) {
		this.tipoAltaMedica = tipoAltaMedica;
	}

	/**
	 * @return the tipoAltaMedica
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TAM_CODIGO", nullable = false)
	public AinTiposAltaMedica getTipoAltaMedica() {
		return tipoAltaMedica;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ESP_SEQ", nullable = false)
	public AghEspecialidades getEspecialidade() {
		return especialidade;
	}

	public void setEspecialidade(AghEspecialidades especialidade) {
		this.especialidade = especialidade;
	}

	/**
	 * @param tipoCaraterInternacao
	 *            the tipoCaraterInternacao to set
	 */
	public void setTipoCaraterInternacao(
			AinTiposCaraterInternacao tipoCaraterInternacao) {
		this.tipoCaraterInternacao = tipoCaraterInternacao;
	}

	/**
	 * @return the tipoCaraterInternacao
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TCI_SEQ", nullable = false)
	public AinTiposCaraterInternacao getTipoCaraterInternacao() {
		return tipoCaraterInternacao;
	}

	/**
	 * @param unidadeFuncional
	 *            the unidadeFuncional to set
	 */
	public void setUnidadeFuncional(AghUnidadesFuncionais unidadeFuncional) {
		this.unidadeFuncional = unidadeFuncional;
	}

	/**
	 * @return the unidadeFuncional
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ", nullable = false)
	public AghUnidadesFuncionais getUnidadeFuncional() {
		return unidadeFuncional;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "hospitalDia")
	public AghAtendimentos getAtendimento() {
		return this.atendimento;
	}

	public void setAtendimento(AghAtendimentos atendimento) {
		this.atendimento = atendimento;
	}

	public enum Fields {
		SEQ("seq"), PACIENTE("paciente"), COD_PACIENTE("paciente.codigo"), DTHR_INICIO(
				"dthrInicio"), DTHR_ULTIMO_EVENTO("dthrUltimoEvento"), IND_PACIENTE_EM_ATENDIMENTO(
				"indPacienteEmAtendimento"), TAM_CODIGO("tipoAltaMedica.codigo"),UNIDADE_FUNCIONAL(
				"unidadeFuncional"), CSP_SEQ("convenioSaudePlano.id.seq"),CSP_CNV_CODIGO("convenioSaudePlano.id.cnvCodigo"),
				CONVENIO_SAUDE("convenioSaude");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AhdHospitaisDia)) {
			return false;
		}
		AhdHospitaisDia other = (AhdHospitaisDia) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

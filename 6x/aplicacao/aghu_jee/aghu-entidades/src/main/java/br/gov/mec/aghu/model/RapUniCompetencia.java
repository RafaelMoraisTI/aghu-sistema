package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

/**
 * RapUniCompetencia generated by hbm2java
 */
@Entity
@Table(name = "RAP_UNI_COMPETENCIAS", schema = "AGH")
public class RapUniCompetencia implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7384996796611685501L;
	private Date dtInicio;
	private Integer version;
	private RapServidores rapServidoresByRapCunSerFk2;
	private RapServidores rapServidoresByRapCunSerFk1;
	private Date dtFim;
	private Date dtReferencia;
	private String indSituacao;
	private Date criadoEm;
	private Date alteradoEm;
	private Set<RapUniValor> rapUniValor = new HashSet<RapUniValor>(0);
	private Set<RapUniConsulta> rapUniConsultaes = new HashSet<RapUniConsulta>(0);

	public RapUniCompetencia() {
	}

	public RapUniCompetencia(Date dtInicio, RapServidores rapServidoresByRapCunSerFk1, Date criadoEm) {
		this.dtInicio = dtInicio;
		this.rapServidoresByRapCunSerFk1 = rapServidoresByRapCunSerFk1;
		this.criadoEm = criadoEm;
	}

	public RapUniCompetencia(Date dtInicio, RapServidores rapServidoresByRapCunSerFk2, RapServidores rapServidoresByRapCunSerFk1,
			Date dtFim, Date dtReferencia, String indSituacao, Date criadoEm, Date alteradoEm, Set<RapUniValor> rapUniValor,
			Set<RapUniConsulta> rapUniConsultaes) {
		this.dtInicio = dtInicio;
		this.rapServidoresByRapCunSerFk2 = rapServidoresByRapCunSerFk2;
		this.rapServidoresByRapCunSerFk1 = rapServidoresByRapCunSerFk1;
		this.dtFim = dtFim;
		this.dtReferencia = dtReferencia;
		this.indSituacao = indSituacao;
		this.criadoEm = criadoEm;
		this.alteradoEm = alteradoEm;
		this.rapUniValor = rapUniValor;
		this.rapUniConsultaes = rapUniConsultaes;
	}

	@Id
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_INICIO", unique = true, nullable = false, length = 29)
	public Date getDtInicio() {
		return this.dtInicio;
	}

	public void setDtInicio(Date dtInicio) {
		this.dtInicio = dtInicio;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_ALTERADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_ALTERADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByRapCunSerFk2() {
		return this.rapServidoresByRapCunSerFk2;
	}

	public void setRapServidoresByRapCunSerFk2(RapServidores rapServidoresByRapCunSerFk2) {
		this.rapServidoresByRapCunSerFk2 = rapServidoresByRapCunSerFk2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_CRIADO", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO_CRIADO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByRapCunSerFk1() {
		return this.rapServidoresByRapCunSerFk1;
	}

	public void setRapServidoresByRapCunSerFk1(RapServidores rapServidoresByRapCunSerFk1) {
		this.rapServidoresByRapCunSerFk1 = rapServidoresByRapCunSerFk1;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_FIM", length = 29)
	public Date getDtFim() {
		return this.dtFim;
	}

	public void setDtFim(Date dtFim) {
		this.dtFim = dtFim;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_REFERENCIA", length = 29)
	public Date getDtReferencia() {
		return this.dtReferencia;
	}

	public void setDtReferencia(Date dtReferencia) {
		this.dtReferencia = dtReferencia;
	}

	@Column(name = "IND_SITUACAO", length = 1)
	@Length(max = 1)
	public String getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(String indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 29)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rapUniCompetencia")
	public Set<RapUniValor> getRapUniValor() {
		return this.rapUniValor;
	}

	public void setRapUniValor(Set<RapUniValor> rapUniValor) {
		this.rapUniValor = rapUniValor;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rapUniCompetencia")
	public Set<RapUniConsulta> getRapUniConsultaes() {
		return this.rapUniConsultaes;
	}

	public void setRapUniConsultaes(Set<RapUniConsulta> rapUniConsultaes) {
		this.rapUniConsultaes = rapUniConsultaes;
	}

	public enum Fields {

		DT_INICIO("dtInicio"),
		VERSION("version"),
		RAP_SERVIDORES_BY_RAP_CUN_SER_FK2("rapServidoresByRapCunSerFk2"),
		RAP_SERVIDORES_BY_RAP_CUN_SER_FK1("rapServidoresByRapCunSerFk1"),
		DT_FIM("dtFim"),
		DT_REFERENCIA("dtReferencia"),
		IND_SITUACAO("indSituacao"),
		CRIADO_EM("criadoEm"),
		ALTERADO_EM("alteradoEm"),
		RAP_UNI_VALORES("rapUniValor"),
		RAP_UNI_CONSULTAES("rapUniConsultaes");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getDtInicio() == null) ? 0 : getDtInicio().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof RapUniCompetencia)) {
			return false;
		}
		RapUniCompetencia other = (RapUniCompetencia) obj;
		if (getDtInicio() == null) {
			if (other.getDtInicio() != null) {
				return false;
			}
		} else if (!getDtInicio().equals(other.getDtInicio())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

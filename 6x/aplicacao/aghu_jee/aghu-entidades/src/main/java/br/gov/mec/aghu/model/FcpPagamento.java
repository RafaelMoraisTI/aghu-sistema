package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * FcpPagamento generated by hbm2java
 */
@Entity
@Table(name = "FCP_PAGAMENTOS", schema = "AGH")
public class FcpPagamento extends BaseEntityId<FcpPagamentoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -6755744424751160520L;
	private FcpPagamentoId id;
	private Integer version;
	private RapServidores rapServidoresByFcpPgtSerFk1;
	private FsoConveniosFinanceiro fsoConveniosFinanceiro;
	private FcpTitulo fcpTitulo;
	private FcpTipoDocumentoPagamento fcpTipoDocPagamento;
	private ScoContaCorrenteFornecedor scoContaCorrenteFornecedor;
	private RapServidores rapServidoresByFcpPgtSerFk2;
	private Date dtCompetencia;
	private Date dtGeracao;
	private Date dtPagamento;
	private Integer nroDocumento;
	private Short cceAgbBcoCodigo;
	private Integer cceAgbCodigo;
	private Short cceEcgSeq;
	private String cceContaCorrente;
	private Double valor;
	private Double vlrAcrescimo;
	private Double vlrDesconto;
	private String indEstorno;
	private Date dtEstorno;
	private String observacao;

	public FcpPagamento() {
	}

	public FcpPagamento(FcpPagamentoId id, RapServidores rapServidoresByFcpPgtSerFk1, FcpTitulo fcpTitulo,
			FcpTipoDocumentoPagamento fcpTipoDocPagamento, Date dtCompetencia, Date dtGeracao, Date dtPagamento, Integer nroDocumento,
			Double valor) {
		this.id = id;
		this.rapServidoresByFcpPgtSerFk1 = rapServidoresByFcpPgtSerFk1;
		this.fcpTitulo = fcpTitulo;
		this.fcpTipoDocPagamento = fcpTipoDocPagamento;
		this.dtCompetencia = dtCompetencia;
		this.dtGeracao = dtGeracao;
		this.dtPagamento = dtPagamento;
		this.nroDocumento = nroDocumento;
		this.valor = valor;
	}

	public FcpPagamento(FcpPagamentoId id, RapServidores rapServidoresByFcpPgtSerFk1,
			FsoConveniosFinanceiro fsoConveniosFinanceiro, FcpTitulo fcpTitulo, FcpTipoDocumentoPagamento fcpTipoDocPagamento,
			ScoContaCorrenteFornecedor scoContaCorrenteFornecedor, RapServidores rapServidoresByFcpPgtSerFk2, Date dtCompetencia,
			Date dtGeracao, Date dtPagamento, Integer nroDocumento, Short cceAgbBcoCodigo, Integer cceAgbCodigo, Short cceEcgSeq,
			String cceContaCorrente, Double valor, Double vlrAcrescimo, Double vlrDesconto, String indEstorno, Date dtEstorno,
			String observacao) {
		this.id = id;
		this.rapServidoresByFcpPgtSerFk1 = rapServidoresByFcpPgtSerFk1;
		this.fsoConveniosFinanceiro = fsoConveniosFinanceiro;
		this.fcpTitulo = fcpTitulo;
		this.fcpTipoDocPagamento = fcpTipoDocPagamento;
		this.scoContaCorrenteFornecedor = scoContaCorrenteFornecedor;
		this.rapServidoresByFcpPgtSerFk2 = rapServidoresByFcpPgtSerFk2;
		this.dtCompetencia = dtCompetencia;
		this.dtGeracao = dtGeracao;
		this.dtPagamento = dtPagamento;
		this.nroDocumento = nroDocumento;
		this.cceAgbBcoCodigo = cceAgbBcoCodigo;
		this.cceAgbCodigo = cceAgbCodigo;
		this.cceEcgSeq = cceEcgSeq;
		this.cceContaCorrente = cceContaCorrente;
		this.valor = valor;
		this.vlrAcrescimo = vlrAcrescimo;
		this.vlrDesconto = vlrDesconto;
		this.indEstorno = indEstorno;
		this.dtEstorno = dtEstorno;
		this.observacao = observacao;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "ttlSeq", column = @Column(name = "TTL_SEQ", nullable = false)),
			@AttributeOverride(name = "numero", column = @Column(name = "NUMERO", nullable = false)) })
	public FcpPagamentoId getId() {
		return this.id;
	}

	public void setId(FcpPagamentoId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByFcpPgtSerFk1() {
		return this.rapServidoresByFcpPgtSerFk1;
	}

	public void setRapServidoresByFcpPgtSerFk1(RapServidores rapServidoresByFcpPgtSerFk1) {
		this.rapServidoresByFcpPgtSerFk1 = rapServidoresByFcpPgtSerFk1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CVF_CODIGO")
	public FsoConveniosFinanceiro getFsoConveniosFinanceiro() {
		return this.fsoConveniosFinanceiro;
	}

	public void setFsoConveniosFinanceiro(FsoConveniosFinanceiro fsoConveniosFinanceiro) {
		this.fsoConveniosFinanceiro = fsoConveniosFinanceiro;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TTL_SEQ", nullable = false, insertable = false, updatable = false)
	public FcpTitulo getFcpTitulo() {
		return this.fcpTitulo;
	}

	public void setFcpTitulo(FcpTitulo fcpTitulo) {
		this.fcpTitulo = fcpTitulo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TDP_SEQ", nullable = false)
	public FcpTipoDocumentoPagamento getFcpTipoDocPagamento() {
		return this.fcpTipoDocPagamento;
	}

	public void setFcpTipoDocPagamento(FcpTipoDocumentoPagamento fcpTipoDocPagamento) {
		this.fcpTipoDocPagamento = fcpTipoDocPagamento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "CNF_FRN_NUMERO", referencedColumnName = "FRN_NUMERO"),
			@JoinColumn(name = "CNF_AGB_BCO_CODIGO", referencedColumnName = "AGB_BCO_CODIGO"),
			@JoinColumn(name = "CNF_AGB_CODIGO", referencedColumnName = "AGB_CODIGO"),
			@JoinColumn(name = "CNF_CONTA_CORRENTE", referencedColumnName = "CONTA_CORRENTE") })
	public ScoContaCorrenteFornecedor getScoContaCorrenteFornecedor() {
		return this.scoContaCorrenteFornecedor;
	}

	public void setScoContaCorrenteFornecedor(ScoContaCorrenteFornecedor scoContaCorrenteFornecedor) {
		this.scoContaCorrenteFornecedor = scoContaCorrenteFornecedor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_ESTORNADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_ESTORNADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByFcpPgtSerFk2() {
		return this.rapServidoresByFcpPgtSerFk2;
	}

	public void setRapServidoresByFcpPgtSerFk2(RapServidores rapServidoresByFcpPgtSerFk2) {
		this.rapServidoresByFcpPgtSerFk2 = rapServidoresByFcpPgtSerFk2;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_COMPETENCIA", nullable = false, length = 29)
	public Date getDtCompetencia() {
		return this.dtCompetencia;
	}

	public void setDtCompetencia(Date dtCompetencia) {
		this.dtCompetencia = dtCompetencia;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_GERACAO", nullable = false, length = 29)
	public Date getDtGeracao() {
		return this.dtGeracao;
	}

	public void setDtGeracao(Date dtGeracao) {
		this.dtGeracao = dtGeracao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_PAGAMENTO", nullable = false, length = 29)
	public Date getDtPagamento() {
		return this.dtPagamento;
	}

	public void setDtPagamento(Date dtPagamento) {
		this.dtPagamento = dtPagamento;
	}

	@Column(name = "NRO_DOCUMENTO", nullable = false)
	public Integer getNroDocumento() {
		return this.nroDocumento;
	}

	public void setNroDocumento(Integer nroDocumento) {
		this.nroDocumento = nroDocumento;
	}

	@Column(name = "CCE_AGB_BCO_CODIGO")
	public Short getCceAgbBcoCodigo() {
		return this.cceAgbBcoCodigo;
	}

	public void setCceAgbBcoCodigo(Short cceAgbBcoCodigo) {
		this.cceAgbBcoCodigo = cceAgbBcoCodigo;
	}

	@Column(name = "CCE_AGB_CODIGO")
	public Integer getCceAgbCodigo() {
		return this.cceAgbCodigo;
	}

	public void setCceAgbCodigo(Integer cceAgbCodigo) {
		this.cceAgbCodigo = cceAgbCodigo;
	}

	@Column(name = "CCE_ECG_SEQ")
	public Short getCceEcgSeq() {
		return this.cceEcgSeq;
	}

	public void setCceEcgSeq(Short cceEcgSeq) {
		this.cceEcgSeq = cceEcgSeq;
	}

	@Column(name = "CCE_CONTA_CORRENTE", length = 15)
	@Length(max = 15)
	public String getCceContaCorrente() {
		return this.cceContaCorrente;
	}

	public void setCceContaCorrente(String cceContaCorrente) {
		this.cceContaCorrente = cceContaCorrente;
	}

	@Column(name = "VALOR", nullable = false, precision = 17, scale = 17)
	public Double getValor() {
		return this.valor;
	}

	public void setValor(Double valor) {
		this.valor = valor;
	}

	@Column(name = "VLR_ACRESCIMO", precision = 17, scale = 17)
	public Double getVlrAcrescimo() {
		return this.vlrAcrescimo;
	}

	public void setVlrAcrescimo(Double vlrAcrescimo) {
		this.vlrAcrescimo = vlrAcrescimo;
	}

	@Column(name = "VLR_DESCONTO", precision = 17, scale = 17)
	public Double getVlrDesconto() {
		return this.vlrDesconto;
	}

	public void setVlrDesconto(Double vlrDesconto) {
		this.vlrDesconto = vlrDesconto;
	}

	@Column(name = "IND_ESTORNO", length = 1)
	@Length(max = 1)
	public String getIndEstorno() {
		return this.indEstorno;
	}

	public void setIndEstorno(String indEstorno) {
		this.indEstorno = indEstorno;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_ESTORNO", length = 29)
	public Date getDtEstorno() {
		return this.dtEstorno;
	}

	public void setDtEstorno(Date dtEstorno) {
		this.dtEstorno = dtEstorno;
	}

	@Column(name = "OBSERVACAO", length = 120)
	@Length(max = 120)
	public String getObservacao() {
		return this.observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}

	public enum Fields {

		ID("id"),
		ID_TTL_SEQ("id.ttlSeq"),
		ID_NUMERO("id.numero"),		
		VERSION("version"),
		RAP_SERVIDORES_BY_FCP_PGT_SER_FK1("rapServidoresByFcpPgtSerFk1"),
		FSO_CONVENIOS_FINANCEIRO("fsoConveniosFinanceiro"),
		FCP_TITULO("fcpTitulo"),
		FCP_TIPO_DOC_PAGAMENTOS("fcpTipoDocPagamento"),
		SCO_CONTA_CORRENTE_FORNECEDOR("scoContaCorrenteFornecedor"),
		RAP_SERVIDORES_BY_FCP_PGT_SER_FK2("rapServidoresByFcpPgtSerFk2"),
		DT_COMPETENCIA("dtCompetencia"),
		DT_GERACAO("dtGeracao"),
		DT_PAGAMENTO("dtPagamento"),
		NRO_DOCUMENTO("nroDocumento"),
		CCE_AGB_BCO_CODIGO("cceAgbBcoCodigo"),
		CCE_AGB_CODIGO("cceAgbCodigo"),
		CCE_ECG_SEQ("cceEcgSeq"),
		CCE_CONTA_CORRENTE("cceContaCorrente"),
		VALOR("valor"),
		VLR_ACRESCIMO("vlrAcrescimo"),
		VLR_DESCONTO("vlrDesconto"),
		IND_ESTORNO("indEstorno"),
		DT_ESTORNO("dtEstorno"),
		OBSERVACAO("observacao");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof FcpPagamento)) {
			return false;
		}
		FcpPagamento other = (FcpPagamento) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

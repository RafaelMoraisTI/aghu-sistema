package br.gov.mec.aghu.model;

// Generated 22/01/2010 18:04:51 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;

import org.apache.commons.lang3.StringUtils;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSimNao;
import br.gov.mec.aghu.dominio.DominioSituacaoSolicitacaoInternacao;
import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * AinSolicTransfPacientes generated by hbm2java
 */
@SuppressWarnings({"PMD.AghuUsoIndevidoDaEnumDominioSimNaoEntity"})
@Entity
@SequenceGenerator(name="ainStpSq1", sequenceName="AGH.AIN_STP_SQ1", allocationSize = 1)
@Table(name = "AIN_SOLIC_TRANSF_PACIENTES", schema = "AGH")
public class AinSolicTransfPacientes extends BaseEntitySeq<Integer> implements java.io.Serializable {
	private static final long serialVersionUID = 1582902417963489827L;
	
	private Integer seq;
	private Date criadoEm;
	private DominioSimNao indLeitoIsolamento;
	private DominioSituacaoSolicitacaoInternacao indSitSolicLeito;
	private RapServidores servidorDigitador;
	private RapServidores servidorProfessor;
	private RapServidores servidorSolicitante;
	private RapServidores servidorCancelador;
	private AinLeitos leito;
	private AinQuartos ainQuartos;
	private AghUnidadesFuncionais unidadeFuncional;
	private Date dthrAtendimentoSolicitacao;
	private String observacao;
	private AghUnidadesFuncionais unfSolicitante;
	private AinInternacao internacao;
	private AinAcomodacoes acomodacoes;
	private AghEspecialidades especialidades;

	private Integer version;

	public AinSolicTransfPacientes() {
	}

	public AinSolicTransfPacientes(Integer seq, Date criadoEm,
			DominioSimNao indLeitoIsolamento, DominioSituacaoSolicitacaoInternacao indSitSolicLeito,
			RapServidores servidorDigitador) {
		this.seq = seq;
		this.criadoEm = criadoEm;
		this.indLeitoIsolamento = indLeitoIsolamento;
		this.indSitSolicLeito = indSitSolicLeito;
		this.servidorDigitador = servidorDigitador;
	}

	public AinSolicTransfPacientes(Integer seq, Date criadoEm,
			DominioSimNao indLeitoIsolamento, DominioSituacaoSolicitacaoInternacao indSitSolicLeito,
			RapServidores servidorDigitador,
			RapServidores servidorProfessor,
			RapServidores servidorSolicitante,
			RapServidores servidorCancelador,
			AinLeitos leito, AinQuartos ainQuartos,
			AghUnidadesFuncionais unidadeFuncional,
			Date dthrAtendimentoSolicitacao, String observacao,
			AghUnidadesFuncionais unfSolicitante) {
		this.seq = seq;
		this.criadoEm = criadoEm;
		this.indLeitoIsolamento = indLeitoIsolamento;
		this.indSitSolicLeito = indSitSolicLeito;
		this.servidorDigitador = servidorDigitador;
		this.servidorProfessor = servidorProfessor;
		this.servidorSolicitante = servidorSolicitante;
		this.servidorCancelador = servidorCancelador;
		this.leito = leito;
		this.ainQuartos = ainQuartos;
		this.unidadeFuncional =unidadeFuncional;
		this.dthrAtendimentoSolicitacao = dthrAtendimentoSolicitacao;
		this.observacao = observacao;
		this.unfSolicitante = unfSolicitante;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "ainStpSq1")
	@Column(name = "SEQ", nullable = false, precision = 6, scale = 0)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ACM_SEQ", nullable = false)
	public AinAcomodacoes getAcomodacoes() {
		return this.acomodacoes;
	}

	public void setAcomodacoes(AinAcomodacoes acomodacoes) {
		this.acomodacoes = acomodacoes;
	}

	@Column(name = "IND_LEITO_ISOLAMENTO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSimNao getIndLeitoIsolamento() {
		return this.indLeitoIsolamento;
	}

	public void setIndLeitoIsolamento(DominioSimNao indLeitoIsolamento) {
		this.indLeitoIsolamento = indLeitoIsolamento;
	}

	/**
	 * Campo sint√©tico criado para mapear diretamente este dominio booleano em
	 * um componente selectOneCheckBox
	 * 
	 * @author jvaranda
	 * @return
	 */
	@Transient
	public boolean isIsolamento() {
		if (getIndLeitoIsolamento() != null) {
			return getIndLeitoIsolamento() == DominioSimNao.S;
		} else {
			return Boolean.FALSE;
		}
	}

	public void setIsolamento(boolean valor) {
		setIndLeitoIsolamento(DominioSimNao.getInstance(valor));
	}
	
	@Column(name = "IND_SIT_SOLIC_LEITO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacaoSolicitacaoInternacao getIndSitSolicLeito() {
		return this.indSitSolicLeito;
	}

	public void setIndSitSolicLeito(DominioSituacaoSolicitacaoInternacao indSitSolicLeito) {
		this.indSitSolicLeito = indSitSolicLeito;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "INT_SEQ", nullable = false)
	public AinInternacao getInternacao() {
		return this.internacao;
	}

	public void setInternacao(AinInternacao internacao) {
		this.internacao = internacao;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ESP_SEQ", nullable = false)
	public AghEspecialidades getEspecialidades() {
		return this.especialidades;
	}

	public void setEspecialidades(AghEspecialidades especialidades) {
		this.especialidades = especialidades;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LTO_LTO_ID")
	public AinLeitos getLeito() {
		return this.leito;
	}

	public void setLeito(AinLeitos leito) {
		this.leito = leito;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "QRT_NUMERO")
	public AinQuartos getAinQuartos() {
		return this.ainQuartos;
	}

	public void setAinQuartos(AinQuartos ainQuartos) {
		this.ainQuartos = ainQuartos;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ")
	public AghUnidadesFuncionais getUnidadeFuncional() {
		return this.unidadeFuncional;
	}

	public void setUnidadeFuncional(AghUnidadesFuncionais unidadeFuncional) {
		this.unidadeFuncional = unidadeFuncional;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_ATENDIMENTO_SOLICITACAO", length = 7)
	public Date getDthrAtendimentoSolicitacao() {
		return this.dthrAtendimentoSolicitacao;
	}

	public void setDthrAtendimentoSolicitacao(Date dthrAtendimentoSolicitacao) {
		this.dthrAtendimentoSolicitacao = dthrAtendimentoSolicitacao;
	}

	@Column(name = "OBSERVACAO", length = 240)
	@Length(max = 240)
	public String getObservacao() {
		return (this.observacao != null)?this.observacao.toUpperCase():this.observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name="UNF_SEQ_SOLICITANTE")
	public AghUnidadesFuncionais getUnfSolicitante() {
		return this.unfSolicitante;
	}

	public void setUnfSolicitante(AghUnidadesFuncionais unfSolicitante) {
		this.unfSolicitante = unfSolicitante;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_DIGITADOR", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO_DIGITADOR", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidorDigitador() {
		return this.servidorDigitador;
	}

	public void setServidorDigitador(RapServidores servidorDigitador) {
		this.servidorDigitador = servidorDigitador;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_PROFESSOR", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_PROFESSOR", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorProfessor() {
		return this.servidorProfessor;
	}

	public void setServidorProfessor(RapServidores servidorProfessor) {
		this.servidorProfessor = servidorProfessor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_SOLICITANTE", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_SOLICITANTE", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorSolicitante() {
		return this.servidorSolicitante;
	}

	public void setServidorSolicitante(RapServidores servidorSolicitante) {
		this.servidorSolicitante = servidorSolicitante;
	}


	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_CANCELADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_CANCELADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorCancelador() {
		return this.servidorCancelador;
	}

	public void setServidorCancelador(RapServidores servidorCancelador) {
		this.servidorCancelador = servidorCancelador;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void validarSolicTransfPacientes() {
		if (!((this.unidadeFuncional != null && this.leito == null && this.ainQuartos == null)
				|| (this.unidadeFuncional == null && this.leito != null && this.ainQuartos == null)
				|| (this.unidadeFuncional == null && this.leito == null && this.ainQuartos != null) || (this.unidadeFuncional == null
				&& this.leito == null && this.ainQuartos == null))) {
			throw new BaseRuntimeException();
		}
		// Implementa regra para sempre gravar a observa√ß√£o em caixa alta
		this.observacao = StringUtils.upperCase(this.observacao);		
	}
	
	

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((seq == null) ? 0 : seq.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		AinSolicTransfPacientes other = (AinSolicTransfPacientes) obj;
		if (seq == null) {
			if (other.seq != null) {
				return false;
			}
		} else if (!seq.equals(other.seq)) {
			return false;
		}
		return true;
	}

	public enum Fields {
	SOLIC_LEITO("indSitSolicLeito"), IND_SITUACAO("indSitSolicLeito"),INTERNACAO("internacao"), INTERNACAO_SEQ("internacao.seq"), IND_LEITO_ISOLAMENTO(
				"indLeitoIsolamento"), CRIADO_EM("criadoEm"), ACOMODACOES(
				"acomodacoes"), ESPECIALIDADE("especialidades"), OBSERVACAO("observacao"),
				SEQUENCE("seq"), LEITO("leito"), QUARTO("ainQuartos"), UNIDADE_FUNCIONAL("unidadeFuncional"),
				MATRICULA_PROFESSOR("servidorProfessor.id.matricula"), 
				VIN_PROFESSOR("servidorProfessor.id.vinCodigo"),PROFESSOR("servidorProfessor"),
				SOLICITANTE("servidorSolicitante"),DIGITADOR("servidorDigitador"),CANCELADOR("servidorCancelador"),
				UNF_SOLICITANTE("unfSolicitante");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}
}
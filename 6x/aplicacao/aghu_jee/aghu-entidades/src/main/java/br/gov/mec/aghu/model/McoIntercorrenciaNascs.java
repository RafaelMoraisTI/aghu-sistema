package br.gov.mec.aghu.model;


import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * McoIntercorrenciaNascs generated by hbm2java
 */
@Entity
@Table(name = "MCO_INTERCORRENCIA_NASCS", schema = "AGH")
public class McoIntercorrenciaNascs extends BaseEntityId<McoIntercorrenciaNascsId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -2897791936358364467L;
	private McoIntercorrenciaNascsId id;
	private McoNascimentos mcoNascimentos;
	private Date dthrIntercorrencia;
	private Date criadoEm;
	private McoIntercorrencia mcoIntercorrencia;
	private McoProcedimentoObstetricos mcoProcedimentoObstetricos;
	private Integer serMatricula;
	private Short serVinCodigo;

	public McoIntercorrenciaNascs() {
	}

	public McoIntercorrenciaNascs(McoIntercorrenciaNascsId id,
			McoNascimentos mcoNascimentos, Date dthrIntercorrencia,
			Date criadoEm, McoIntercorrencia mcoIntercorrencia, Integer serMatricula, Short serVinCodigo) {
		this.id = id;
		this.mcoNascimentos = mcoNascimentos;
		this.dthrIntercorrencia = dthrIntercorrencia;
		this.criadoEm = criadoEm;
		this.mcoIntercorrencia = mcoIntercorrencia;
		this.serMatricula = serMatricula;
		this.serVinCodigo = serVinCodigo;
	}

	public McoIntercorrenciaNascs(McoIntercorrenciaNascsId id,
			McoNascimentos mcoNascimentos, Date dthrIntercorrencia,
			Date criadoEm, McoIntercorrencia mcoIntercorrencia, McoProcedimentoObstetricos mcoProcedimentoObstetricos, Integer serMatricula,
			Short serVinCodigo) {
		this.id = id;
		this.mcoNascimentos = mcoNascimentos;
		this.dthrIntercorrencia = dthrIntercorrencia;
		this.criadoEm = criadoEm;
		this.mcoIntercorrencia = mcoIntercorrencia;
		this.mcoProcedimentoObstetricos = mcoProcedimentoObstetricos;
		this.serMatricula = serMatricula;
		this.serVinCodigo = serVinCodigo;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "nasGsoPacCodigo", column = @Column(name = "NAS_GSO_PAC_CODIGO", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "nasGsoSeqp", column = @Column(name = "NAS_GSO_SEQP", nullable = false, precision = 3, scale = 0)),
			@AttributeOverride(name = "nasSeqp", column = @Column(name = "NAS_SEQP", nullable = false, precision = 5, scale = 0)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false, precision = 3, scale = 0)) })
	@NotNull
	public McoIntercorrenciaNascsId getId() {
		return this.id;
	}

	public void setId(McoIntercorrenciaNascsId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "NAS_GSO_PAC_CODIGO", referencedColumnName = "GSO_PAC_CODIGO", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "NAS_GSO_SEQP", referencedColumnName = "GSO_SEQP", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "NAS_SEQP", referencedColumnName = "SEQP", nullable = false, insertable = false, updatable = false) })
	public McoNascimentos getMcoNascimentos() {
		return this.mcoNascimentos;
	}

	public void setMcoNascimentos(McoNascimentos mcoNascimentos) {
		this.mcoNascimentos = mcoNascimentos;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_INTERCORRENCIA", nullable = false)
	@NotNull
	public Date getDthrIntercorrencia() {
		return this.dthrIntercorrencia;
	}

	public void setDthrIntercorrencia(Date dthrIntercorrencia) {
		this.dthrIntercorrencia = dthrIntercorrencia;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	@NotNull
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({@JoinColumn(name = "ICR_SEQ", referencedColumnName = "SEQ", nullable = false)})
	@NotNull	
	public McoIntercorrencia getMcoIntercorrencia() {
		return mcoIntercorrencia;
	}

	public void setMcoIntercorrencia(McoIntercorrencia mcoIntercorrencia) {

		this.mcoIntercorrencia = mcoIntercorrencia;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({@JoinColumn(name = "OBS_SEQ", referencedColumnName = "SEQ")})		
	public McoProcedimentoObstetricos getMcoProcedimentoObstetricos() {
		return mcoProcedimentoObstetricos;
	}

	public void setMcoProcedimentoObstetricos(McoProcedimentoObstetricos mcoProcedimentoObstetricos) {

		this.mcoProcedimentoObstetricos = mcoProcedimentoObstetricos;
	}

	@Column(name = "SER_MATRICULA", nullable = false, precision = 7, scale = 0)
	@NotNull
	public Integer getSerMatricula() {
		return this.serMatricula;
	}

	public void setSerMatricula(Integer serMatricula) {
		this.serMatricula = serMatricula;
	}

	@Column(name = "SER_VIN_CODIGO", nullable = false, precision = 3, scale = 0)
	@NotNull
	public Short getSerVinCodigo() {
		return this.serVinCodigo;
	}

	public void setSerVinCodigo(Short serVinCodigo) {
		this.serVinCodigo = serVinCodigo;
	}
	
	public enum Fields {
		CODIGO_PACIENTE("id.nasGsoPacCodigo"), 
		SEQUENCE("id.nasGsoSeqp"),
		
		NAS_GSO_PAC_CODIGO("id.nasGsoPacCodigo"), 
		NAS_GSO_SEQP("id.nasGsoSeqp"),
		NAS_SEQP("id.nasSeqp"),

		SEQP("id.seqp"),
		DTHR_INTERCORRENCIA("dthrIntercorrencia");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}		
	


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof McoIntercorrenciaNascs)) {
			return false;
		}
		McoIntercorrenciaNascs other = (McoIntercorrenciaNascs) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

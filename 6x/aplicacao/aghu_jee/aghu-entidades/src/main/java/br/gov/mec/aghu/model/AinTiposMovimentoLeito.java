package br.gov.mec.aghu.model;

// Generated 19/01/2010 10:55:17 by Hibernate Tools 3.2.5.Beta

import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioMovimentoLeito;
import br.gov.mec.aghu.dominio.DominioSimNao;
import br.gov.mec.aghu.core.persistence.BaseEntityCodigo;

/**
 * AinTiposMvtoLeito generated by hbm2java
 */
@SuppressWarnings({"PMD.AghuUsoIndevidoDaEnumDominioSimNaoEntity"})
@Entity
@Table(name = "AIN_TIPOS_MVTO_LEITO", schema = "AGH")
public class AinTiposMovimentoLeito extends BaseEntityCodigo<Short> implements java.io.Serializable {
	
	private static final long serialVersionUID = -8515773549487678007L;

	/**
	 * 
	 */
	private Short codigo;

	/**
	 * 
	 */
	private String descricao;

	/**
	 * 
	 */
	private DominioMovimentoLeito grupoMvtoLeito;

	/**
	 * 
	 */
	private DominioSimNao indNecessitaLimpeza;

	/**
	 * 
	 */
	private DominioSimNao indExigeJustificativa;

	/**
	 * 
	 */
	private DominioSimNao indBloqueioPaciente;

	/**
	 * 
	 */
	private DominioSimNao indExigeJustLiberacao;
	
	private List<AinLeitos> leitos;

	public AinTiposMovimentoLeito() {
	}

	public AinTiposMovimentoLeito(Short codigo, String descricao,
			DominioMovimentoLeito grupoMvtoLeito,
			DominioSimNao indNecessitaLimpeza,
			DominioSimNao indExigeJustificativa,
			DominioSimNao indBloqueioPaciente,
			DominioSimNao indExigeJustLiberacao) {
		this.codigo = codigo;
		this.descricao = descricao;
		this.grupoMvtoLeito = grupoMvtoLeito;
		this.indNecessitaLimpeza = indNecessitaLimpeza;
		this.indExigeJustificativa = indExigeJustificativa;
		this.indBloqueioPaciente = indBloqueioPaciente;
		this.indExigeJustLiberacao = indExigeJustLiberacao;
	}

	@Id
	@Column(name = "CODIGO", nullable = false, precision = 3, scale = 0)
	public Short getCodigo() {
		return this.codigo;
	}

	public void setCodigo(Short codigo) {
		this.codigo = codigo;
	}

	@Column(name = "DESCRICAO", unique = true, nullable = false, length = 60)
	@Length(max = 60)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "GRUPO_MVTO_LEITO", nullable = false, length = 2)
	@Enumerated(EnumType.STRING)
	public DominioMovimentoLeito getGrupoMvtoLeito() {
		return this.grupoMvtoLeito;
	}

	public void setGrupoMvtoLeito(DominioMovimentoLeito grupoMvtoLeito) {
		this.grupoMvtoLeito = grupoMvtoLeito;
	}

	@Column(name = "IND_NECESSITA_LIMPEZA", nullable = false, length=1)
	@Enumerated(EnumType.STRING)
	public DominioSimNao getIndNecessitaLimpeza() {
		return this.indNecessitaLimpeza;
	}

	public void setIndNecessitaLimpeza(DominioSimNao indNecessitaLimpeza) {
		this.indNecessitaLimpeza = indNecessitaLimpeza;
	}

	@Column(name = "IND_EXIGE_JUSTIFICATIVA", nullable = false, length=1)
	@Enumerated(EnumType.STRING)
	public DominioSimNao getIndExigeJustificativa() {
		return this.indExigeJustificativa;
	}

	public void setIndExigeJustificativa(DominioSimNao indExigeJustificativa) {
		this.indExigeJustificativa = indExigeJustificativa;
	}

	@Column(name = "IND_BLOQUEIO_PACIENTE", nullable = false, length=1)
	@Enumerated(EnumType.STRING)
	public DominioSimNao getIndBloqueioPaciente() {
		return this.indBloqueioPaciente;
	}

	public void setIndBloqueioPaciente(DominioSimNao indBloqueioPaciente) {
		this.indBloqueioPaciente = indBloqueioPaciente;
	}

	@Column(name = "IND_EXIGE_JUST_LIBERACAO", nullable = false, length=1)
	@Enumerated(EnumType.STRING)
	public DominioSimNao getIndExigeJustLiberacao() {
		return this.indExigeJustLiberacao;
	}

	public void setIndExigeJustLiberacao(DominioSimNao indExigeJustLiberacao) {
		this.indExigeJustLiberacao = indExigeJustLiberacao;
	}

	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tipoMovimentoLeito")
	public List<AinLeitos> getLeitos() {
		return leitos;
	}

	public void setLeitos(List<AinLeitos> leitos) {
		this.leitos = leitos;
	}

	/**
	 * Campo sintético criado para mapear diretamente este dominio booleano em
	 * um componente selectOne
	 * 
	 * @return
	 */
	@Transient
	public boolean isIndNecessitaLimpezaCheckBox() {
		if (this.indNecessitaLimpeza != null
				&& this.indNecessitaLimpeza.isSim()) {
			return Boolean.TRUE;
		} else {
			return Boolean.FALSE;
		}
	}

	@Transient
	public void setIndNecessitaLimpezaCheckBox(boolean indNecessitaLimpeza) {
		if (indNecessitaLimpeza) {
			this.indNecessitaLimpeza = DominioSimNao.S;
		} else {
			this.indNecessitaLimpeza = DominioSimNao.N;
		}
	}

	/**
	 * Campo sintético criado para mapear diretamente este dominio booleano em
	 * um componente selectOne
	 * 
	 * @return
	 */
	@Transient
	public boolean isIndExigeJustificativaCheckBox() {
		if (this.indExigeJustificativa != null
				&& this.indExigeJustificativa.isSim()) {
			return Boolean.TRUE;
		} else {
			return Boolean.FALSE;
		}
	}

	@Transient
	public void setIndExigeJustificativaCheckBox(boolean indExigeJustificativa) {
		if (indExigeJustificativa) {
			this.indExigeJustificativa = DominioSimNao.S;
		} else {
			this.indExigeJustificativa = DominioSimNao.N;
		}
	}

	/**
	 * Campo sintético criado para mapear diretamente este dominio booleano em
	 * um componente selectOne
	 * 
	 * @return
	 */
	@Transient
	public boolean isIndBloqueioPacienteCheckBox() {
		if (this.indBloqueioPaciente != null
				&& this.indBloqueioPaciente.isSim()) {
			return Boolean.TRUE;
		} else {
			return Boolean.FALSE;
		}
	}

	@Transient
	public void setIndBloqueioPacienteCheckBox(boolean indBloqueioPaciente) {
		if (indBloqueioPaciente) {
			this.indBloqueioPaciente = DominioSimNao.S;
		} else {
			this.indBloqueioPaciente = DominioSimNao.N;
		}
	}

	/**
	 * Campo sintético criado para mapear diretamente este dominio booleano em
	 * um componente selectOne
	 * 
	 * @return
	 */
	@Transient
	public boolean isIndExigeJustLiberacaoCheckBox() {
		if (this.indExigeJustLiberacao != null
				&& this.indExigeJustLiberacao.isSim()) {
			return Boolean.TRUE;
		} else {
			return Boolean.FALSE;
		}
	}

	@Transient
	public void setIndExigeJustLiberacaoCheckBox(boolean indExigeJustLiberacao) {
		if (indExigeJustLiberacao) {
			this.indExigeJustLiberacao = DominioSimNao.S;
		} else {
			this.indExigeJustLiberacao = DominioSimNao.N;
		}
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((codigo == null) ? 0 : codigo.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		AinTiposMovimentoLeito other = (AinTiposMovimentoLeito) obj;
		if (codigo == null) {
			if (other.codigo != null) {
				return false;
			}
		} else if (!codigo.equals(other.codigo)) {
			return false;
		}
		return true;
	}

	public enum Fields {
		CODIGO("codigo"), DESCRICAO("descricao"), NECESSITA_LIMPEZA(
				"indNecessitaLimpeza"), EXIGE_JUSTIFICATIVA(
				"indExigeJustificativa"), BLOQUEIO_PACIENTE(
				"indBloqueioPaciente"), EXIGE_JUSTIFICATIVA_LIBERACAO(
				"indExigeJustLiberacao"), GRUPO_MOVIMENTO_LEITO(
				"grupoMvtoLeito");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}

}

package br.gov.mec.aghu.model;

// Generated 04/04/2011 15:28:24 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioCategoriaProfissionalEquipePdt;
import br.gov.mec.aghu.dominio.DominioTipoAtuacao;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * PdtProfs generated by hbm2java
 */

@Entity
@Table(name = "PDT_PROFS", schema = "AGH")
public class PdtProf extends BaseEntityId<PdtProfId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 8395000254456016795L;
	
	private PdtProfId id;
	private DominioTipoAtuacao tipoAtuacao;
	private String nome;
	private DominioCategoriaProfissionalEquipePdt categoria;
	private RapServidores servidorPrf;
	private Date criadoEm;
	private RapServidores servidor;
	private PdtDescricao pdtDescricao;
	private Integer version;

	public PdtProf() {
	}

	public PdtProf(PdtProfId id, DominioTipoAtuacao tipoAtuacao, Date criadoEm) {
		this.id = id;
		this.tipoAtuacao = tipoAtuacao;
		this.criadoEm = criadoEm;
	}

	public PdtProf(PdtProfId id, DominioTipoAtuacao tipoAtuacao, String nome,
			DominioCategoriaProfissionalEquipePdt categoria, RapServidores servidorPrf,
			Date criadoEm) {
		this.id = id;
		this.tipoAtuacao = tipoAtuacao;
		this.nome = nome;
		this.categoria = categoria;
		this.servidorPrf = servidorPrf;
		this.criadoEm = criadoEm;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "ddtSeq", column = @Column(name = "DDT_SEQ", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false, precision = 3, scale = 0)) })
	public PdtProfId getId() {
		return this.id;
	}

	public void setId(PdtProfId id) {
		this.id = id;
	}

	@Column(name = "TIPO_ATUACAO", nullable = false, length = 4)
	@Enumerated(EnumType.STRING)
	public DominioTipoAtuacao getTipoAtuacao() {
		return this.tipoAtuacao;
	}

	public void setTipoAtuacao(DominioTipoAtuacao tipoAtuacao) {
		this.tipoAtuacao = tipoAtuacao;
	}

	@Column(name = "NOME", length = 100)
	@Length(max = 100)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Column(name = "CATEGORIA", nullable = true, length = 4)
	@Enumerated(EnumType.STRING)
	public DominioCategoriaProfissionalEquipePdt getCategoria() {
		return categoria;
	}

	public void setCategoria(DominioCategoriaProfissionalEquipePdt categoria) {
		this.categoria = categoria;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DDT_SEQ", insertable = false, updatable = false)
	public PdtDescricao getPdtDescricao() {
		return pdtDescricao;
	}

	public void setPdtDescricao(PdtDescricao pdtDescricao) {
		this.pdtDescricao = pdtDescricao;
	}
	
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	public enum Fields {
		ID("id"),
		SEQP("id.seqp"),
		TIPO_ATUACAO("tipoAtuacao"),
		SERVIDOR_PRF_MATRICULA("servidorPrf.id.matricula"),
		SERVIDOR_PRF_VIN_CODIGO("servidorPrf.id.vinCodigo"),
		SERVIDOR_PRF("servidorPrf"),
		PDT_DESCRICAO("pdtDescricao"),
		SEQ_PDT_DESCRICAO("pdtDescricao.seq"),
		CRG_SEQ_PDT_DESCRICAO("pdtDescricao.mbcCirurgias.seq"),
		DDT_SEQ("id.ddtSeq"),
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof PdtProf)) {
			return false;
		}
		PdtProf other = (PdtProf) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_PRF", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_PRF", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorPrf() {
		return servidorPrf;
	}

	public void setServidorPrf(RapServidores servidorPrf) {
		this.servidorPrf = servidorPrf;
	}

}

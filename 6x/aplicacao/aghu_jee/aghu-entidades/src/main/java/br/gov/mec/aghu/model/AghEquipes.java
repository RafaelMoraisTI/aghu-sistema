package br.gov.mec.aghu.model;

// Generated 18/02/2010 11:26:52 by Hibernate Tools 3.2.5.Beta

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.JoinTable;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;
import br.gov.mec.aghu.dominio.DominioSimNao;
import br.gov.mec.aghu.dominio.DominioSituacao;

/**
 * AghEquipes generated by hbm2java
 */
@SuppressWarnings({"PMD.AghuUsoIndevidoDaEnumDominioSimNaoEntity"})

@Entity
@Table(name = "AGH_EQUIPES", schema = "AGH")
@SequenceGenerator(name = "AghEquipesSeq", sequenceName = "AGH.AGH_EQP_SQ1", allocationSize = 1)
@org.hibernate.annotations.Cache(usage=org.hibernate.annotations.CacheConcurrencyStrategy.TRANSACTIONAL)
public class AghEquipes extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1004088025427474457L;

	private Integer seq;

	private String nome;

	private DominioSituacao indSituacao;

	private DominioSimNao indPlacarCo;

	private RapServidores profissionalResponsavel;

	private Set<RapServidores> rapServidores = new HashSet<RapServidores>(0);
	
	private Set<AghProfissionaisEquipe> profissionaisEquipe;
	
	private Set<MpmListaServEquipe> mpmListaServEquipe;
	
	private String codigoIme;
	

	public AghEquipes() {
	}
	
	public AghEquipes(Integer seq) {
		this.seq = seq;
	}

	public AghEquipes(Integer seq, String nome, DominioSituacao indSituacao,
			DominioSimNao indPlacarCo) {
		this.seq = seq;
		this.nome = nome;
		this.indSituacao = indSituacao;
		this.indPlacarCo = indPlacarCo;
	}

	@Id
	@Column(name = "SEQ", nullable = false, precision = 4, scale = 0)
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "AghEquipesSeq")
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Column(name = "NOME", nullable = false, length = 50)
	@Length(max = 50)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Column(name = "IND_PLACAR_CO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSimNao getIndPlacarCo() {
		return this.indPlacarCo;
	}

	public void setIndPlacarCo(DominioSimNao indPlacarCo) {
		this.indPlacarCo = indPlacarCo;
	}

	public enum Fields {
		CODIGO("seq"), 
		SEQ("seq"),
		NOME("nome"),
		SITUACAO("indSituacao"), 
		PLACAR_RISCO_NEONATAL("indPlacarCo"), 
		PROFISSIONAL_RESPONSAVEL("profissionalResponsavel"), 
		RAP_SERVIDORES("rapServidores"),RAP_SERVIDORES_ID("rapServidores.id"),
		RAP_SERVIDORES_ID_VIN_CODIGO("profissionalResponsavel.id.vinCodigo"),
		RAP_SERVIDORES_ID_MATRICULA("profissionalResponsavel.id.matricula"),
		PROFISSIONAIS_EQUIPE("profissionaisEquipe"), 
		SER_MATRICULA("profissionalResponsavel.id.matricula"),
		SER_VIN_CODIGO("profissionalResponsavel.id.vinCodigo"),
		MPM_LISTA_SERV_EQUIPE("mpmListaServEquipe");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((seq == null) ? 0 : seq.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		AghEquipes other = (AghEquipes) obj;
		if (seq == null) {
			if (other.seq != null) {
				return false;
			}
		} else if (!seq.equals(other.seq)) {
			return false;
		}
		return true;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", nullable = false) })
	public RapServidores getProfissionalResponsavel() {
		return profissionalResponsavel;
	}

	public void setProfissionalResponsavel(RapServidores profissionalResponsavel) {
		this.profissionalResponsavel = profissionalResponsavel;
	}

	@OneToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "AGH_PROFISSIONAIS_EQUIPE", schema = "AGH", joinColumns = { @JoinColumn(name = "EQP_SEQ", nullable = false, updatable = false) }, inverseJoinColumns = {
			@JoinColumn(name = "SER_MATRICULA", nullable = false, updatable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", nullable = false, updatable = false) })
	public Set<RapServidores> getRapServidores() {
		return rapServidores;
	}

	public void setRapServidores(Set<RapServidores> rapServidores) {
		this.rapServidores = rapServidores;
	}

	@Transient
	public boolean isSituacao() {
		if (getIndSituacao() != null) {
			return getIndSituacao() == DominioSituacao.A;
		} else {
			return Boolean.FALSE;
		}
	}

	public void setSituacao(boolean valor) {
		setIndSituacao(DominioSituacao.getInstance(valor));
	}

	@Transient
	public boolean isPlacarCo() {
		if (getIndPlacarCo() != null) {
			return getIndPlacarCo() == DominioSimNao.S;
		} else {
			return Boolean.FALSE;
		}
	}

	public void setPlacarCo(boolean valor) {
		setIndPlacarCo(DominioSimNao.getInstance(valor));
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "equipe")
	public Set<AghProfissionaisEquipe> getProfissionaisEquipe() {
		return profissionaisEquipe;
	}
	
	public void setProfissionaisEquipe(
			Set<AghProfissionaisEquipe> profissionaisEquipe) {
		this.profissionaisEquipe = profissionaisEquipe;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "equipe")
	public Set<MpmListaServEquipe> getMpmListaServEquipe() {
		return mpmListaServEquipe;
	}
	
	public void setMpmListaServEquipe(Set<MpmListaServEquipe> mpmListaServEquipe) {
		this.mpmListaServEquipe = mpmListaServEquipe;
	}
	
	@Column(name = "CODIGO_IME", length = 20)
	@Length(max = 20)
	public String getCodigoIme() {
		return codigoIme;
	}

	public void setCodigoIme(String codigoIme) {
		this.codigoIme = codigoIme;
	}

	

}

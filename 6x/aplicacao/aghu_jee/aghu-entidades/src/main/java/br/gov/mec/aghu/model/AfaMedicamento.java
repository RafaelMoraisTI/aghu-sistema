package br.gov.mec.aghu.model;

// Generated 21/09/2010 19:23:57 by Hibernate Tools 3.2.5.Beta

import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.util.Date;
import java.util.HashSet;
import java.util.Locale;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.annotations.Type;

import br.gov.mec.aghu.dominio.DominioIndFotoSensibilidade;
import br.gov.mec.aghu.dominio.DominioIndUnidTempoMdto;
import br.gov.mec.aghu.dominio.DominioQuimio;
import br.gov.mec.aghu.dominio.DominioSituacaoMedicamento;
import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.exception.BusinessExceptionCode;
import br.gov.mec.aghu.core.persistence.BaseEntityCodigo;
import br.gov.mec.aghu.core.utils.AghuNumberFormat;

/**
 * AfaMedicamentos generated by hbm2java
 */
@Entity
@Table(name = "AFA_MEDICAMENTOS", schema = "AGH")

public class AfaMedicamento extends BaseEntityCodigo<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8765467601319380492L;
	private Integer matCodigo;
	private ScoMaterial scoMaterial;
	private AfaTipoUsoMdto afaTipoUsoMdtos;
	private RapServidores rapServidores;
	private MpmUnidadeMedidaMedica mpmUnidadeMedidaMedicas;
	private MpmTipoFrequenciaAprazamento mpmTipoFreqAprazamentos;
	private AfaTipoApresentacaoMedicamento tipoApresentacaoMedicamento;
	private String tprSigla;
	private Date criadoEm;
	private String descricao;
	private String descricaoEtiqueta;
	private DominioSituacaoMedicamento indSituacao;
	private Boolean indCalcDispensacaoFracionad;
	private Boolean indPadronizacao;
	private Boolean indPermiteDoseFracionada;
	private Boolean indSobraReaproveitavel;
	private Boolean indExigeObservacao;
	private Boolean indRevisaoCadastro;
	private BigDecimal concentracao;
	private Date hrioInicioAdmSugerido;
	private String observacao;
	private BigDecimal qtdeCaloriasGrama;
	private BigDecimal doseMaximaMgKg;
	private Short frequenciaUsual;
	private String indicacoes;
	private String contraIndicacoes;
	private String cuidadoConservacao;
	private String orientacoesAdministracao;
	private Boolean indDiluente;
	private Boolean indControlado;
	private Boolean indGeraDispensacao;
	private Boolean indUnitariza;
	private String linkParecerIndeferido;
	private String linkProtocoloUtilizacao;
	private String descricaoEtiquetaFrasco;
	private String descricaoEtiquetaSeringa;
	private Boolean indInteresseCcih;
	private Boolean indGeladeira;
	private DominioIndFotoSensibilidade indFotosensibilidade;
	private DominioIndUnidTempoMdto indUnidadeTempo;
	private Short tempoFotosensibilidade;
	private DominioQuimio tipoQuimio;
	private Set<AfaFormaDosagem> afaFormaDosagens = new HashSet<AfaFormaDosagem>(
			0);
	private Set<AfaItemGrupoMedicamento> afaItemGrupoMedicamentos = new HashSet<AfaItemGrupoMedicamento>();
	private Set<MpmPrescricaoMdto> prescricaoMedicamentos = new HashSet<MpmPrescricaoMdto>();
	private Set<MpmItemPrescricaoMdto> itemPrescricaoMedicamentos = new HashSet<MpmItemPrescricaoMdto>();
	private AfaComponenteNpt afaComponenteNpt;
	private Set<AfaSinonimoMedicamento> sinonimosMedicamento = new HashSet<AfaSinonimoMedicamento>(
			0);
	private Set<AfaViaAdministracaoMedicamento> viasAdministracaoMedicamento = new HashSet<AfaViaAdministracaoMedicamento>(
			0);
	private Integer version;
	
	private String concentracaoDescUnm;
	private Set<EpeCuidadoMedicamento> cuidadosMedicamentos = new HashSet<EpeCuidadoMedicamento>(0);
	
	private Set<AfaVinculoDiluentes> medicamentoDiluente = new HashSet<AfaVinculoDiluentes>(0);
	
	private Boolean permitePrescricaoAmbulatorial;
	private Boolean permitePrescricaoEnfermeiroObstetra = Boolean.FALSE;
	
	private enum MedicamentoExceptionCode implements BusinessExceptionCode {
		QUANTIDADE_MENOR_IGUAL_ZERO, FREQUENCIA_MENOR_IGUAL_ZERO, DOSE_MENOR_IGUAL_ZERO, FREQUENCIA_SEM_TIPO_PRAZO, SITUACAO_MEDICAMENTO_INVALIDO
	}

	public AfaMedicamento() {
	}

	public AfaMedicamento(Integer matCodigo, String descricao,
			AfaTipoUsoMdto afaTipoUsoMdtos, Boolean indRevisaoCadastro,
			DominioSituacaoMedicamento indSituacao) {
		this.matCodigo = matCodigo;
		this.descricao = descricao;
		this.afaTipoUsoMdtos = afaTipoUsoMdtos;
		this.indRevisaoCadastro = indRevisaoCadastro;
		this.indSituacao = indSituacao;
	}

	public AfaMedicamento(ScoMaterial scoMaterial, RapServidores rapServidores,
			Date criadoEm, String descricao, String descricaoEtiqueta,
			DominioSituacaoMedicamento indSituacao,
			Boolean indCalcDispensacaoFracionad, Boolean indPadronizacao,
			Boolean indPermiteDoseFracionada, Boolean indSobraReaproveitavel,
			Boolean indExigeObservacao, Boolean indRevisaoCadastro,
			Boolean indDiluente, Boolean indGeraDispensacao,
			Boolean indGeladeira) {
		this.scoMaterial = scoMaterial;
		this.rapServidores = rapServidores;
		this.criadoEm = criadoEm;
		this.descricao = descricao;
		this.descricaoEtiqueta = descricaoEtiqueta;
		this.indSituacao = indSituacao;
		this.indCalcDispensacaoFracionad = indCalcDispensacaoFracionad;
		this.indPadronizacao = indPadronizacao;
		this.indPermiteDoseFracionada = indPermiteDoseFracionada;
		this.indSobraReaproveitavel = indSobraReaproveitavel;
		this.indExigeObservacao = indExigeObservacao;
		this.indRevisaoCadastro = indRevisaoCadastro;
		this.indDiluente = indDiluente;
		this.indGeraDispensacao = indGeraDispensacao;
		this.indGeladeira = indGeladeira;
	}

	@SuppressWarnings({"PMD.ExcessiveParameterList"})
	public AfaMedicamento(ScoMaterial scoMaterial,
			AfaTipoUsoMdto afaTipoUsoMdtos, RapServidores rapServidores,
			MpmUnidadeMedidaMedica mpmUnidadeMedidaMedicas,
			MpmTipoFrequenciaAprazamento mpmTipoFreqAprazamentos,
			AfaTipoApresentacaoMedicamento tipoApresentacaoMedicamento,
			Date criadoEm, String descricao, String descricaoEtiqueta,
			DominioSituacaoMedicamento indSituacao,
			Boolean indCalcDispensacaoFracionad, Boolean indPadronizacao,
			Boolean indPermiteDoseFracionada, Boolean indSobraReaproveitavel,
			Boolean indExigeObservacao, Boolean indRevisaoCadastro,
			BigDecimal concentracao, Date hrioInicioAdmSugerido,
			String observacao, BigDecimal qtdeCaloriasGrama,
			BigDecimal doseMaximaMgKg, Short frequenciaUsual,
			String indicacoes, String contraIndicacoes,
			String cuidadoConservacao, String orientacoesAdministracao,
			Boolean indDiluente, Boolean indGeraDispensacao,
			String linkParecerIndeferido, String linkProtocoloUtilizacao,
			String descricaoEtiquetaFrasco, String descricaoEtiquetaSeringa,
			Boolean indInteresseCcih, Boolean indGeladeira,
			DominioIndFotoSensibilidade indFotosensibilidade,
			DominioIndUnidTempoMdto indUnidadeTempo, Short tempoFotosensibilidade,
			DominioQuimio tipoQuimio, Set<AfaFormaDosagem> afaFormaDosagenses,
			AfaComponenteNpt afaComponenteNpts) {
		this.scoMaterial = scoMaterial;
		this.afaTipoUsoMdtos = afaTipoUsoMdtos;
		this.rapServidores = rapServidores;
		this.mpmUnidadeMedidaMedicas = mpmUnidadeMedidaMedicas;
		this.mpmTipoFreqAprazamentos = mpmTipoFreqAprazamentos;
		this.tipoApresentacaoMedicamento = tipoApresentacaoMedicamento;
		this.criadoEm = criadoEm;
		this.descricao = descricao;
		this.descricaoEtiqueta = descricaoEtiqueta;
		this.indSituacao = indSituacao;
		this.indCalcDispensacaoFracionad = indCalcDispensacaoFracionad;
		this.indPadronizacao = indPadronizacao;
		this.indPermiteDoseFracionada = indPermiteDoseFracionada;
		this.indSobraReaproveitavel = indSobraReaproveitavel;
		this.indExigeObservacao = indExigeObservacao;
		this.indRevisaoCadastro = indRevisaoCadastro;
		this.concentracao = concentracao;
		this.hrioInicioAdmSugerido = hrioInicioAdmSugerido;
		this.observacao = observacao;
		this.qtdeCaloriasGrama = qtdeCaloriasGrama;
		this.doseMaximaMgKg = doseMaximaMgKg;
		this.frequenciaUsual = frequenciaUsual;
		this.indicacoes = indicacoes;
		this.contraIndicacoes = contraIndicacoes;
		this.cuidadoConservacao = cuidadoConservacao;
		this.orientacoesAdministracao = orientacoesAdministracao;
		this.indDiluente = indDiluente;
		this.indGeraDispensacao = indGeraDispensacao;
		this.linkParecerIndeferido = linkParecerIndeferido;
		this.linkProtocoloUtilizacao = linkProtocoloUtilizacao;
		this.descricaoEtiquetaFrasco = descricaoEtiquetaFrasco;
		this.descricaoEtiquetaSeringa = descricaoEtiquetaSeringa;
		this.indInteresseCcih = indInteresseCcih;
		this.indGeladeira = indGeladeira;
		this.indFotosensibilidade = indFotosensibilidade;
		this.indUnidadeTempo = indUnidadeTempo;
		this.tempoFotosensibilidade = tempoFotosensibilidade;
		this.tipoQuimio = tipoQuimio;
		this.afaFormaDosagens = afaFormaDosagenses;
		this.afaComponenteNpt = afaComponenteNpts;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "scoMaterial"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "MAT_CODIGO", unique = true, nullable = false, precision = 6, scale = 0)
	public Integer getMatCodigo() {
		return this.matCodigo;
	}

	public void setMatCodigo(Integer matCodigo) {
		this.matCodigo = matCodigo;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public ScoMaterial getScoMaterial() {
		return this.scoMaterial;
	}

	public void setScoMaterial(ScoMaterial scoMaterial) {
		this.scoMaterial = scoMaterial;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "TUM_SIGLA", referencedColumnName = "SIGLA")
	public AfaTipoUsoMdto getAfaTipoUsoMdtos() {
		return this.afaTipoUsoMdtos;
	}

	public void setAfaTipoUsoMdtos(AfaTipoUsoMdto afaTipoUsoMdtos) {
		this.afaTipoUsoMdtos = afaTipoUsoMdtos;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UMM_SEQ", referencedColumnName = "SEQ")
	public MpmUnidadeMedidaMedica getMpmUnidadeMedidaMedicas() {
		return mpmUnidadeMedidaMedicas;
	}

	public void setMpmUnidadeMedidaMedicas(
			MpmUnidadeMedidaMedica mpmUnidadeMedidaMedicas) {
		this.mpmUnidadeMedidaMedicas = mpmUnidadeMedidaMedicas;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TFQ_SEQ", referencedColumnName = "SEQ")
	public MpmTipoFrequenciaAprazamento getMpmTipoFreqAprazamentos() {
		return mpmTipoFreqAprazamentos;
	}

	public void setMpmTipoFreqAprazamentos(
			MpmTipoFrequenciaAprazamento mpmTipoFreqAprazamentos) {
		this.mpmTipoFreqAprazamentos = mpmTipoFreqAprazamentos;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TPR_SIGLA", referencedColumnName = "SIGLA")
	public AfaTipoApresentacaoMedicamento getTipoApresentacaoMedicamento() {
		return this.tipoApresentacaoMedicamento;
	}

	public void setTipoApresentacaoMedicamento(
			AfaTipoApresentacaoMedicamento tipoApresentacaoMedicamento) {
		this.tipoApresentacaoMedicamento = tipoApresentacaoMedicamento;
	}

	@Column(name = "TPR_SIGLA", insertable = false, updatable = false)
	public String getTprSigla() {
		return tprSigla;
	}
	
	public void setTprSigla(String tprSigla) {
		this.tprSigla = tprSigla;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 250)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "DESCRICAO_ETIQUETA", length = 18)
	public String getDescricaoEtiqueta() {
		return descricaoEtiqueta;
	}

	public void setDescricaoEtiqueta(String descricaoEtiqueta) {
		this.descricaoEtiqueta = descricaoEtiqueta;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacaoMedicamento getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacaoMedicamento indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Column(name = "IND_CALC_DISPENSACAO_FRACIONAD", nullable = false, updatable = true)
	@Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndCalcDispensacaoFracionad() {
		return this.indCalcDispensacaoFracionad;
	}

	public void setIndCalcDispensacaoFracionad(
			Boolean indCalcDispensacaoFracionad) {
		this.indCalcDispensacaoFracionad = indCalcDispensacaoFracionad;
	}

	@Column(name = "IND_PADRONIZACAO", nullable = false, updatable = true)
	@Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndPadronizacao() {
		return this.indPadronizacao;
	}

	public void setIndPadronizacao(Boolean indPadronizacao) {
		this.indPadronizacao = indPadronizacao;
	}

	@Column(name = "IND_PERMITE_DOSE_FRACIONADA", nullable = false, updatable = true)
	@Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndPermiteDoseFracionada() {
		return this.indPermiteDoseFracionada;
	}

	public void setIndPermiteDoseFracionada(Boolean indPermiteDoseFracionada) {
		this.indPermiteDoseFracionada = indPermiteDoseFracionada;
	}

	@Column(name = "IND_SOBRA_REAPROVEITAVEL", nullable = false, updatable = true)
	@Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndSobraReaproveitavel() {
		return this.indSobraReaproveitavel;
	}

	public void setIndSobraReaproveitavel(Boolean indSobraReaproveitavel) {
		this.indSobraReaproveitavel = indSobraReaproveitavel;
	}

	@Column(name = "IND_EXIGE_OBSERVACAO", nullable = false, updatable = true)
	@Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndExigeObservacao() {
		return this.indExigeObservacao;
	}

	public void setIndExigeObservacao(Boolean indExigeObservacao) {
		this.indExigeObservacao = indExigeObservacao;
	}

	@Column(name = "IND_REVISAO_CADASTRO", nullable = false, updatable = true)
	@Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndRevisaoCadastro() {
		return this.indRevisaoCadastro;
	}

	public void setIndRevisaoCadastro(Boolean indRevisaoCadastro) {
		this.indRevisaoCadastro = indRevisaoCadastro;
	}

	@Column(name = "CONCENTRACAO", precision = 14, scale = 4)
	public BigDecimal getConcentracao() {
		return this.concentracao;
	}

	/**
	 * Formata a concentracao (14,4) #.###.###.###,####
	 * 
	 * rcorvalao 12/10/2010
	 * 
	 * @return
	 */
	@Transient
	public String getConcentracaoFormatada() {
		String numFormated = null;
		if (this.getConcentracao() != null) {
			numFormated = AghuNumberFormat.formatarValor(
					this.getConcentracao(), this.getClass(), "concentracao");
		}
		return numFormated;
	}
	
	@Transient
	public String getConcentracaoDescUnm() {
		return concentracaoDescUnm;
	}

	@Transient
	public void setConcentracaoDescUnm(String concentracaoDescUnm) {
		this.concentracaoDescUnm = concentracaoDescUnm;
	}

	public void setConcentracao(BigDecimal concentracao) {
		this.concentracao = concentracao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "HRIO_INICIO_ADM_SUGERIDO", length = 7)
	public Date getHrioInicioAdmSugerido() {
		return this.hrioInicioAdmSugerido;
	}

	public void setHrioInicioAdmSugerido(Date hrioInicioAdmSugerido) {
		this.hrioInicioAdmSugerido = hrioInicioAdmSugerido;
	}

	@Column(name = "OBSERVACAO", length = 500)
	public String getObservacao() {
		return this.observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}

	@Column(name = "QTDE_CALORIAS_GRAMA", precision = 6)
	public BigDecimal getQtdeCaloriasGrama() {
		return this.qtdeCaloriasGrama;
	}

	public void setQtdeCaloriasGrama(BigDecimal qtdeCaloriasGrama) {
		this.qtdeCaloriasGrama = qtdeCaloriasGrama;
	}

	@Column(name = "DOSE_MAXIMA_MG_KG", precision = 6)
	public BigDecimal getDoseMaximaMgKg() {
		return this.doseMaximaMgKg;
	}

	public void setDoseMaximaMgKg(BigDecimal doseMaximaMgKg) {
		this.doseMaximaMgKg = doseMaximaMgKg;
	}

	@Column(name = "FREQUENCIA_USUAL", precision = 3, scale = 0)
	public Short getFrequenciaUsual() {
		return this.frequenciaUsual;
	}

	public void setFrequenciaUsual(Short frequenciaUsual) {
		this.frequenciaUsual = frequenciaUsual;
	}

	@Column(name = "INDICACOES", length = 2000)
	public String getIndicacoes() {
		return this.indicacoes;
	}

	public void setIndicacoes(String indicacoes) {
		this.indicacoes = indicacoes;
	}

	@Column(name = "CONTRA_INDICACOES", length = 2000)
	public String getContraIndicacoes() {
		return this.contraIndicacoes;
	}

	public void setContraIndicacoes(String contraIndicacoes) {
		this.contraIndicacoes = contraIndicacoes;
	}

	@Column(name = "CUIDADO_CONSERVACAO", length = 2000)
	public String getCuidadoConservacao() {
		return this.cuidadoConservacao;
	}

	public void setCuidadoConservacao(String cuidadoConservacao) {
		this.cuidadoConservacao = cuidadoConservacao;
	}

	@Column(name = "ORIENTACOES_ADMINISTRACAO", length = 2000)
	public String getOrientacoesAdministracao() {
		return this.orientacoesAdministracao;
	}

	public void setOrientacoesAdministracao(String orientacoesAdministracao) {
		this.orientacoesAdministracao = orientacoesAdministracao;
	}

	@Column(name = "IND_DILUENTE", nullable = false, updatable = true)
	@Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndDiluente() {
		return this.indDiluente;
	}

	public void setIndDiluente(Boolean indDiluente) {
		this.indDiluente = indDiluente;
	}
	
	@Column(name = "IND_CONTROLADO", updatable = true)
	@Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndControlado() {
		return this.indControlado;
	}

		public void setIndControlado(Boolean indControlado) {
		this.indControlado = indControlado;
	}

	@Column(name = "IND_GERA_DISPENSACAO", nullable = false, updatable = true)
	@Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndGeraDispensacao() {
		return this.indGeraDispensacao;
	}

	public void setIndGeraDispensacao(Boolean indGeraDispensacao) {
		this.indGeraDispensacao = indGeraDispensacao;
	}

	@Column(name = "LINK_PARECER_INDEFERIDO", length = 240)
	public String getLinkParecerIndeferido() {
		return this.linkParecerIndeferido;
	}

	public void setLinkParecerIndeferido(String linkParecerIndeferido) {
		this.linkParecerIndeferido = linkParecerIndeferido;
	}

	@Column(name = "LINK_PROTOCOLO_UTILIZACAO", length = 240)
	public String getLinkProtocoloUtilizacao() {
		return this.linkProtocoloUtilizacao;
	}

	public void setLinkProtocoloUtilizacao(String linkProtocoloUtilizacao) {
		this.linkProtocoloUtilizacao = linkProtocoloUtilizacao;
	}

	@Column(name = "DESCRICAO_ETIQUETA_FRASCO", length = 20)
	public String getDescricaoEtiquetaFrasco() {
		return this.descricaoEtiquetaFrasco;
	}

	public void setDescricaoEtiquetaFrasco(String descricaoEtiquetaFrasco) {
		this.descricaoEtiquetaFrasco = descricaoEtiquetaFrasco;
	}

	@Column(name = "DESCRICAO_ETIQUETA_SERINGA", length = 25)
	public String getDescricaoEtiquetaSeringa() {
		return this.descricaoEtiquetaSeringa;
	}

	public void setDescricaoEtiquetaSeringa(String descricaoEtiquetaSeringa) {
		this.descricaoEtiquetaSeringa = descricaoEtiquetaSeringa;
	}

	@Column(name = "IND_INTERESSE_CCIH", length = 1)
	@Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndInteresseCcih() {
		return this.indInteresseCcih;
	}

	public void setIndInteresseCcih(Boolean indInteresseCcih) {
		this.indInteresseCcih = indInteresseCcih;
	}

	@Column(name = "IND_GELADEIRA", nullable = false, length = 1)
	@Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndGeladeira() {
		return this.indGeladeira;
	}

	public void setIndGeladeira(Boolean indGeladeira) {
		this.indGeladeira = indGeladeira;
	}

	@Column(name = "IND_UNITARIZA", nullable = false, length = 1)
	@Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndUnitariza() {
		return this.indUnitariza;
	}

	public void setIndUnitariza(Boolean indUnitariza) {
		this.indUnitariza = indUnitariza;
	}

	@Column(name = "IND_FOTOSENSIBILIDADE", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioIndFotoSensibilidade getIndFotosensibilidade() {
		return this.indFotosensibilidade;
	}

	public void setIndFotosensibilidade(
			DominioIndFotoSensibilidade indFotosensibilidade) {
		this.indFotosensibilidade = indFotosensibilidade;
	}

	@Column(name = "IND_UNIDADE_TEMPO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioIndUnidTempoMdto getIndUnidadeTempo() {
		return this.indUnidadeTempo;
	}

	public void setIndUnidadeTempo(DominioIndUnidTempoMdto indUnidadeTempo) {
		this.indUnidadeTempo = indUnidadeTempo;
	}

	@Column(name = "TEMPO_FOTOSENSIBILIDADE", precision = 3, scale = 0)
	public Short getTempoFotosensibilidade() {
		return this.tempoFotosensibilidade;
	}

	public void setTempoFotosensibilidade(Short tempoFotosensibilidade) {
		this.tempoFotosensibilidade = tempoFotosensibilidade;
	}

	@Column(name = "TIPO_QUIMIO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioQuimio getTipoQuimio() {
		return this.tipoQuimio;
	}

	public void setTipoQuimio(DominioQuimio tipoQuimio) {
		this.tipoQuimio = tipoQuimio;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "afaMedicamentos")
	public Set<AfaFormaDosagem> getAfaFormaDosagens() {
		return this.afaFormaDosagens;
	}

	public void setAfaFormaDosagens(Set<AfaFormaDosagem> afaFormaDosagenses) {
		this.afaFormaDosagens = afaFormaDosagenses;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "afaMedicamentos")
	public AfaComponenteNpt getAfaComponenteNpt() {
		return this.afaComponenteNpt;
	}

	public void setAfaComponenteNpt(AfaComponenteNpt afaComponenteNpt) {
		this.afaComponenteNpt = afaComponenteNpt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "diluente")
	public Set<MpmPrescricaoMdto> getPrescricaoMedicamentos() {
		return prescricaoMedicamentos;
	}

	public void setPrescricaoMedicamentos(
			Set<MpmPrescricaoMdto> prescricaoMedicamentos) {
		this.prescricaoMedicamentos = prescricaoMedicamentos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "medicamento")
	public Set<MpmItemPrescricaoMdto> getItemPrescricaoMedicamentos() {
		return itemPrescricaoMedicamentos;
	}

	public void setItemPrescricaoMedicamentos(
			Set<MpmItemPrescricaoMdto> itemPrescricaoMedicamentos) {
		this.itemPrescricaoMedicamentos = itemPrescricaoMedicamentos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "medicamento")
	public Set<AfaSinonimoMedicamento> getSinonimosMedicamento() {
		return sinonimosMedicamento;
	}

	public void setSinonimosMedicamento(
			Set<AfaSinonimoMedicamento> sinonimosMedicamento) {
		this.sinonimosMedicamento = sinonimosMedicamento;
	}

	/**
	 * Função de validação dos dados antes que ocorra a persistência.
	 */
	@PrePersist
	@PreUpdate
	@SuppressWarnings({"unused", "PMD.NPathComplexity"})
	private void valida() {

		// CONSTRAINT AFA_MED_CK10
		if (!(this.qtdeCaloriasGrama == null || (this.qtdeCaloriasGrama != null && this.qtdeCaloriasGrama
				.doubleValue() > 0))) {
			throw new BaseRuntimeException(
					MedicamentoExceptionCode.QUANTIDADE_MENOR_IGUAL_ZERO);
		}

		// CONSTRAINT AFA_MED_CK11
		if (!(this.doseMaximaMgKg == null || (this.doseMaximaMgKg != null && this.doseMaximaMgKg
				.doubleValue() > 0))) {
			throw new BaseRuntimeException(
					MedicamentoExceptionCode.DOSE_MENOR_IGUAL_ZERO);
		}

		// CONSTRAINT AFA_MED_CK13
		if (!((this.indSituacao.equals(DominioSituacaoMedicamento.A) && this.tipoApresentacaoMedicamento != null) || (!this.indSituacao
				.equals(DominioSituacaoMedicamento.A)))) {
			throw new BaseRuntimeException(
					MedicamentoExceptionCode.SITUACAO_MEDICAMENTO_INVALIDO);
		}

		// CONSTRAINT AFA_MED_CK14
		if (!((this.indSituacao.equals(DominioSituacaoMedicamento.A) && this.afaTipoUsoMdtos != null) || (!this.indSituacao
				.equals(DominioSituacaoMedicamento.A)))) {
			throw new BaseRuntimeException(
					MedicamentoExceptionCode.SITUACAO_MEDICAMENTO_INVALIDO);
		}

		// CONSTRAINT AFA_MED_CK15
		if (!((this.frequenciaUsual == null || (this.frequenciaUsual != null && this.mpmTipoFreqAprazamentos != null)))) {
			throw new BaseRuntimeException(
					MedicamentoExceptionCode.FREQUENCIA_SEM_TIPO_PRAZO);
		}

		// CONSTRAINT AFA_MED_CK9
		if (!((this.frequenciaUsual == null || (this.frequenciaUsual != null && this.frequenciaUsual
				.shortValue() > 0)))) {
			throw new BaseRuntimeException(
					MedicamentoExceptionCode.FREQUENCIA_MENOR_IGUAL_ZERO);
		}

	}

	/**
	 * FIELDS
	 * 
	 * @author bsoliveira
	 * 
	 */
	public enum Fields {
		MAT_CODIGO("matCodigo"), 
		TUM_SIGLA("afaTipoUsoMdtos.sigla"),
		TIPO_USO_MEDICAMENTO("afaTipoUsoMdtos"), 
		RAP_SERVIDORES("rapServidores"), 
		UMM_SEQ("mpmUnidadeMedidaMedicas.seq"), 
		UNIDADE_MEDIDA_MEDICAS("mpmUnidadeMedidaMedicas"), 
		TFQ_SEQ("mpmTipoFreqAprazamentos.seq"), 
		TPR_SIGLA("tipoApresentacaoMedicamento.sigla"), 
		CRIADO_EM("criadoEm"), 
		DESCRICAO("descricao"), 
		DESCRICAO_ETIQUETA("descricaoEtiqueta"), 
		IND_SITUACAO("indSituacao"),
		IND_CONTROLADO("indControlado"), 
		IND_CALC_DISPENSACAO_FRACIONAD("indCalcDispensacaoFracionad"), 
		IND_PADRONIZACAO("indPadronizacao"), 
		IND_PERMITE_DOSE_FRACIONADA("indPermiteDoseFracionada"), 
		IND_SOBRA_REAPROVEITAVEL("indSobraReaproveitavel"), 
		IND_EXIGE_OBSERVACAO("indExigeObservacao"), 
		IND_REVISAO_CADASTRO("indRevisaoCadastro"), 
		HRIO_INICIO_ADM_SUGERIDO("hrioInicioAdmSugerido"), 
		OBSERVACAO("observacao"), 
		QTDE_CALORIAS_GRAMA("qtdeCaloriasGrama"),
		DOSE_MAXIMA_MG_KG("doseMaximaMgKg"), 
		FREQUENCIA_USUAL("frequenciaUsual"), 
		INDICACOES("indicacoes"), 
		CONTRA_INDICACOES("contraIndicacoes"), 
		CUIDADO_CONSERVASAO("cuidadoConservacao"), 
		ORIENTACOES_ADMINISTRACAO("orientacoesAdministracao"), 
		IND_DILUENTE("indDiluente"), 
		IND_GERA_DISPENSACAO("indGeraDispensacao"), 
		LINK_PARECER_INDEFERIDO("linkParecerIndeferido"), 
		LINK_PROTOCOLO_UTILIZACAO("linkProtocoloUtilizacao"), 
		DESCRICAO_ETIQUETA_FRASCO("descricaoEtiquetaFrasco"), 
		DESCRICAO_ETIQUETA_SERINGA("descricaoEtiquetaSeringa"), 
		IND_INTERESSE_CCIH("indInteresseCcih"), 
		IND_GELADEIRA("indGeladeira"), 
		IND_FOTOSENSIBILIDADE("indFotosensibilidade"), 
		IND_UNIDADE_TEMPO("indUnidadeTempo"), 
		TEMPO_FOTOSENSIBILIDADE("tempoFotosensibilidade"), 
		TIPO_QUIMIO("tipoQuimio"),
		AFA_FORMA_DOSAGENS("afaFormaDosagens"), 
		AFA_COMPONENTE_NPTS("afaComponenteNpt"), 
		SINONIMOS_MEDICAMENTO("sinonimosMedicamento"), 
		CONCENTRACAO("concentracao"), 
		TPR("tipoApresentacaoMedicamento"),
		TUM("afaTipoUsoMdtos"), 
		SCO_MATERIAL("scoMaterial"), 
		MATERIAL("scoMaterial"),
		MPM_TIPO_FREQ_APRAZAMENTOS("mpmTipoFreqAprazamentos"),
		MPM_UNIDADE_MEDIDA_MEDICAS("mpmUnidadeMedidaMedicas"),
		PRESCRICAO_ENFERMEIRO_OBSTETRA("permitePrescricaoEnfermeiroObstetra"),
		PRESCRICAO_AMBULATORIAL("permitePrescricaoAmbulatorial"),
		MEDICAMENTO_DILUENTE("medicamentoDiluente");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	/**
	 * getAfaTipoUsoMdtos().getIndAntimicrobiano()
	 * 
	 * rcorvalao 01/10/2010
	 * 
	 * @return
	 */
	@Transient
	public Boolean getIndAntiMicrobiano() {
		boolean indAntiMicrobiano = false;
		//		Estava estourando NullpointerException quando o medicamento não possuia Tipo 
		//		(Não é campo obrigatorio na tela)
		//		#20368
		if (this.getAfaTipoUsoMdtos() != null) {
			indAntiMicrobiano = this.getAfaTipoUsoMdtos().getIndAntimicrobiano();
		} 
		return indAntiMicrobiano; 
	}

	/**
	 * rcorvalao 07/10/2010
	 * 
	 * @return
	 */
	@Transient
	public String getDescricaoUnidadeMedidaMedica() {
		String returnValue = null;
		if (this.getMpmUnidadeMedidaMedicas() != null) {
			returnValue = this.getMpmUnidadeMedidaMedicas().getDescricao();
		}
		return returnValue;
	}

	/**
	 * Equivalente ao campo descricaoEdit resultante da entidade de view VMpmMdtosDescr
	 * @author dfriedrich
	 * @return
	 */
	@Transient
	public String getDescricaoEditada(String pattern) {
		StringBuilder returnValue = new StringBuilder("");
		if (this.descricao != null) {
			returnValue.append(this.descricao);
			returnValue.append(' ');
		}
		if (this.concentracao != null) {
			Locale localeBR = new Locale("pt", "BR");// Brasil
			DecimalFormatSymbols dfSymbols = new DecimalFormatSymbols(localeBR);
			dfSymbols.setDecimalSeparator(',');
			DecimalFormat format = new DecimalFormat(pattern, dfSymbols);
			returnValue.append(format.format(concentracao));
			returnValue.append(' ');
		}
		if (this.mpmUnidadeMedidaMedicas != null) {
			returnValue.append(this.mpmUnidadeMedidaMedicas.getDescricao());
		}
		return returnValue.toString();
	}

	@Transient
	public String getDescricaoEditada() {
		return getDescricaoEditada("#,###,###,###,##0.#####");
	}
	
	@Transient
	public String getDescricaoEditadaTrunc(Long size) {
		String descricao = getDescricaoEditada();
		
		if(size != null && descricao != null && descricao.length() > size) {
			return descricao.substring(0,size.intValue()-2) + "...";
		} else {
			return descricao;
		}
	}
	
	@Transient
	public String getCodigoDescricaoTrunc(Long size) {
		String codigoDescricao = getCodigoDescricao();
		
		if(size != null && codigoDescricao != null && codigoDescricao.length() > size) {
			return codigoDescricao.substring(0,size.intValue()-2) + "...";
		} else {
			return codigoDescricao;
		}
	}

	@Transient
	public String getDescricaoEditada4Casas() {
		return getDescricaoEditada("#,###,###,###,##0.####");
	}
	
	@Transient
	public String getCodigoDescricao() {
		StringBuilder retorno = new StringBuilder("");
		if (this.matCodigo != null) {
			retorno.append(this.matCodigo);
			retorno.append(" - ");
		}
		
		String descricao = getDescricaoEditada();
		
		retorno.append(descricao);
		
		return retorno.toString();
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "medicamento")
	public Set<AfaItemGrupoMedicamento> getAfaItemGrupoMedicamentos() {
		return afaItemGrupoMedicamentos;
	}

	public void setAfaItemGrupoMedicamentos(
			Set<AfaItemGrupoMedicamento> afaItemGrupoMedicamentos) {
		this.afaItemGrupoMedicamentos = afaItemGrupoMedicamentos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "medicamento")
	public Set<AfaViaAdministracaoMedicamento> getViasAdministracaoMedicamento() {
		return viasAdministracaoMedicamento;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setViasAdministracaoMedicamento(
			Set<AfaViaAdministracaoMedicamento> viasAdministracaoMedicamento) {
		this.viasAdministracaoMedicamento = viasAdministracaoMedicamento;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cuidado")
	public Set<EpeCuidadoMedicamento> getCuidadosMedicamentos() {
		return this.cuidadosMedicamentos;
	}

	public void setCuidadosMedicamentos(Set<EpeCuidadoMedicamento> cuidadosMedicamentos) {
		this.cuidadosMedicamentos = cuidadosMedicamentos;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "diluente")
	public Set<AfaVinculoDiluentes> getMedicamentoDiluente() {
		return medicamentoDiluente;
	}

	public void setMedicamentoDiluente(Set<AfaVinculoDiluentes> medicamentoDiluente) {
		this.medicamentoDiluente = medicamentoDiluente;
	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getMatCodigo() == null) ? 0 : getMatCodigo().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AfaMedicamento)) {
			return false;
		}
		AfaMedicamento other = (AfaMedicamento) obj;
		if (getMatCodigo() == null) {
			if (other.getMatCodigo() != null) {
				return false;
			}
		} else if (!getMatCodigo().equals(other.getMatCodigo())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

	@Column(name = "ind_permite_pma", nullable = false)
	@Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getPermitePrescricaoAmbulatorial() {
		return permitePrescricaoAmbulatorial;
	}

	public void setPermitePrescricaoAmbulatorial(
			Boolean permitePrescricaoAmbulatorial) {
		this.permitePrescricaoAmbulatorial = permitePrescricaoAmbulatorial;
	}
	
	@Column(name = "ind_permite_presc_enf", nullable = false)
	@Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getPermitePrescricaoEnfermeiroObstetra() {
		return permitePrescricaoEnfermeiroObstetra;
	}

	public void setPermitePrescricaoEnfermeiroObstetra(
			Boolean permitePrescricaoEnfermeiroObstetra) {
		this.permitePrescricaoEnfermeiroObstetra = permitePrescricaoEnfermeiroObstetra;
	}
 
 @Transient public Integer getCodigo(){ return this.getMatCodigo();} 
 public void setCodigo(Integer codigo){ this.setMatCodigo(codigo);}

}

package br.gov.mec.aghu.model;

// Generated 26/05/2011 18:21:38 by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Version;

import org.apache.commons.lang3.builder.EqualsBuilder;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * AelSeqCodbarraRedome generated by hbm2java
 */

@Entity
@SequenceGenerator(name="aelScrSq1", sequenceName="AGH.AEL_SCR_SQ1", allocationSize = 1)
@Table(name = "AEL_SEQ_CODBARRA_REDOME", schema = "AGH")
public class AelSeqCodbarraRedome extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -646861871536987765L;
	private Integer seq;
	private Integer version;
	//private Integer amoSoeSeq;
	//private Short amoSeqp;
	private AelAmostras amostra;
	

	public AelSeqCodbarraRedome() {
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "aelScrSq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer s) {
		this.seq = s;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer v) {
		this.version = v;
	}
	
	@ManyToOne
	@JoinColumns( {
		@JoinColumn(name = "AMO_SOE_SEQ",referencedColumnName = "SOE_SEQ", nullable = false),
		@JoinColumn(name = "AMO_SEQP",referencedColumnName = "SEQP", nullable = false) })	
	public AelAmostras getAmostra() {
		return amostra;
	}
	
	public void setAmostra(AelAmostras a) {
		this.amostra = a;
	}
	
	
	@Override
	public boolean equals(Object other) {
		if ((this == other)) {
			return true;
		}
		if ((other == null)) {
			return false;
		}
		if (!(other instanceof AelSeqCodbarraRedome)) {
			return false;
		}
		AelSeqCodbarraRedome castOther = (AelSeqCodbarraRedome) other;

		return new EqualsBuilder().append(this.getSeq(), castOther.getSeq()).isEquals();
	}

	@Override
	public int hashCode() {
		int result = 17;

		result = 37 * result + this.getSeq().hashCode();
		
		return result;
	}

	
	public enum Fields {
		SEQ("seq")
		, AMOSTRA("amostra")
		;
		
		private String fields;
		
		private Fields(String fields) {
			this.fields = fields;
		}
		
		@Override
		public String toString() {
			return fields;
		}
		
	}
	

}

package br.gov.mec.aghu.model;

// Generated 10/03/2011 17:20:24 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MpaPopExames generated by hbm2java
 */

@Entity
@Table(name = "MPA_POP_EXAMES", schema = "AGH")
public class MpaPopExame extends BaseEntityId<MpaPopExameId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1703874323163993440L;
	private MpaPopExameId id;
	private AelExames exame;
	private Date criadoEm;
	private RapServidores servidor;
	
	private MpaPopVersoes popVersao;

	public MpaPopExame() {
	}

	public MpaPopExame(MpaPopExameId id, AelExames exame, Date criadoEm, RapServidores servidor) {
		this.id = id;
		this.exame = exame;
		this.criadoEm = criadoEm;
		this.servidor = servidor;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "povVersao", column = @Column(name = "POV_VERSAO", nullable = false, precision = 4, scale = 0)),
			@AttributeOverride(name = "povPopSeq", column = @Column(name = "POV_POP_SEQ", nullable = false, precision = 5, scale = 0)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false, precision = 4, scale = 0)) })
	public MpaPopExameId getId() {
		return this.id;
	}

	public void setId(MpaPopExameId id) {
		this.id = id;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EXA_SIGLA", referencedColumnName = "SIGLA", nullable = false, insertable = false, updatable = false)
	public AelExames getExame() {
		return exame;
	}
	
	public void setExame(AelExames exame) {
		this.exame = exame;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "POV_VERSAO", referencedColumnName = "VERSAO", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "POV_POP_SEQ", referencedColumnName = "POP_SEQ", nullable = false, insertable = false, updatable = false) })
	public MpaPopVersoes getPopVersao() {
		return this.popVersao;
	}

	public void setPopVersao(MpaPopVersoes mpaPopVersoes) {
		this.popVersao = mpaPopVersoes;
	}
	
	
	public enum Fields {
		ID("id"),
		EXAME("exame"),
		EXAME_SIGLA("exame.sigla"),
		CRIADO_EM("criadoEm"),
		SERVIDOR("servidor"),
		POP_VERSAO("popVersao"),
		POV_VERSAO("id.povVersao"),
		POV_POP_SEQ("id.povPopSeq")
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	
	@Override
	public boolean equals(Object other) {
		if (this == other) {
			return true;
		}
		if (other == null) {
			return false;			
		}
		if (!(other instanceof MpaPopExame)) {
			return false;
		}
		MpaPopExame castOther = (MpaPopExame) other;

		return (this.getId() != null && this.getId().equals(castOther.getId()));
	}

	@Override
	public int hashCode() {
		int result = 17;

		result = 37 * result + (this.getId() != null ? this.getId().hashCode() : 0);
		
		return result;
	}

}

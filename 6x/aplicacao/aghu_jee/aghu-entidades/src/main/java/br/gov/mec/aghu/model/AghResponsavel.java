package br.gov.mec.aghu.model;

// Generated 04/02/2010 19:35:53 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;
import br.gov.mec.aghu.dominio.DominioCpfCgcResponsavel;

/**
 * AghResponsaveis generated by hbm2java
 */

@Entity
@SequenceGenerator(name="aghRespSq1", sequenceName="AGH.AGH_RES_SQ1", allocationSize = 1)
@Table(name = "AGH_RESPONSAVEIS", schema = "AGH")
public class AghResponsavel extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5151058398965161148L;
	private Integer seq;
	private DominioCpfCgcResponsavel dominioCpfCgc;
	private Long cpfCgc;
	private String nroDocExterior;
	private String nome;
	private String nomeMae;
	private Date dtNascimento;
	private AghPaisBcb aghPaisBcb;
	private AipBairrosCepLogradouro aipBairrosCepLogradouro;
	private AipCidades aipCidade;
	private AipLogradouros aipLogradouro;
	private String cidade;
	private String logradouro;
	private String complLogradouro;
	private Integer nroLogradouro;
	private Integer cep;
	private String bairro;
	private AipUfs aipUf;
	private String ufSiglaExterior;
	private String rg;
	private AipOrgaosEmissores aipOrgaosEmissor;
	private Long pisPasep;
	private Short dddFone;
	private Long fone;
	private String email;
	private Date criadoEm;
	private RapServidores servidor;	
	private AipPacientes aipPaciente;
	private Long codigoClienteNfe;
	private String regNascimento;

	


	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "aghRespSq1")
	@Column(name = "SEQ", updatable = false, nullable = false, precision = 8, scale = 0)	
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Column(name = "INDICADOR_CPF_CGC", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioCpfCgcResponsavel getDominioCpfCgc() {
		return dominioCpfCgc;
	}

	public void setDominioCpfCgc(DominioCpfCgcResponsavel dominioCpfCgc) {
		this.dominioCpfCgc = dominioCpfCgc;
	}
	
	
	@Column(name = "CPF_CGC",  precision = 14, scale = 0)
	public Long getCpfCgc() {
		return this.cpfCgc;
	}

	public void setCpfCgc(Long cpfCgc) {
		this.cpfCgc = cpfCgc;
	}	
	
	@Column(name = "NRO_DOC_EXTERIOR", length = 20)
	public String getNroDocExterior() {
		return nroDocExterior;
	}

	public void setNroDocExterior(String nroDocExterior) {
		this.nroDocExterior = nroDocExterior;
	}

	@Column(name = "NOME", length = 100)
	public String getNome() {
		return nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Column(name = "NOME_MAE", length = 50)
	public String getNomeMae() {
		return nomeMae;
	}

	public void setNomeMae(String nomeMae) {
		this.nomeMae = nomeMae;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_NASCIMENTO")
	public Date getDtNascimento() {
		return dtNascimento;
	}

	public void setDtNascimento(Date dtNascimento) {
		this.dtNascimento = dtNascimento;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAI_SEQ")
	public AghPaisBcb getAghPaisBcb() {
		return aghPaisBcb;
	}

	public void setAghPaisBcb(AghPaisBcb aghPaisBcb) {
		this.aghPaisBcb = aghPaisBcb;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumns( {
			@JoinColumn(name = "BCL_CLO_LGR_CODIGO", referencedColumnName = "CLO_LGR_CODIGO"),
			@JoinColumn(name = "BCL_CLO_CEP", referencedColumnName = "CLO_CEP"),
			@JoinColumn(name = "BCL_BAI_CODIGO", referencedColumnName = "BAI_CODIGO") })
	public AipBairrosCepLogradouro getAipBairrosCepLogradouro() {
		return this.aipBairrosCepLogradouro;
	}

	public void setAipBairrosCepLogradouro(
			AipBairrosCepLogradouro aipBairrosCepLogradouro) {
		this.aipBairrosCepLogradouro = aipBairrosCepLogradouro;
	}
	
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "CDD_CODIGO")
	public AipCidades getAipCidade() {
		return this.aipCidade;
	}

	public void setAipCidade(AipCidades aipCidade) {
		this.aipCidade = aipCidade;
	}
	
	@Column(name = "CIDADE", length = 60)
	public String getCidade() {
		return cidade;
	}

	public void setCidade(String cidade) {
		this.cidade = cidade;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "BCL_CLO_LGR_CODIGO", referencedColumnName = "CODIGO", insertable = false, updatable = false)
	public AipLogradouros getAipLogradouro() {
		return aipLogradouro;
	}

	public void setAipLogradouro(AipLogradouros aipLogradouro) {
		this.aipLogradouro = aipLogradouro;
	}

	@Column(name = "LOGRADOURO", length = 100)
	public String getLogradouro() {
		return this.logradouro;
	}

	public void setLogradouro(String logradouro) {
		if (!"".equalsIgnoreCase(logradouro)) {
			this.logradouro = (logradouro == null ? null : logradouro
					.toUpperCase());
		} else {
			this.logradouro = null;
		}
	}
	
	@Column(name = "COMPL_LOGRADOURO", length = 20)
	public String getComplLogradouro() {
		return this.complLogradouro;
	}

	public void setComplLogradouro(String complLogradouro) {
		if (!"".equalsIgnoreCase(complLogradouro)) {
			if (complLogradouro != null) {
				this.complLogradouro = complLogradouro.toUpperCase();
			} else {
				this.complLogradouro = null;
			}
		} else {
			this.complLogradouro = null;
		}
	}

	@Column(name = "NRO_LOGRADOURO", precision = 5, scale = 0)
	public Integer getNroLogradouro() {
		return this.nroLogradouro;
	}

	public void setNroLogradouro(Integer nroLogradouro) {
		this.nroLogradouro = nroLogradouro;
	}
	
	@Column(name = "CEP", precision = 8, scale = 0)
	public Integer getCep() {
		return this.cep;
	}

	public void setCep(Integer cep) {
		this.cep = cep;
	}
	
	@Column(name = "BAIRRO", length = 60)
	public String getBairro() {
		return this.bairro;
	}

	public void setBairro(String bairro) {
		if (!"".equalsIgnoreCase(bairro)) {
			this.bairro = (bairro == null ? null : bairro.toUpperCase());
		} else {
			this.bairro = null;
		}
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UF_SIGLA")
	public AipUfs getAipUf() {
		return this.aipUf;
	}

	public void setAipUf(AipUfs aipUfs) {
		this.aipUf = aipUfs;
	}
	
	@Column(name = "UF_SIGLA_EXTERIOR", length = 2)
	public String getUfSiglaExterior() {
		return this.ufSiglaExterior;
	}

	public void setUfSiglaExterior(String ufSiglaExterior) {
		this.ufSiglaExterior = ufSiglaExterior;
	}
	

	@Column(name = "RG", length = 20)
	public String getRg() {
		return rg;
	}

	
	public void setRg(String rg) {
		this.rg = rg;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "OED_CODIGO")
	public AipOrgaosEmissores getAipOrgaosEmissor() {
		return this.aipOrgaosEmissor;
	}

	public void setAipOrgaosEmissor(AipOrgaosEmissores aipOrgaosEmissor) {
		this.aipOrgaosEmissor = aipOrgaosEmissor;
	}

	@Column(name = "PIS_PASEP", precision = 12, scale = 0)
	public Long getPisPasep() {
		return pisPasep;
	}

	public void setPisPasep(Long pisPasep) {
		this.pisPasep = pisPasep;
	}

	@Column(name = "DDD_FONE", precision = 4, scale = 0)
	public Short getDddFone() {
		return dddFone;
	}

	public void setDddFone(Short dddFone) {
		this.dddFone = dddFone;
	}

	@Column(name = "FONE", precision = 10, scale = 0)	
	public Long getFone() {
		return fone;
	}

	public void setFone(Long fone) {
		this.fone = fone;
	}

	@Column(name = "EMAIL", length=100)
	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidor() {
		return servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO")
	public AipPacientes getAipPaciente() {
		return this.aipPaciente;
	}

	public void setAipPaciente(AipPacientes aipPaciente) {
		this.aipPaciente = aipPaciente;
	}	

	@Column(name = "COD_CLIENTE_NFE", precision = 10, scale = 0)
	public Long getCodigoClienteNfe() {
		return codigoClienteNfe;
	}

	public void setCodigoClienteNfe(Long codigoClienteNfe) {
		this.codigoClienteNfe = codigoClienteNfe;
	}
	
	@Column(name = "REG_NASCIMENTO")
	public String getRegNascimento() {
		return this.regNascimento;
	}

	public void setRegNascimento(String regNascimento) {
		this.regNascimento = regNascimento;
	}
	
	public enum Fields {
	
		SEQ("seq"),
		DOMINIO_CPF_CGC("dominioCpfCgc"),
		CPF_CGC("cpfCgc"),
		NRO_DOC_EXTERIOR("nroDocExterior"),
		NOME("nome"),
		NOME_MAE("nomeMae"),
		DATA_NASCIMENTO("dtNascimento"),
		PAIS_BCB("aghPaisBcb"),
		AIP_BAIRROS_CEP_LOGRADOURO("aipBairrosCepLogradouro"),
		AIP_CIDADE("aipCidade"),
		AIP_LOGRADOURO("aipLogradouro"),
		AIP_UF("aipUf"),
		AIP_ORGAO_EMISSOR("aipOrgaosEmissor"),
		LOGRADOURO("logradouro"),
		COMPL_LOGRADOURO("complLogradouro"),
		NRO_LOGRADOURO("nroLogradouro"),
		CEP("cep"),
		BAIRRO("bairro"),
		UF("ufSigla"),
		RG("rg"),
		ORGAO_EMIS_RG("aipOrgaosEmissor"),
		PIS_PASEP("pisPasep"),
		DD_FONE("dddFone"),
		FONE("fone"),
		EMAIL("email"),
		CRIADO_EM("criadoEm"),
		SERVIDOR("servidor"),
		PACIENTE("aipPaciente"),
		CODIGO_CLIENTE_NFE("CodigoClienteNfe"),
		REG_NASCIMENTO("regNascimento");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}


	@Override
	public int hashCode() {
		final int prime = 31;
		int result = super.hashCode();
		result = prime * result + ((seq == null) ? 0 : seq.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj){
			return true;
		}
		if (!super.equals(obj)){
			return false;
		}
		if (!(obj instanceof AghResponsavel)){
			return false;
		}
		AghResponsavel other = (AghResponsavel) obj;
		if (seq == null) {
			if (other.seq != null){
				return false;
			}
		} else if (!seq.equals(other.seq)){
			return false;
		}
		return true;
	}	

	

}

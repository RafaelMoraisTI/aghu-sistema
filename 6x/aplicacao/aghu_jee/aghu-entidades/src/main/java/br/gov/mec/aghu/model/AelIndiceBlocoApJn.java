package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import org.hibernate.annotations.Immutable;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.model.BaseJournal;

/**
 * AelIndiceBlocoApJn generated by hbm2java
 */
@Entity
@SequenceGenerator(name="aelLo8JnSeq", sequenceName="AGH.AEL_LO8_JN_SEQ", allocationSize = 1)
@Table(name = "AEL_INDICE_BLOCOS_APS_JN", schema = "AGH")
@Immutable
public class AelIndiceBlocoApJn extends BaseJournal {

/**
	 * 
	 */
	private static final long serialVersionUID = -5151758012456026509L;

	private Long seq;
	private String indiceDeBloco;
	private Date criadoEm;
	private AelExameAp aelExameAp;
	private RapServidores rapServidores;

	public AelIndiceBlocoApJn() {
	}

	

	@Id
	@Column(name = "SEQ_JN", unique = true, nullable = false)
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "aelLo8JnSeq")
	@Override
	public Integer getSeqJn() {
		return super.getSeqJn();
	}

	@Column(name = "SEQ", nullable = false)
	public Long getSeq() {
		return this.seq;
	}

	public void setSeq(Long seq) {
		this.seq = seq;
	}

	@Column(name = "INDICE_DE_BLOCO", length = 2000)
	@Length(max = 2000)
	public String getIndiceDeBloco() {
		return this.indiceDeBloco;
	}

	public void setIndiceDeBloco(String indiceDeBloco) {
		this.indiceDeBloco = indiceDeBloco;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LUX_SEQ")
	public AelExameAp getAelExameAp() {
		return this.aelExameAp;
	}

	public void setAelExameAp(AelExameAp aelExameAp) {
		this.aelExameAp = aelExameAp;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	public enum Fields {

		SEQ("seq"),
		INDICE_DE_BLOCO("indiceDeBloco"),
		CRIADO_EM("criadoEm"),
		LUX_SEQ("aelExameAp.seq"),
		SER_MATRICULA("rapServidores.id.matricula"),
		SER_VIN_CODIGO("rapServidores.id.vinCodigo")
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}

}

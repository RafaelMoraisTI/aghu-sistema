package br.gov.mec.aghu.model;

// Generated 11/01/2010 12:19:57 by Hibernate Tools 3.2.5.Beta

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityCodigo;

/**
 * AipDistritoSanitarios generated by hbm2java
 */
@Entity
@Table(name = "AIP_DISTRITO_SANITARIOS", schema = "AGH")
@SequenceGenerator(name="aipDistritoSanitariosSq1", sequenceName="AGH.AIP_DST_SQ1", allocationSize = 1)

public class AipDistritoSanitarios extends BaseEntityCodigo<Short> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 6220205160785880181L;
	private Short codigo;
	private String descricao;
	private Integer codGpb;
	private Integer version;
	private Set<AipCidades> cidades = new HashSet<AipCidades>(0);

	public AipDistritoSanitarios() {
	}

	public AipDistritoSanitarios(Short codigo, String descricao) {
		this.codigo = codigo;
		this.descricao = descricao;
	}

	public AipDistritoSanitarios(Short codigo, String descricao,
			Integer codGpb, Set<AipCidades> cidades) {
		this.codigo = codigo;
		this.descricao = descricao;
		this.codGpb = codGpb;
		this.cidades = cidades;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "aipDistritoSanitariosSq1")
	@Column(name = "CODIGO", nullable = false, precision = 3, scale = 0)
	public Short getCodigo() {
		return this.codigo;
	}

	public void setCodigo(Short codigo) {
		this.codigo = codigo;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 60)
	@Length(max = 60)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "COD_GPB", precision = 6, scale = 0)
	public Integer getCodGpb() {
		return this.codGpb;
	}

	public void setCodGpb(Integer codGpb) {
		this.codGpb = codGpb;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "AIP_CIDADES_DISTRITO_SANITARIO", schema = "AGH", joinColumns = { @JoinColumn(name = "DST_CODIGO", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "CDD_CODIGO", nullable = false, updatable = false) })
	public Set<AipCidades> getCidades() {
		return this.cidades;
	}

	public void setCidades(Set<AipCidades> cidades) {
		this.cidades = cidades;
	}
	
	public enum Fields {
		CODIGO("codigo"), 
		DESCRICAO("descricao"),
		CIDADES("cidades");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((codigo == null) ? 0 : codigo.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		AipDistritoSanitarios other = (AipDistritoSanitarios) obj;
		if (codigo == null) {
			if (other.codigo != null) {
				return false;
			}
		} else if (!codigo.equals(other.codigo)) {
			return false;
		}
		return true;
	}	
}

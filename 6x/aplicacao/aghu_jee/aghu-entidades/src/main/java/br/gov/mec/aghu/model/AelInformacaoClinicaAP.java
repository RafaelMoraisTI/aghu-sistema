package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.annotations.Type;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * AelCestoPatologia generated by hbm2java
 */
@Entity
@SequenceGenerator(name="aelInfSq1", sequenceName="AGH.AEL_INF_SQ1", allocationSize = 1)
@Table(name = "AEL_INFORMACAO_CLINICA_APS", schema = "AGH")
public class AelInformacaoClinicaAP extends BaseEntitySeq<Integer> implements java.io.Serializable {

	private static final long serialVersionUID = -530425004611899008L;
	private Integer seq;
	private String informacaoClinica;
	private Date criadoEm;
	private Integer version;
	private AelExameAp aelExameAp;
	private RapServidores rapServidores;
	

	public AelInformacaoClinicaAP() {
	}

	public AelInformacaoClinicaAP(Integer seq, String informacaoClinica,
			Date criadoEm, AelExameAp aelExameAp, RapServidores rapServidores) {
		super();
		this.seq = seq;
		this.informacaoClinica = informacaoClinica;
		this.criadoEm = criadoEm;
		this.aelExameAp = aelExameAp;
		this.rapServidores = rapServidores;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "aelInfSq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}
	
	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LUX_SEQ", nullable = false)
	public AelExameAp getAelExameAp() {
		return this.aelExameAp;
	}

	public void setAelExameAp(AelExameAp aelExameAp) {
		this.aelExameAp = aelExameAp;
	}

	@Column(name = "INFORMACAO_CLINICA", nullable = false)	
	@Type(type="text")	
	@Lob
	public String getInformacaoClinica() {
		return informacaoClinica;
	}


	public void setInformacaoClinica(String informacaoClinica) {
		this.informacaoClinica = informacaoClinica;
	}

	
	public enum Fields {
		SEQ("seq"),
		VERSION("version"),
		RAP_SERVIDORES("rapServidores"),
		INFORMACAO_CLINICA("informacaoClinica"),
		CRIADO_EM("criadoEm"),
		AEL_EXAME_AP("aelExameAp");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}
	

	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AelInformacaoClinicaAP)) {
			return false;
		}
		AelInformacaoClinicaAP other = (AelInformacaoClinicaAP) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}
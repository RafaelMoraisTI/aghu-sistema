package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AelExameResuNotificacao generated by hbm2java
 */
@Entity
@Table(name = "AEL_EXAMES_RESU_NOTIFICACAO", schema = "AGH")
public class AelExameResuNotificacao extends BaseEntityId<AelExameResuNotificacaoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5978991695741193693L;
	private AelExameResuNotificacaoId id;
	private Integer version;
	private AelResultadoCodificado aelResultadoCodificado;
	private AelExamesNotificacao aelExamesNotificacao;
	private RapServidores rapServidores;
	private Long resultadoNumExp;
	private String resultadoAlfanum;
	private Date criadoEm;
	private DominioSituacao situacao;

	public AelExameResuNotificacao() {
	}

	public AelExameResuNotificacao(AelExameResuNotificacaoId id, AelExamesNotificacao aelExamesNotificacao,
			RapServidores rapServidores, Date criadoEm, DominioSituacao situacao) {
		this.id = id;
		this.aelExamesNotificacao = aelExamesNotificacao;
		this.rapServidores = rapServidores;
		this.criadoEm = criadoEm;
		this.situacao = situacao;
	}

	public AelExameResuNotificacao(AelExameResuNotificacaoId id, AelResultadoCodificado aelResultadoCodificado,
			AelExamesNotificacao aelExamesNotificacao, RapServidores rapServidores, Long resultadoNumExp, String resultadoAlfanum,
			Date criadoEm, DominioSituacao situacao) {
		this.id = id;
		this.aelResultadoCodificado = aelResultadoCodificado;
		this.aelExamesNotificacao = aelExamesNotificacao;
		this.rapServidores = rapServidores;
		this.resultadoNumExp = resultadoNumExp;
		this.resultadoAlfanum = resultadoAlfanum;
		this.criadoEm = criadoEm;
		this.situacao = situacao;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "exnEmaExaSigla", column = @Column(name = "EXN_EMA_EXA_SIGLA", nullable = false, length = 5)),
			@AttributeOverride(name = "exnEmaManSeq", column = @Column(name = "EXN_EMA_MAN_SEQ", nullable = false)),
			@AttributeOverride(name = "exnCalSeq", column = @Column(name = "EXN_CAL_SEQ", nullable = false)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false)) })
	public AelExameResuNotificacaoId getId() {
		return this.id;
	}

	public void setId(AelExameResuNotificacaoId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "RCD_GTC_SEQ", referencedColumnName = "GTC_SEQ"),
			@JoinColumn(name = "RCD_SEQP", referencedColumnName = "SEQP") })
	public AelResultadoCodificado getAelResultadoCodificado() {
		return this.aelResultadoCodificado;
	}

	public void setAelResultadoCodificado(AelResultadoCodificado aelResultadoCodificado) {
		this.aelResultadoCodificado = aelResultadoCodificado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "EXN_EMA_EXA_SIGLA", referencedColumnName = "EMA_EXA_SIGLA", insertable = false, updatable = false),
			@JoinColumn(name = "EXN_EMA_MAN_SEQ", referencedColumnName = "EMA_MAN_SEQ",  insertable = false, updatable = false),
			@JoinColumn(name = "EXN_CAL_SEQ", referencedColumnName = "CAL_SEQ",  insertable = false, updatable = false) })
	public AelExamesNotificacao getAelExamesNotificacao() {
		return this.aelExamesNotificacao;
	}

	public void setAelExamesNotificacao(AelExamesNotificacao aelExamesNotificacao) {
		this.aelExamesNotificacao = aelExamesNotificacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@Column(name = "RESULTADO_NUM_EXP")
	public Long getResultadoNumExp() {
		return this.resultadoNumExp;
	}

	public void setResultadoNumExp(Long resultadoNumExp) {
		this.resultadoNumExp = resultadoNumExp;
	}

	@Column(name = "RESULTADO_ALFANUM", length = 2000)
	@Length(max = 2000)
	public String getResultadoAlfanum() {
		return this.resultadoAlfanum;
	}

	public void setResultadoAlfanum(String resultadoAlfanum) {
		this.resultadoAlfanum = resultadoAlfanum;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "IND_SITUACAO", nullable = false)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getSituacao() {
		return this.situacao;
	}

	public void setSituacao(DominioSituacao situacao) {
		this.situacao = situacao;
	}


	public enum Fields {

		ID("id"),
		VERSION("version"),
		EXN_EMA_EXA_SIGLA("id.exnEmaExaSigla"),
		EXN_EMA_MAN_SEQ("id.exnEmaManSeq"),
		EXN_CAL_SEQ("id.exnCalSeq"),
		SEQP("id.seqp"),
		AEL_RESULTADO_CODIFICADO("aelResultadoCodificado"),
		AEL_EXAMES_NOTIFICACAO("aelExamesNotificacao"),
		RAP_SERVIDORES("rapServidores"),
		RESULTADO_NUM_EXP("resultadoNumExp"),
		RESULTADO_ALFANUM("resultadoAlfanum"),
		CRIADO_EM("criadoEm"),
		IND_SITUACAO("situacao"),
		RCD_GTC_SEQ("aelResultadoCodificado.id.gtcSeq"),
		RCD_SEQP("aelResultadoCodificado.id.seqp"),
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AelExameResuNotificacao)) {
			return false;
		}
		AelExameResuNotificacao other = (AelExameResuNotificacao) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

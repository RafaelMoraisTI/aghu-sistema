package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;


import br.gov.mec.aghu.dominio.DominioSituacaoDescricaoCirurgia;
import br.gov.mec.aghu.core.persistence.BaseEntityId;
import br.gov.mec.aghu.core.utils.StringUtil;

/**
 * MbcDescricaoCirurgica generated by hbm2java
 */
@Entity
@Table(name = "MBC_DESCRICAO_CIRURGICAS", schema = "AGH")
public class MbcDescricaoCirurgica extends BaseEntityId<MbcDescricaoCirurgicaId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8033972577280368802L;
	private MbcDescricaoCirurgicaId id;
	private Integer version;
	private MbcCirurgias mbcCirurgias;
	private RapServidores servidor;
	private Date dthrConclusao;
	private DominioSituacaoDescricaoCirurgia situacao;
	private Date criadoEm;
	
	private Set<MbcNotaAdicionais> mbcNotaAdicionaises = new HashSet<MbcNotaAdicionais>(0);
	private Set<MbcProcDescricoes> mbcProcDescricoeses = new HashSet<MbcProcDescricoes>(0);
	private Set<MbcProfDescricoes> mbcProfDescricoeses = new HashSet<MbcProfDescricoes>(0);
	private Set<MbcDescricaoItens> mbcDescricaoItenses = new HashSet<MbcDescricaoItens>(0);
	private Set<MbcAnestesiaDescricoes> mbcAnestesiaDescricoeses = new HashSet<MbcAnestesiaDescricoes>(0);
	private MbcDescricaoTecnicas mbcDescricaoTecnicas;
	private Set<MbcFiguraDescricoes> mbcFiguraDescricoeses = new HashSet<MbcFiguraDescricoes>(0);

	private AghEspecialidades especialidade;
	
	private String nomeResponsavel;
	private String descricaoProcCirurgico;

	public MbcDescricaoCirurgica() {
	}

	public MbcDescricaoCirurgica(MbcDescricaoCirurgicaId id, AghEspecialidades especialidade, MbcCirurgias mbcCirurgias,
			RapServidores servidor, DominioSituacaoDescricaoCirurgia situacao, Date criadoEm) {
		this.id = id;
		this.especialidade = especialidade;
		this.mbcCirurgias = mbcCirurgias;
		this.servidor = servidor;
		this.situacao = situacao;
		this.criadoEm = criadoEm;
	}

	public MbcDescricaoCirurgica(MbcDescricaoCirurgicaId id, AghEspecialidades especialidade, MbcCirurgias mbcCirurgias,
			RapServidores servidor, Date dthrConclusao, DominioSituacaoDescricaoCirurgia situacao, Date criadoEm,
			Set<MbcNotaAdicionais> mbcNotaAdicionaises, Set<MbcProcDescricoes> mbcProcDescricoeses,
			Set<MbcDescricaoItens> mbcDescricaoItenses, 
			Set<MbcAnestesiaDescricoes> mbcAnestesiaDescricoeses, 
			MbcDescricaoTecnicas mbcDescricaoTecnicas, Set<MbcFiguraDescricoes> mbcFiguraDescricoeses) {
		this.id = id;
		this.mbcCirurgias = mbcCirurgias;
		this.servidor = servidor;
		this.dthrConclusao = dthrConclusao;
		this.situacao = situacao;
		this.criadoEm = criadoEm;
		this.mbcNotaAdicionaises = mbcNotaAdicionaises;
		this.mbcProcDescricoeses = mbcProcDescricoeses;
		this.mbcDescricaoItenses = mbcDescricaoItenses;
		this.mbcAnestesiaDescricoeses = mbcAnestesiaDescricoeses;
		this.mbcDescricaoTecnicas = mbcDescricaoTecnicas;
		this.mbcFiguraDescricoeses = mbcFiguraDescricoeses;
		this.setEspecialidade(especialidade);
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "crgSeq", column = @Column(name = "CRG_SEQ", nullable = false)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false)) })
	public MbcDescricaoCirurgicaId getId() {
		return this.id;
	}

	public void setId(MbcDescricaoCirurgicaId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CRG_SEQ", nullable = false, insertable = false, updatable = false)
	public MbcCirurgias getMbcCirurgias() {
		return this.mbcCirurgias;
	}

	public void setMbcCirurgias(MbcCirurgias mbcCirurgias) {
		this.mbcCirurgias = mbcCirurgias;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_CONCLUSAO", length = 29)
	public Date getDthrConclusao() {
		return this.dthrConclusao;
	}

	public void setDthrConclusao(Date dthrConclusao) {
		this.dthrConclusao = dthrConclusao;
	}

	@Column(name = "SITUACAO", nullable = false, length = 3)
	@Enumerated(EnumType.STRING)
	public DominioSituacaoDescricaoCirurgia getSituacao() {
		return this.situacao;
	}

	public void setSituacao(DominioSituacaoDescricaoCirurgia situacao) {
		this.situacao = situacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mbcDescricaoCirurgica")
	public Set<MbcNotaAdicionais> getMbcNotaAdicionaises() {
		return this.mbcNotaAdicionaises;
	}

	public void setMbcNotaAdicionaises(Set<MbcNotaAdicionais> mbcNotaAdicionaises) {
		this.mbcNotaAdicionaises = mbcNotaAdicionaises;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mbcDescricaoCirurgica")
	public Set<MbcProcDescricoes> getMbcProcDescricoeses() {
		return this.mbcProcDescricoeses;
	}

	public void setMbcProcDescricoeses(Set<MbcProcDescricoes> mbcProcDescricoeses) {
		this.mbcProcDescricoeses = mbcProcDescricoeses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mbcDescricaoCirurgica")
	public Set<MbcDescricaoItens> getMbcDescricaoItenses() {
		return this.mbcDescricaoItenses;
	}

	public void setMbcDescricaoItenses(Set<MbcDescricaoItens> mbcDescricaoItenses) {
		this.mbcDescricaoItenses = mbcDescricaoItenses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mbcDescricaoCirurgica")
	public Set<MbcAnestesiaDescricoes> getMbcAnestesiaDescricoeses() {
		return this.mbcAnestesiaDescricoeses;
	}

	public void setMbcAnestesiaDescricoeses(Set<MbcAnestesiaDescricoes> mbcAnestesiaDescricoeses) {
		this.mbcAnestesiaDescricoeses = mbcAnestesiaDescricoeses;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "mbcDescricaoCirurgica")
	public MbcDescricaoTecnicas getMbcDescricaoTecnicas() {
		return this.mbcDescricaoTecnicas;
	}

	public void setMbcDescricaoTecnicas(MbcDescricaoTecnicas mbcDescricaoTecnicas) {
		this.mbcDescricaoTecnicas = mbcDescricaoTecnicas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mbcDescricaoCirurgica")
	public Set<MbcFiguraDescricoes> getMbcFiguraDescricoeses() {
		return this.mbcFiguraDescricoeses;
	}

	public void setMbcFiguraDescricoeses(Set<MbcFiguraDescricoes> mbcFiguraDescricoeses) {
		this.mbcFiguraDescricoeses = mbcFiguraDescricoeses;
	}

	public void setEspecialidade(AghEspecialidades especialidade) {
		this.especialidade = especialidade;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ESP_SEQ", nullable = false)
	public AghEspecialidades getEspecialidade() {
		return especialidade;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mbcDescricaoCirurgica")
	public Set<MbcProfDescricoes> getMbcProfDescricoeses() {
		return mbcProfDescricoeses;
	}

	public void setMbcProfDescricoeses(Set<MbcProfDescricoes> mbcProfDescricoeses) {
		this.mbcProfDescricoeses = mbcProfDescricoeses;
	}


	public enum Fields {

		ID("id"),
		SEQP("id.seqp"),
		CRG_SEQ("id.crgSeq"),
		VERSION("version"),
		MBC_CIRURGIAS("mbcCirurgias"),
		SERVIDOR("servidor"),
		SERVIDOR_MATRICULA("servidor.id.matricula"),
		SERVIDOR_VIN_CODIGO("servidor.id.vinCodigo"),
		DTHR_CONCLUSAO("dthrConclusao"),
		SITUACAO("situacao"),
		CRIADO_EM("criadoEm"),
		MBC_NOTA_ADICIONAISES("mbcNotaAdicionaises"),
		MBC_PROC_DESCRICOES("mbcProcDescricoeses"),
		MBC_PROF_DESCRICOES("mbcProfDescricoeses"),
		MBC_DESCRICAO_ITENSES("mbcDescricaoItenses"),
		MBC_ANESTESIA_DESCRICOESES("mbcAnestesiaDescricoeses"),
		MBC_DESCRICAO_TECNICAS("mbcDescricaoTecnicas"),
		MBC_FIGURA_DESCRICOESES("mbcFiguraDescricoeses"),
		ESP_SEQ("especialidade");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MbcDescricaoCirurgica)) {
			return false;
		}
		MbcDescricaoCirurgica other = (MbcDescricaoCirurgica) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

	
	public void setNomeResponsavel(String nomeResponsavel) {
		this.nomeResponsavel = nomeResponsavel;
	}

	@Transient
	public String getNomeResponsavel() {
		return nomeResponsavel;
	}

	@Transient
	public String getDescricaoProcCirurgico() {
		return descricaoProcCirurgico;
	}

	public void setDescricaoProcCirurgico(String descricaoProcCirurgico) {
		this.descricaoProcCirurgico = descricaoProcCirurgico;
	}
	
	@Transient
	public String getDescricaoProcCirurgicoTrunc(Long size) {
		return StringUtil.trunc(getDescricaoProcCirurgico(), true, size);
	}
	
	@Transient
	public String getNomeResponsavelTrunc(Long size) {
		return StringUtil.trunc(getNomeResponsavel(), true, size);
	}

}

package br.gov.mec.aghu.model;

// Generated 14/09/2010 17:49:55 by Hibernate Tools 3.2.5.Beta

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.exception.BusinessExceptionCode;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MpmRecomendAltaPaciente generated by hbm2java
 */
@Entity
@Table(name = "MPM_RECOMEND_ALTA_PACIENTES", schema = "AGH")
public class MpmRecomendAltaPaciente extends BaseEntityId<MpmRecomendAltaPacienteId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -2438074492758176965L;

	private enum RecomendacaoAltaPacienteExceptionCode implements BusinessExceptionCode {
		RECOMENDACAO_ALTA_PACIENTE_INFORMAR_TIPO_RECOMENDACAO_ALTA_OU_DESCRICAO
	}

	private MpmRecomendAltaPacienteId id;
	private MpmSumarioAlta sumarioAlta;
	private MpmTipoRecomendacaoAlta tipoRecomendacaoAlta;
	private RapServidores servidor;
	private String descricao;

	public MpmRecomendAltaPaciente() {
	}

	public MpmRecomendAltaPaciente(MpmRecomendAltaPacienteId id,
			MpmSumarioAlta sumarioAlta, RapServidores servidor) {
		this.id = id;
		this.sumarioAlta = sumarioAlta;
		this.servidor = servidor;
	}

	public MpmRecomendAltaPaciente(MpmRecomendAltaPacienteId id,
			MpmSumarioAlta sumarioAlta,
			MpmTipoRecomendacaoAlta tipoRecomendacaoAlta,
			RapServidores servidor, String descricao) {
		this.id = id;
		this.sumarioAlta = sumarioAlta;
		this.tipoRecomendacaoAlta = tipoRecomendacaoAlta;
		this.servidor = servidor;
		this.descricao = descricao;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "salAtdSeq", column = @Column(name = "SAL_ATD_SEQ", nullable = false, precision = 7, scale = 0)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false, precision = 3, scale = 0)) })
	public MpmRecomendAltaPacienteId getId() {
		return this.id;
	}

	public void setId(MpmRecomendAltaPacienteId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SAL_ATD_SEQ", nullable = false, insertable = false, updatable = false)
	public MpmSumarioAlta getSumarioAlta() {
		return this.sumarioAlta;
	}

	public void setSumarioAlta(MpmSumarioAlta sumarioAlta) {
		this.sumarioAlta = sumarioAlta;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TRA_SEQ")
	public MpmTipoRecomendacaoAlta getTipoRecomendacaoAlta() {
		return this.tipoRecomendacaoAlta;
	}

	public void setTipoRecomendacaoAlta(
			MpmTipoRecomendacaoAlta tipoRecomendacaoAlta) {
		this.tipoRecomendacaoAlta = tipoRecomendacaoAlta;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@Column(name = "DESCRICAO", length = 500)
	@Length(max = 500)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		MpmRecomendAltaPaciente other = (MpmRecomendAltaPaciente) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}
	       
	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void validacoes() {
		// CONSTRAINT MPM_RAP_CK1
		if (!((this.descricao != null && this.tipoRecomendacaoAlta == null)
				|| (this.descricao == null && this.tipoRecomendacaoAlta != null))) {
			throw new BaseRuntimeException(
					RecomendacaoAltaPacienteExceptionCode.RECOMENDACAO_ALTA_PACIENTE_INFORMAR_TIPO_RECOMENDACAO_ALTA_OU_DESCRICAO);
		}
	}
	
	public enum Fields {
		
		SAL_ATD_SEQ("id.salAtdSeq"),
		SEQP("id.seqp"),
		SUMARIO_ALTA("sumarioAlta"),
		TIPO_RECOMENDACAO_ALTA("tipoRecomendacaoAlta"),
		SERVIDOR("servidor"),
		DESCRICAO("descricao");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
		
	}
	
}

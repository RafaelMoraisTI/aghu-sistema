package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * AelPlacaRedome generated by hbm2java
 */
@Entity
@SequenceGenerator(name="aelPc1Sq1", sequenceName="AGH.AEL_PC1_SQ1", allocationSize = 1)
@Table(name = "AEL_PLACA_REDOMES", schema = "AGH")
public class AelPlacaRedome extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 9192636641820650331L;
	private Integer seq;
	private Integer version;
	private RapServidores rapServidoresByAelPc1SerFk1;
	private RapServidores rapServidoresByAelPc1SerFk2;
	private String equipamento;
	private Date dtAmplificacao;
	private String indSituacao;
	private String placaMista;
	private Date criadoEm;
	private Set<AelPlacaSeqpRedome> aelPlacaSeqpRedomes = new HashSet<AelPlacaSeqpRedome>(0);
	private Set<AelPlacaPacRedome> aelPlacaPacRedomees = new HashSet<AelPlacaPacRedome>(0);

	public AelPlacaRedome() {
	}

	public AelPlacaRedome(Integer seq, RapServidores rapServidoresByAelPc1SerFk1, RapServidores rapServidoresByAelPc1SerFk2,
			String equipamento, Date dtAmplificacao, String placaMista) {
		this.seq = seq;
		this.rapServidoresByAelPc1SerFk1 = rapServidoresByAelPc1SerFk1;
		this.rapServidoresByAelPc1SerFk2 = rapServidoresByAelPc1SerFk2;
		this.equipamento = equipamento;
		this.dtAmplificacao = dtAmplificacao;
		this.placaMista = placaMista;
	}

	public AelPlacaRedome(Integer seq, RapServidores rapServidoresByAelPc1SerFk1, RapServidores rapServidoresByAelPc1SerFk2,
			String equipamento, Date dtAmplificacao, String indSituacao, String placaMista, Date criadoEm,
			Set<AelPlacaSeqpRedome> aelPlacaSeqpRedomes, Set<AelPlacaPacRedome> aelPlacaPacRedomees) {
		this.seq = seq;
		this.rapServidoresByAelPc1SerFk1 = rapServidoresByAelPc1SerFk1;
		this.rapServidoresByAelPc1SerFk2 = rapServidoresByAelPc1SerFk2;
		this.equipamento = equipamento;
		this.dtAmplificacao = dtAmplificacao;
		this.indSituacao = indSituacao;
		this.placaMista = placaMista;
		this.criadoEm = criadoEm;
		this.aelPlacaSeqpRedomes = aelPlacaSeqpRedomes;
		this.aelPlacaPacRedomees = aelPlacaPacRedomees;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "aelPc1Sq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByAelPc1SerFk1() {
		return this.rapServidoresByAelPc1SerFk1;
	}

	public void setRapServidoresByAelPc1SerFk1(RapServidores rapServidoresByAelPc1SerFk1) {
		this.rapServidoresByAelPc1SerFk1 = rapServidoresByAelPc1SerFk1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_PROFISSIONAL", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO_PROFISSIONAL", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByAelPc1SerFk2() {
		return this.rapServidoresByAelPc1SerFk2;
	}

	public void setRapServidoresByAelPc1SerFk2(RapServidores rapServidoresByAelPc1SerFk2) {
		this.rapServidoresByAelPc1SerFk2 = rapServidoresByAelPc1SerFk2;
	}

	@Column(name = "EQUIPAMENTO", nullable = false, length = 20)
	@Length(max = 20)
	public String getEquipamento() {
		return this.equipamento;
	}

	public void setEquipamento(String equipamento) {
		this.equipamento = equipamento;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_AMPLIFICACAO", nullable = false, length = 29)
	public Date getDtAmplificacao() {
		return this.dtAmplificacao;
	}

	public void setDtAmplificacao(Date dtAmplificacao) {
		this.dtAmplificacao = dtAmplificacao;
	}

	@Column(name = "IND_SITUACAO", length = 1)
	@Length(max = 1)
	public String getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(String indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Column(name = "PLACA_MISTA", nullable = false, length = 1)
	@Length(max = 1)
	public String getPlacaMista() {
		return this.placaMista;
	}

	public void setPlacaMista(String placaMista) {
		this.placaMista = placaMista;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "aelPlacaRedome")
	public Set<AelPlacaSeqpRedome> getAelPlacaSeqpRedomes() {
		return this.aelPlacaSeqpRedomes;
	}

	public void setAelPlacaSeqpRedomes(Set<AelPlacaSeqpRedome> aelPlacaSeqpRedomes) {
		this.aelPlacaSeqpRedomes = aelPlacaSeqpRedomes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "aelPlacaRedome")
	public Set<AelPlacaPacRedome> getAelPlacaPacRedomees() {
		return this.aelPlacaPacRedomees;
	}

	public void setAelPlacaPacRedomees(Set<AelPlacaPacRedome> aelPlacaPacRedomees) {
		this.aelPlacaPacRedomees = aelPlacaPacRedomees;
	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		RAP_SERVIDORES_BY_AEL_PC1_SER_FK1("rapServidoresByAelPc1SerFk1"),
		RAP_SERVIDORES_BY_AEL_PC1_SER_FK2("rapServidoresByAelPc1SerFk2"),
		EQUIPAMENTO("equipamento"),
		DT_AMPLIFICACAO("dtAmplificacao"),
		IND_SITUACAO("indSituacao"),
		PLACA_MISTA("placaMista"),
		CRIADO_EM("criadoEm"),
		AEL_PLACA_SEQP_REDOMES("aelPlacaSeqpRedomes"),
		AEL_PLACA_PAC_REDOMEES("aelPlacaPacRedomees");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AelPlacaRedome)) {
			return false;
		}
		AelPlacaRedome other = (AelPlacaRedome) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

// Generated 11/06/2010 10:31:39 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MciDuracMedidaPreventivas generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mciDmpSq1", sequenceName="AGH.MCI_DMP_SQ1", allocationSize = 1)
@Table(name = "MCI_DURAC_MEDIDA_PREVENTIVAS", schema = "AGH")

public class MciDuracaoMedidaPreventiva extends BaseEntitySeq<Short> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1930912809095151884L;
	private Short seq;
	private RapServidores servidor;
	private RapServidores servidorMovimentado;
	private String descricao;
	private DominioSituacao situacao;
	private Date criadoEm;
	private Date alteradoEm;
	private Set<MciPatologiaInfeccao> patologiaInfeccoes = new HashSet<MciPatologiaInfeccao>(0);
	private Integer version; 

	public MciDuracaoMedidaPreventiva() {
	}

	public MciDuracaoMedidaPreventiva(Short seq,
			RapServidores servidor, String descricao,
			DominioSituacao situacao, Date criadoEm) {
		this.seq = seq;
		this.servidor = servidor;
		this.descricao = descricao;
		this.situacao = situacao;
		this.criadoEm = criadoEm;
	}

	public MciDuracaoMedidaPreventiva(Short seq,
			RapServidores servidor,
			RapServidores servidorMovimentado, String descricao,
			DominioSituacao situacao, Date criadoEm, Date alteradoEm,
			Set<MciPatologiaInfeccao> patologiaInfeccoes) {
		this.seq = seq;
		this.servidor = servidor;
		this.servidorMovimentado = servidorMovimentado;
		this.descricao = descricao;
		this.situacao = situacao;
		this.criadoEm = criadoEm;
		this.alteradoEm = alteradoEm;
		this.patologiaInfeccoes = patologiaInfeccoes;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mciDmpSq1")
	@Column(name = "SEQ", nullable = false, precision = 4, scale = 0)
	public Short getSeq() {
		return this.seq;
	}

	public void setSeq(Short seq) {
		this.seq = seq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(
			RapServidores servidor) {
		this.servidor = servidor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_MOVIMENTADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_MOVIMENTADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorMovimentado() {
		return this.servidorMovimentado;
	}

	public void setServidorMovimentado(
			RapServidores servidorMovimentado) {
		this.servidorMovimentado = servidorMovimentado;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 120)
	@Length(max = 120)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getSituacao() {
		return this.situacao;
	}

	public void setSituacao(DominioSituacao situacao) {
		this.situacao = situacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM")
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "duracaoMedidaPreventiva")
	public Set<MciPatologiaInfeccao> getPatologiaInfeccoes() {
		return this.patologiaInfeccoes;
	}

	public void setPatologiaInfeccoes(
			Set<MciPatologiaInfeccao> patologiaInfeccoes) {
		this.patologiaInfeccoes = patologiaInfeccoes;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((seq == null) ? 0 : seq.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		MciDuracaoMedidaPreventiva other = (MciDuracaoMedidaPreventiva) obj;
		if (seq == null) {
			if (other.seq != null) {
				return false;
			}
		} else if (!seq.equals(other.seq)) {
			return false;
		}
		return true;
	}
	

	@Version
	@Column(name = "VERSION", nullable = false) 
	public Integer getVersion() {
	 	return this.version; 
	}
	  
	public void setVersion(Integer version) { 
		this.version = version; 
	}


	public enum Fields {

		SEQ("seq"),
		SERVIDOR("servidor"),
		SERVIDOR_MOVIMENTADO("servidorMovimentado"),
		DESCRICAO("descricao"),
		SITUACAO("situacao"),
		CRIADO_EM("criadoEm"),
		ALTERADO_EM("alteradoEm"),
		PATOLOGIA_INFECCOES("patologiaInfeccoes");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}

}

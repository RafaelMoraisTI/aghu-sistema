package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioDiaSemanaSigla;
import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MbcBloqSalaCirurgica generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mbcBscSq1", sequenceName="AGH.MBC_BSC_SQ1", allocationSize = 1)
@Table(name = "MBC_BLOQ_SALA_CIRURGICAS", schema = "AGH")
public class MbcBloqSalaCirurgica extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2320324220590238375L;
	private Integer seq;
	private Integer version;
	private RapServidores rapServidoresByMbcBscSerFk1;
	private RapServidores rapServidoresByMbcBscSerFk2;
	private MbcSalaCirurgica mbcSalaCirurgica;
	private MbcProfAtuaUnidCirgs mbcProfAtuaUnidCirgs;
	private Date criadoEm;
	private Date dtInicio;
	private Date dtFim;
	private DominioDiaSemanaSigla diaSemana;
	private MbcTurnos turno;
	private String motivo;
	private DominioSituacao indSituacao;
	private Date alteradoEm;
	private AghUnidadesFuncionais unidadeSalaCirurgica;	
	private AghEspecialidades especialidade;

	public MbcBloqSalaCirurgica() {
	}

	public MbcBloqSalaCirurgica(Integer seq, RapServidores rapServidoresByMbcBscSerFk1, MbcSalaCirurgica mbcSalaCirurgica,
			Date criadoEm, Date dtInicio, Date dtFim, String motivo, DominioSituacao indSituacao) {
		this.seq = seq;
		this.rapServidoresByMbcBscSerFk1 = rapServidoresByMbcBscSerFk1;
		this.mbcSalaCirurgica = mbcSalaCirurgica;
		this.criadoEm = criadoEm;
		this.dtInicio = dtInicio;
		this.dtFim = dtFim;
		this.motivo = motivo;
		this.indSituacao = indSituacao;
	}

	public MbcBloqSalaCirurgica(Integer seq, RapServidores rapServidoresByMbcBscSerFk1, RapServidores rapServidoresByMbcBscSerFk2,
			MbcSalaCirurgica mbcSalaCirurgica, MbcProfAtuaUnidCirgs mbcProfAtuaUnidCirgs, Date criadoEm, Date dtInicio, Date dtFim,
			DominioDiaSemanaSigla diaSemana, MbcTurnos turno, String motivo, DominioSituacao indSituacao, Date alteradoEm) {
		this.seq = seq;
		this.rapServidoresByMbcBscSerFk1 = rapServidoresByMbcBscSerFk1;
		this.rapServidoresByMbcBscSerFk2 = rapServidoresByMbcBscSerFk2;
		this.mbcSalaCirurgica = mbcSalaCirurgica;
		this.mbcProfAtuaUnidCirgs = mbcProfAtuaUnidCirgs;
		this.criadoEm = criadoEm;
		this.dtInicio = dtInicio;
		this.dtFim = dtFim;
		this.diaSemana = diaSemana;
		this.turno = turno;
		this.motivo = motivo;
		this.indSituacao = indSituacao;
		this.alteradoEm = alteradoEm;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mbcBscSq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByMbcBscSerFk1() {
		return this.rapServidoresByMbcBscSerFk1;
	}

	public void setRapServidoresByMbcBscSerFk1(RapServidores rapServidoresByMbcBscSerFk1) {
		this.rapServidoresByMbcBscSerFk1 = rapServidoresByMbcBscSerFk1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_ALTERA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_ALTERA", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMbcBscSerFk2() {
		return this.rapServidoresByMbcBscSerFk2;
	}

	public void setRapServidoresByMbcBscSerFk2(RapServidores rapServidoresByMbcBscSerFk2) {
		this.rapServidoresByMbcBscSerFk2 = rapServidoresByMbcBscSerFk2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SCI_UNF_SEQ", referencedColumnName = "UNF_SEQ", nullable = false),
			@JoinColumn(name = "SCI_SEQP", referencedColumnName = "SEQP", nullable = false) })
	public MbcSalaCirurgica getMbcSalaCirurgica() {
		return this.mbcSalaCirurgica;
	}

	public void setMbcSalaCirurgica(MbcSalaCirurgica mbcSalaCirurgica) {
		this.mbcSalaCirurgica = mbcSalaCirurgica;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "PUC_SER_MATRICULA", referencedColumnName = "SER_MATRICULA"),
			@JoinColumn(name = "PUC_SER_VIN_CODIGO", referencedColumnName = "SER_VIN_CODIGO"),
			@JoinColumn(name = "PUC_UNF_SEQ", referencedColumnName = "UNF_SEQ"),
			@JoinColumn(name = "PUC_IND_FUNCAO_PROF", referencedColumnName = "IND_FUNCAO_PROF") })
	public MbcProfAtuaUnidCirgs getMbcProfAtuaUnidCirgs() {
		return this.mbcProfAtuaUnidCirgs;
	}

	public void setMbcProfAtuaUnidCirgs(MbcProfAtuaUnidCirgs mbcProfAtuaUnidCirgs) {
		this.mbcProfAtuaUnidCirgs = mbcProfAtuaUnidCirgs;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_INICIO", nullable = false, length = 29)
	public Date getDtInicio() {
		return this.dtInicio;
	}

	public void setDtInicio(Date dtInicio) {
		this.dtInicio = dtInicio;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_FIM", nullable = false, length = 29)
	public Date getDtFim() {
		return this.dtFim;
	}

	public void setDtFim(Date dtFim) {
		this.dtFim = dtFim;
	}

	@Column(name = "DIA_SEMANA", length = 3)
	@Enumerated(EnumType.STRING)
	public DominioDiaSemanaSigla getDiaSemana() {
		return this.diaSemana;
	}

	public void setDiaSemana(DominioDiaSemanaSigla diaSemana) {
		this.diaSemana = diaSemana;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "TURNO", referencedColumnName = "TURNO") })	
	public MbcTurnos getTurno() {
		return this.turno;
	}

	public void setTurno(MbcTurnos turno) {
		this.turno = turno;
	}

	@Column(name = "MOTIVO", nullable = false, length = 500)
	@Length(max = 500)
	public String getMotivo() {
		return this.motivo;
	}

	public void setMotivo(String motivo) {
		this.motivo = motivo;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 29)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		RAP_SERVIDORES_BY_MBC_BSC_SER_FK1("rapServidoresByMbcBscSerFk1"),		
		RAP_SERVIDORES_BY_MBC_BSC_SER_FK2("rapServidoresByMbcBscSerFk2"),
		MBC_SALA_CIRURGICA("mbcSalaCirurgica"),
		SCI_UNF_SEQ("mbcSalaCirurgica.id.unfSeq"),
		SCI_SEQP("mbcSalaCirurgica.id.seqp"),
		MBC_PROF_ATUA_UNID_CIRGS("mbcProfAtuaUnidCirgs"),
		MBC_PROF_ATUA_UNID_CIRGS_ID_SER_MATRICULA("mbcProfAtuaUnidCirgs.id.serMatricula"),
		MBC_PROF_ATUA_UNID_CIRGS_ID_SER_VINCODIGO("mbcProfAtuaUnidCirgs.id.serVinCodigo"),
		MBC_PROF_ATUA_UNID_CIRGS_ID_UNF_SEQ("mbcProfAtuaUnidCirgs.id.unfSeq"),
		MBC_PROF_ATUA_UNID_CIRGS_ID_IND_FUNCAO_PROF("mbcProfAtuaUnidCirgs.id.indFuncaoProf"),
		CRIADO_EM("criadoEm"),
		DT_INICIO("dtInicio"),
		DT_FIM("dtFim"),
		DIA_SEMANA("diaSemana"),
		TURNO("turno"),
		TURNO_TURNO("turno.turno"),
		MOTIVO("motivo"),
		IND_SITUACAO("indSituacao"),
		ALTERADO_EM("alteradoEm"),
		UNIDADE_SALA_CIRURGICA("unidadeSalaCirurgica");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MbcBloqSalaCirurgica)) {
			return false;
		}
		MbcBloqSalaCirurgica other = (MbcBloqSalaCirurgica) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SCI_UNF_SEQ", insertable=false, updatable=false)
	public AghUnidadesFuncionais getUnidadeSalaCirurgica() {
		return unidadeSalaCirurgica;
	}

	public void setUnidadeSalaCirurgica(AghUnidadesFuncionais unidadeSalaCirurgica) {
		this.unidadeSalaCirurgica = unidadeSalaCirurgica;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PRE_ESP_SEQ")
	public AghEspecialidades getEspecialidade() {
		return especialidade;
	}

	public void setEspecialidade(AghEspecialidades especialidade) {
		this.especialidade = especialidade;
	}


}

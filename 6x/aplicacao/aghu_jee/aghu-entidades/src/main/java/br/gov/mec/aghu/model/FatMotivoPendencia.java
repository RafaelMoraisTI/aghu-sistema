package br.gov.mec.aghu.model;

// Generated 15/03/2011 13:46:58 by Hibernate Tools 3.2.5.Beta

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Version;


import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * FatMotivoPendencias generated by hbm2java
 */
@Entity
@SequenceGenerator(name = "fatFpeSq1", sequenceName = "AGH.FAT_FPE_SQ1", allocationSize = 1)
@Table(name = "FAT_MOTIVO_PENDENCIAS", schema = "AGH")
public class FatMotivoPendencia extends BaseEntitySeq<Short> implements
		java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4194773421735646735L;
	private Short seq;
	private String descricao;
	private Set<FatPendenciaContaHosp> fatPendenciaContaHosps = new HashSet<FatPendenciaContaHosp>(
			0);
	private Integer version;

	public FatMotivoPendencia() {
	}

	public FatMotivoPendencia(Short seq, String descricao) {
		this.seq = seq;
		this.descricao = descricao;
	}

	public FatMotivoPendencia(Short seq, String descricao,
			Set<FatPendenciaContaHosp> fatPendenciaContaHosps) {
		this.seq = seq;
		this.descricao = descricao;
		this.fatPendenciaContaHosps = fatPendenciaContaHosps;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "fatFpeSq1")
	@Column(name = "SEQ", unique = true, nullable = false, precision = 2, scale = 0)
	public Short getSeq() {
		return this.seq;
	}

	public void setSeq(Short seq) {
		this.seq = seq;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 50)
	@Length(max = 50, message = "Descrição tem mais de 50 caracteres.")
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fatMotivoPendencia")
	public Set<FatPendenciaContaHosp> getFatPendenciaContaHosps() {
		return this.fatPendenciaContaHosps;
	}

	public void setFatPendenciaContaHosps(
			Set<FatPendenciaContaHosp> fatPendenciaContaHosps) {
		this.fatPendenciaContaHosps = fatPendenciaContaHosps;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Override
	public int hashCode() {

		HashCodeBuilder umHashCodeBuilder = new HashCodeBuilder();
		umHashCodeBuilder.append(this.getSeq());
		umHashCodeBuilder.append(this.getDescricao());
		umHashCodeBuilder.append(this.getVersion());

		return umHashCodeBuilder.toHashCode();
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}

		if (!(obj instanceof FatMotivoPendencia)) {
			return false;
		}

		FatMotivoPendencia other = (FatMotivoPendencia) obj;
		EqualsBuilder umEqualsBuilder = new EqualsBuilder();
		umEqualsBuilder.append(this.getSeq(), other.getSeq());
		umEqualsBuilder.append(this.getDescricao(), other.getDescricao());
		umEqualsBuilder.append(this.getVersion(), other.getVersion());

		return umEqualsBuilder.isEquals();
	}

	public enum Fields {
		DESCRICAO("descricao"), SEQ("seq");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

}

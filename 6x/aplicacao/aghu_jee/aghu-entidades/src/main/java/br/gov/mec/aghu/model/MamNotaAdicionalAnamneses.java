package br.gov.mec.aghu.model;

// Generated 18/05/2011 13:44:58 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import javax.validation.constraints.NotNull;

import br.gov.mec.aghu.dominio.DominioIndPendenteAmbulatorio;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MamNotaAdicionalAnamneses generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mamNaaSq1", sequenceName="AGH.MAM_NAA_SQ1", allocationSize = 1)
@Table(name = "MAM_NOTA_ADICIONAL_ANAMNESES", schema = "AGH")
public class MamNotaAdicionalAnamneses extends BaseEntitySeq<Integer> implements java.io.Serializable {

	private static final long serialVersionUID = 84162638996927628L;
	private Integer seq;
	private MamNotaAdicionalAnamneses notaAdicionalAnamnese;
	private String descricao;
	private Date dthrCriacao;
	private Date dthrValida;
	private Date dthrMvto;
	private Date dthrValidaMvto;
	private AipPacientes paciente;
	private AacConsultas consulta;
	private DominioIndPendenteAmbulatorio pendente;
	private RapServidores servidor;
	private RapServidores servidorValida;
	private RapServidores servidorMvto;
	private RapServidores servidorValidaMvto;
	private MamTriagens triagem;
	private MamRegistro registro;
	private AghAtendimentos atendimento;
	private Set<MamNotaAdicionalAnamneses> mamNotaAdicionalAnamneseses = new HashSet<MamNotaAdicionalAnamneses>(
			0);

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mamNaaSq1")
	@Column(name = "SEQ", unique = true, nullable = false, precision = 14, scale = 0)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "NAA_SEQ")
	public MamNotaAdicionalAnamneses getNotaAdicionalAnamnese() {
		return this.notaAdicionalAnamnese;
	}

	public void setNotaAdicionalAnamnese(
			MamNotaAdicionalAnamneses notaAdicionalAnamnese) {
		this.notaAdicionalAnamnese = notaAdicionalAnamnese;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 4000)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_CRIACAO", nullable = false, length = 7)
	public Date getDthrCriacao() {
		return this.dthrCriacao;
	}

	public void setDthrCriacao(Date dthrCriacao) {
		this.dthrCriacao = dthrCriacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_VALIDA", length = 7)
	public Date getDthrValida() {
		return this.dthrValida;
	}

	public void setDthrValida(Date dthrValida) {
		this.dthrValida = dthrValida;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_MVTO", length = 7)
	public Date getDthrMvto() {
		return this.dthrMvto;
	}

	public void setDthrMvto(Date dthrMvto) {
		this.dthrMvto = dthrMvto;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_VALIDA_MVTO", length = 7)
	public Date getDthrValidaMvto() {
		return this.dthrValidaMvto;
	}

	public void setDthrValidaMvto(Date dthrValidaMvto) {
		this.dthrValidaMvto = dthrValidaMvto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO")
	public AipPacientes getPaciente() {
		return this.paciente;
	}

	public void setPaciente(AipPacientes paciente) {
		this.paciente = paciente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CON_NUMERO")
	public AacConsultas getConsulta() {
		return consulta;
	}

	public void setConsulta(AacConsultas consulta) {
		this.consulta = consulta;
	}

	@Column(name = "IND_PENDENTE", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioIndPendenteAmbulatorio getPendente() {
		return this.pendente;
	}

	public void setPendente(DominioIndPendenteAmbulatorio pendente) {
		this.pendente = pendente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
			@NotNull
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_VALIDA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_VALIDA", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorValida() {
		return this.servidorValida;
	}

	public void setServidorValida(RapServidores servidorValida) {
		this.servidorValida = servidorValida;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_MVTO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_MVTO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorMvto() {
		return this.servidorMvto;
	}

	public void setServidorMvto(RapServidores servidorMvto) {
		this.servidorMvto = servidorMvto;
	}
	

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_VALIDA_MVTO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_VALIDA_MVTO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorValidaMvto() {
		return this.servidorValidaMvto;
	}

	public void setServidorValidaMvto(RapServidores servidorValidaMvto) {
		this.servidorValidaMvto = servidorValidaMvto;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TRG_SEQ")
	public MamTriagens getTriagem() {
		return this.triagem;
	}

	public void setTriagem(MamTriagens triagem) {
		this.triagem = triagem;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RGT_SEQ", referencedColumnName= "SEQ")
	public MamRegistro getRegistro() {
		return registro;
	}

	public void setRegistro(MamRegistro registro) {
		this.registro = registro;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ATD_SEQ")
	public AghAtendimentos getAtendimento() {
		return atendimento;
	}

	public void setAtendimento(AghAtendimentos atendimento) {
		this.atendimento = atendimento;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "notaAdicionalAnamnese")
	public Set<MamNotaAdicionalAnamneses> getMamNotaAdicionalAnamneseses() {
		return this.mamNotaAdicionalAnamneseses;
	}

	public void setMamNotaAdicionalAnamneseses(
			Set<MamNotaAdicionalAnamneses> mamNotaAdicionalAnamneseses) {
		this.mamNotaAdicionalAnamneseses = mamNotaAdicionalAnamneseses;
	}
	
	public enum Fields {
		CONSULTA("consulta"), CON_NUMERO("consulta.numero"),
		DTHR_CRIACAO("dthrCriacao"),DTHR_MOVIMENTO("dthrMvto"),
		PENDENTE("pendente"),SEQ("seq"),NAA_SEQ("notaAdicionalAnamnese.seq"),
		REGISTRO("registro"),PAC_CODIGO("paciente.codigo"),SERVIDOR("servidor"),
		ATENDIMENTO_SEQ("atendimento.seq");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MamNotaAdicionalAnamneses)) {
			return false;
		}
		MamNotaAdicionalAnamneses other = (MamNotaAdicionalAnamneses) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

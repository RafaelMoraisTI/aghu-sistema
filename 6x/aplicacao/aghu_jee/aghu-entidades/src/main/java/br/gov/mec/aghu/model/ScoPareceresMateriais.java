package br.gov.mec.aghu.model;

// Generated 04/01/2012 11:23:42 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * ScoPareceresMateriais generated by hbm2java
 */
@Entity
@Table(name = "SCO_PARECERES_MATERIAIS", schema = "AGH")
public class ScoPareceresMateriais extends BaseEntityId<ScoPareceresMateriaisId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -7684036394985450521L;
	
	private ScoPareceresMateriaisId id;
	private Integer version;
	private ScoPareceresTecnicos scoPareceresTecnicos;
	private Date dtGeracao;
	private String parecer;
	private Boolean indExcluido;

	public ScoPareceresMateriais() {
	}

	public ScoPareceresMateriais(ScoPareceresMateriaisId id,
			ScoPareceresTecnicos scoPareceresTecnicos, Date dtGeracao,
			String parecer, Boolean indExcluido) {
		this.id = id;
		this.scoPareceresTecnicos = scoPareceresTecnicos;
		this.dtGeracao = dtGeracao;
		this.parecer = parecer;
		this.indExcluido = indExcluido;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "ptcOptCodigo", column = @Column(name = "PTC_OPT_CODIGO", nullable = false)),
			@AttributeOverride(name = "ptcNroSubPasta", column = @Column(name = "PTC_NRO_SUB_PASTA", nullable = false)),
			@AttributeOverride(name = "ptcMcmCodigo", column = @Column(name = "PTC_MCM_CODIGO", nullable = false)),
			@AttributeOverride(name = "matCodigo", column = @Column(name = "MAT_CODIGO", nullable = false)) })
	public ScoPareceresMateriaisId getId() {
		return this.id;
	}

	public void setId(ScoPareceresMateriaisId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "PTC_OPT_CODIGO", referencedColumnName = "OPT_CODIGO", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "PTC_NRO_SUB_PASTA", referencedColumnName = "NRO_SUB_PASTA", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "PTC_MCM_CODIGO", referencedColumnName = "MCM_CODIGO", nullable = false, insertable = false, updatable = false) })
	public ScoPareceresTecnicos getScoPareceresTecnicos() {
		return this.scoPareceresTecnicos;
	}

	public void setScoPareceresTecnicos(
			ScoPareceresTecnicos scoPareceresTecnicos) {
		this.scoPareceresTecnicos = scoPareceresTecnicos;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_GERACAO", nullable = false, length = 29)
	public Date getDtGeracao() {
		return this.dtGeracao;
	}

	public void setDtGeracao(Date dtGeracao) {
		this.dtGeracao = dtGeracao;
	}

	@Column(name = "PARECER", nullable = false, length = 1)
	@Length(max = 1)
	public String getParecer() {
		return this.parecer;
	}

	public void setParecer(String parecer) {
		this.parecer = parecer;
	}

	@Column(name = "IND_EXCLUIDO", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndExcluido() {
		return this.indExcluido;
	}

	public void setIndExcluido(Boolean indExcluido) {
		this.indExcluido = indExcluido;
	}
	
	public enum Fields {
		PARECER("parecer"),
		MAT_CODIGO("id.matCodigo"),
		PTC_MCM_CODIGO("id.ptcMcmCodigo"),
		PTC_NRO_SUB_PASTA("id.ptcNroSubPasta"),
		PTC_OPT_CODIGO("id.ptcOptCodigo"),
		IND_EXCLUIDO("indExcluido"),
		PARECER_TECNICO("scoPareceresTecnicos");
		

		private String field;

		private Fields(String field) {
			this.field = field;
		}

		@Override
		public String toString() {
			return this.field;
		}
	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof ScoPareceresMateriais)) {
			return false;
		}
		ScoPareceresMateriais other = (ScoPareceresMateriais) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

// Generated 11/05/2011 14:05:35 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacaoCartaColeta;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AelItemSolicCartas generated by hbm2java
 */
@Entity
@Table(name = "AEL_ITEM_SOLIC_CARTAS", schema = "AGH")
public class AelItemSolicCartas extends BaseEntityId<AelItemSolicCartasId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 4341524258733974727L;
	private AelItemSolicCartasId id;
	private DominioSituacaoCartaColeta situacao;
	private String observacoes;
	private AelRetornoCarta motivoRetorno;
	private RapServidores servidor;
	private Date alteradoEm;
	private Set<AelExtratoItemCartas> aelExtratoItemCartases = new HashSet<AelExtratoItemCartas>(
			0);
	private AelModeloCartas aelModeloCartas;
	private AelSolicitacaoExames solicitacaoExame;
	private AelItemSolicitacaoExames itemSolicitacaoExame;

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "iseSeqp", column = @Column(name = "ISE_SEQP", nullable = false, precision = 3, scale = 0)),
			@AttributeOverride(name = "iseSoeSeq", column = @Column(name = "ISE_SOE_SEQ", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false, precision = 3, scale = 0)) })
	public AelItemSolicCartasId getId() {
		return this.id;
	}

	public void setId(AelItemSolicCartasId id) {
		this.id = id;
	}

	@Column(name = "SITUACAO", nullable = false, length = 2)
	@Enumerated(EnumType.STRING)
	public DominioSituacaoCartaColeta getSituacao() {
		return situacao;
	}

	public void setSituacao(DominioSituacaoCartaColeta situacao) {
		this.situacao = situacao;
	}

	@Column(name = "OBSERVACOES", length = 2000)
	@Length(max = 2000)
	public String getObservacoes() {
		return this.observacoes;
	}

	public void setObservacoes(String observacoes) {
		this.observacoes = observacoes;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RNO_SEQ")
	public AelRetornoCarta getMotivoRetorno() {
		return motivoRetorno;
	}

	public void setMotivoRetorno(AelRetornoCarta motivoRetorno) {
		this.motivoRetorno = motivoRetorno;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidor() {
		return servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MRT_SEQ")
	public AelModeloCartas getAelModeloCartas() {
		return aelModeloCartas;
	}
	
	public void setAelModeloCartas(AelModeloCartas aelModeloCartas) {
		this.aelModeloCartas = aelModeloCartas;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 7)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "aelItemSolicCartas")
	public Set<AelExtratoItemCartas> getAelExtratoItemCartases() {
		return this.aelExtratoItemCartases;
	}

	public void setAelExtratoItemCartases(
			Set<AelExtratoItemCartas> aelExtratoItemCartases) {
		this.aelExtratoItemCartases = aelExtratoItemCartases;
	}
	
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ISE_SOE_SEQ", insertable=false, updatable=false)
	public AelSolicitacaoExames getSolicitacaoExame() {
		return solicitacaoExame;
	}

	public void setSolicitacaoExame(AelSolicitacaoExames solicitacaoExame) {
		this.solicitacaoExame = solicitacaoExame;
	}


	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "ISE_SOE_SEQ", referencedColumnName = "SOE_SEQ", insertable=false, updatable=false),
			@JoinColumn(name = "ISE_SEQP", referencedColumnName = "SEQP", insertable=false, updatable=false)})
	public AelItemSolicitacaoExames getItemSolicitacaoExame() {
		return itemSolicitacaoExame;
	}

	public void setItemSolicitacaoExame(
			AelItemSolicitacaoExames itemSolicitacaoExame) {
		this.itemSolicitacaoExame = itemSolicitacaoExame;
	}



	public enum Fields {

		SITUACAO("situacao"),
		SEQP("id.seqp"),
		ISE_SEQP("id.iseSeqp"),
		ALTERADO_EM("alteradoEm"),
		ISE_SOE_SEQ("id.iseSoeSeq"),
		OBSERVACOES("observacoes"),
		MODELO("aelModeloCartas"),
		MOTIVO_RETORNO("motivoRetorno"),
		ITEM_SOLC("itemSolicitacaoExame"),
		SOLICITACAO_EXAMES("solicitacaoExame")
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AelItemSolicCartas)) {
			return false;
		}
		AelItemSolicCartas other = (AelItemSolicCartas) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

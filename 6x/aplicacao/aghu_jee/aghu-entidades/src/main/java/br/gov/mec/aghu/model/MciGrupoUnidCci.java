package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MciGrupoUnidCci generated by hbm2java
 */
@Entity
@Table(name = "MCI_GRUPO_UNID_CCIS", schema = "AGH")
public class MciGrupoUnidCci extends BaseEntityId<MciGrupoUnidCciId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 997779849002338907L;
	private MciGrupoUnidCciId id;
	private Integer version;
	private RapServidores rapServidoresByMciGucSerFk1;
	private MciAgrupamentoUnidCci mciAgrupamentoUnidCci;
	private AghUnidadesFuncionais aghUnidadesFuncionais;
	private RapServidores rapServidoresByMciGucSerFk2;
	private String indSituacao;
	private Date criadoEm;
	private Date alteradoEm;

	public MciGrupoUnidCci() {
	}

	public MciGrupoUnidCci(MciGrupoUnidCciId id, RapServidores rapServidoresByMciGucSerFk1,
			MciAgrupamentoUnidCci mciAgrupamentoUnidCci, AghUnidadesFuncionais aghUnidadesFuncionais, String indSituacao,
			Date criadoEm) {
		this.id = id;
		this.rapServidoresByMciGucSerFk1 = rapServidoresByMciGucSerFk1;
		this.mciAgrupamentoUnidCci = mciAgrupamentoUnidCci;
		this.aghUnidadesFuncionais = aghUnidadesFuncionais;
		this.indSituacao = indSituacao;
		this.criadoEm = criadoEm;
	}

	public MciGrupoUnidCci(MciGrupoUnidCciId id, RapServidores rapServidoresByMciGucSerFk1,
			MciAgrupamentoUnidCci mciAgrupamentoUnidCci, AghUnidadesFuncionais aghUnidadesFuncionais,
			RapServidores rapServidoresByMciGucSerFk2, String indSituacao, Date criadoEm, Date alteradoEm) {
		this.id = id;
		this.rapServidoresByMciGucSerFk1 = rapServidoresByMciGucSerFk1;
		this.mciAgrupamentoUnidCci = mciAgrupamentoUnidCci;
		this.aghUnidadesFuncionais = aghUnidadesFuncionais;
		this.rapServidoresByMciGucSerFk2 = rapServidoresByMciGucSerFk2;
		this.indSituacao = indSituacao;
		this.criadoEm = criadoEm;
		this.alteradoEm = alteradoEm;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "aucTauSeq", column = @Column(name = "AUC_TAU_SEQ", nullable = false)),
			@AttributeOverride(name = "aucSeqp", column = @Column(name = "AUC_SEQP", nullable = false)),
			@AttributeOverride(name = "unfSeq", column = @Column(name = "UNF_SEQ", nullable = false)) })
	public MciGrupoUnidCciId getId() {
		return this.id;
	}

	public void setId(MciGrupoUnidCciId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByMciGucSerFk1() {
		return this.rapServidoresByMciGucSerFk1;
	}

	public void setRapServidoresByMciGucSerFk1(RapServidores rapServidoresByMciGucSerFk1) {
		this.rapServidoresByMciGucSerFk1 = rapServidoresByMciGucSerFk1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "AUC_TAU_SEQ", referencedColumnName = "TAU_SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "AUC_SEQP", referencedColumnName = "SEQP", nullable = false, insertable = false, updatable = false) })
	public MciAgrupamentoUnidCci getMciAgrupamentoUnidCci() {
		return this.mciAgrupamentoUnidCci;
	}

	public void setMciAgrupamentoUnidCci(MciAgrupamentoUnidCci mciAgrupamentoUnidCci) {
		this.mciAgrupamentoUnidCci = mciAgrupamentoUnidCci;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ", nullable = false, insertable = false, updatable = false)
	public AghUnidadesFuncionais getAghUnidadesFuncionais() {
		return this.aghUnidadesFuncionais;
	}

	public void setAghUnidadesFuncionais(AghUnidadesFuncionais aghUnidadesFuncionais) {
		this.aghUnidadesFuncionais = aghUnidadesFuncionais;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_MOVIMENTADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_MOVIMENTADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMciGucSerFk2() {
		return this.rapServidoresByMciGucSerFk2;
	}

	public void setRapServidoresByMciGucSerFk2(RapServidores rapServidoresByMciGucSerFk2) {
		this.rapServidoresByMciGucSerFk2 = rapServidoresByMciGucSerFk2;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(String indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 29)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		RAP_SERVIDORES_BY_MCI_GUC_SER_FK1("rapServidoresByMciGucSerFk1"),
		MCI_AGRUPAMENTO_UNID_CCIS("mciAgrupamentoUnidCci"),
		AGH_UNIDADES_FUNCIONAIS("aghUnidadesFuncionais"),
		RAP_SERVIDORES_BY_MCI_GUC_SER_FK2("rapServidoresByMciGucSerFk2"),
		IND_SITUACAO("indSituacao"),
		CRIADO_EM("criadoEm"),
		ALTERADO_EM("alteradoEm");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MciGrupoUnidCci)) {
			return false;
		}
		MciGrupoUnidCci other = (MciGrupoUnidCci) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

// Generated 10/03/2011 17:20:24 by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Embeddable;

import br.gov.mec.aghu.core.persistence.EntityCompositeId;

/**
 * MpaPopExamesId generated by hbm2java
 */

@Embeddable
public class MpaPopExameId implements EntityCompositeId {

	/**
	 * 
	 */
	private static final long serialVersionUID = -2377861253128433583L;
	private Short povVersao;
	private Integer povPopSeq;
	private Short seqp;

	public MpaPopExameId() {
	}

	public MpaPopExameId(Short povVersao, Integer povPopSeq, Short seqp) {
		this.povVersao = povVersao;
		this.povPopSeq = povPopSeq;
		this.seqp = seqp;
	}

	@Column(name = "POV_VERSAO", nullable = false, precision = 4, scale = 0)
	public Short getPovVersao() {
		return this.povVersao;
	}

	public void setPovVersao(Short povVersao) {
		this.povVersao = povVersao;
	}

	@Column(name = "POV_POP_SEQ", nullable = false, precision = 5, scale = 0)
	public Integer getPovPopSeq() {
		return this.povPopSeq;
	}

	public void setPovPopSeq(Integer povPopSeq) {
		this.povPopSeq = povPopSeq;
	}

	@Column(name = "SEQP", nullable = false, precision = 4, scale = 0)
	public Short getSeqp() {
		return this.seqp;
	}

	public void setSeqp(Short seqp) {
		this.seqp = seqp;
	}

	@Override
	public boolean equals(Object other) {
		if ((this == other)) {
			return true;
		}
		if ((other == null)) {
			return false;
		}
		if (!(other instanceof MpaPopExameId)) {
			return false;
		}
		MpaPopExameId castOther = (MpaPopExameId) other;

		return (this.getPovVersao().equals(castOther.getPovVersao()))
				&& (this.getPovPopSeq().equals(castOther.getPovPopSeq()))
				&& (this.getSeqp().equals(castOther.getSeqp()));
	}

	@Override
	public int hashCode() {
		int result = 17;

		result = 37 * result + (this.getPovVersao() != null ? this.getPovVersao().hashCode() : 0);
		result = 37 * result + (this.getPovPopSeq() != null ? this.getPovPopSeq().hashCode() : 0);
		result = 37 * result + (this.getSeqp() != null ? this.getSeqp().hashCode() : 0);
		
		return result;
	}

}

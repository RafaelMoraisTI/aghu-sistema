package br.gov.mec.aghu.model;

// Generated 17/10/2011 14:21:24 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Version;


import org.hibernate.annotations.Parameter;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioTipoItemPrescricaoSumario;
import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.exception.BusinessExceptionCode;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * EpeItemPrescricaoSumarios generated by hbm2java
 */
@Entity
@SequenceGenerator(name="epeIsuSq1", sequenceName="EPE_ISU_SQ1", allocationSize = 1)
@Table(name = "EPE_ITEM_PRESCRICAO_SUMARIOS", schema = "AGH")
public class EpeItemPrescricaoSumario extends BaseEntitySeq<Integer> implements java.io.Serializable {
	
	public enum Fields {

		SEQ("seq"),
		TIPO("tipo"),
		DESCRICAO("descricao"),
//		ORIGEM_PRESCRICAO("origemPrescricao"),
		ATENDIMENTO_PACIENTE("atendimentoPaciente"),
		ITENS_CUIDADOS_SUMARIO("itemCuidadoSumarios");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}

	/**
	 * 
	 */
	private static final long serialVersionUID = 5954018777204389586L;
	private Integer seq;
	private Integer version;
	private AghAtendimentoPacientes atendimentoPaciente;
	private String descricao;
	private DominioTipoItemPrescricaoSumario tipo;
	private Set<EpeDataItemSumario> dataItemSumarios = new HashSet<EpeDataItemSumario>(
			0);
	private Set<EpeItemCuidadoSumario> itemCuidadoSumarios = new HashSet<EpeItemCuidadoSumario>(
			0);
	private enum EpeItemPrescricaoSumarioExceptionCode implements BusinessExceptionCode {
		TIPO_ITEM_PRESCRICAO_SUMARIO_INVALIDO
	}

	public EpeItemPrescricaoSumario() {
	}

	public EpeItemPrescricaoSumario(Integer seq, AghAtendimentoPacientes atendimentoPaciente,
			String descricao, DominioTipoItemPrescricaoSumario tipo) {
		this.seq = seq;
		this.atendimentoPaciente = atendimentoPaciente;
		this.descricao = descricao;
		this.tipo = tipo;
	}

	public EpeItemPrescricaoSumario(Integer seq, AghAtendimentoPacientes atendimentoPaciente,
			String descricao, DominioTipoItemPrescricaoSumario tipo,
			Set<EpeDataItemSumario> dataItemSumarios,
			Set<EpeItemCuidadoSumario> itemCuidadoSumarios) {
		this.seq = seq;
		this.atendimentoPaciente = atendimentoPaciente;
		this.descricao = descricao;
		this.tipo = tipo;
		this.dataItemSumarios = dataItemSumarios;
		this.itemCuidadoSumarios = itemCuidadoSumarios;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "epeIsuSq1")
	@Column(name = "SEQ", unique = true, nullable = false, precision = 8, scale = 0)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false, precision = 9, scale = 0)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "APA_ATD_SEQ", referencedColumnName = "ATD_SEQ", nullable = false),
			@JoinColumn(name = "APA_SEQ", referencedColumnName = "SEQ", nullable = false) })
	public AghAtendimentoPacientes getAtendimentoPaciente() {
		return this.atendimentoPaciente;
	}

	public void setAtendimentoPaciente(AghAtendimentoPacientes atendimentoPaciente) {
		this.atendimentoPaciente = atendimentoPaciente;
	}
	
	@Column(name = "DESCRICAO", nullable = false, length = 4000)
	@Length(max = 4000)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "TIPO", nullable = false, precision = 2, scale = 0)
	@org.hibernate.annotations.Type(parameters = { @Parameter(name = "enumClassName", value = "br.gov.mec.aghu.dominio.DominioTipoItemPrescricaoSumario") }, type = "br.gov.mec.aghu.core.model.jpa.DominioUserType")
	public DominioTipoItemPrescricaoSumario getTipo() {
		return this.tipo;
	}

	public void setTipo(DominioTipoItemPrescricaoSumario tipo) {
		this.tipo = tipo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "itemPrescricaoSumario")
	public Set<EpeDataItemSumario> getDataItemSumarios() {
		return this.dataItemSumarios;
	}

	public void setDataItemSumarios(
			Set<EpeDataItemSumario> dataItemSumarios) {
		this.dataItemSumarios = dataItemSumarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "itemPrescricaoSumario")
	public Set<EpeItemCuidadoSumario> getItemCuidadoSumarios() {
		return this.itemCuidadoSumarios;
	}

	public void setItemCuidadoSumarios(
			Set<EpeItemCuidadoSumario> itemCuidadoSumarios) {
		this.itemCuidadoSumarios = itemCuidadoSumarios;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((seq == null) ? 0 : seq.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		EpeItemPrescricaoSumario other = (EpeItemPrescricaoSumario) obj;
		if (seq == null) {
			if (other.seq != null) {
				return false;
			}
		} else if (!seq.equals(other.seq)) {
			return false;
		}
		return true;
	}

	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void validarTipo() {
		if (!tipo.equals(DominioTipoItemPrescricaoSumario.POSITIVO_4)) {
			throw new BaseRuntimeException(EpeItemPrescricaoSumarioExceptionCode.TIPO_ITEM_PRESCRICAO_SUMARIO_INVALIDO);
		}
	}
	
}

package br.gov.mec.aghu.model;

// Generated 19/03/2010 17:30:52 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

import org.apache.commons.lang3.StringUtils;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioIndPendenteDiagnosticos;
import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.exception.BusinessExceptionCode;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MamDiagnosticos generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mamDiaSq1", sequenceName="AGH.MAM_DIA_SQ1", allocationSize = 1)
@Table(name = "MAM_DIAGNOSTICOS", schema = "AGH")

public class MamDiagnostico extends BaseEntitySeq<Long> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -9079947291958486916L;

	private Long seq;

	private Date data;

	private Date dthrCriacao;

	private Date dthrValida;

	private Date dthrMvto;

	private Date dthrValidaMvto;

	private AipPacientes paciente;

	private AacConsultas consulta;

	private DominioSituacao indSituacao;

	private DominioIndPendenteDiagnosticos indPendente;

	private RapServidores servidor;

	private RapServidores servidorValida;

	private RapServidores servidorMovimento;

	private RapServidores servidorValidaMovimento;

	private MamDiagnostico diagnosticoFilho;

	private String descricao;

	private Date dataFim;

	private String complemento;

	private MpmCidAtendimento cidAtendimento;

	private CseCategoriaProfissional categoriaProfissional;

	private MbcCirurgias cirurgia;

	private MptTratamentoTerapeutico tratamentoTerapeutico;

	private MamTriagens triagem;

	private MamRegistro registro;

	private AghAtendimentos atendimento;

	private EpeFatRelDiagnostico fatRelDiagnostico;

	private MamProcedimentoRealizado procedimentoRealizado;

	private AghCid cid;

	private Integer version;
	
	private enum MamDiagnosticoExceptionCode implements BusinessExceptionCode {
		ERRO_AO_PERSISTIR_COMPLEMENTO
	}

	public MamDiagnostico() {
	}

	public MamDiagnostico(Long seq, Date data, Date dthrCriacao, AipPacientes paciente, DominioSituacao indSituacao,
			DominioIndPendenteDiagnosticos indPendente, RapServidores servidor) {
		this.seq = seq;
		this.data = data;
		this.dthrCriacao = dthrCriacao;
		this.paciente = paciente;
		this.indSituacao = indSituacao;
		this.indPendente = indPendente;
		this.servidor = servidor;
	}

	@SuppressWarnings({"PMD.ExcessiveParameterList"})
	public MamDiagnostico(Long seq, Date data, Date dthrCriacao, Date dthrValida, Date dthrMvto, Date dthrValidaMvto,
			AipPacientes paciente, AacConsultas consulta, AghCid cid, DominioSituacao indSituacao,
			DominioIndPendenteDiagnosticos indPendente, RapServidores servidor, RapServidores servidorValida,
			RapServidores servidorMovimento, RapServidores servidorValidaMovimento, MamDiagnostico diagnosticoFilho,
			String descricao, Date dataFim, String complemento, MpmCidAtendimento cidAtendimento,
			CseCategoriaProfissional categoriaProfissional, MbcCirurgias cirurgia,
			MptTratamentoTerapeutico tratamentoTerapeutico, MamTriagens triagem, MamRegistro registro,
			AghAtendimentos atendimento, EpeFatRelDiagnostico fatRelDiagnostico, MamProcedimentoRealizado procedimentoRealizado) {
		this.seq = seq;
		this.data = data;
		this.dthrCriacao = dthrCriacao;
		this.dthrValida = dthrValida;
		this.dthrMvto = dthrMvto;
		this.dthrValidaMvto = dthrValidaMvto;
		this.paciente = paciente;
		this.consulta = consulta;
		this.cid = cid;
		this.indSituacao = indSituacao;
		this.indPendente = indPendente;
		this.servidor = servidor;
		this.servidorValida = servidorValida;
		this.servidorMovimento = servidorMovimento;
		this.servidorValidaMovimento = servidorValidaMovimento;
		this.diagnosticoFilho = diagnosticoFilho;
		this.descricao = descricao;
		this.dataFim = dataFim;
		this.complemento = complemento;
		this.cidAtendimento = cidAtendimento;
		this.categoriaProfissional = categoriaProfissional;
		this.cirurgia = cirurgia;
		this.tratamentoTerapeutico = tratamentoTerapeutico;
		this.triagem = triagem;
		this.registro = registro;
		this.atendimento = atendimento;
		this.fatRelDiagnostico = fatRelDiagnostico;
		this.procedimentoRealizado = procedimentoRealizado;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mamDiaSq1")
	@Column(name = "SEQ", nullable = false, precision = 14, scale = 0)
	public Long getSeq() {
		return this.seq;
	}

	public void setSeq(Long seq) {
		this.seq = seq;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DATA", nullable = false, length = 7)
	public Date getData() {
		return this.data;
	}

	public void setData(Date data) {
		this.data = data;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_CRIACAO", nullable = false, length = 7)
	public Date getDthrCriacao() {
		return this.dthrCriacao;
	}

	public void setDthrCriacao(Date dthrCriacao) {
		this.dthrCriacao = dthrCriacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_VALIDA", length = 7)
	public Date getDthrValida() {
		return this.dthrValida;
	}

	public void setDthrValida(Date dthrValida) {
		this.dthrValida = dthrValida;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_MVTO", length = 7)
	public Date getDthrMvto() {
		return this.dthrMvto;
	}

	public void setDthrMvto(Date dthrMvto) {
		this.dthrMvto = dthrMvto;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_VALIDA_MVTO", length = 7)
	public Date getDthrValidaMvto() {
		return this.dthrValidaMvto;
	}

	public void setDthrValidaMvto(Date dthrValidaMvto) {
		this.dthrValidaMvto = dthrValidaMvto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO")
	public AipPacientes getPaciente() {
		return this.paciente;
	}

	public void setPaciente(AipPacientes paciente) {
		this.paciente = paciente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CON_NUMERO")
	public AacConsultas getConsulta() {
		return this.consulta;
	}

	public void setConsulta(AacConsultas consulta) {
		this.consulta = consulta;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Column(name = "IND_PENDENTE", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioIndPendenteDiagnosticos getIndPendente() {
		return this.indPendente;
	}

	public void setIndPendente(DominioIndPendenteDiagnosticos indPendente) {
		this.indPendente = indPendente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( { @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( { @JoinColumn(name = "SER_MATRICULA_VALIDA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_VALIDA", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorValida() {
		return this.servidorValida;
	}

	public void setServidorValida(RapServidores servidorValida) {
		this.servidorValida = servidorValida;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( { @JoinColumn(name = "SER_MATRICULA_MVTO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_MVTO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorMovimento() {
		return this.servidorMovimento;
	}

	public void setServidorMovimento(RapServidores servidorMovimento) {
		this.servidorMovimento = servidorMovimento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( { @JoinColumn(name = "SER_MATRICULA_VALIDA_MVTO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_VALIDA_MVTO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorValidaMovimento() {
		return this.servidorValidaMovimento;
	}

	public void setServidorValidaMovimento(RapServidores servidorValidaMovimento) {
		this.servidorValidaMovimento = servidorValidaMovimento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DIA_SEQ")
	public MamDiagnostico getDiagnosticoFilho() {
		return this.diagnosticoFilho;
	}

	public void setDiagnosticoFilho(MamDiagnostico diagnosticoFilho) {
		this.diagnosticoFilho = diagnosticoFilho;
	}

	@Column(name = "DESCRICAO", length = 300)
	@Length(max = 300)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DATA_FIM", length = 7)
	public Date getDataFim() {
		return this.dataFim;
	}

	public void setDataFim(Date dataFim) {
		this.dataFim = dataFim;
	}

	@Column(name = "COMPLEMENTO", length = 45)
	@Length(max = 45)
	public String getComplemento() {
		return this.complemento;
	}

	public void setComplemento(String complemento) {
		this.complemento = complemento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CIA_SEQ")
	public MpmCidAtendimento getCidAtendimento() {
		return this.cidAtendimento;
	}

	public void setCidAtendimento(MpmCidAtendimento cidAtendimento) {
		this.cidAtendimento = cidAtendimento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CAG_SEQ")
	public CseCategoriaProfissional getCategoriaProfissional() {
		return this.categoriaProfissional;
	}

	public void setCategoriaProfissional(CseCategoriaProfissional categoriaProfissional) {
		this.categoriaProfissional = categoriaProfissional;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CRG_SEQ")
	public MbcCirurgias getCirurgia() {
		return this.cirurgia;
	}

	public void setCirurgia(MbcCirurgias cirurgia) {
		this.cirurgia = cirurgia;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TRP_SEQ")
	public MptTratamentoTerapeutico getTratamentoTerapeutico() {
		return this.tratamentoTerapeutico;
	}

	public void setTratamentoTerapeutico(MptTratamentoTerapeutico tratamentoTerapeutico) {
		this.tratamentoTerapeutico = tratamentoTerapeutico;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TRG_SEQ")
	public MamTriagens getTriagem() {
		return this.triagem;
	}

	public void setTriagem(MamTriagens triagem) {
		this.triagem = triagem;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RGT_SEQ")
	public MamRegistro getRegistro() {
		return this.registro;
	}

	public void setRegistro(MamRegistro registro) {
		this.registro = registro;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ATD_SEQ")
	public AghAtendimentos getAtendimento() {
		return this.atendimento;
	}

	public void setAtendimento(AghAtendimentos atendimento) {
		this.atendimento = atendimento;
	}

	
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( { @JoinColumn(name = "FDG_DGN_SNB_GNB_SEQ", referencedColumnName = "DGN_SNB_GNB_SEQ"),
			@JoinColumn(name = "FDG_DGN_SNB_SEQUENCIA", referencedColumnName = "DGN_SNB_SEQUENCIA"),
			@JoinColumn(name = "FDG_DGN_SEQUENCIA", referencedColumnName = "DGN_SEQUENCIA"),
			@JoinColumn(name = "FDG_FRE_SEQ", referencedColumnName = "FRE_SEQ")})
	public EpeFatRelDiagnostico getFatRelDiagnostico() {
		return this.fatRelDiagnostico;
	}

	public void setFatRelDiagnostico(EpeFatRelDiagnostico fatRelDiagnostico) {
		this.fatRelDiagnostico = fatRelDiagnostico;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "POL_SEQ")
	public MamProcedimentoRealizado getProcedimentoRealizado() {
		return this.procedimentoRealizado;
	}

	public void setProcedimentoRealizado(MamProcedimentoRealizado procedimentoRealizado) {
		this.procedimentoRealizado = procedimentoRealizado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CID_SEQ")
	public AghCid getCid() {
		return this.cid;
	}

	public void setCid(AghCid aghCid) {
		this.cid = aghCid;
	}

	public enum Fields {
		SEQ("seq"), //
		PAC_CODIGO("paciente.codigo"), //
		SID_SEQ("cid.seq"), //
		DIA_SEQ("diagnosticoFilho.seq"), //
		IND_PENDENTE("indPendente"), //
		IND_SITUACAO("indSituacao"), //
		CID_ATENDIMENTO("cidAtendimento"), //
		CID_ATENDIMENTO_SEQ("cidAtendimento.seq"), //
		DATA("data"), //
		DATA_FIM("dataFim"), //
		ATENDIMENTO("atendimento"), //
		CID("cid"), //
		COMPLEMENTO("complemento"),
		DTHR_VALIDA_MVTO("dthrValidaMvto"),
		REL_DIAGNOSTICO("fatRelDiagnostico"),
		CIRURGIA("cirurgia"),
		CON_NUMERO("consulta.numero");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	@Version
	@Column(name = "VERSION", nullable = false, length = 9)
	public Integer getVersion() {
		return version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((seq == null) ? 0 : seq.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj){
			return true;
		}
		if (obj == null){
			return false;
		}
		if (getClass() != obj.getClass()){
			return false;
		}
		MamDiagnostico other = (MamDiagnostico) obj;
		if (seq == null) {
			if (other.seq != null){
				return false;
			}
		} else if (!seq.equals(other.seq)){
			return false;
		}
		return true;
	}

	@Override
	public String toString() {
		return new ToStringBuilder(this).append("seq", this.seq).append("version", this.version).toString();
	}
	
	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void validarComplemento() {
		if (!((!StringUtils.isBlank(complemento)&& cid!=null)||(StringUtils.isBlank(complemento)))) {
			throw new BaseRuntimeException(MamDiagnosticoExceptionCode.ERRO_AO_PERSISTIR_COMPLEMENTO);
		}
	}

}

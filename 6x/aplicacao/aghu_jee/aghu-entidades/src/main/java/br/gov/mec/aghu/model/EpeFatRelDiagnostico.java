package br.gov.mec.aghu.model;

// Generated 17/10/2011 14:21:24 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Version;


import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * EpeFatRelDiagnosticos generated by hbm2java
 */
@Entity
@Table(name = "EPE_FAT_REL_DIAGNOSTICOS", schema = "AGH")
public class EpeFatRelDiagnostico extends BaseEntityId<EpeFatRelDiagnosticoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5943768328184274824L;
	private EpeFatRelDiagnosticoId id;
	private Integer version;
	private EpeDiagnostico diagnostico;
	private EpeFatRelacionado fatRelacionado;
	private DominioSituacao situacao;
	private Set<EpeFatDiagPaciente> fatDiagPacientes = new HashSet<EpeFatDiagPaciente>(
			0);
	private Set<EpeCuidadoDiagnostico> cuidadosDiagnosticos = new HashSet<EpeCuidadoDiagnostico>(
			0);
//	private Short dgnSnbGnbSeqEsperanto;
//	private Short dgnSnbSequenciaEsperanto;
//	private Short dgnSequenciaEsperanto;
//	private Short freSeqEsperanto;

	public EpeFatRelDiagnostico() {
	}

	public EpeFatRelDiagnostico(EpeFatRelDiagnosticoId id,
			EpeDiagnostico diagnostico,
			EpeFatRelacionado fatRelacionado, DominioSituacao situacao) {
		this.id = id;
		this.diagnostico = diagnostico;
		this.fatRelacionado = fatRelacionado;
		this.situacao = situacao;
	}

	public EpeFatRelDiagnostico(EpeFatRelDiagnosticoId id,
			EpeDiagnostico diagnostico,
			EpeFatRelacionado fatRelacionado, DominioSituacao situacao,
			Set<EpeFatDiagPaciente> fatDiagPacientes,
			Set<EpeCuidadoDiagnostico> cuidadosDiagnosticos) {
		this.id = id;
		this.diagnostico = diagnostico;
		this.fatRelacionado = fatRelacionado;
		this.situacao = situacao;
		this.fatDiagPacientes = fatDiagPacientes;
		this.cuidadosDiagnosticos = cuidadosDiagnosticos;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "dgnSnbGnbSeq", column = @Column(name = "DGN_SNB_GNB_SEQ", nullable = false, precision = 4, scale = 0)),
			@AttributeOverride(name = "dgnSnbSequencia", column = @Column(name = "DGN_SNB_SEQUENCIA", nullable = false, precision = 3, scale = 0)),
			@AttributeOverride(name = "dgnSequencia", column = @Column(name = "DGN_SEQUENCIA", nullable = false, precision = 4, scale = 0)),
			@AttributeOverride(name = "freSeq", column = @Column(name = "FRE_SEQ", nullable = false, precision = 4, scale = 0)) })
	public EpeFatRelDiagnosticoId getId() {
		return this.id;
	}

	public void setId(EpeFatRelDiagnosticoId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false, precision = 9, scale = 0)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "DGN_SNB_GNB_SEQ", referencedColumnName = "SNB_GNB_SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "DGN_SNB_SEQUENCIA", referencedColumnName = "SNB_SEQUENCIA", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "DGN_SEQUENCIA", referencedColumnName = "SEQUENCIA", nullable = false,insertable = false, updatable = false) })
	public EpeDiagnostico getDiagnostico() {
		return this.diagnostico;
	}

	public void setDiagnostico(EpeDiagnostico diagnostico) {
		this.diagnostico = diagnostico;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FRE_SEQ", nullable = false, insertable = false, updatable = false)
	public EpeFatRelacionado getFatRelacionado() {
		return this.fatRelacionado;
	}

	public void setFatRelacionado(EpeFatRelacionado fatRelacionado) {
		this.fatRelacionado = fatRelacionado;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getSituacao() {
		return this.situacao;
	}

	public void setSituacao(DominioSituacao situacao) {
		this.situacao = situacao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fatRelDiagnostico")
	public Set<EpeFatDiagPaciente> getFatDiagPacientes() {
		return this.fatDiagPacientes;
	}

	public void setFatDiagPacientes(
			Set<EpeFatDiagPaciente> fatDiagPacientes) {
		this.fatDiagPacientes = fatDiagPacientes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fatRelDiagnostico")
	public Set<EpeCuidadoDiagnostico> getCuidadosDiagnosticos() {
		return this.cuidadosDiagnosticos;
	}

	public void setCuidadosDiagnosticos(
			Set<EpeCuidadoDiagnostico> cuidadosDiagnosticos) {
		this.cuidadosDiagnosticos = cuidadosDiagnosticos;
	}
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		EpeFatRelDiagnostico other = (EpeFatRelDiagnostico) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}

	public enum Fields {
		DGN_SNB_GNB_SEQ("id.dgnSnbGnbSeq"),
		DGN_SNB_SEQUENCIA("id.dgnSnbSequencia"),
		DGN_SEQUENCIA("id.dgnSequencia"),
		FRE_SEQ("id.freSeq"),
		FAT_RELACIONADO("fatRelacionado"),
		DIAGNOSTICO("diagnostico"),
		FAT_DIAG_PACIENTE("fatDiagPacientes"),
		CUIDADO_DIAGNOSTICO("cuidadosDiagnosticos"),
		SITUACAO("situacao");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

//	@Column(name = "DGN_SNB_GNB_SEQ_ESPERANTO", nullable = true, precision = 4, scale = 0)
//	public Short getDgnSnbGnbSeqEsperanto() {
//		return dgnSnbGnbSeqEsperanto;
//	}
//
//	public void setDgnSnbGnbSeqEsperanto(Short dgnSnbGnbSeqEsperanto) {
//		this.dgnSnbGnbSeqEsperanto = dgnSnbGnbSeqEsperanto;
//	}
//
//	@Column(name = "DGN_SNB_SEQUENCIA_ESPERANTO", nullable = true, precision = 3, scale = 0)
//	public Short getDgnSnbSequenciaEsperanto() {
//		return dgnSnbSequenciaEsperanto;
//	}
//
//	public void setDgnSnbSequenciaEsperanto(Short dgnSnbSequenciaEsperanto) {
//		this.dgnSnbSequenciaEsperanto = dgnSnbSequenciaEsperanto;
//	}
//
//	@Column(name = "DGN_SEQUENCIA_ESPERANTO", nullable = true, precision = 4, scale = 0)
//	public Short getDgnSequenciaEsperanto() {
//		return dgnSequenciaEsperanto;
//	}
//
//	public void setDgnSequenciaEsperanto(Short dgnSequenciaEsperanto) {
//		this.dgnSequenciaEsperanto = dgnSequenciaEsperanto;
//	}
//
//	@Column(name = "FRE_SEQ_ESPERANTO", nullable = true, precision = 4, scale = 0)
//	public Short getFreSeqEsperanto() {
//		return freSeqEsperanto;
//	}
//
//	public void setFreSeqEsperanto(Short freSeqEsperanto) {
//		this.freSeqEsperanto = freSeqEsperanto;
//	}

}

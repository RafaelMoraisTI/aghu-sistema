package br.gov.mec.aghu.model;

// Generated 04/02/2011 16:54:07 by Hibernate Tools 3.2.5.Beta

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MpaCadOrdItemNutricoes generated by hbm2java
 */

@Entity
@Table(name = "MPA_CAD_ORD_ITEM_NUTRICOES", schema = "AGH")
public class MpaCadOrdItemNutricoes extends BaseEntityId<MpaCadOrdItemNutricoesId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -7789367323381184837L;
	private MpaCadOrdItemNutricoesId id;
	private Short frequencia; 
	private BigDecimal qtde;
	private AnuTipoItemDieta tipoItemDieta;
	private MpmTipoFrequenciaAprazamento tipoFrequenciaAprazamento;
	private RapServidores servidor;
	private Date criadoEm;
	private Byte numVezes;
	private Set<MpaUsoOrdItemNutricoes> mpaUsoOrdItemNutricoeses = new HashSet<MpaUsoOrdItemNutricoes>(0);

	public MpaCadOrdItemNutricoes() {
	}

	public MpaCadOrdItemNutricoes(MpaCadOrdItemNutricoesId id, AnuTipoItemDieta tipoItemDieta,
			RapServidores servidor, Date criadoEm) {
		this.id = id;
		this.tipoItemDieta = tipoItemDieta;
		this.servidor = servidor;
		this.criadoEm = criadoEm;
	}

	public MpaCadOrdItemNutricoes(MpaCadOrdItemNutricoesId id,
			Short frequencia, BigDecimal qtde, AnuTipoItemDieta tipoItemDieta, MpmTipoFrequenciaAprazamento tipoFrequenciaAprazamento,
			RapServidores servidor, Date criadoEm, Byte numVezes,
			Set<MpaUsoOrdItemNutricoes> mpaUsoOrdItemNutricoeses) {
		this.id = id;
		this.frequencia = frequencia;
		this.qtde = qtde;
		this.tipoItemDieta = tipoItemDieta;
		this.tipoFrequenciaAprazamento = tipoFrequenciaAprazamento;
		this.servidor = servidor;
		this.criadoEm = criadoEm;
		this.numVezes = numVezes;
		this.mpaUsoOrdItemNutricoeses = mpaUsoOrdItemNutricoeses;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "corSeq", column = @Column(name = "COR_SEQ", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false, precision = 4, scale = 0)) })
	public MpaCadOrdItemNutricoesId getId() {
		return this.id;
	}

	public void setId(MpaCadOrdItemNutricoesId id) {
		this.id = id;
	}

	@Column(name = "FREQUENCIA", precision = 3, scale = 0)
	public Short getFrequencia() {
		return this.frequencia;
	}

	public void setFrequencia(Short frequencia) {
		this.frequencia = frequencia;
	}

	@Column(name = "QTDE", precision = 7)
	public BigDecimal getQtde() {
		return this.qtde;
	}

	public void setQtde(BigDecimal qtde) {
		this.qtde = qtde;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TID_SEQ", referencedColumnName = "SEQ", nullable = false, insertable = false, updatable = false)
	public AnuTipoItemDieta getTipoItemDieta() {
		return tipoItemDieta;
	}

	public void setTipoItemDieta(AnuTipoItemDieta tipoItemDieta) {
		this.tipoItemDieta = tipoItemDieta;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TFQ_SEQ")
	public MpmTipoFrequenciaAprazamento getTipoFrequenciaAprazamento() {
		return tipoFrequenciaAprazamento;
	}

	public void setTipoFrequenciaAprazamento(MpmTipoFrequenciaAprazamento tipoFrequenciaAprazamento) {
		this.tipoFrequenciaAprazamento = tipoFrequenciaAprazamento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "NUM_VEZES", precision = 2, scale = 0)
	public Byte getNumVezes() {
		return this.numVezes;
	}

	public void setNumVezes(Byte numVezes) {
		this.numVezes = numVezes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cadOrdItemNutricoes")
	public Set<MpaUsoOrdItemNutricoes> getMpaUsoOrdItemNutricoeses() {
		return this.mpaUsoOrdItemNutricoeses;
	}

	public void setMpaUsoOrdItemNutricoeses(
			Set<MpaUsoOrdItemNutricoes> mpaUsoOrdItemNutricoeses) {
		this.mpaUsoOrdItemNutricoeses = mpaUsoOrdItemNutricoeses;
	}
	
	public enum Fields {
		ID("id"),FREQUENCIA("frequencia"),QTDE("qtde"),TIPO_ITEM_DIETA("tipoItemDieta"),
		TIPO_FREQ_APRAZAMENTOS("tipoFrequenciaAprazamento"),
		SERVIDOR("servidor"),CRIADO_EM("criadoEm"),NUM_VEZES("numVezes"),USO_ORD_ITEM_NUTRICOES("mpaUsoOrdItemNutricoeses");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MpaCadOrdItemNutricoes)) {
			return false;
		}
		MpaCadOrdItemNutricoes other = (MpaCadOrdItemNutricoes) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

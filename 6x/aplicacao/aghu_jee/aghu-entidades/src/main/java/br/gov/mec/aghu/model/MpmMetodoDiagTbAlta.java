package br.gov.mec.aghu.model;

// Generated 14/09/2010 17:49:55 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MpmMetodoDiagTbAlta generated by hbm2java
 */
@Entity
@Table(name = "MPM_METODO_DIAG_TB_ALTAS", schema = "AGH")
public class MpmMetodoDiagTbAlta extends BaseEntityId<MpmMetodoDiagTbAltaId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -3654062002707872954L;

	/**
	 * Chave prim√°ria (composta) da base de dados.
	 */
	private MpmMetodoDiagTbAltaId id;

	/**
	 * 
	 */
	private MpmAltaHospControleTb mpmAltaHospControleTbs;

	/**
	 * 
	 */
	private MpmResultMetodoDiagTb mpmResultMetodoDiagTbs;

	/**
	 * 
	 */
	private RapServidores servidor;

	/**
	 * 
	 */
	private Date criadoEm;

	/**
	 * 
	 */
	private String descricao;

	/**
	 * 
	 */
	private String resultadoApBiopsia;

	/**
	 * 
	 */
	private String localizacao;

	public MpmMetodoDiagTbAlta() {
	}

	public MpmMetodoDiagTbAlta(MpmMetodoDiagTbAltaId id,
			MpmAltaHospControleTb mpmAltaHospControleTbs,
			MpmResultMetodoDiagTb mpmResultMetodoDiagTbs,
			RapServidores servidor, Date criadoEm) {
		this.id = id;
		this.mpmAltaHospControleTbs = mpmAltaHospControleTbs;
		this.mpmResultMetodoDiagTbs = mpmResultMetodoDiagTbs;
		this.servidor = servidor;
		this.criadoEm = criadoEm;
	}

	public MpmMetodoDiagTbAlta(MpmMetodoDiagTbAltaId id,
			MpmAltaHospControleTb mpmAltaHospControleTbs,
			MpmResultMetodoDiagTb mpmResultMetodoDiagTbs,
			RapServidores servidor, Date criadoEm, String descricao,
			String resultadoApBiopsia, String localizacao) {
		this.id = id;
		this.mpmAltaHospControleTbs = mpmAltaHospControleTbs;
		this.mpmResultMetodoDiagTbs = mpmResultMetodoDiagTbs;
		this.servidor = servidor;
		this.criadoEm = criadoEm;
		this.descricao = descricao;
		this.resultadoApBiopsia = resultadoApBiopsia;
		this.localizacao = localizacao;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "actAtdSeq", column = @Column(name = "ACT_ATD_SEQ", nullable = false, precision = 7, scale = 0)),
			@AttributeOverride(name = "rmdMdtSeq", column = @Column(name = "RMD_MDT_SEQ", nullable = false, precision = 3, scale = 0)),
			@AttributeOverride(name = "rmdSeqp", column = @Column(name = "RMD_SEQP", nullable = false, precision = 2, scale = 0)) })
	public MpmMetodoDiagTbAltaId getId() {
		return this.id;
	}

	public void setId(MpmMetodoDiagTbAltaId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ACT_ATD_SEQ", nullable = false, insertable = false, updatable = false)
	public MpmAltaHospControleTb getMpmAltaHospControleTbs() {
		return this.mpmAltaHospControleTbs;
	}

	public void setMpmAltaHospControleTbs(
			MpmAltaHospControleTb mpmAltaHospControleTbs) {
		this.mpmAltaHospControleTbs = mpmAltaHospControleTbs;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "RMD_MDT_SEQ", referencedColumnName = "MDT_SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "RMD_SEQP", referencedColumnName = "SEQP", nullable = false, insertable = false, updatable = false) })
	public MpmResultMetodoDiagTb getMpmResultMetodoDiagTbs() {
		return this.mpmResultMetodoDiagTbs;
	}

	public void setMpmResultMetodoDiagTbs(
			MpmResultMetodoDiagTb mpmResultMetodoDiagTbs) {
		this.mpmResultMetodoDiagTbs = mpmResultMetodoDiagTbs;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "DESCRICAO", length = 500)
	@Length(max = 500)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "RESULTADO_AP_BIOPSIA", length = 240)
	@Length(max = 240)
	public String getResultadoApBiopsia() {
		return this.resultadoApBiopsia;
	}

	public void setResultadoApBiopsia(String resultadoApBiopsia) {
		this.resultadoApBiopsia = resultadoApBiopsia;
	}

	@Column(name = "LOCALIZACAO", length = 240)
	@Length(max = 240)
	public String getLocalizacao() {
		return this.localizacao;
	}

	public void setLocalizacao(String localizacao) {
		this.localizacao = localizacao;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MpmMetodoDiagTbAlta)) {
			return false;
		}
		MpmMetodoDiagTbAlta other = (MpmMetodoDiagTbAlta) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}

	public enum Fields {

		ID("id"),
		MPM_ALTA_HOSP_CONTROLE_TBS("mpmAltaHospControleTbs"),
		MPM_RESULT_METODO_DIAG_TBS("mpmResultMetodoDiagTbs"),
		SERVIDOR("servidor"),
		CRIADO_EM("criadoEm"),
		DESCRICAO("descricao"),
		RESULTADO_AP_BIOPSIA("resultadoApBiopsia"),
		LOCALIZACAO("localizacao");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}

}

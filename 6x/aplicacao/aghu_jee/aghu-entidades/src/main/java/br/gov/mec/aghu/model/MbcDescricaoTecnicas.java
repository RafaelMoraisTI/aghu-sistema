package br.gov.mec.aghu.model;

// Generated 19/04/2012 16:57:27 by Hibernate Tools 3.4.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MbcDescricaoTecnicas generated by hbm2java
 */
@Entity
@Table(name = "MBC_DESCRICAO_TECNICAS", schema = "AGH")
public class MbcDescricaoTecnicas extends BaseEntityId<MbcDescricaoCirurgicaId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 9105420720326614519L;
	private MbcDescricaoCirurgicaId id;
	private Integer version;
	private String descricaoTecnica;
	private MbcDescricaoCirurgica mbcDescricaoCirurgica;

	public MbcDescricaoTecnicas() {
	}

	public MbcDescricaoTecnicas(MbcDescricaoCirurgicaId id,
			String descricaoTecnica) {
		this.id = id;
		this.descricaoTecnica = descricaoTecnica;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "crgSeq", column = @Column(name = "DCG_CRG_SEQ", nullable = false)),
			@AttributeOverride(name = "seqp", column = @Column(name = "DCG_SEQP", nullable = false)) })
	public MbcDescricaoCirurgicaId getId() {
		return this.id;
	}

	public void setId(MbcDescricaoCirurgicaId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Column(name = "DESCRICAO_TECNICA", nullable = false, length = 4000)
	@Length(max = 4000)
	public String getDescricaoTecnica() {
		return this.descricaoTecnica;
	}

	public void setDescricaoTecnica(String descricaoTecnica) {
		this.descricaoTecnica = descricaoTecnica;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public MbcDescricaoCirurgica getMbcDescricaoCirurgica() {
		return this.mbcDescricaoCirurgica;
	}

	public void setMbcDescricaoCirurgica(MbcDescricaoCirurgica mbcDescricaoCirurgica) {
		this.mbcDescricaoCirurgica = mbcDescricaoCirurgica;
	}

	public enum Fields {
		DCG_CRG_SEQ("id.crgSeq"),
		DCG_SEQP("id.seqp"),
		DESCRICAO_TECNICA("descricaoTecnica");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MbcDescricaoTecnicas)) {
			return false;
		}
		MbcDescricaoTecnicas other = (MbcDescricaoTecnicas) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

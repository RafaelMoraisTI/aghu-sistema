package br.gov.mec.aghu.model;

// Generated 26/02/2010 17:37:25 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;
import javax.validation.constraints.NotNull;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * McoMedicamentoTrabPartos generated by hbm2java
 */
@Entity
@Table(name = "MCO_MEDICAMENTO_TRAB_PARTOS", schema = "AGH")
public class McoMedicamentoTrabPartos extends BaseEntityId<McoMedicamentoTrabPartosId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -2690429700737757852L;
	private McoMedicamentoTrabPartosId id;
	private McoGestacoes mcoGestacoes;
	private Date dataHoraInicial;
	private Date dataHoraFinal;
	private Date criadoEm;
/*	private Short serVinCodigo;
	private Integer serMatricula;*/
	private Integer dose;
	private String observacao;
	private Integer version;
	
	private AfaMedicamento medicamento;
	private RapServidores servidor;

	public McoMedicamentoTrabPartos() {
	}

	public McoMedicamentoTrabPartos(McoMedicamentoTrabPartosId id,
			McoGestacoes mcoGestacoes, Date criadoEm, RapServidores servidor) {
		this.id = id;
		this.mcoGestacoes = mcoGestacoes;
		this.criadoEm = criadoEm;
		this.servidor = servidor;
	}

	public McoMedicamentoTrabPartos(McoMedicamentoTrabPartosId id,
			McoGestacoes mcoGestacoes, Date dataHoraInicial, Date dataHoraFinal,
			Date criadoEm, RapServidores servidor, Integer dose) {
		this.id = id;
		this.mcoGestacoes = mcoGestacoes;
		this.dataHoraInicial = dataHoraInicial;
		this.dataHoraFinal = dataHoraFinal;
		this.criadoEm = criadoEm;
		this.dose = dose;
		this.servidor = servidor;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "gsoPacCodigo", column = @Column(name = "GSO_PAC_CODIGO", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "gsoSeqp", column = @Column(name = "GSO_SEQP", nullable = false, precision = 3, scale = 0)),
			@AttributeOverride(name = "medMatCodigo", column = @Column(name = "MED_MAT_CODIGO", nullable = false, precision = 6, scale = 0)) })
	public McoMedicamentoTrabPartosId getId() {
		return this.id;
	}

	public void setId(McoMedicamentoTrabPartosId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "GSO_PAC_CODIGO", referencedColumnName = "PAC_CODIGO", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "GSO_SEQP", referencedColumnName = "SEQP", nullable = false, insertable = false, updatable = false) })
	public McoGestacoes getMcoGestacoes() {
		return this.mcoGestacoes;
	}

	public void setMcoGestacoes(McoGestacoes mcoGestacoes) {
		this.mcoGestacoes = mcoGestacoes;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_INI", nullable = true)
	public Date getDataHoraInicial() {
		return dataHoraInicial;
	}

	public void setDataHoraInicial(Date dataHoraInicial) {
		this.dataHoraInicial = dataHoraInicial;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_FIM", nullable = true)
	public Date getDataHoraFinal() {
		return dataHoraFinal;
	}

	public void setDataHoraFinal(Date dataHoraFinal) {
		this.dataHoraFinal = dataHoraFinal;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	@NotNull
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "DOSE", precision = 5, scale = 0)
	public Integer getDose() {
		return this.dose;
	}

	public void setDose(Integer dose) {
		this.dose = dose;
	}
	
	@Column(name = "OBSERVACAO", nullable = true, length = 20)
	public String getObservacao() {
		return observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}
	
	public enum Fields {
		CODIGO_PACIENTE("id.gsoPacCodigo"), 
		SEQUENCE("id.gsoSeqp"),
		SERVIDOR("servidor"),
		MEDICAMENTO("medicamento"),

		GSO_CODIGO_PACIENTE("id.gsoPacCodigo"), 
		GSO_SEQ_PACIENTE("id.gsoSeqp"),
		MED_MAT_CODIGO("id.medMatCodigo"),
		DTHR_INI("dataHoraInicial"),		
		DTHR_FIM("dataHoraFim"), 
		CRIADO_EM("criadoEm");
		;
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}		

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MED_MAT_CODIGO", referencedColumnName="MAT_CODIGO", insertable=false, updatable=false)
	public AfaMedicamento getMedicamento() {
		return medicamento;
	}

	public void setMedicamento(AfaMedicamento medicamento) {
		this.medicamento = medicamento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
		@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
		@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO")})
	public RapServidores getServidor() {
		return servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = super.hashCode();
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (!super.equals(obj)) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		McoMedicamentoTrabPartos other = (McoMedicamentoTrabPartos) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}
	
}

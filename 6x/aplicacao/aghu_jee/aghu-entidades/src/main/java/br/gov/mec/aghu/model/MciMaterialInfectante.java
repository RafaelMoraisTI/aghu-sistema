package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MciMaterialInfectante generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mciMaiSq1", sequenceName="AGH.MCI_MAI_SQ1", allocationSize = 1)
@Table(name = "MCI_MATERIAL_INFECTANTES", schema = "AGH")
public class MciMaterialInfectante extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2932579653598289931L;
	private Integer seq;
	private Integer version;
	private RapServidores rapServidoresByMciMaiSerFk1;
	private RapServidores rapServidoresByMciMaiSerFk2;
	private String descricao;
	private String indSituacao;
	private Date criadoEm;
	private Date alteradoEm;
	private Set<MciMaterialInfecPatologia> mciMaterialInfecPatologiaes = new HashSet<MciMaterialInfecPatologia>(0);
	private Set<MciGrupoMatInfecMaterial> mciGrupoMatInfecMateriales = new HashSet<MciGrupoMatInfecMaterial>(0);

	public MciMaterialInfectante() {
	}

	public MciMaterialInfectante(Integer seq, RapServidores rapServidoresByMciMaiSerFk1, String descricao, String indSituacao,
			Date criadoEm) {
		this.seq = seq;
		this.rapServidoresByMciMaiSerFk1 = rapServidoresByMciMaiSerFk1;
		this.descricao = descricao;
		this.indSituacao = indSituacao;
		this.criadoEm = criadoEm;
	}

	public MciMaterialInfectante(Integer seq, RapServidores rapServidoresByMciMaiSerFk1, RapServidores rapServidoresByMciMaiSerFk2,
			String descricao, String indSituacao, Date criadoEm, Date alteradoEm,
			Set<MciMaterialInfecPatologia> mciMaterialInfecPatologiaes, Set<MciGrupoMatInfecMaterial> mciGrupoMatInfecMateriales) {
		this.seq = seq;
		this.rapServidoresByMciMaiSerFk1 = rapServidoresByMciMaiSerFk1;
		this.rapServidoresByMciMaiSerFk2 = rapServidoresByMciMaiSerFk2;
		this.descricao = descricao;
		this.indSituacao = indSituacao;
		this.criadoEm = criadoEm;
		this.alteradoEm = alteradoEm;
		this.mciMaterialInfecPatologiaes = mciMaterialInfecPatologiaes;
		this.mciGrupoMatInfecMateriales = mciGrupoMatInfecMateriales;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mciMaiSq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByMciMaiSerFk1() {
		return this.rapServidoresByMciMaiSerFk1;
	}

	public void setRapServidoresByMciMaiSerFk1(RapServidores rapServidoresByMciMaiSerFk1) {
		this.rapServidoresByMciMaiSerFk1 = rapServidoresByMciMaiSerFk1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_MOVIMENTADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_MOVIMENTADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMciMaiSerFk2() {
		return this.rapServidoresByMciMaiSerFk2;
	}

	public void setRapServidoresByMciMaiSerFk2(RapServidores rapServidoresByMciMaiSerFk2) {
		this.rapServidoresByMciMaiSerFk2 = rapServidoresByMciMaiSerFk2;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 60)
	@Length(max = 60)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(String indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 29)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciMaterialInfectante")
	public Set<MciMaterialInfecPatologia> getMciMaterialInfecPatologiaes() {
		return this.mciMaterialInfecPatologiaes;
	}

	public void setMciMaterialInfecPatologiaes(Set<MciMaterialInfecPatologia> mciMaterialInfecPatologiaes) {
		this.mciMaterialInfecPatologiaes = mciMaterialInfecPatologiaes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciMaterialInfectante")
	public Set<MciGrupoMatInfecMaterial> getMciGrupoMatInfecMateriales() {
		return this.mciGrupoMatInfecMateriales;
	}

	public void setMciGrupoMatInfecMateriales(Set<MciGrupoMatInfecMaterial> mciGrupoMatInfecMateriales) {
		this.mciGrupoMatInfecMateriales = mciGrupoMatInfecMateriales;
	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		RAP_SERVIDORES_BY_MCI_MAI_SER_FK1("rapServidoresByMciMaiSerFk1"),
		RAP_SERVIDORES_BY_MCI_MAI_SER_FK2("rapServidoresByMciMaiSerFk2"),
		DESCRICAO("descricao"),
		IND_SITUACAO("indSituacao"),
		CRIADO_EM("criadoEm"),
		ALTERADO_EM("alteradoEm"),
		MCI_MATERIAL_INFEC_PATOLOGIAES("mciMaterialInfecPatologiaes"),
		MCI_GRUPO_MAT_INFEC_MATERIALES("mciGrupoMatInfecMateriales");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MciMaterialInfectante)) {
			return false;
		}
		MciMaterialInfectante other = (MciMaterialInfectante) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.Transient;


import org.apache.commons.lang3.StringUtils;
import org.hibernate.annotations.Immutable;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * VAelExamesSolicitacao generated by hbm2java.
 * 
 * Está VIEW só possui código ANSI SQL.
 * 
 * @author fwinck
 * 
 */
@Entity
@Table(name = "V_AEL_EXAMES_SOLICITACAO", schema = "AGH")
@Immutable
public class VAelExamesSolicitacao extends BaseEntityId<VAelExamesSolicitacaoId> implements java.io.Serializable {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = -8052831053721088479L;
	private String descricaoExame;
	private String descricaoMaterial;
	private String descricaoUnidade;
	private String indDependente;
	private MpmAltaItemPedidoExame pedidoExame;
	private String descricaoCompleta;
	private VAelExamesSolicitacaoId id;

	public VAelExamesSolicitacao() {
	}
	
	public VAelExamesSolicitacao(String descricaoExame,
			String descricaoMaterial, String descricaoUnidade,
			String indDependente) {
		super();
	
		this.descricaoExame = descricaoExame;
		this.descricaoMaterial = descricaoMaterial;
		this.descricaoUnidade = descricaoUnidade;
		this.indDependente = indDependente;
	}
	
	@EmbeddedId
	@AttributeOverrides( {
		@AttributeOverride(name = "sigla", column = @Column(name = "SIGLA", nullable = false, scale = 0, length=5)),
		@AttributeOverride(name = "manSeq", column = @Column(name = "MAN_SEQ", nullable = false, precision = 99, scale = 0)),
		@AttributeOverride(name = "unfSeq", column = @Column(name = "UNF_SEQ", nullable = false, precision = 99, scale = 0)),
		@AttributeOverride(name = "descricaoUsualExame", column = @Column(name = "DESCRICAO_USUAL_EXAME", length=100))	})
	public VAelExamesSolicitacaoId getId() {
		return id;
	}

	@Column(name = "DESCRICAO_EXAME", length = 100)
	@Length(max = 100)
	public String getDescricaoExame() {
		return descricaoExame;
	}
	public void setDescricaoExame(String descricaoExame) {
		this.descricaoExame = descricaoExame;
	}

	@Transient
	public String getDescricaoUsualExameUpper(){
		if(id.getDescricaoUsualExame() != null){
			return id.getDescricaoUsualExame().toUpperCase();
		}
		return null;
	}
	
	@Column(name = "DESCRICAO_MATERIAL", length = 60)
	@Length(max = 60)
	public String getDescricaoMaterial() {
		return descricaoMaterial;
	}
	public void setDescricaoMaterial(String descricaoMaterial) {
		this.descricaoMaterial = descricaoMaterial;
	}
	@Column(name = "DESCRICAO_UNIDADE", length = 60)
	@Length(max = 60)
	public String getDescricaoUnidade() {
		return descricaoUnidade;
	}
	public void setDescricaoUnidade(String descricaoUnidade) {
		this.descricaoUnidade = descricaoUnidade;
	}
	@Column(name = "IND_DEPENDENTE", length = 1)
	@Length(max = 1)
	public String getIndDependente() {
		return indDependente;
	}
	public void setIndDependente(String indDependente) {
		this.indDependente = indDependente;
	}
	
	@Transient
	public MpmAltaItemPedidoExame getPedidoExame() {
		return pedidoExame;
	}

	public void setPedidoExame(MpmAltaItemPedidoExame pedidoExame) {
		this.pedidoExame = pedidoExame;
	}
	
	@Transient
	public String getDescricaoCompleta() {
		String descUsualExameUpper = StringUtils.isNotBlank(getDescricaoUsualExameUpper()) ? getDescricaoUsualExameUpper() : "";
		String descMaterial = StringUtils.isNotBlank(getDescricaoMaterial()) ? getDescricaoMaterial() : "";
		String descUnidade = StringUtils.isNotBlank(getDescricaoUnidade()) ? getDescricaoUnidade() : "";
		this.descricaoCompleta = descUsualExameUpper + " - " + descMaterial + " - " + descUnidade;
		return this.descricaoCompleta;
	}
	
	public void setDescricaoCompleta(String descricaoCompleta) {
		this.descricaoCompleta = descricaoCompleta;
	}
	
	public enum Fields {

		SIGLA("id.sigla"), MAN_SEQ("id.manSeq"), UNF_SEQ("id.unfSeq"),
		DESCRICAO_EXAME("descricaoExame"), DESCRICAO_USUAL_EXAME("id.descricaoUsualExame"), DESCRICAO_MATERIAL("descricaoMaterial")
		, DESCRICAO_UNIDADE("descricaoUnidade")
		, IND_DEPENDENTE("indDependente");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
		
	}

	public void setId(
			VAelExamesSolicitacaoId Id) {
		this.id = Id;
	}

	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof VAelExamesSolicitacao)) {
			return false;
		}
		VAelExamesSolicitacao other = (VAelExamesSolicitacao) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

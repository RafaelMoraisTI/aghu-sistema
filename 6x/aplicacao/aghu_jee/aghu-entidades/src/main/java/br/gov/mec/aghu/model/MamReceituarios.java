package br.gov.mec.aghu.model;

// Generated 24/02/2010 18:52:08 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;



import org.hibernate.annotations.Cascade;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioIndPendenteAmbulatorio;
import br.gov.mec.aghu.dominio.DominioSimNao;
import br.gov.mec.aghu.dominio.DominioTipoReceituario;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MamReceituarios generated by hbm2java
 */

@SuppressWarnings({"PMD.AghuUsoIndevidoDaEnumDominioSimNaoEntity"})
@Entity
@SequenceGenerator(name="mamRctSq1", sequenceName="AGH.MAM_RCT_SQ1", allocationSize = 1)
@Table(name = "MAM_RECEITUARIOS", schema = "AGH")
public class MamReceituarios extends BaseEntitySeq<Long> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -565158455134394603L;
	private Long seq;
	private MamReceituarios receituario;
	private MamTriagens mamTriagens;
	private String observacao;
	private Byte nroVias;
	private Date dthrCriacao;
	private Date dthrValida;
	private Date dthrMvto;
	private Date dthrValidaMvto;
	private DominioTipoReceituario tipo;
	private DominioIndPendenteAmbulatorio pendente;
	private DominioSimNao indImpresso;
	private AipPacientes  paciente;
	private AacConsultas  consulta;
	private RapServidores servidor;
	private RapServidores servidorValida;
	private RapServidores servidorMovimento;
	private RapServidores servidorValidaMovimento;
	private MpmAltaSumario mpmAltaSumario;
	private MamRegistro registro;
	private Set<MamReceituarios> mamReceituarioses = new HashSet<MamReceituarios>(
			0);
	private Set<MamItemReceituario> mamItemReceituario = new HashSet<MamItemReceituario>(
			0);
	private Integer version;
	private AghAtendimentos atendimentos;
	private Integer atdSeq;
	
	public MamReceituarios() {
	}

	public MamReceituarios(Long seq, Date dthrCriacao,
			DominioTipoReceituario tipo,
			DominioIndPendenteAmbulatorio pendente,
			DominioSimNao indImpresso, AipPacientes paciente,
			AacConsultas  consulta,
			RapServidores servidor) {
		this.seq = seq;
		this.dthrCriacao = dthrCriacao;
		this.tipo = tipo;
		this.pendente = pendente;
		this.indImpresso = indImpresso;
		this.paciente = paciente;
		this.consulta= consulta;
		this.servidor = servidor;
	}

	public MamReceituarios(Long seq, MamReceituarios receituario,
			MamTriagens mamTriagens, String observacao, Byte nroVias,
			Date dthrCriacao, Date dthrValida, Date dthrMvto,
			Date dthrValidaMvto, DominioTipoReceituario tipo,
			DominioIndPendenteAmbulatorio pendente,
			DominioSimNao indImpresso, AipPacientes paciente,
			AacConsultas  consulta,
			Integer conNumero, RapServidores servidor,
			RapServidores servidorValida, RapServidores servidorMovimento,
			RapServidores servidorValidaMovimento,
			MpmAltaSumario mpmAltaSumario, MamRegistro registro,
			Set<MamReceituarios> mamReceituarioses) {
		this.seq = seq;
		this.receituario = receituario;
		this.mamTriagens = mamTriagens;
		this.observacao = observacao;
		this.nroVias = nroVias;
		this.dthrCriacao = dthrCriacao;
		this.dthrValida = dthrValida;
		this.dthrMvto = dthrMvto;
		this.dthrValidaMvto = dthrValidaMvto;
		this.tipo = tipo;
		this.pendente = pendente;
		this.indImpresso = indImpresso;
		this.consulta = consulta;
		this.paciente = paciente;
		this.servidor = servidor;
		this.servidorValida = servidorValida;
		this.servidorMovimento = servidorMovimento;
		this.servidorValidaMovimento = servidorValidaMovimento;
		this.mpmAltaSumario = mpmAltaSumario;
		this.registro = registro;
		this.mamReceituarioses = mamReceituarioses;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mamRctSq1")
	@Column(name = "SEQ", nullable = false, precision = 14, scale = 0)
	public Long getSeq() {
		return this.seq;
	}

	public void setSeq(Long seq) {
		this.seq = seq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RCT_SEQ")
	public MamReceituarios getReceituario() {
		return this.receituario;
	}

	public void setReceituario(MamReceituarios receituario) {
		this.receituario = receituario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TRG_SEQ")
	public MamTriagens getMamTriagens() {
		return this.mamTriagens;
	}

	public void setMamTriagens(MamTriagens mamTriagens) {
		this.mamTriagens = mamTriagens;
	}

	@Column(name = "OBSERVACAO", length = 500)
	@Length(max = 500)
	public String getObservacao() {
		return this.observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}

	@Column(name = "NRO_VIAS", precision = 2, scale = 0)
	public Byte getNroVias() {
		return this.nroVias;
	}

	public void setNroVias(Byte nroVias) {
		this.nroVias = nroVias;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_CRIACAO", nullable = false, length = 7)
	public Date getDthrCriacao() {
		return this.dthrCriacao;
	}

	public void setDthrCriacao(Date dthrCriacao) {
		this.dthrCriacao = dthrCriacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_VALIDA", length = 7)
	public Date getDthrValida() {
		return this.dthrValida;
	}

	public void setDthrValida(Date dthrValida) {
		this.dthrValida = dthrValida;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_MVTO", length = 7)
	public Date getDthrMvto() {
		return this.dthrMvto;
	}

	public void setDthrMvto(Date dthrMvto) {
		this.dthrMvto = dthrMvto;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_VALIDA_MVTO", length = 7)
	public Date getDthrValidaMvto() {
		return this.dthrValidaMvto;
	}

	public void setDthrValidaMvto(Date dthrValidaMvto) {
		this.dthrValidaMvto = dthrValidaMvto;
	}

	@Column(name = "TIPO", nullable = false, length = 2)
	@Enumerated(EnumType.STRING)
	public DominioTipoReceituario getTipo() {
		return this.tipo;
	}

	public void setTipo(DominioTipoReceituario tipo) {
		this.tipo = tipo;
	}

	@Column(name = "IND_PENDENTE", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioIndPendenteAmbulatorio getPendente() {
		return this.pendente;
	}

	public void setPendente(DominioIndPendenteAmbulatorio pendente) {
		this.pendente = pendente;
	}

	@Column(name = "IND_IMPRESSO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSimNao getIndImpresso() {
		return this.indImpresso;
	}

	public void setIndImpresso(DominioSimNao indImpresso) {
		this.indImpresso = indImpresso;
	}
	
	@ManyToOne(fetch=FetchType.LAZY)		
	@JoinColumn(name = "PAC_CODIGO")
	public AipPacientes getPaciente() {
		return paciente;
	}

	public void setPaciente(AipPacientes paciente) {
		this.paciente = paciente;
	}
	
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CON_NUMERO")
	public AacConsultas getConsulta() {
		return consulta;
	}

	public void setConsulta(AacConsultas consulta) {
		this.consulta = consulta;
	}
	
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidor() {
		return servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_VALIDA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_VALIDA", referencedColumnName = "VIN_CODIGO") })		
	public RapServidores getServidorValida() {
		return servidorValida;
	}

	public void setServidorValida(RapServidores servidorValida) {
		this.servidorValida = servidorValida;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_MVTO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_MVTO", referencedColumnName = "VIN_CODIGO") })	
	public RapServidores getServidorMovimento() {
		return servidorMovimento;
	}

	public void setServidorMovimento(RapServidores servidorMovimento) {
		this.servidorMovimento = servidorMovimento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_VALIDA_MVTO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_VALIDA_MVTO", referencedColumnName = "VIN_CODIGO") })		
	public RapServidores getServidorValidaMovimento() {
		return servidorValidaMovimento;
	}

	public void setServidorValidaMovimento(RapServidores servidorValidaMovimento) {
		this.servidorValidaMovimento = servidorValidaMovimento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RGT_SEQ", referencedColumnName= "SEQ")
	public MamRegistro getRegistro() {
		return registro;
	}

	public void setRegistro(MamRegistro registro) {
		this.registro = registro;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "receituario")
	public Set<MamReceituarios> getMamReceituarioses() {
		return this.mamReceituarioses;
	}

	public void setMamReceituarioses(Set<MamReceituarios> mamReceituarioses) {
		this.mamReceituarioses = mamReceituarioses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "receituario")
	@Cascade(org.hibernate.annotations.CascadeType.DELETE)
	public Set<MamItemReceituario> getMamItemReceituario() {
		return mamItemReceituario;
	}

	public void setMamItemReceituario(Set<MamItemReceituario> mamItemReceituario) {
		this.mamItemReceituario = mamItemReceituario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "ASU_APA_ATD_SEQ", referencedColumnName = "APA_ATD_SEQ"),
			@JoinColumn(name = "ASU_APA_SEQ", referencedColumnName = "APA_SEQ"),
			@JoinColumn(name = "ASU_SEQP", referencedColumnName = "SEQP") })
	public MpmAltaSumario getMpmAltaSumario() {
		return mpmAltaSumario;
	}

	public void setMpmAltaSumario(MpmAltaSumario mpmAltaSumario) {
		this.mpmAltaSumario = mpmAltaSumario;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ATD_SEQ", referencedColumnName= "SEQ")
	public AghAtendimentos getAtendimentos() {
		return atendimentos;
	}

	public void setAtendimentos(AghAtendimentos atendimentos) {
		this.atendimentos = atendimentos;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}
	
	@Column(name = "ATD_SEQ", updatable=false,insertable=false)
	public Integer getAtdSeq() {
		return atdSeq;
	}

	public void setAtdSeq(Integer atdSeq) {
		this.atdSeq = atdSeq;
	}
	


	public enum Fields {		
		PACIENTE("paciente"),
		IND_PENDENTE("pendente"),
		DATA_VALIDA_MVTO("dthrValidaMvto"),
		MPM_ALTA_SUMARIO("mpmAltaSumario"),
		CONSULTA("consulta"),
		CON_NUMERO("consulta.numero"),
		TIPO("tipo"),
		SEQ("seq"),
		SERVIDOR("servidor"),
		SERVIDOR_VALIDA("servidorValida"),
		SERVIDOR_MOVIMENTO("servidorMovimento"),
		SERVIDOR_VALIDA_MOVIMENTO("servidorValidaMovimento"),
		ASU_SEQP("mpmAltaSumario.id.seqp"), 
		ASU_APA_SEQ("mpmAltaSumario.id.apaSeq"), 
		ASU_APA_ATD_SEQ("mpmAltaSumario.id.apaAtdSeq"),
		RCT_SEQ("receituario.seq"),
		DTHR_VALIDA_MVTO("dthrValidaMvto"),
		PENDENTE("pendente"),
		DTHR_CRIACAO("dthrCriacao"),
		DTHR_MOVIMENTO("dthrMvto"),
		REGISTRO("registro"),
		ATD_SEQ("atdSeq"),
		REGISTRO_SEQ("registro.seq"),
		NRO_VIAS("nroVias"),
		ATENDIMENTO("atendimentos"),
		ATENDIMENTO_SEQ("atendimentos.seq"),
		ITEM_RECEITUARIO("mamItemReceituario")
		;
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}

	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MamReceituarios)) {
			return false;
		}
		MamReceituarios other = (MamReceituarios) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}
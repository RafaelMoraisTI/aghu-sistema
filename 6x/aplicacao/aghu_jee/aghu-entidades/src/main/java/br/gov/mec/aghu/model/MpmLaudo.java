package br.gov.mec.aghu.model;

// Generated 10/08/2010 17:33:16 by Hibernate Tools 3.3.0.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;


import org.apache.commons.lang3.StringUtils;

import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.exception.BusinessExceptionCode;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MpmLaudo generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mpmLadSq1", sequenceName="AGH.MPM_LAD_SQ1", allocationSize = 1)
@Table(name = "MPM_LAUDOS", schema = "AGH")

public class MpmLaudo extends BaseEntitySeq<Integer> implements java.io.Serializable {

	// TODO Implementar coluna version quando utilizar essa entidade para
	// persistencia

	/**
	 * 
	 */
	private static final long serialVersionUID = 5152268854250416696L;
	private Integer seq;
	private RapServidores servidorFeitoManual;
	private MpmTipoLaudo tipoLaudo;
	private FatProcedHospInternos procedimentoHospitalarInterno;
	private RapServidores servidor;
	private MpmPrescricaoNpt prescricaoNpts;
	private MpmLaudo laudo;
	private MpmPrescricaoProcedimento prescricaoProcedimento;
	private MpmItemPrescricaoMdto itemPrescricaoMdtos;
	private AghAtendimentos atendimento;
	private Date dthrInicioValidade;
	private Date dthrFimValidade;
	private Date dthrFimPrevisao;
	private String justificativa;
	private Date criadoEm;
	private Boolean contaDesdobrada;
	private Boolean impresso;
	private Short duracaoTratSolicitado;
	private Boolean laudoManual;
	private Set<MpmLaudo> laudos = new HashSet<MpmLaudo>(0);

	public MpmLaudo() {
	}

	public MpmLaudo(Integer seq, RapServidores servidor,
			AghAtendimentos atendimento, Date dthrInicioValidade,
			Date criadoEm, Boolean contaDesdobrada, Boolean impresso,
			Boolean laudoManual) {
		this.seq = seq;
		this.servidor = servidor;
		this.atendimento = atendimento;
		this.dthrInicioValidade = dthrInicioValidade;
		this.criadoEm = criadoEm;
		this.contaDesdobrada = contaDesdobrada;
		this.impresso = impresso;
		this.laudoManual = laudoManual;
	}

	public MpmLaudo(Integer seq, RapServidores servidorFeitoManual,
			MpmTipoLaudo tipoLaudo,
			FatProcedHospInternos procedimentoHospitalarInterno,
			RapServidores servidor, MpmPrescricaoNpt prescricaoNpts,
			MpmLaudo laudo, MpmPrescricaoProcedimento prescricaoProcedimento,
			MpmItemPrescricaoMdto itemPrescricaoMdtos,
			AghAtendimentos atendimento, Date dthrInicioValidade,
			Date dthrFimValidade, Date dthrFimPrevisao, String justificativa,
			Date criadoEm, Boolean contaDesdobrada, Boolean impresso,
			Short duracaoTratSolicitado, Boolean laudoManual,
			Set<MpmLaudo> laudos) {
		this.seq = seq;
		this.servidorFeitoManual = servidorFeitoManual;
		this.tipoLaudo = tipoLaudo;
		this.procedimentoHospitalarInterno = procedimentoHospitalarInterno;
		this.servidor = servidor;
		this.prescricaoNpts = prescricaoNpts;
		this.laudo = laudo;
		this.prescricaoProcedimento = prescricaoProcedimento;
		this.itemPrescricaoMdtos = itemPrescricaoMdtos;
		this.atendimento = atendimento;
		this.dthrInicioValidade = dthrInicioValidade;
		this.dthrFimValidade = dthrFimValidade;
		this.dthrFimPrevisao = dthrFimPrevisao;
		this.justificativa = justificativa;
		this.criadoEm = criadoEm;
		this.contaDesdobrada = contaDesdobrada;
		this.impresso = impresso;
		this.duracaoTratSolicitado = duracaoTratSolicitado;
		this.laudoManual = laudoManual;
		this.laudos = laudos;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mpmLadSq1")
	@Column(name = "SEQ", unique = true, nullable = false, precision = 8, scale = 0)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA_FEITO_MANUAL", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_FEITO_MANUAL", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorFeitoManual() {
		return this.servidorFeitoManual;
	}

	public void setServidorFeitoManual(RapServidores servidorFeitoManual) {
		this.servidorFeitoManual = servidorFeitoManual;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TUO_SEQ")
	public MpmTipoLaudo getTipoLaudo() {
		return this.tipoLaudo;
	}

	public void setTipoLaudo(MpmTipoLaudo tipoLaudo) {
		this.tipoLaudo = tipoLaudo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PHI_SEQ")
	public FatProcedHospInternos getProcedimentoHospitalarInterno() {
		return this.procedimentoHospitalarInterno;
	}

	public void setProcedimentoHospitalarInterno(
			FatProcedHospInternos procedimentoHospitalarInterno) {
		this.procedimentoHospitalarInterno = procedimentoHospitalarInterno;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "PNP_ATD_SEQ", referencedColumnName = "ATD_SEQ"),
			@JoinColumn(name = "PNP_SEQ", referencedColumnName = "SEQ") })
	public MpmPrescricaoNpt getPrescricaoNpts() {
		return this.prescricaoNpts;
	}

	public void setPrescricaoNpts(MpmPrescricaoNpt prescricaoNpts) {
		this.prescricaoNpts = prescricaoNpts;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LAD_SEQ")
	public MpmLaudo getLaudo() {
		return this.laudo;
	}

	public void setLaudo(MpmLaudo laudo) {
		this.laudo = laudo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "PPR_ATD_SEQ", referencedColumnName = "ATD_SEQ"),
			@JoinColumn(name = "PPR_SEQ", referencedColumnName = "SEQ") })
	public MpmPrescricaoProcedimento getPrescricaoProcedimento() {
		return this.prescricaoProcedimento;
	}

	public void setPrescricaoProcedimento(
			MpmPrescricaoProcedimento prescricaoProcedimento) {
		this.prescricaoProcedimento = prescricaoProcedimento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "IME_PMD_ATD_SEQ", referencedColumnName = "PMD_ATD_SEQ"),
			@JoinColumn(name = "IME_PMD_SEQ", referencedColumnName = "PMD_SEQ"),
			@JoinColumn(name = "IME_MED_MAT_CODIGO", referencedColumnName = "MED_MAT_CODIGO"),
			@JoinColumn(name = "IME_SEQP", referencedColumnName = "SEQP") })
	public MpmItemPrescricaoMdto getItemPrescricaoMdtos() {
		return this.itemPrescricaoMdtos;
	}

	public void setItemPrescricaoMdtos(
			MpmItemPrescricaoMdto itemPrescricaoMdtos) {
		this.itemPrescricaoMdtos = itemPrescricaoMdtos;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ATD_SEQ", nullable = false)
	public AghAtendimentos getAtendimento() {
		return this.atendimento;
	}

	public void setAtendimento(AghAtendimentos atendimento) {
		this.atendimento = atendimento;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_INICIO_VALIDADE", nullable = false, length = 7)
	public Date getDthrInicioValidade() {
		return this.dthrInicioValidade;
	}

	public void setDthrInicioValidade(Date dthrInicioValidade) {
		this.dthrInicioValidade = dthrInicioValidade;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_FIM_VALIDADE", length = 7)
	public Date getDthrFimValidade() {
		return this.dthrFimValidade;
	}

	public void setDthrFimValidade(Date dthrFimValidade) {
		this.dthrFimValidade = dthrFimValidade;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_FIM_PREVISAO", length = 7)
	public Date getDthrFimPrevisao() {
		return this.dthrFimPrevisao;
	}

	public void setDthrFimPrevisao(Date dthrFimPrevisao) {
		this.dthrFimPrevisao = dthrFimPrevisao;
	}

	@Column(name = "JUSTIFICATIVA", length = 2000)
	public String getJustificativa() {
		return this.justificativa;
	}

	public void setJustificativa(String justificativa) {
		this.justificativa = justificativa;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "CONTA_DESDOBRADA", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getContaDesdobrada() {
		return this.contaDesdobrada;
	}

	public void setContaDesdobrada(Boolean contaDesdobrada) {
		this.contaDesdobrada = contaDesdobrada;
	}

	@Column(name = "IND_IMPRESSO", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getImpresso() {
		return this.impresso;
	}

	public void setImpresso(Boolean impresso) {
		this.impresso = impresso;
	}

	@Column(name = "DURACAO_TRAT_SOLICITADO", precision = 3, scale = 0)
	public Short getDuracaoTratSolicitado() {
		return this.duracaoTratSolicitado;
	}

	public void setDuracaoTratSolicitado(Short duracaoTratSolicitado) {
		this.duracaoTratSolicitado = duracaoTratSolicitado;
	}

	@Column(name = "LAUDO_MANUAL", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getLaudoManual() {
		return this.laudoManual;
	}

	public void setLaudoManual(Boolean laudoManual) {
		this.laudoManual = laudoManual;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "laudo")
	public Set<MpmLaudo> getLaudos() {
		return this.laudos;
	}

	public void setLaudos(Set<MpmLaudo> laudos) {
		this.laudos = laudos;
	}

	/**
	 * Substitui "\n" por "<BR/>" para exibir as quebras de linha no momento de exibição 
	 * da justificativa em grigs/tables.
	 * 
	 * @return justificativa formatada.
	 */
	@Transient
	public String getJustificativaFormatada(){
		String str = "";
		if(StringUtils.isNotBlank(this.justificativa)){
			str = this.justificativa.replaceAll("\n", "<BR/>");
		}
		return str;
	}
	
	public enum Fields {
		SEQ("seq"), 
		ATD_SEQ("atendimento.seq"), 
		IND_IMPRESSO("impresso"),
		ATENDIMENTO("atendimento"),
		TIPO_LAUDO("tipoLaudo"),
		TIPO_LAUDO_SEQ("tipoLaudo.seq"),
		JUSTIFICATIVA("justificativa"),
		SERVIDOR_FEITO_MANUAL("servidorFeitoManual"),
		PROCEDIMENTO_HOSPITALAR_INTERNO("procedimentoHospitalarInterno"),
		SERVIDOR("servidor"),
		PRESCRICAO_NPTS("prescricaoNpts"),
		LAUDO("laudo"),
		PRESCRICAO_PROCEDIMENTO("prescricaoProcedimento"),
		PRESCRICAO_PROCEDIMENTO_ID("prescricaoProcedimento.id.seq"),
		PRESCRICAO_PROCEDIMENTO_ATD_ID("prescricaoProcedimento.id.atdSeq"),
		ITEM_PRESCRICAO_MDTOS("itemPrescricaoMdtos"),
		DTHR_INICIO_VALIDADE("dthrInicioValidade"),
		DTHR_FIM_VALIDADE("dthrFimValidade"),
		DTHR_FIM_PREVISAO("dthrFimPrevisao"),
		CRIADO_EM("criadoEm"),
		CONTA_DESDOBRADA("contaDesdobrada"),
		DURACAO_TRAT_SOLICITADO("duracaoTratSolicitado"),
		LAUDO_MANUAL("laudoManual"),
		LAUDOS("laudos");
		
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((seq == null) ? 0 : seq.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		MpmLaudo other = (MpmLaudo) obj;
		if (seq == null) {
			if (other.seq != null) {
				return false;
			}
		} else if (!seq.equals(other.seq)) {
			return false;
		}
		return true;
	}

	private enum LaudoExceptionCode implements BusinessExceptionCode {
		MPM_LAD_CK1
	}

	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void validarConstraints() {

		/* MPM_LAD_CK1 */
		boolean condicao1 = this.procedimentoHospitalarInterno != null
				&& this.procedimentoHospitalarInterno.getSeq() != null
				&& this.tipoLaudo == null;
		boolean condicao2 = this.procedimentoHospitalarInterno == null
				&& this.tipoLaudo != null && this.tipoLaudo.getSeq() != null;
		boolean condicao3 = this.procedimentoHospitalarInterno == null
				&& this.tipoLaudo == null;
		if (!(condicao1 || condicao2 || condicao3)) {
			throw new BaseRuntimeException(LaudoExceptionCode.MPM_LAD_CK1);
		}
	}

}

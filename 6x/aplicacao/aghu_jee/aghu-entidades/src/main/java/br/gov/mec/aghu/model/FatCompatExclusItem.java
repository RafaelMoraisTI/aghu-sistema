package br.gov.mec.aghu.model;

// Generated 15/03/2011 13:46:58 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;


import org.hibernate.annotations.Type;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioIndComparacao;
import br.gov.mec.aghu.dominio.DominioIndCompatExclus;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * FatCompatExclusItens generated by hbm2java
 */
@Entity
@SequenceGenerator(name = "fatIctSeq", sequenceName = "AGH.FAT_ICT_SEQ", allocationSize = 1)
@Table(name = "FAT_COMPAT_EXCLUS_ITENS", schema = "AGH", uniqueConstraints = @UniqueConstraint(columnNames = {
		"IPH_PHO_SEQ", "IPH_SEQ", "IPH_PHO_SEQ_COMPATIBILIZA",
		"IPH_SEQ_COMPATIBILIZA", "IND_COMPARACAO", "IND_COMPAT_EXCLUS",
		"TTR_CODIGO", "CPX_SEQ" }))		
@org.hibernate.annotations.Cache(usage=org.hibernate.annotations.CacheConcurrencyStrategy.TRANSACTIONAL)
public class FatCompatExclusItem extends BaseEntitySeq<Long> implements java.io.Serializable {
	private static final long serialVersionUID = -3335524648752836296L;
	
	private Long seq;
	private FatItensProcedHospitalar itemProcedHosp;
	private FatItensProcedHospitalar itemProcedHospCompatibiliza;
	private DominioIndComparacao indComparacao;
	private DominioIndCompatExclus indCompatExclus;
	private Date criadoEm;
	private String criadoPor;
	private Date alteradoEm;
	private String alteradoPor;
	private String observacao;
	private FatTipoTransplante tipoTransplante;
	private Short quantidadeMaxima;
	private Boolean indAmbulatorio;
	private Boolean indInternacao;
	private Integer version;
	private FatCompetenciaCompatibilid competenciaCompatibilid;
	
	private Boolean modificado;
	private Boolean corVermelha;
	
	public FatCompatExclusItem() {
	}

	public FatCompatExclusItem(FatItensProcedHospitalar itemProcedHosp, FatItensProcedHospitalar itemProcedHospCompatibiliza,
			DominioIndComparacao indComparacao, DominioIndCompatExclus indCompatExclus, Date criadoEm,
			String criadoPor) {
		this.itemProcedHosp = itemProcedHosp;
		this.itemProcedHospCompatibiliza = itemProcedHospCompatibiliza;
		this.indComparacao = indComparacao;
		this.indCompatExclus = indCompatExclus;
		this.criadoEm = criadoEm;
		this.criadoPor = criadoPor;
	}

	public FatCompatExclusItem(Long seq, FatItensProcedHospitalar itemProcedHosp, FatItensProcedHospitalar itemProcedHospCompatibiliza,
			DominioIndComparacao indComparacao, DominioIndCompatExclus indCompatExclus, Date criadoEm,
			String criadoPor, Date alteradoEm, String alteradoPor,
			String observacao, FatTipoTransplante tipoTransplante, Short quantidadeMaxima,
			Boolean indAmbulatorio, Boolean indInternacao) {
		this.seq = seq;
		this.itemProcedHosp = itemProcedHosp;
		this.itemProcedHospCompatibiliza = itemProcedHospCompatibiliza;
		this.indComparacao = indComparacao;
		this.indCompatExclus = indCompatExclus;
		this.criadoEm = criadoEm;
		this.criadoPor = criadoPor;
		this.alteradoEm = alteradoEm;
		this.alteradoPor = alteradoPor;
		this.observacao = observacao;
		this.tipoTransplante = tipoTransplante;
		this.quantidadeMaxima = quantidadeMaxima;
		this.indAmbulatorio = indAmbulatorio;
		this.indInternacao = indInternacao;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "fatIctSeq")
	@Column(name = "SEQ")
	public Long getSeq() {
		return seq;
	}

	public void setSeq(Long seq) {
		this.seq = seq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
	@JoinColumn(name = "IPH_SEQ", referencedColumnName = "SEQ", nullable = false),
	@JoinColumn(name = "IPH_PHO_SEQ", referencedColumnName = "PHO_SEQ", nullable = false)})
	public FatItensProcedHospitalar getItemProcedHosp() {
	
		return this.itemProcedHosp;
	}
	
	public void setItemProcedHosp(FatItensProcedHospitalar itemProcedHosp) {
	
		this.itemProcedHosp = itemProcedHosp;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
	@JoinColumn(name = "IPH_SEQ_COMPATIBILIZA", referencedColumnName = "SEQ", nullable = false),
	@JoinColumn(name = "IPH_PHO_SEQ_COMPATIBILIZA", referencedColumnName = "PHO_SEQ", nullable = false)})
	public FatItensProcedHospitalar getItemProcedHospCompatibiliza() {
	
		return this.itemProcedHospCompatibiliza;
	}
	
	public void setItemProcedHospCompatibiliza(
			FatItensProcedHospitalar itemProcedHospCompatibiliza) {
	
		this.itemProcedHospCompatibiliza = itemProcedHospCompatibiliza;
	}

	@Column(name = "IND_COMPARACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioIndComparacao getIndComparacao() {
		return this.indComparacao;
	}

	public void setIndComparacao(DominioIndComparacao indComparacao) {
		this.indComparacao = indComparacao;
	}

	@Column(name = "IND_COMPAT_EXCLUS", nullable = false, length = 3)
	@Enumerated(EnumType.STRING)
	public DominioIndCompatExclus getIndCompatExclus() {
		return this.indCompatExclus;
	}

	public void setIndCompatExclus(DominioIndCompatExclus indCompatExclus) {
		this.indCompatExclus = indCompatExclus;
	}

	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "CRIADO_POR", nullable = false, length = 30)
	@Length(max = 30)
	public String getCriadoPor() {
		return this.criadoPor;
	}

	public void setCriadoPor(String criadoPor) {
		this.criadoPor = criadoPor;
	}

	@Column(name = "ALTERADO_EM", length = 7)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@Column(name = "ALTERADO_POR", length = 30)
	@Length(max = 30)
	public String getAlteradoPor() {
		return this.alteradoPor;
	}

	public void setAlteradoPor(String alteradoPor) {
		this.alteradoPor = alteradoPor;
	}

	@Column(name = "OBSERVACAO", length = 100)
	@Length(max = 100)
	public String getObservacao() {
		return this.observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TTR_CODIGO")
	public FatTipoTransplante getTipoTransplante() {
	
		return this.tipoTransplante;
	}
	
	public void setTipoTransplante(FatTipoTransplante tipoTransplante) {
	
		this.tipoTransplante = tipoTransplante;
	}

	@Column(name = "QUANTIDADE_MAXIMA", precision = 4, scale = 0)
	public Short getQuantidadeMaxima() {
		return this.quantidadeMaxima;
	}

	public void setQuantidadeMaxima(Short quantidadeMaxima) {
		this.quantidadeMaxima = quantidadeMaxima;
	}

	@Column(name = "IND_AMBULATORIO", length = 1)
	@Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndAmbulatorio() {
		return this.indAmbulatorio;
	}

	public void setIndAmbulatorio(Boolean indAmbulatorio) {
		this.indAmbulatorio = indAmbulatorio;
	}

	@Column(name = "IND_INTERNACAO", length = 1)
	@Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndInternacao() {
		return this.indInternacao;
	}

	public void setIndInternacao(Boolean indInternacao) {
		this.indInternacao = indInternacao;
	}
	
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Transient
	public Boolean getModificado() {
		return modificado;
	}

	public void setModificado(Boolean modificado) {
		this.modificado = modificado;
	}
	
	//Usado para melhorar desempenho e setar se a cor deve ser vermelha na tela
	@Transient
	public Boolean getCorVermelha() {
		return corVermelha;
	}

	public void setCorVermelha(Boolean corVermelha) {
		this.corVermelha = corVermelha;
	}
	

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CPX_SEQ")
	public FatCompetenciaCompatibilid getCompetenciaCompatibilid() {
		return competenciaCompatibilid;
	}

	public void setCompetenciaCompatibilid(
			FatCompetenciaCompatibilid competenciaCompatibilid) {
		this.competenciaCompatibilid = competenciaCompatibilid;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((seq == null) ? 0 : seq.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		FatCompatExclusItem other = (FatCompatExclusItem) obj;
		if (seq == null) {
			if (other.seq != null) {
				return false;
			}
		} else if (!seq.equals(other.seq)) {
			return false;
		}
		return true;
	}


	public enum Fields {
		IPH_COMPATIBILIZA("itemProcedHospCompatibiliza"),
		IPH_PHO_SEQ_COMPATIBILIZA("itemProcedHospCompatibiliza." + FatItensProcedHospitalar.Fields.PHO_SEQ),
		IPH_SEQ_COMPATIBILIZA("itemProcedHospCompatibiliza." + FatItensProcedHospitalar.Fields.SEQ),
		IPH_IND_SITUACAO("itemProcedHospCompatibiliza." + FatItensProcedHospitalar.Fields.IND_SITUACAO),
		IND_SITUACAO_IPH("itemProcedHosp." + FatItensProcedHospitalar.Fields.IND_SITUACAO),
		IND_COMPAT_EXCLUS("indCompatExclus"),
		QUANTIDADE_MAXIMA("quantidadeMaxima"),
		ITEM_PROCED_HOSP("itemProcedHosp"),
		IPH_PHO_SEQ("itemProcedHosp." + FatItensProcedHospitalar.Fields.PHO_SEQ),
		IPH_SEQ("itemProcedHosp." + FatItensProcedHospitalar.Fields.SEQ),
		IPH_COD_TABELA("itemProcedHosp." + FatItensProcedHospitalar.Fields.COD_TABELA),
		IND_COMPARACAO("indComparacao"),
		IND_INTERNACAO("indInternacao"),
		TIPO_TRANSPLANTE("tipoTransplante"),
		IND_AMBULATORIO("indAmbulatorio"),
		TTR_CODIGO("tipoTransplante." + FatTipoTransplante.Fields.CODIGO),
		CPX_SEQ("cpxSeq"),
		COMPETENCIA_COMPATIBILIDADE("competenciaCompatibilid"),
		COMPETENCIA_COMPATIBILIDADE_SEQ("competenciaCompatibilid.seq");
		
		private String fields;

		private Fields(final String fields) {
			this.fields = fields;
	}

		@Override
		public String toString() {
			return this.fields;
		}
	}	
}

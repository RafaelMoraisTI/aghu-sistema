package br.gov.mec.aghu.model;

// Generated 14/09/2010 17:49:55 by Hibernate Tools 3.2.5.Beta

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MpmCidUnidFuncional generated by hbm2java
 */

@Entity
@Table(name = "MPM_CID_UNID_FUNCIONAIS", schema = "AGH")
public class MpmCidUnidFuncional extends BaseEntityId<MpmCidUnidFuncionalId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -7058296995135475896L;
	private MpmCidUnidFuncionalId id;
	private RapServidores servidor;
	private AghUnidadesFuncionais unidadeFuncional;
	private AghCid cid;

	public MpmCidUnidFuncional() {
	}

	public MpmCidUnidFuncional(MpmCidUnidFuncionalId id, RapServidores servidor) {
		this.id = id;
		this.servidor = servidor;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "unfSeq", column = @Column(name = "UNF_SEQ", nullable = false, precision = 4, scale = 0)),
			@AttributeOverride(name = "cidSeq", column = @Column(name = "CID_SEQ", nullable = false, precision = 5, scale = 0)) })
	public MpmCidUnidFuncionalId getId() {
		return this.id;
	}

	public void setId(MpmCidUnidFuncionalId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn( name = "UNF_SEQ", referencedColumnName = "SEQ", nullable = false, insertable = false, updatable = false)
	public AghUnidadesFuncionais getUnidadeFuncional() {
		return unidadeFuncional;
	}

	public void setUnidadeFuncional(AghUnidadesFuncionais unidadeFuncional) {
		this.unidadeFuncional = unidadeFuncional;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn( name = "CID_SEQ", referencedColumnName = "SEQ", nullable = false, insertable = false, updatable = false)
	public AghCid getCid() {
		return cid;
	}

	public void setCid(AghCid cid) {
		this.cid = cid;
	}
	
public enum Fields {
		
		UNF_SEQ("id.unfSeq"),
		CID_SEQ("id.cidSeq"),
		SERVIDOR("servidor"),
		UNIDADE_FUNCIONAL("unidadeFuncional"),
		AGH_CID("cid"),
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MpmCidUnidFuncional)) {
			return false;
		}
		MpmCidUnidFuncional other = (MpmCidUnidFuncional) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.exception.BusinessExceptionCode;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MbcAgendaHemoterapia generated by hbm2java
 */
@Entity
@Table(name = "MBC_AGENDA_HEMOTERAPIAS", schema = "AGH")
public class MbcAgendaHemoterapia extends BaseEntityId<MbcAgendaHemoterapiaId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8744530736661945284L;
	private MbcAgendaHemoterapiaId id;
	private Integer version;
	private MbcAgendas mbcAgendas;
	private RapServidores rapServidores;
	private AbsComponenteSanguineo absComponenteSanguineo;
	private Date criadoEm;
	private Boolean indFiltrado;
	private Boolean indIrradiado;
	private Boolean indLavado;
	private Short qtdeUnidade;
	private Short qtdeMl;
	private Short qtdeUnidadeAdic;
	
	private enum MbcAgendaHemoterapiaExceptionCode implements BusinessExceptionCode {
		MBC_AGH_CK4
	}

	public MbcAgendaHemoterapia() {
	}

	public MbcAgendaHemoterapia(MbcAgendaHemoterapiaId id, MbcAgendas mbcAgendas, RapServidores rapServidores,
			AbsComponenteSanguineo absComponenteSanguineo, Date criadoEm, Boolean indFiltrado, Boolean indIrradiado, Boolean indLavado) {
		this.id = id;
		this.mbcAgendas = mbcAgendas;
		this.rapServidores = rapServidores;
		this.absComponenteSanguineo = absComponenteSanguineo;
		this.criadoEm = criadoEm;
		this.indFiltrado = indFiltrado;
		this.indIrradiado = indIrradiado;
		this.indLavado = indLavado;
	}

	public MbcAgendaHemoterapia(MbcAgendaHemoterapiaId id, MbcAgendas mbcAgendas, RapServidores rapServidores,
			AbsComponenteSanguineo absComponenteSanguineo, Date criadoEm, Boolean indFiltrado, Boolean indIrradiado,
			Boolean indLavado, Short qtdeUnidade, Short qtdeMl) {
		this.id = id;
		this.mbcAgendas = mbcAgendas;
		this.rapServidores = rapServidores;
		this.absComponenteSanguineo = absComponenteSanguineo;
		this.criadoEm = criadoEm;
		this.indFiltrado = indFiltrado;
		this.indIrradiado = indIrradiado;
		this.indLavado = indLavado;
		this.qtdeUnidade = qtdeUnidade;
		this.qtdeMl = qtdeMl;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "agdSeq", column = @Column(name = "AGD_SEQ", nullable = false)),
			@AttributeOverride(name = "csaCodigo", column = @Column(name = "CSA_CODIGO", nullable = false, length = 2)) })
	public MbcAgendaHemoterapiaId getId() {
		return this.id;
	}

	public void setId(MbcAgendaHemoterapiaId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "AGD_SEQ", nullable = false, insertable = false, updatable = false)
	public MbcAgendas getMbcAgendas() {
		return this.mbcAgendas;
	}

	public void setMbcAgendas(MbcAgendas mbcAgendas) {
		this.mbcAgendas = mbcAgendas;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CSA_CODIGO", nullable = false, insertable = false, updatable = false)
	public AbsComponenteSanguineo getAbsComponenteSanguineo() {
		return this.absComponenteSanguineo;
	}

	public void setAbsComponenteSanguineo(AbsComponenteSanguineo absComponenteSanguineo) {
		this.absComponenteSanguineo = absComponenteSanguineo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "IND_FILTRADO", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndFiltrado() {
		return this.indFiltrado;
	}

	public void setIndFiltrado(Boolean indFiltrado) {
		this.indFiltrado = indFiltrado;
	}

	@Column(name = "IND_IRRADIADO", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndIrradiado() {
		return this.indIrradiado;
	}

	public void setIndIrradiado(Boolean indIrradiado) {
		this.indIrradiado = indIrradiado;
	}

	@Column(name = "IND_LAVADO", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndLavado() {
		return this.indLavado;
	}

	public void setIndLavado(Boolean indLavado) {
		this.indLavado = indLavado;
	}

	@Column(name = "QTDE_UNIDADE")
	public Short getQtdeUnidade() {
		return this.qtdeUnidade;
	}

	public void setQtdeUnidade(Short qtdeUnidade) {
		this.qtdeUnidade = qtdeUnidade;
	}

	@Column(name = "QTDE_ML")
	public Short getQtdeMl() {
		return this.qtdeMl;
	}

	public void setQtdeMl(Short qtdeMl) {
		this.qtdeMl = qtdeMl;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		MBC_AGENDAS("mbcAgendas"),
		RAP_SERVIDORES("rapServidores"),
		ABS_COMPONENTE_SANGUINEO("absComponenteSanguineo"),
		CRIADO_EM("criadoEm"),
		IND_FILTRADO("indFiltrado"),
		IND_IRRADIADO("indIrradiado"),
		IND_LAVADO("indLavado"),
		QTDE_UNIDADE("qtdeUnidade"),
		QTDE_ML("qtdeMl"),
		QTDE_UNIDADE_ADIC("qtdeUnidadeAdic"),
		AGD_SEQ("id.agdSeq"),
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MbcAgendaHemoterapia)) {
			return false;
		}
		MbcAgendaHemoterapia other = (MbcAgendaHemoterapia) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####
	
	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void validacoes() {

		if ((this.qtdeMl != null || this.qtdeUnidade == null) && (this.qtdeMl == null || this.qtdeUnidade != null)){
			throw new BaseRuntimeException(MbcAgendaHemoterapiaExceptionCode.MBC_AGH_CK4);
		}
	}

	@Column(name = "QTDE_UNID_ADIC")
	public Short getQtdeUnidadeAdic() {
		return qtdeUnidadeAdic;
	}

	public void setQtdeUnidadeAdic(Short qtdeUnidadeAdic) {
		this.qtdeUnidadeAdic = qtdeUnidadeAdic;
	}

}

package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * RapPppFatorRisco generated by hbm2java
 */
@Entity
@Table(name = "RAP_PPP_FATOR_RISCOS", schema = "AGH")
public class RapPppFatorRisco extends BaseEntityId<RapPppFatorRiscoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -2385366328011452298L;
	private RapPppFatorRiscoId id;
	private Integer version;
	private RapServidores rapServidoresByRapFriSerFk3;
	private RapPppAgenteRisco rapPppAgenteRisco;
	private RapServidores rapServidoresByRapFriSerFk1;
	private RapPppItemAgenteRisco rapPppItemAgenteRisco;
	private RapServidores rapServidoresByRapFriSerFk2;
	private Date dtInicio;
	private Date dtFim;
	private String intensidade;
	private String tecnica;
	private String epi;
	private String epc;
	private String nroCaEpi;
	private Date criadoEm;
	private Date alteradoEm;

	public RapPppFatorRisco() {
	}

	public RapPppFatorRisco(RapPppFatorRiscoId id, RapPppAgenteRisco rapPppAgenteRisco, RapServidores rapServidoresByRapFriSerFk1,
			RapServidores rapServidoresByRapFriSerFk2, Date dtInicio, Date criadoEm) {
		this.id = id;
		this.rapPppAgenteRisco = rapPppAgenteRisco;
		this.rapServidoresByRapFriSerFk1 = rapServidoresByRapFriSerFk1;
		this.rapServidoresByRapFriSerFk2 = rapServidoresByRapFriSerFk2;
		this.dtInicio = dtInicio;
		this.criadoEm = criadoEm;
	}

	public RapPppFatorRisco(RapPppFatorRiscoId id, RapServidores rapServidoresByRapFriSerFk3, RapPppAgenteRisco rapPppAgenteRisco,
			RapServidores rapServidoresByRapFriSerFk1, RapPppItemAgenteRisco rapPppItemAgenteRisco,
			RapServidores rapServidoresByRapFriSerFk2, Date dtInicio, Date dtFim, String intensidade, String tecnica, String epi,
			String epc, String nroCaEpi, Date criadoEm, Date alteradoEm) {
		this.id = id;
		this.rapServidoresByRapFriSerFk3 = rapServidoresByRapFriSerFk3;
		this.rapPppAgenteRisco = rapPppAgenteRisco;
		this.rapServidoresByRapFriSerFk1 = rapServidoresByRapFriSerFk1;
		this.rapPppItemAgenteRisco = rapPppItemAgenteRisco;
		this.rapServidoresByRapFriSerFk2 = rapServidoresByRapFriSerFk2;
		this.dtInicio = dtInicio;
		this.dtFim = dtFim;
		this.intensidade = intensidade;
		this.tecnica = tecnica;
		this.epi = epi;
		this.epc = epc;
		this.nroCaEpi = nroCaEpi;
		this.criadoEm = criadoEm;
		this.alteradoEm = alteradoEm;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "serMatricula", column = @Column(name = "SER_MATRICULA", nullable = false)),
			@AttributeOverride(name = "serVinCodigo", column = @Column(name = "SER_VIN_CODIGO", nullable = false)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false)) })
	public RapPppFatorRiscoId getId() {
		return this.id;
	}

	public void setId(RapPppFatorRiscoId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_ALTERADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_ALTERADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByRapFriSerFk3() {
		return this.rapServidoresByRapFriSerFk3;
	}

	public void setRapServidoresByRapFriSerFk3(RapServidores rapServidoresByRapFriSerFk3) {
		this.rapServidoresByRapFriSerFk3 = rapServidoresByRapFriSerFk3;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "AGR_CODIGO", nullable = false)
	public RapPppAgenteRisco getRapPppAgenteRisco() {
		return this.rapPppAgenteRisco;
	}

	public void setRapPppAgenteRisco(RapPppAgenteRisco rapPppAgenteRisco) {
		this.rapPppAgenteRisco = rapPppAgenteRisco;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false, insertable = false, updatable = false) })
	public RapServidores getRapServidoresByRapFriSerFk1() {
		return this.rapServidoresByRapFriSerFk1;
	}

	public void setRapServidoresByRapFriSerFk1(RapServidores rapServidoresByRapFriSerFk1) {
		this.rapServidoresByRapFriSerFk1 = rapServidoresByRapFriSerFk1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IAG_SEQ")
	public RapPppItemAgenteRisco getRapPppItemAgenteRisco() {
		return this.rapPppItemAgenteRisco;
	}

	public void setRapPppItemAgenteRisco(RapPppItemAgenteRisco rapPppItemAgenteRisco) {
		this.rapPppItemAgenteRisco = rapPppItemAgenteRisco;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_CRIADO", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO_CRIADO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByRapFriSerFk2() {
		return this.rapServidoresByRapFriSerFk2;
	}

	public void setRapServidoresByRapFriSerFk2(RapServidores rapServidoresByRapFriSerFk2) {
		this.rapServidoresByRapFriSerFk2 = rapServidoresByRapFriSerFk2;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_INICIO", nullable = false, length = 29)
	public Date getDtInicio() {
		return this.dtInicio;
	}

	public void setDtInicio(Date dtInicio) {
		this.dtInicio = dtInicio;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_FIM", length = 29)
	public Date getDtFim() {
		return this.dtFim;
	}

	public void setDtFim(Date dtFim) {
		this.dtFim = dtFim;
	}

	@Column(name = "INTENSIDADE", length = 20)
	@Length(max = 20)
	public String getIntensidade() {
		return this.intensidade;
	}

	public void setIntensidade(String intensidade) {
		this.intensidade = intensidade;
	}

	@Column(name = "TECNICA", length = 40)
	@Length(max = 40)
	public String getTecnica() {
		return this.tecnica;
	}

	public void setTecnica(String tecnica) {
		this.tecnica = tecnica;
	}

	@Column(name = "EPI", length = 1)
	@Length(max = 1)
	public String getEpi() {
		return this.epi;
	}

	public void setEpi(String epi) {
		this.epi = epi;
	}

	@Column(name = "EPC", length = 1)
	@Length(max = 1)
	public String getEpc() {
		return this.epc;
	}

	public void setEpc(String epc) {
		this.epc = epc;
	}

	@Column(name = "NRO_CA_EPI", length = 10)
	@Length(max = 10)
	public String getNroCaEpi() {
		return this.nroCaEpi;
	}

	public void setNroCaEpi(String nroCaEpi) {
		this.nroCaEpi = nroCaEpi;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 29)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		RAP_SERVIDORES_BY_RAP_FRI_SER_FK3("rapServidoresByRapFriSerFk3"),
		RAP_PPP_AGENTES_RISCO("rapPppAgenteRisco"),
		RAP_SERVIDORES_BY_RAP_FRI_SER_FK1("rapServidoresByRapFriSerFk1"),
		RAP_PPP_ITENS_AGENTE_RISCO("rapPppItemAgenteRisco"),
		RAP_SERVIDORES_BY_RAP_FRI_SER_FK2("rapServidoresByRapFriSerFk2"),
		DT_INICIO("dtInicio"),
		DT_FIM("dtFim"),
		INTENSIDADE("intensidade"),
		TECNICA("tecnica"),
		EPI("epi"),
		EPC("epc"),
		NRO_CA_EPI("nroCaEpi"),
		CRIADO_EM("criadoEm"),
		ALTERADO_EM("alteradoEm");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof RapPppFatorRisco)) {
			return false;
		}
		RapPppFatorRisco other = (RapPppFatorRisco) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

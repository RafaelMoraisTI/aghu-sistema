package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MciCategoriaPriorizacao generated by hbm2java
 */
@Entity
@Table(name = "MCI_CATEGORIA_PRIORIZACOES", schema = "AGH")
public class MciCategoriaPriorizacao extends BaseEntitySeq<Short> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1317598935438702381L;
	private Short seq;
	private Integer version;
	private RapServidores rapServidores;
	private String descricao;
	private String indSituacao;
	private Date criadoEm;
	private Short ordemPriorizacao;
	
	// FIXME Implementar este relacionamento
//	private Set<MciFatorPredisponentes> mciFatorPredisponenteses = new HashSet<MciFatorPredisponentes>(0);
	
	// FIXME Implementar este relacionamento
//	private Set<MciCidNotificacao> mciCidNotificacaoes = new HashSet<MciCidNotificacao>(0);

	public MciCategoriaPriorizacao() {
	}

	public MciCategoriaPriorizacao(Short seq, RapServidores rapServidores, String descricao, String indSituacao, Date criadoEm,
			Short ordemPriorizacao) {
		this.seq = seq;
		this.rapServidores = rapServidores;
		this.descricao = descricao;
		this.indSituacao = indSituacao;
		this.criadoEm = criadoEm;
		this.ordemPriorizacao = ordemPriorizacao;
	}

//	public MciCategoriaPriorizacao(Short seq, RapServidores rapServidores, String descricao, String indSituacao, Date criadoEm,
//			Short ordemPriorizacao, Set<MciFatorPredisponentes> mciFatorPredisponenteses, Set<MciCidNotificacao> mciCidNotificacaoes) {
//		this.seq = seq;
//		this.rapServidores = rapServidores;
//		this.descricao = descricao;
//		this.indSituacao = indSituacao;
//		this.criadoEm = criadoEm;
//		this.ordemPriorizacao = ordemPriorizacao;
//		this.mciFatorPredisponenteses = mciFatorPredisponenteses;
//		this.mciCidNotificacaoes = mciCidNotificacaoes;
//	}

	@Id
	@Column(name = "SEQ", unique = true, nullable = false)
	public Short getSeq() {
		return this.seq;
	}

	public void setSeq(Short seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 240)
	@Length(max = 240)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(String indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "ORDEM_PRIORIZACAO", nullable = false)
	public Short getOrdemPriorizacao() {
		return this.ordemPriorizacao;
	}

	public void setOrdemPriorizacao(Short ordemPriorizacao) {
		this.ordemPriorizacao = ordemPriorizacao;
	}

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciCategoriaPriorizacao")
//	public Set<MciFatorPredisponentes> getMciFatorPredisponenteses() {
//		return this.mciFatorPredisponenteses;
//	}
//
//	public void setMciFatorPredisponenteses(Set<MciFatorPredisponentes> mciFatorPredisponenteses) {
//		this.mciFatorPredisponenteses = mciFatorPredisponenteses;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciCategoriaPriorizacao")
//	public Set<MciCidNotificacao> getMciCidNotificacaoes() {
//		return this.mciCidNotificacaoes;
//	}
//
//	public void setMciCidNotificacaoes(Set<MciCidNotificacao> mciCidNotificacaoes) {
//		this.mciCidNotificacaoes = mciCidNotificacaoes;
//	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		RAP_SERVIDORES("rapServidores"),
		DESCRICAO("descricao"),
		IND_SITUACAO("indSituacao"),
		CRIADO_EM("criadoEm"),
		ORDEM_PRIORIZACAO("ordemPriorizacao"),
//		MCI_FATOR_PREDISPONENTESES("mciFatorPredisponenteses"),
//		MCI_CID_NOTIFICACAOES("mciCidNotificacaoes")
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MciCategoriaPriorizacao)) {
			return false;
		}
		MciCategoriaPriorizacao other = (MciCategoriaPriorizacao) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MciPista generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mciPisSq1", sequenceName="AGH.MCI_PIS_SQ1", allocationSize = 1)
@Table(name = "MCI_PISTAS", schema = "AGH")
public class MciPista extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1693119030438128111L;
	private Integer seq;
	private Integer version;
	private RapServidores rapServidoresByMciPisSerFk2;
	private AelItemSolicitacaoExames aelItemSolicitacaoExames;
	private MbcProcDescricoes mbcProcDescricoes;
	private EpePrescricoesCuidados epePrescricoesCuidados;
	private MpmPrescricaoMdto mpmPrescricaoMdto;
	private MpmPrescricaoCuidado mpmPrescricaoCuidado;
	private RapServidores rapServidoresByMciPisSerFk1;
	private MpmPrescricaoNpt mpmPrescricaoNpt;
	private MpmPrescricaoProcedimento mpmPrescricaoProcedimento;
	private MbcProcEspPorCirurgias mbcProcEspPorCirurgias;
	private AghAtendimentos aghAtendimentos;
	private String descricao;
	private Date criadoEm;
	private Date dthrInicioPrcr;
	private Date dthrFimPrcr;
	private Date alteradoEm;

	public MciPista() {
	}

	public MciPista(Integer seq, RapServidores rapServidoresByMciPisSerFk1, AghAtendimentos aghAtendimentos, String descricao,
			Date criadoEm) {
		this.seq = seq;
		this.rapServidoresByMciPisSerFk1 = rapServidoresByMciPisSerFk1;
		this.aghAtendimentos = aghAtendimentos;
		this.descricao = descricao;
		this.criadoEm = criadoEm;
	}

	public MciPista(Integer seq, RapServidores rapServidoresByMciPisSerFk2, AelItemSolicitacaoExames aelItemSolicitacaoExames,
			MbcProcDescricoes mbcProcDescricoes, EpePrescricoesCuidados epePrescricoesCuidados, MpmPrescricaoMdto mpmPrescricaoMdto,
			MpmPrescricaoCuidado mpmPrescricaoCuidado, RapServidores rapServidoresByMciPisSerFk1,
			MpmPrescricaoNpt mpmPrescricaoNpt, MpmPrescricaoProcedimento mpmPrescricaoProcedimento,
			MbcProcEspPorCirurgias mbcProcEspPorCirurgias, AghAtendimentos aghAtendimentos, String descricao, Date criadoEm,
			Date dthrInicioPrcr, Date dthrFimPrcr, Date alteradoEm) {
		this.seq = seq;
		this.rapServidoresByMciPisSerFk2 = rapServidoresByMciPisSerFk2;
		this.aelItemSolicitacaoExames = aelItemSolicitacaoExames;
		this.mbcProcDescricoes = mbcProcDescricoes;
		this.epePrescricoesCuidados = epePrescricoesCuidados;
		this.mpmPrescricaoMdto = mpmPrescricaoMdto;
		this.mpmPrescricaoCuidado = mpmPrescricaoCuidado;
		this.rapServidoresByMciPisSerFk1 = rapServidoresByMciPisSerFk1;
		this.mpmPrescricaoNpt = mpmPrescricaoNpt;
		this.mpmPrescricaoProcedimento = mpmPrescricaoProcedimento;
		this.mbcProcEspPorCirurgias = mbcProcEspPorCirurgias;
		this.aghAtendimentos = aghAtendimentos;
		this.descricao = descricao;
		this.criadoEm = criadoEm;
		this.dthrInicioPrcr = dthrInicioPrcr;
		this.dthrFimPrcr = dthrFimPrcr;
		this.alteradoEm = alteradoEm;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mciPisSq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_ALTERADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_ALTERADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMciPisSerFk2() {
		return this.rapServidoresByMciPisSerFk2;
	}

	public void setRapServidoresByMciPisSerFk2(RapServidores rapServidoresByMciPisSerFk2) {
		this.rapServidoresByMciPisSerFk2 = rapServidoresByMciPisSerFk2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "ISE_SOE_SEQ", referencedColumnName = "SOE_SEQ"),
			@JoinColumn(name = "ISE_SEQP", referencedColumnName = "SEQP") })
	public AelItemSolicitacaoExames getAelItemSolicitacaoExames() {
		return this.aelItemSolicitacaoExames;
	}

	public void setAelItemSolicitacaoExames(AelItemSolicitacaoExames aelItemSolicitacaoExames) {
		this.aelItemSolicitacaoExames = aelItemSolicitacaoExames;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "POD_DCG_CRG_SEQ", referencedColumnName = "DCG_CRG_SEQ"),
			@JoinColumn(name = "POD_DCG_SEQP", referencedColumnName = "DCG_SEQP"),
			@JoinColumn(name = "POD_SEQP", referencedColumnName = "SEQP") })
	public MbcProcDescricoes getMbcProcDescricoes() {
		return this.mbcProcDescricoes;
	}

	public void setMbcProcDescricoes(MbcProcDescricoes mbcProcDescricoes) {
		this.mbcProcDescricoes = mbcProcDescricoes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "PRC_ATD_SEQ", referencedColumnName = "ATD_SEQ"),
			@JoinColumn(name = "PRC_SEQ", referencedColumnName = "SEQ") })
	public EpePrescricoesCuidados getEpePrescricoesCuidados() {
		return this.epePrescricoesCuidados;
	}

	public void setEpePrescricoesCuidados(EpePrescricoesCuidados epePrescricoesCuidados) {
		this.epePrescricoesCuidados = epePrescricoesCuidados;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "PMD_ATD_SEQ", referencedColumnName = "ATD_SEQ"),
			@JoinColumn(name = "PMD_SEQ", referencedColumnName = "SEQ") })
	public MpmPrescricaoMdto getMpmPrescricaoMdto() {
		return this.mpmPrescricaoMdto;
	}

	public void setMpmPrescricaoMdto(MpmPrescricaoMdto mpmPrescricaoMdto) {
		this.mpmPrescricaoMdto = mpmPrescricaoMdto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "PCU_ATD_SEQ", referencedColumnName = "ATD_SEQ"),
			@JoinColumn(name = "PCU_SEQ", referencedColumnName = "SEQ") })
	public MpmPrescricaoCuidado getMpmPrescricaoCuidado() {
		return this.mpmPrescricaoCuidado;
	}

	public void setMpmPrescricaoCuidado(MpmPrescricaoCuidado mpmPrescricaoCuidado) {
		this.mpmPrescricaoCuidado = mpmPrescricaoCuidado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByMciPisSerFk1() {
		return this.rapServidoresByMciPisSerFk1;
	}

	public void setRapServidoresByMciPisSerFk1(RapServidores rapServidoresByMciPisSerFk1) {
		this.rapServidoresByMciPisSerFk1 = rapServidoresByMciPisSerFk1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "PNP_ATD_SEQ", referencedColumnName = "ATD_SEQ"),
			@JoinColumn(name = "PNP_SEQ", referencedColumnName = "SEQ") })
	public MpmPrescricaoNpt getMpmPrescricaoNpt() {
		return this.mpmPrescricaoNpt;
	}

	public void setMpmPrescricaoNpt(MpmPrescricaoNpt mpmPrescricaoNpt) {
		this.mpmPrescricaoNpt = mpmPrescricaoNpt;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "PPR_ATD_SEQ", referencedColumnName = "ATD_SEQ"),
			@JoinColumn(name = "PPR_SEQ", referencedColumnName = "SEQ") })
	public MpmPrescricaoProcedimento getMpmPrescricaoProcedimento() {
		return this.mpmPrescricaoProcedimento;
	}

	public void setMpmPrescricaoProcedimento(MpmPrescricaoProcedimento mpmPrescricaoProcedimento) {
		this.mpmPrescricaoProcedimento = mpmPrescricaoProcedimento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "PPC_CRG_SEQ", referencedColumnName = "CRG_SEQ"),
			@JoinColumn(name = "PPC_EPR_PCI_SEQ", referencedColumnName = "EPR_PCI_SEQ"),
			@JoinColumn(name = "PPC_EPR_ESP_SEQ", referencedColumnName = "EPR_ESP_SEQ"),
			@JoinColumn(name = "PPC_IND_RESP_PROC", referencedColumnName = "IND_RESP_PROC") })
	public MbcProcEspPorCirurgias getMbcProcEspPorCirurgias() {
		return this.mbcProcEspPorCirurgias;
	}

	public void setMbcProcEspPorCirurgias(MbcProcEspPorCirurgias mbcProcEspPorCirurgias) {
		this.mbcProcEspPorCirurgias = mbcProcEspPorCirurgias;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ATD_SEQ", nullable = false)
	public AghAtendimentos getAghAtendimentos() {
		return this.aghAtendimentos;
	}

	public void setAghAtendimentos(AghAtendimentos aghAtendimentos) {
		this.aghAtendimentos = aghAtendimentos;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 4000)
	@Length(max = 4000)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_INICIO_PRCR", length = 29)
	public Date getDthrInicioPrcr() {
		return this.dthrInicioPrcr;
	}

	public void setDthrInicioPrcr(Date dthrInicioPrcr) {
		this.dthrInicioPrcr = dthrInicioPrcr;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_FIM_PRCR", length = 29)
	public Date getDthrFimPrcr() {
		return this.dthrFimPrcr;
	}

	public void setDthrFimPrcr(Date dthrFimPrcr) {
		this.dthrFimPrcr = dthrFimPrcr;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 29)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		RAP_SERVIDORES_BY_MCI_PIS_SER_FK2("rapServidoresByMciPisSerFk2"),
		AEL_ITEM_SOLICITACAO_EXAMES("aelItemSolicitacaoExames"),
		MBC_PROC_DESCRICOES("mbcProcDescricoes"),
		EPE_PRESCRICOES_CUIDADOS("epePrescricoesCuidados"),
		MPM_PRESCRICAO_MDTO("mpmPrescricaoMdto"),
		MPM_PRESCRICAO_CUIDADO("mpmPrescricaoCuidado"),
		RAP_SERVIDORES_BY_MCI_PIS_SER_FK1("rapServidoresByMciPisSerFk1"),
		MPM_PRESCRICAO_NPT("mpmPrescricaoNpt"),
		MPM_PRESCRICAO_PROCEDIMENTO("mpmPrescricaoProcedimento"),
		MBC_PROC_ESP_POR_CIRURGIAS("mbcProcEspPorCirurgias"),
		AGH_ATENDIMENTOS("aghAtendimentos"),
		DESCRICAO("descricao"),
		CRIADO_EM("criadoEm"),
		DTHR_INICIO_PRCR("dthrInicioPrcr"),
		DTHR_FIM_PRCR("dthrFimPrcr"),
		ALTERADO_EM("alteradoEm");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MciPista)) {
			return false;
		}
		MciPista other = (MciPista) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

// Generated 27/04/2010 20:08:15 by Hibernate Tools 3.2.5.Beta

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;


import org.hibernate.annotations.Immutable;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * VFatAssocProcCids generated by hbm2java
 */

@Entity
@Table(name = "V_FAT_ASSOC_PROC_CIDS", schema = "AGH")
@Immutable
public class VFatAssocProcCids extends BaseEntityId<VFatAssocProcCidsId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5903978730643706430L;

	private VFatAssocProcCidsId id;

	private AghCid cid;
	
	private FatItensProcedHospitalar itemProcedHospitalar;
	
	public VFatAssocProcCids() {
	}

	public VFatAssocProcCids(VFatAssocProcCidsId id) {
		this.id = id;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "cpgCphCspCnvCodigo", column = @Column(name = "CPG_CPH_CSP_CNV_CODIGO", nullable = false, precision = 3, scale = 0)),
			@AttributeOverride(name = "cpgCphCspSeq", column = @Column(name = "CPG_CPH_CSP_SEQ", nullable = false, precision = 2, scale = 0)),
			@AttributeOverride(name = "iphPhoSeq", column = @Column(name = "IPH_PHO_SEQ", nullable = false, precision = 4, scale = 0)),
			@AttributeOverride(name = "iphSeq", column = @Column(name = "IPH_SEQ", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "phiSeq", column = @Column(name = "PHI_SEQ", nullable = false, precision = 6, scale = 0)),
			@AttributeOverride(name = "codTabela", column = @Column(name = "COD_TABELA", nullable = false, precision = 10, scale = 0)),
			@AttributeOverride(name = "iphDescricao", column = @Column(name = "IPH_DESCRICAO", nullable = false, length = 250)),
			@AttributeOverride(name = "phiDescricao", column = @Column(name = "PHI_DESCRICAO", nullable = false, length = 200)),
			@AttributeOverride(name = "phiIndSituacao", column = @Column(name = "PHI_IND_SITUACAO", nullable = false, length = 1)),
			@AttributeOverride(name = "iphIndSituacao", column = @Column(name = "IPH_IND_SITUACAO", nullable = false, length = 1)),
			@AttributeOverride(name = "cidCodigo", column = @Column(name = "CID_CODIGO", nullable = false, length = 5)),
			@AttributeOverride(name = "cidSeq", column = @Column(name = "CID_SEQ", nullable = false, precision = 5, scale = 0)),
			@AttributeOverride(name = "cidDescricao", column = @Column(name = "CID_DESCRICAO", nullable = false, length = 300)),
			@AttributeOverride(name = "cidValidade", column = @Column(name = "CID_VALIDADE", length = 1)) })
	public VFatAssocProcCidsId getId() {
		return this.id;
	}

	public void setId(VFatAssocProcCidsId id) {
		this.id = id;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CID_SEQ", insertable= false, updatable = false)
	public AghCid getCid() {
		return cid;
	}

	public void setCid(AghCid cid) {
		this.cid = cid;
	}
	
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
		@JoinColumn(name = "IPH_SEQ", referencedColumnName = "SEQ", insertable = false, updatable = false),
		@JoinColumn(name = "IPH_PHO_SEQ", referencedColumnName = "PHO_SEQ", insertable = false, updatable = false) })
	public FatItensProcedHospitalar getItemProcedHospitalar() {
		return itemProcedHospitalar;
	}

	public void setItemProcedHospitalar(FatItensProcedHospitalar itemProcedHospitalar) {
		this.itemProcedHospitalar = itemProcedHospitalar;
	}



	public enum Fields {

		CID_CODIGO					("id.cidCodigo"), 
		CID_DESCRICAO				("id.cidDescricao"), 
		CPG_CPH_CSP_CNV_CODIGO		("id.cpgCphCspCnvCodigo"), 
		PHI_SEQ						("id.phiSeq"), 
		COD_TABELA					("id.codTabela"), 
		IPH_DESCRICAO				("id.iphDescricao"),
		IPH_PHO_SEQ					("id.iphPhoSeq"),
		IPH_SEQ						("id.iphSeq"),
		CID							("cid"),
		CODIGO_CID					("cid.codigo"),
		DESCRICAO_CID				("cid.descricao"),
		ITEM_PROCED_HOSPITALAR		("itemProcedHospitalar");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}



	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj){
			return true;
		}
		if (obj == null){
			return false;
		}
		if (getClass() != obj.getClass()){
			return false;
		}
		VFatAssocProcCids other = (VFatAssocProcCids) obj;
		if (id == null) {
			if (other.id != null){
				return false;
			}
		} else if (!id.equals(other.id)){
			return false;
		}
		return true;
	}
	
	

}

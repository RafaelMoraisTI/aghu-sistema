package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * FcpEncargo generated by hbm2java
 */
@Entity
@SequenceGenerator(name="fcpEcgSq1", sequenceName="AGH.FCP_ECG_SQ1", allocationSize = 1)
@Table(name = "FCP_ENCARGOS", schema = "AGH")
public class FcpEncargo extends BaseEntitySeq<Short> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1005194728028256353L;
	private Short seq;
	private Integer version;
	private FsoNaturezaDespesa fsoNaturezaDespesa;
	private String descricao;
	private String indSituacao;
	private Set<FcpContaCorrenteEncargo> fcpContaCorrenteEncargoes = new HashSet<FcpContaCorrenteEncargo>(0);

	// FIXME Implementar este relacionamento
//	private Set<FcpTitulo> fcpTituloes = new HashSet<FcpTitulo>(0);

	public FcpEncargo() {
	}

	public FcpEncargo(Short seq, String descricao, String indSituacao) {
		this.seq = seq;
		this.descricao = descricao;
		this.indSituacao = indSituacao;
	}

	public FcpEncargo(Short seq, FsoNaturezaDespesa fsoNaturezaDespesa, String descricao, String indSituacao,
			Set<FcpContaCorrenteEncargo> fcpContaCorrenteEncargoes
//			, Set<FcpTitulo> fcpTituloes
		) {
		this.seq = seq;
		this.fsoNaturezaDespesa = fsoNaturezaDespesa;
		this.descricao = descricao;
		this.indSituacao = indSituacao;
		this.fcpContaCorrenteEncargoes = fcpContaCorrenteEncargoes;
//		this.fcpTituloes = fcpTituloes;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "fcpEcgSq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Short getSeq() {
		return this.seq;
	}

	public void setSeq(Short seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "NTD_GND_CODIGO", referencedColumnName = "GND_CODIGO"),
			@JoinColumn(name = "NTD_CODIGO", referencedColumnName = "CODIGO") })
	public FsoNaturezaDespesa getFsoNaturezaDespesa() {
		return this.fsoNaturezaDespesa;
	}

	public void setFsoNaturezaDespesa(FsoNaturezaDespesa fsoNaturezaDespesa) {
		this.fsoNaturezaDespesa = fsoNaturezaDespesa;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 60)
	@Length(max = 60)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(String indSituacao) {
		this.indSituacao = indSituacao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fcpEncargo")
	public Set<FcpContaCorrenteEncargo> getFcpContaCorrenteEncargoes() {
		return this.fcpContaCorrenteEncargoes;
	}

	public void setFcpContaCorrenteEncargoes(Set<FcpContaCorrenteEncargo> fcpContaCorrenteEncargoes) {
		this.fcpContaCorrenteEncargoes = fcpContaCorrenteEncargoes;
	}

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fcpEncargo")
//	public Set<FcpTitulo> getFcpTituloes() {
//		return this.fcpTituloes;
//	}
//
//	public void setFcpTituloes(Set<FcpTitulo> fcpTituloes) {
//		this.fcpTituloes = fcpTituloes;
//	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		FSO_NATUREZA_DESPESA("fsoNaturezaDespesa"),
		DESCRICAO("descricao"),
		IND_SITUACAO("indSituacao"),
		FCP_CONTA_CORRENTE_ENCARGOES("fcpContaCorrenteEncargoes"),
//		FCP_TITULOES("fcpTituloes")
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof FcpEncargo)) {
			return false;
		}
		FcpEncargo other = (FcpEncargo) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

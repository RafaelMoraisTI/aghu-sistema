package br.gov.mec.aghu.model;

// Generated 15/12/2009 11:13:34 by Hibernate Tools 3.2.5.Beta

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;


import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AipConveniosSaudePaciente generated by hbm2java
 */
@Entity
@Table(name = "AIP_CONVENIOS_SAUDE_PACIENTE", schema = "AGH")

public class AipConveniosSaudePaciente extends BaseEntityId<AipConveniosSaudePacienteId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -7863817700034582755L;

	/**
	 * chave primária composta pelos codigo do paciente e um sequencial
	 * auto-gerado.
	 */
	private AipConveniosSaudePacienteId id;

	/**
	 * Data de associação entre o usuário e o plano.
	 */
	private Date criadoEm;

	/**
	 * situação da associação: se ativa ou inativa.
	 */
	private DominioSituacao situacao;

	/**
	 * Convenio.
	 */
	private FatConvenioSaudePlano convenio;

	/**
	 * Data de encerramento.
	 */
	private Date encerradoEm;

	/**
	 * Matricula do paciente no plano.
	 */
	private BigDecimal matricula;

	/**
	 * Paciente relacionado.
	 */
	private AipPacientes paciente;

	private Integer version;

	public AipConveniosSaudePaciente() {
	}

	public AipConveniosSaudePaciente(AipConveniosSaudePacienteId id,
			Date criadoEm, DominioSituacao situacao, Byte cspSeq,
			Short cspCnvCodigo, FatConvenioSaudePlano convenio) {
		this.id = id;
		this.criadoEm = criadoEm;
		this.situacao = situacao;
		this.convenio = convenio;
	}

	public AipConveniosSaudePaciente(AipConveniosSaudePacienteId id,
			Date criadoEm, DominioSituacao situacao, Byte cspSeq,
			Short cspCnvCodigo, Date encerradoEm, BigDecimal matricula,
			FatConvenioSaudePlano convenio) {
		this.id = id;
		this.criadoEm = criadoEm;
		this.situacao = situacao;
		this.convenio = convenio;
		this.encerradoEm = encerradoEm;
		this.matricula = matricula;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "pacCodigo", column = @Column(name = "PAC_CODIGO", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "seq", column = @Column(name = "SEQ", nullable = false, precision = 3, scale = 0)) })
	public AipConveniosSaudePacienteId getId() {
		return this.id;
	}

	public void setId(AipConveniosSaudePacienteId id) {
		this.id = id;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "SITUACAO", nullable = false, length=1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getSituacao() {
		return this.situacao;
	}

	public void setSituacao(DominioSituacao situacao) {
		this.situacao = situacao;
	}

	

	/**
	 * @return the convenio
	 */
	@JoinColumns( {
			@JoinColumn(name = "CSP_SEQ", referencedColumnName = "SEQ", nullable = false),
			@JoinColumn(name = "CSP_CNV_CODIGO", referencedColumnName = "CNV_CODIGO", nullable = false) })
	@ManyToOne(optional = true, fetch = FetchType.LAZY)
	public FatConvenioSaudePlano getConvenio() {
		return convenio;
	}

	/**
	 * @param convenio
	 *            the convenio to set
	 */
	public void setConvenio(FatConvenioSaudePlano convenio) {
		this.convenio = convenio;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "ENCERRADO_EM", length = 7)
	public Date getEncerradoEm() {
		return this.encerradoEm;
	}

	public void setEncerradoEm(Date encerradoEm) {
		this.encerradoEm = encerradoEm;
	}

	@Column(name = "MATRICULA", precision = 20, scale = 0)
	public BigDecimal getMatricula() {
		return this.matricula;
	}

	public void setMatricula(BigDecimal matricula) {
		this.matricula = matricula;
	}

	/**
	 * @return the paciente
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO", insertable = false, updatable = false)
	public AipPacientes getPaciente() {
		return paciente;
	}

	/**
	 * @param paciente
	 *            the paciente to set
	 */
	public void setPaciente(AipPacientes paciente) {
		this.paciente = paciente;
	}

	/**
	 * Campo sintético criado para mapear diretamente este dominio booleano em
	 * um componente selectOneCheckBox
	 * 
	 * @author jvaranda
	 * @return
	 */
	@Transient
	public boolean isAtivo() {
		if (getSituacao() != null) {
			return getSituacao().isAtivo();
		} else {
			return Boolean.FALSE;
		}
	}

	public void setAtivo(boolean valor) {
		setSituacao(DominioSituacao.getInstance(valor));
	}
	
	@Transient
	public String getDescricaoSituacao() {
		if (getSituacao().isAtivo()) {
			return "Sim";
		} else {
			return "Não";
		}
	}

	public enum Fields {
		PACIENTE("paciente"), CODIGO_PACIENTE("id.pacCodigo"),SEQUENCIAL("id.seq"), IDENTIFICADOR("id"), SITUACAO(
				"situacao"), CONVENIO("convenio"), CODIGO_CONVENIO("convenio.id.cnvCodigo"), SEQ_CONVENIO("convenio.id.seq");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}



	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AipConveniosSaudePaciente)) {
			return false;
		}
		AipConveniosSaudePaciente other = (AipConveniosSaudePaciente) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

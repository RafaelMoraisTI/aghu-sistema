package br.gov.mec.aghu.model;

// Generated 27/04/2011 12:34:12 by Hibernate Tools 3.3.0.GA

import javax.persistence.Column;
import javax.persistence.Embeddable;

import br.gov.mec.aghu.core.persistence.EntityCompositeId;

/**
 * AfaMdtoEquivalentesId generated by hbm2java
 */
@Embeddable
public class AfaMedicamentoEquivalenteId implements EntityCompositeId {

	/**
	 * 
	 */
	private static final long serialVersionUID = 8682734797147167468L;
	private Integer medMatCodigo;
	private Integer medMatCodigoEquivalente;
	
	/*private AfaMedicamento medicamento;
	private AfaMedicamento medicamentoEquivalente;*/
	
	public AfaMedicamentoEquivalenteId() {
	}
	
	/*@ManyToOne
	@JoinColumn(name = "MED_MAT_CODIGO", referencedColumnName="MAT_CODIGO")
	public AfaMedicamento getMedicamento() {
		return medicamento;
	}

	public void setMedicamento(AfaMedicamento medicamento) {
		this.medicamento = medicamento;
	}
	
	@ManyToOne
	@JoinColumn(name = "MED_MAT_CODIGO_EQUIVALENTE", referencedColumnName="MAT_CODIGO")
	public AfaMedicamento getMedicamentoEquivalente() {
		return medicamentoEquivalente;
	}

	public void setMedicamentoEquivalente(AfaMedicamento medicamentoEquivalente) {
		this.medicamentoEquivalente = medicamentoEquivalente;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((medicamento == null) ? 0 : medicamento.hashCode());
		result = prime
				* result
				+ ((medicamentoEquivalente == null) ? 0
						: medicamentoEquivalente.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		AfaMedicamentoEquivalenteId other = (AfaMedicamentoEquivalenteId) obj;
		if (medicamento == null) {
			if (other.medicamento != null)
				return false;
		} else if (!medicamento.equals(other.medicamento))
			return false;
		if (medicamentoEquivalente == null) {
			if (other.medicamentoEquivalente != null)
				return false;
		} else if (!medicamentoEquivalente.equals(other.medicamentoEquivalente))
			return false;
		return true;
	}*/
	
	public AfaMedicamentoEquivalenteId(Integer medMatCodigo, Integer medMatCodigoEquivalente) {
		this.medMatCodigo = medMatCodigo;
		this.medMatCodigoEquivalente = medMatCodigoEquivalente;
	}

	@Column(name = "MED_MAT_CODIGO", nullable = false)
	public Integer getMedMatCodigo() {
		return this.medMatCodigo;
	}

	public void setMedMatCodigo(Integer medMatCodigo) {
		this.medMatCodigo = medMatCodigo;
	}

	@Column(name = "MED_MAT_CODIGO_EQUIVALENTE", nullable = false)
	public Integer getMedMatCodigoEquivalente() {
		return this.medMatCodigoEquivalente;
	}

	public void setMedMatCodigoEquivalente(Integer medMatCodigoEquivalente) {
		this.medMatCodigoEquivalente = medMatCodigoEquivalente;
	}

	@Override
	public boolean equals(Object other) {
		if ((this == other)) {
			return true;
		}
		if ((other == null)) {
			return false;
		}
		if (!(other instanceof AfaMedicamentoEquivalenteId)) {
			return false;
		}
		AfaMedicamentoEquivalenteId castOther = (AfaMedicamentoEquivalenteId) other;

		return (this.getMedMatCodigo() == castOther.getMedMatCodigo())
				&& (this.getMedMatCodigoEquivalente() == castOther
						.getMedMatCodigoEquivalente());
	}

	@Override
	public int hashCode() {
		int result = 17;

		result = 37 * result + this.getMedMatCodigo();
		result = 37 * result + this.getMedMatCodigoEquivalente();
		return result;
	}

}

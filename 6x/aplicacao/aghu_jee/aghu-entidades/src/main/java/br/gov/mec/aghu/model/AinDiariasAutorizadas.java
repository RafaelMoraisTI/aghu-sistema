package br.gov.mec.aghu.model;

// Generated 05/04/2010 11:59:16 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;




import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AinDiariasAutorizadas generated by hbm2java
 */
@Entity
@Table(name = "AIN_DIARIAS_AUTORIZADAS", schema = "AGH")

public class AinDiariasAutorizadas extends BaseEntityId<AinDiariasAutorizadasId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -3549636363897493101L;
	private AinDiariasAutorizadasId id;
	private Short quantDiarias;
	private Date criadoEm;
	private RapServidores serMatricula;
	
	private String senha;
	private String cnrac;
	private AinInternacao internacao;
	private Integer		version;

	public AinDiariasAutorizadas() {
	}

	public AinDiariasAutorizadas(AinDiariasAutorizadasId id,
			Short quantDiarias, Date criadoEm, RapServidores serMatricula,
			RapServidores serVinCodigo,Integer version) {
		this.id = id;
		this.quantDiarias = quantDiarias;
		this.criadoEm = criadoEm;
		this.serMatricula = serMatricula;		
		this.version = version;
	}

	public AinDiariasAutorizadas(AinDiariasAutorizadasId id,
			Short quantDiarias, Date criadoEm, RapServidores serMatricula,
			RapServidores serVinCodigo, String senha, String cnrac,Integer version) {
		this.id = id;
		this.quantDiarias = quantDiarias;
		this.criadoEm = criadoEm;
		this.serMatricula = serMatricula;		
		this.senha = senha;
		this.cnrac = cnrac;
		this.version = version;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "intSeq", column = @Column(name = "INT_SEQ", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "seq", column = @Column(name = "SEQ", nullable = false, precision = 2, scale = 0)) })
	public AinDiariasAutorizadasId getId() {
		return this.id;
	}

	public void setId(AinDiariasAutorizadasId id) {
		this.id = id;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "INT_SEQ", nullable = false, insertable = false, updatable = false)
	public AinInternacao getInternacao() {
		return this.internacao;
	}
	
	public void setInternacao(AinInternacao internacao) {
		this.internacao = internacao;
	}

	@Column(name = "QUANT_DIARIAS", nullable = false, precision = 3, scale = 0)
	public Short getQuantDiarias() {
		return this.quantDiarias;
	}

	public void setQuantDiarias(Short quantDiarias) {
		this.quantDiarias = quantDiarias;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}
	
	@JoinColumns( {
		@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA" ,insertable=true, nullable = false, updatable=true),
		@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO",insertable=true, nullable = false, updatable=true) })
		@ManyToOne(fetch = FetchType.LAZY)		
	public RapServidores getSerMatricula() {
		return this.serMatricula;
	}

	public void setSerMatricula(RapServidores serMatricula) {
		this.serMatricula = serMatricula;
	}

	@Column(name = "SENHA", length = 20)	
	public String getSenha() {
		return this.senha;
	}

	public void setSenha(String senha) {
		this.senha = senha;
	}

	@Column(name = "CNRAC", length = 8)
	public String getCnrac() {
		return this.cnrac;
	}

	public void setCnrac(String cnrac) {
		this.cnrac = cnrac;
	}
	
	public void setVersion(Integer version) {
		this.version = version;
	}
	
	@Version
	@Column(name = "VERSION", nullable = false, length = 9)
	public Integer getVersion() {
		return version;
	}

	public enum Fields {
		SEQ("id.seq"), INT_SEQ("id.intSeq"), INTERNACAO("internacao"), CRIADO_EM("criadoEm"), SENHA("senha");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	@Override
	@SuppressWarnings("PMD.NPathComplexity")
	public int hashCode() {
		final int prime = 31;
		int result = super.hashCode();
		result = prime * result + ((cnrac == null) ? 0 : cnrac.hashCode());
		result = prime * result
				+ ((criadoEm == null) ? 0 : criadoEm.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result
				+ ((internacao == null) ? 0 : internacao.hashCode());
		result = prime * result
				+ ((quantDiarias == null) ? 0 : quantDiarias.hashCode());
		result = prime * result + ((senha == null) ? 0 : senha.hashCode());
		result = prime * result
				+ ((serMatricula == null) ? 0 : serMatricula.hashCode());
		result = prime * result + ((version == null) ? 0 : version.hashCode());
		return result;
	}

	@Override
	@SuppressWarnings("PMD.NPathComplexity")
	public boolean equals(Object obj) {
		if (this == obj){
			return true;
		}
		if (!super.equals(obj)) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		AinDiariasAutorizadas other = (AinDiariasAutorizadas) obj;
		if (cnrac == null) {
			if (other.cnrac != null){
				return false;
			}
		} else if (!cnrac.equals(other.cnrac)){
			return false;
		}
		if (criadoEm == null) {
			if (other.criadoEm != null){
				return false;
			}
		} else if (!criadoEm.equals(other.criadoEm)){
			return false;
		}
		if (id == null) {
			if (other.id != null){
				return false;
			}
		} else if (!id.equals(other.id)){
			return false;
		}
		if (internacao == null) {
			if (other.internacao != null){
				return false;
			}
		} else if (!internacao.equals(other.internacao)){
			return false;
		}
		if (quantDiarias == null) {
			if (other.quantDiarias != null){
				return false;
			}
		} else if (!quantDiarias.equals(other.quantDiarias)){
			return false;
		}
		if (senha == null) {
			if (other.senha != null){
				return false;
			}
		} else if (!senha.equals(other.senha)){
			return false;
		}
		if (serMatricula == null) {
			if (other.serMatricula != null){
				return false;
			}
		} else if (!serMatricula.equals(other.serMatricula)){
			return false;
		}
		if (version == null) {
			if (other.version != null){
				return false;
			}
		} else if (!version.equals(other.version)){
			return false;
		}
		return true;
	}


}

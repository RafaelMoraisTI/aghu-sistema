package br.gov.mec.aghu.model;

// Generated 30/03/2011 17:19:08 by Hibernate Tools 3.2.5.Beta

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Version;


import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AelExamesProva generated by hbm2java
 */

@Entity
@Table(name = "AEL_EXAMES_PROVA", schema = "AGH")
public class AelExamesProva extends BaseEntityId<AelExamesProvaId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -3149098383131840772L;
	private AelExamesProvaId id;
	private Integer version;
	private DominioSituacao indSituacao;
	private RapServidores servidor;
	private AelExamesMaterialAnalise examesMaterialAnalise;
	private AelExamesMaterialAnalise examesMaterialAnaliseEhProva;
	private Boolean indConsiste;

	public AelExamesProva() {
	}

	public AelExamesProva(AelExamesProvaId id, RapServidores servidor) {
		this.id = id;
		this.servidor = servidor;
	}

	public AelExamesProva(AelExamesProvaId id, DominioSituacao indSituacao,
			RapServidores servidor, Boolean indConsiste) {
		this.id = id;
		this.indSituacao = indSituacao;
		this.servidor = servidor;
		this.indConsiste = indConsiste;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "emaExaSigla", column = @Column(name = "EMA_EXA_SIGLA", nullable = false, length = 5)),
			@AttributeOverride(name = "emaManSeq", column = @Column(name = "EMA_MAN_SEQ", nullable = false)),
			@AttributeOverride(name = "emaExaSiglaEhProva", column = @Column(name = "EMA_EXA_SIGLA_EH_PROVA", nullable = false, length = 5)),
			@AttributeOverride(name = "emaManSeqEhProva", column = @Column(name = "EMA_MAN_SEQ_EH_PROVA", nullable = false)) })
	public AelExamesProvaId getId() {
		return this.id;
	}

	public void setId(AelExamesProvaId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Column(name = "IND_SITUACAO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@ManyToOne()
	@JoinColumns({
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false),
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false) })
	public RapServidores getServidor() {
		return servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@Column(name = "IND_CONSISTE", length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndConsiste() {
		return this.indConsiste;
	}

	public void setIndConsiste(Boolean indConsiste) {
		this.indConsiste = indConsiste;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "EMA_EXA_SIGLA", referencedColumnName = "EXA_SIGLA", insertable = false, updatable = false, nullable = false),
			@JoinColumn(name = "EMA_MAN_SEQ", referencedColumnName = "MAN_SEQ", insertable = false, updatable = false, nullable = false) })
	public AelExamesMaterialAnalise getExamesMaterialAnalise() {
		return examesMaterialAnalise;
	}

	public void setExamesMaterialAnalise(AelExamesMaterialAnalise examesMaterialAnalise) {
		this.examesMaterialAnalise = examesMaterialAnalise;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "EMA_EXA_SIGLA_EH_PROVA", referencedColumnName = "EXA_SIGLA", insertable = false, updatable = false, nullable = false),
			@JoinColumn(name = "EMA_MAN_SEQ_EH_PROVA", referencedColumnName = "MAN_SEQ", insertable = false, updatable = false, nullable = false) })
	public AelExamesMaterialAnalise getExamesMaterialAnaliseEhProva() {
		return examesMaterialAnaliseEhProva;
	}

	public void setExamesMaterialAnaliseEhProva(AelExamesMaterialAnalise examesMaterialAnaliseEhProva) {
		this.examesMaterialAnaliseEhProva = examesMaterialAnaliseEhProva;
	}
	
	public enum Fields {
		
		ID("id"),
		EMA_EXA_SIGLA("id.emaExaSigla"),
		EMA_MAN_SEQ("id.emaManSeq"),
		EMA_EXA_SIGLA_EH_PROVA("id.emaExaSiglaEhProva"),
		EMA_MAN_SEQ_EH_PROVA("id.emaManSeqEhProva"),
		IND_SITUACAO("indSituacao"),
		IND_CONSISTE("indConsiste"),
		EXAMES_MATERIAL_ANALISE("examesMaterialAnalise"),
		EXAMES_MATERIAL_ANALISE_EH_PROVA("examesMaterialAnaliseEhProva");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
		
	}
	

	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AelExamesProva)) {
			return false;
		}
		AelExamesProva other = (AelExamesProva) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

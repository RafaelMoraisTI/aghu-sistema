package br.gov.mec.aghu.model;

// Generated 26/03/2012 11:15:56 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioFuncaoPatologista;
import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * AelPatologistas generated by hbm2java
 */
@Entity
@Table(name = "AEL_PATOLOGISTAS")
@SequenceGenerator(name="aelLuiSq1", sequenceName="AGH.AEL_LUI_SQ1", allocationSize = 1)
public class AelPatologista extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 42210741360701876L;

	private Integer seq;
	private String nome;
	private DominioFuncaoPatologista funcao;
	private Boolean permiteLibLaudo;
	private DominioSituacao situacao;
	private Date criadoEm;
	private RapServidores servidor;
	private RapServidores servidorDigitacao;
	private String nomeParaLaudo;
	private Integer version;
	
	private Set<AelApXPatologista> aelApXPatologista = new HashSet<AelApXPatologista>(0);
	private Set<AelExameAp> aelExameAp = new HashSet<AelExameAp>(0);

	public AelPatologista() {
	}

	public AelPatologista(final Integer seq, final String nome, final DominioFuncaoPatologista funcao,
			final Boolean permiteLibLaudo, final DominioSituacao situacao, final Date criadoEm,
			final RapServidores servidor, final RapServidores servidorDigitacao,
			final String nomeParaLaudo) {
		super();
		this.seq = seq;
		this.nome = nome;
		this.funcao = funcao;
		this.permiteLibLaudo = permiteLibLaudo;
		this.situacao = situacao;
		this.criadoEm = criadoEm;
		this.servidor = servidor;
		this.servidorDigitacao = servidorDigitacao;
		this.nomeParaLaudo = nomeParaLaudo;
	}



	@Id
	@Column(name = "SEQ", unique = true, nullable = false, precision = 5, scale = 0)
	@GeneratedValue(strategy = GenerationType.AUTO, generator="aelLuiSq1")
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(final Integer seq) {
		this.seq = seq;
	}

	@Column(name = "NOME", nullable = false, length = 200)
	@Length(max = 200)
	public String getNome() {
		return this.nome;
	}

	public void setNome(final String nome) {
		this.nome = nome;
	}

	@Column(name = "FUNCAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioFuncaoPatologista getFuncao() {
		return this.funcao;
	}

	public void setFuncao(final DominioFuncaoPatologista funcao) {
		this.funcao = funcao;
	}

	@Column(name = "IND_PERMITE_LIB_LAUDO", nullable = false, length = 1)	
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getPermiteLibLaudo() {
		return permiteLibLaudo;
	}

	public void setPermiteLibLaudo(final Boolean permiteLibLaudo) {
		this.permiteLibLaudo = permiteLibLaudo;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)	
	public DominioSituacao getSituacao() {
		return situacao;
	}

	public void setSituacao(final DominioSituacao situacao) {
		this.situacao = situacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(final Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
		@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
		@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return servidor;
	}

	public void setServidor(final RapServidores servidor) {
		this.servidor = servidor;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
		@JoinColumn(name = "SER_MATRICULA_DIGITADO", referencedColumnName = "MATRICULA", nullable = false),
		@JoinColumn(name = "SER_VIN_CODIGO_DIGITADO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidorDigitacao() {
		return servidorDigitacao;
	}

	public void setServidorDigitacao(final RapServidores servidorDigitacao) {
		this.servidorDigitacao = servidorDigitacao;
	}

	@Column(name = "NOME_PARA_LAUDO", length = 50)
	@Length(max = 50)
	public String getNomeParaLaudo() {
		return this.nomeParaLaudo;
	}

	public void setNomeParaLaudo(final String nomeParaLaudo) {
		this.nomeParaLaudo = nomeParaLaudo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "aelPatologista")
	public Set<AelApXPatologista> getAelApXPatologista() {
		return aelApXPatologista;
	}

	public void setAelApXPatologista(final Set<AelApXPatologista> aelApXPatologista) {
		this.aelApXPatologista = aelApXPatologista;
	}
	
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "aelAnatomoPatologicos")
	public Set<AelExameAp> getAelExameAp() {
		return aelExameAp;
	}

	public void setAelExameAp(final Set<AelExameAp> aelExameAp) {
		this.aelExameAp = aelExameAp;
	}
	
	public enum Fields {

		SEQ("seq"),
		NOME("nome"),
		FUNCAO("funcao"),
		PERMITE_LIB_LAUDO("permiteLibLaudo"),
		SITUCAO("situacao"),
		CRIADO_EM("criadoEm"),
		SERVIDOR("servidor"),
		SERVIDOR_ID("servidor.id"),
		SERVIDOR_DIGITACAO("servidorDigitacao"),
		NOME_PARA_LAUDO("nomeParaLaudo"),
		AEL_AP_X_PATOLOGISTAS("aelApXPatologista"),
		AEL_EXAME_AP("aelExameAp");

		private String fields;

		private Fields(final String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((seq == null) ? 0 : seq.hashCode());
		return result;
	}

	@Override
	public boolean equals(final Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		final AelPatologista other = (AelPatologista) obj;
		if (seq == null) {
			if (other.seq != null) {
				return false;
			}
		} else if (!seq.equals(other.seq)) {
			return false;
		}
		return true;
	}

	
}

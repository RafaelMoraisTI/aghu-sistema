package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MptLaudo generated by hbm2java
 */
@Entity
@Table(name = "MPT_LAUDOS", schema = "AGH")
public class MptLaudo extends BaseEntityId<MptLaudoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 4203631905449564969L;
	private MptLaudoId id;
	private Integer version;
	private RapServidores rapServidoresByMptLauSerFk1;
	private RapServidores rapServidoresByMptLauSerFk2;
	private MptTratamentoTerapeutico mptTratamentoTerapeutico;
	private Date criadoEm;
	private String indSituacao;
	private Date dtPrevInicioValidade;
	private Date dtPrevFimValidade;
	private String justifUsoImediato;
	private String indImpresso;
	private String indConcluido;
	private String observacoes;
	private Set<MptProcedimentoApac> mptProcedimentoApaces = new HashSet<MptProcedimentoApac>(0);
	private MptLaudoTratAnterior mptLaudoTratAnterior;
	private MptLaudoPlanejTerapeutico mptLaudoPlanejTerapeutico;
	private MptLaudoIdentifPatologia mptLaudoIdentifPatologia;
	private Set<MptCidApac> mptCidApaces = new HashSet<MptCidApac>(0);

	public MptLaudo() {
	}

	public MptLaudo(MptLaudoId id, RapServidores rapServidoresByMptLauSerFk1, RapServidores rapServidoresByMptLauSerFk2,
			MptTratamentoTerapeutico mptTratamentoTerapeutico, Date criadoEm, String indSituacao, Date dtPrevInicioValidade,
			String indImpresso) {
		this.id = id;
		this.rapServidoresByMptLauSerFk1 = rapServidoresByMptLauSerFk1;
		this.rapServidoresByMptLauSerFk2 = rapServidoresByMptLauSerFk2;
		this.mptTratamentoTerapeutico = mptTratamentoTerapeutico;
		this.criadoEm = criadoEm;
		this.indSituacao = indSituacao;
		this.dtPrevInicioValidade = dtPrevInicioValidade;
		this.indImpresso = indImpresso;
	}

	public MptLaudo(MptLaudoId id, RapServidores rapServidoresByMptLauSerFk1, RapServidores rapServidoresByMptLauSerFk2,
			MptTratamentoTerapeutico mptTratamentoTerapeutico, Date criadoEm, String indSituacao, Date dtPrevInicioValidade,
			Date dtPrevFimValidade, String justifUsoImediato, String indImpresso, String indConcluido, String observacoes,
			Set<MptProcedimentoApac> mptProcedimentoApaces, MptLaudoTratAnterior mptLaudoTratAnterior,
			MptLaudoPlanejTerapeutico mptLaudoPlanejTerapeutico, MptLaudoIdentifPatologia mptLaudoIdentifPatologia,
			Set<MptCidApac> mptCidApaces) {
		this.id = id;
		this.rapServidoresByMptLauSerFk1 = rapServidoresByMptLauSerFk1;
		this.rapServidoresByMptLauSerFk2 = rapServidoresByMptLauSerFk2;
		this.mptTratamentoTerapeutico = mptTratamentoTerapeutico;
		this.criadoEm = criadoEm;
		this.indSituacao = indSituacao;
		this.dtPrevInicioValidade = dtPrevInicioValidade;
		this.dtPrevFimValidade = dtPrevFimValidade;
		this.justifUsoImediato = justifUsoImediato;
		this.indImpresso = indImpresso;
		this.indConcluido = indConcluido;
		this.observacoes = observacoes;
		this.mptProcedimentoApaces = mptProcedimentoApaces;
		this.mptLaudoTratAnterior = mptLaudoTratAnterior;
		this.mptLaudoPlanejTerapeutico = mptLaudoPlanejTerapeutico;
		this.mptLaudoIdentifPatologia = mptLaudoIdentifPatologia;
		this.mptCidApaces = mptCidApaces;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "trpSeq", column = @Column(name = "TRP_SEQ", nullable = false)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false)) })
	public MptLaudoId getId() {
		return this.id;
	}

	public void setId(MptLaudoId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByMptLauSerFk1() {
		return this.rapServidoresByMptLauSerFk1;
	}

	public void setRapServidoresByMptLauSerFk1(RapServidores rapServidoresByMptLauSerFk1) {
		this.rapServidoresByMptLauSerFk1 = rapServidoresByMptLauSerFk1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_ASSINA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO_ASSINA", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByMptLauSerFk2() {
		return this.rapServidoresByMptLauSerFk2;
	}

	public void setRapServidoresByMptLauSerFk2(RapServidores rapServidoresByMptLauSerFk2) {
		this.rapServidoresByMptLauSerFk2 = rapServidoresByMptLauSerFk2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TRP_SEQ", nullable = false, insertable = false, updatable = false)
	public MptTratamentoTerapeutico getMptTratamentoTerapeutico() {
		return this.mptTratamentoTerapeutico;
	}

	public void setMptTratamentoTerapeutico(MptTratamentoTerapeutico mptTratamentoTerapeutico) {
		this.mptTratamentoTerapeutico = mptTratamentoTerapeutico;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(String indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_PREV_INICIO_VALIDADE", nullable = false, length = 29)
	public Date getDtPrevInicioValidade() {
		return this.dtPrevInicioValidade;
	}

	public void setDtPrevInicioValidade(Date dtPrevInicioValidade) {
		this.dtPrevInicioValidade = dtPrevInicioValidade;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_PREV_FIM_VALIDADE", length = 29)
	public Date getDtPrevFimValidade() {
		return this.dtPrevFimValidade;
	}

	public void setDtPrevFimValidade(Date dtPrevFimValidade) {
		this.dtPrevFimValidade = dtPrevFimValidade;
	}

	@Column(name = "JUSTIF_USO_IMEDIATO", length = 500)
	@Length(max = 500)
	public String getJustifUsoImediato() {
		return this.justifUsoImediato;
	}

	public void setJustifUsoImediato(String justifUsoImediato) {
		this.justifUsoImediato = justifUsoImediato;
	}

	@Column(name = "IND_IMPRESSO", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndImpresso() {
		return this.indImpresso;
	}

	public void setIndImpresso(String indImpresso) {
		this.indImpresso = indImpresso;
	}

	@Column(name = "IND_CONCLUIDO", length = 1)
	@Length(max = 1)
	public String getIndConcluido() {
		return this.indConcluido;
	}

	public void setIndConcluido(String indConcluido) {
		this.indConcluido = indConcluido;
	}

	@Column(name = "OBSERVACOES", length = 1000)
	@Length(max = 1000)
	public String getObservacoes() {
		return this.observacoes;
	}

	public void setObservacoes(String observacoes) {
		this.observacoes = observacoes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mptLaudo")
	public Set<MptProcedimentoApac> getMptProcedimentoApaces() {
		return this.mptProcedimentoApaces;
	}

	public void setMptProcedimentoApaces(Set<MptProcedimentoApac> mptProcedimentoApaces) {
		this.mptProcedimentoApaces = mptProcedimentoApaces;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "mptLaudo")
	public MptLaudoTratAnterior getMptLaudoTratAnterior() {
		return this.mptLaudoTratAnterior;
	}

	public void setMptLaudoTratAnterior(MptLaudoTratAnterior mptLaudoTratAnterior) {
		this.mptLaudoTratAnterior = mptLaudoTratAnterior;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "mptLaudo")
	public MptLaudoPlanejTerapeutico getMptLaudoPlanejTerapeutico() {
		return this.mptLaudoPlanejTerapeutico;
	}

	public void setMptLaudoPlanejTerapeutico(MptLaudoPlanejTerapeutico mptLaudoPlanejTerapeutico) {
		this.mptLaudoPlanejTerapeutico = mptLaudoPlanejTerapeutico;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "mptLaudo")
	public MptLaudoIdentifPatologia getMptLaudoIdentifPatologia() {
		return this.mptLaudoIdentifPatologia;
	}

	public void setMptLaudoIdentifPatologia(MptLaudoIdentifPatologia mptLaudoIdentifPatologia) {
		this.mptLaudoIdentifPatologia = mptLaudoIdentifPatologia;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mptLaudo")
	public Set<MptCidApac> getMptCidApaces() {
		return this.mptCidApaces;
	}

	public void setMptCidApaces(Set<MptCidApac> mptCidApaces) {
		this.mptCidApaces = mptCidApaces;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		RAP_SERVIDORES_BY_MPT_LAU_SER_FK1("rapServidoresByMptLauSerFk1"),
		RAP_SERVIDORES_BY_MPT_LAU_SER_FK2("rapServidoresByMptLauSerFk2"),
		MPT_TRATAMENTO_TERAPEUTICO("mptTratamentoTerapeutico"),
		CRIADO_EM("criadoEm"),
		IND_SITUACAO("indSituacao"),
		DT_PREV_INICIO_VALIDADE("dtPrevInicioValidade"),
		DT_PREV_FIM_VALIDADE("dtPrevFimValidade"),
		JUSTIF_USO_IMEDIATO("justifUsoImediato"),
		IND_IMPRESSO("indImpresso"),
		IND_CONCLUIDO("indConcluido"),
		OBSERVACOES("observacoes"),
		MPT_PROCEDIMENTO_APACES("mptProcedimentoApaces"),
		MPT_LAUDO_TRAT_ANTERIORES("mptLaudoTratAnterior"),
		MPT_LAUDO_PLANEJ_TERAPEUTICOS("mptLaudoPlanejTerapeutico"),
		MPT_LAUDO_IDENTIF_PATOLOGIAS("mptLaudoIdentifPatologia"),
		MPT_CID_APACES("mptCidApaces");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MptLaudo)) {
			return false;
		}
		MptLaudo other = (MptLaudo) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

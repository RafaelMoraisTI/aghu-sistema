package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioUnidadeCorrer;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MptItemMdtoSumario generated by hbm2java
 */
@Entity
@Table(name = "MPT_ITEM_MDTO_SUMARIOS", schema = "AGH")
public class MptItemMdtoSumario extends BaseEntityId<MptItemMdtoSumarioId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 9144388869932604163L;
	private MptItemMdtoSumarioId id;
	private Integer version;
	private MptItemPrescricaoSumario mptItemPrescricaoSumario;
	private MpmTipoFrequenciaAprazamento mpmTipoFrequenciaAprazamento;
	private AfaMedicamento afaMedicamentoByMedMatCodigo;
	private AfaMedicamento afaMedicamentoByMedMatCodigoDiluente;
	private AfaFormaDosagem afaFormaDosagem;
	private AfaTipoVelocAdministracoes afaTipoVelocAdministracoes;
	private AfaViaAdministracao afaViaAdministracao;
	private Short frequencia;
	private Date horaInicioAdministracao;
	private Short qtdeHorasCorrer;
	private DominioUnidadeCorrer unidHorasCorrer;
	private Float gotejo;
	private Boolean indSeNecessario;
	private String observacao;
	private String observacaoItem;
	private Double dose;
	private Boolean indSolucao;
	private Double volumeDiluenteMl;
	private Short diasUsoDomiciliar;

	public MptItemMdtoSumario() {
	}

	public MptItemMdtoSumario(MptItemMdtoSumarioId id, MptItemPrescricaoSumario mptItemPrescricaoSumario,
			MpmTipoFrequenciaAprazamento mpmTipoFrequenciaAprazamento, AfaMedicamento afaMedicamentoByMedMatCodigo,
			AfaFormaDosagem afaFormaDosagem, AfaViaAdministracao afaViaAdministracao, Double dose) {
		this.id = id;
		this.mptItemPrescricaoSumario = mptItemPrescricaoSumario;
		this.mpmTipoFrequenciaAprazamento = mpmTipoFrequenciaAprazamento;
		this.afaMedicamentoByMedMatCodigo = afaMedicamentoByMedMatCodigo;
		this.afaFormaDosagem = afaFormaDosagem;
		this.afaViaAdministracao = afaViaAdministracao;
		this.dose = dose;
	}

	public MptItemMdtoSumario(MptItemMdtoSumarioId id, MptItemPrescricaoSumario mptItemPrescricaoSumario,
			MpmTipoFrequenciaAprazamento mpmTipoFrequenciaAprazamento, AfaMedicamento afaMedicamentoByMedMatCodigo,
			AfaMedicamento afaMedicamentoByMedMatCodigoDiluente, AfaFormaDosagem afaFormaDosagem,
			AfaTipoVelocAdministracoes afaTipoVelocAdministracoes, AfaViaAdministracao afaViaAdministracao, Short frequencia,
			Date horaInicioAdministracao, Short qtdeHorasCorrer, DominioUnidadeCorrer unidHorasCorrer, Float gotejo, Boolean indSeNecessario,
			String observacao, String observacaoItem, Double dose, Boolean indSolucao, Double volumeDiluenteMl, Short diasUsoDomiciliar) {
		this.id = id;
		this.mptItemPrescricaoSumario = mptItemPrescricaoSumario;
		this.mpmTipoFrequenciaAprazamento = mpmTipoFrequenciaAprazamento;
		this.afaMedicamentoByMedMatCodigo = afaMedicamentoByMedMatCodigo;
		this.afaMedicamentoByMedMatCodigoDiluente = afaMedicamentoByMedMatCodigoDiluente;
		this.afaFormaDosagem = afaFormaDosagem;
		this.afaTipoVelocAdministracoes = afaTipoVelocAdministracoes;
		this.afaViaAdministracao = afaViaAdministracao;
		this.frequencia = frequencia;
		this.horaInicioAdministracao = horaInicioAdministracao;
		this.qtdeHorasCorrer = qtdeHorasCorrer;
		this.unidHorasCorrer = unidHorasCorrer;
		this.gotejo = gotejo;
		this.indSeNecessario = indSeNecessario;
		this.observacao = observacao;
		this.observacaoItem = observacaoItem;
		this.dose = dose;
		this.indSolucao = indSolucao;
		this.volumeDiluenteMl = volumeDiluenteMl;
		this.diasUsoDomiciliar = diasUsoDomiciliar;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "itqSeq", column = @Column(name = "ITQ_SEQ", nullable = false)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false)) })
	public MptItemMdtoSumarioId getId() {
		return this.id;
	}

	public void setId(MptItemMdtoSumarioId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ITQ_SEQ", insertable = false, updatable = false)	 
	public MptItemPrescricaoSumario getMptItemPrescricaoSumario() {
		return this.mptItemPrescricaoSumario;
	}

	public void setMptItemPrescricaoSumario(MptItemPrescricaoSumario mptItemPrescricaoSumario) {
		this.mptItemPrescricaoSumario = mptItemPrescricaoSumario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TFQ_SEQ", nullable = false)
	public MpmTipoFrequenciaAprazamento getMpmTipoFrequenciaAprazamento() {
		return this.mpmTipoFrequenciaAprazamento;
	}

	public void setMpmTipoFrequenciaAprazamento(MpmTipoFrequenciaAprazamento mpmTipoFrequenciaAprazamento) {
		this.mpmTipoFrequenciaAprazamento = mpmTipoFrequenciaAprazamento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MED_MAT_CODIGO", nullable = false)
	public AfaMedicamento getAfaMedicamentoByMedMatCodigo() {
		return this.afaMedicamentoByMedMatCodigo;
	}

	public void setAfaMedicamentoByMedMatCodigo(AfaMedicamento afaMedicamentoByMedMatCodigo) {
		this.afaMedicamentoByMedMatCodigo = afaMedicamentoByMedMatCodigo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MED_MAT_CODIGO_DILUENTE")
	public AfaMedicamento getAfaMedicamentoByMedMatCodigoDiluente() {
		return this.afaMedicamentoByMedMatCodigoDiluente;
	}

	public void setAfaMedicamentoByMedMatCodigoDiluente(AfaMedicamento afaMedicamentoByMedMatCodigoDiluente) {
		this.afaMedicamentoByMedMatCodigoDiluente = afaMedicamentoByMedMatCodigoDiluente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FDS_SEQ", nullable = false)
	public AfaFormaDosagem getAfaFormaDosagem() {
		return this.afaFormaDosagem;
	}

	public void setAfaFormaDosagem(AfaFormaDosagem afaFormaDosagem) {
		this.afaFormaDosagem = afaFormaDosagem;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TVA_SEQ")
	public AfaTipoVelocAdministracoes getAfaTipoVelocAdministracoes() {
		return this.afaTipoVelocAdministracoes;
	}

	public void setAfaTipoVelocAdministracoes(AfaTipoVelocAdministracoes afaTipoVelocAdministracoes) {
		this.afaTipoVelocAdministracoes = afaTipoVelocAdministracoes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "VAD_SIGLA", nullable = false)
	public AfaViaAdministracao getAfaViaAdministracao() {
		return this.afaViaAdministracao;
	}

	public void setAfaViaAdministracao(AfaViaAdministracao afaViaAdministracao) {
		this.afaViaAdministracao = afaViaAdministracao;
	}

	@Column(name = "FREQUENCIA")
	public Short getFrequencia() {
		return this.frequencia;
	}

	public void setFrequencia(Short frequencia) {
		this.frequencia = frequencia;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "HORA_INICIO_ADMINISTRACAO", length = 29)
	public Date getHoraInicioAdministracao() {
		return this.horaInicioAdministracao;
	}

	public void setHoraInicioAdministracao(Date horaInicioAdministracao) {
		this.horaInicioAdministracao = horaInicioAdministracao;
	}

	@Column(name = "QTDE_HORAS_CORRER")
	public Short getQtdeHorasCorrer() {
		return this.qtdeHorasCorrer;
	}

	public void setQtdeHorasCorrer(Short qtdeHorasCorrer) {
		this.qtdeHorasCorrer = qtdeHorasCorrer;
	}

	@Column(name = "UNID_HORAS_CORRER", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioUnidadeCorrer getUnidHorasCorrer() {
		return this.unidHorasCorrer;
	}

	public void setUnidHorasCorrer(DominioUnidadeCorrer unidHorasCorrer) {
		this.unidHorasCorrer = unidHorasCorrer;
	}

	@Column(name = "GOTEJO", precision = 8, scale = 8)
	public Float getGotejo() {
		return this.gotejo;
	}

	public void setGotejo(Float gotejo) {
		this.gotejo = gotejo;
	}

	@Column(name = "IND_SE_NECESSARIO", length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndSeNecessario() {
		return this.indSeNecessario;
	}

	public void setIndSeNecessario(Boolean indSeNecessario) {
		this.indSeNecessario = indSeNecessario;
	}

	@Column(name = "OBSERVACAO", length = 240)
	@Length(max = 240)
	public String getObservacao() {
		return this.observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}

	@Column(name = "OBSERVACAO_ITEM", length = 120)
	@Length(max = 120)
	public String getObservacaoItem() {
		return this.observacaoItem;
	}

	public void setObservacaoItem(String observacaoItem) {
		this.observacaoItem = observacaoItem;
	}

	@Column(name = "DOSE", nullable = false, precision = 17, scale = 17)
	public Double getDose() {
		return this.dose;
	}

	public void setDose(Double dose) {
		this.dose = dose;
	}

	@Column(name = "IND_SOLUCAO", length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndSolucao() {
		return this.indSolucao;
	}

	public void setIndSolucao(Boolean indSolucao) {
		this.indSolucao = indSolucao;
	}

	@Column(name = "VOLUME_DILUENTE_ML", precision = 17, scale = 17)
	public Double getVolumeDiluenteMl() {
		return this.volumeDiluenteMl;
	}

	public void setVolumeDiluenteMl(Double volumeDiluenteMl) {
		this.volumeDiluenteMl = volumeDiluenteMl;
	}

	@Column(name = "DIAS_USO_DOMICILIAR")
	public Short getDiasUsoDomiciliar() {
		return this.diasUsoDomiciliar;
	}

	public void setDiasUsoDomiciliar(Short diasUsoDomiciliar) {
		this.diasUsoDomiciliar = diasUsoDomiciliar;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		MPT_ITEM_PRESCRICAO_SUMARIOS("mptItemPrescricaoSumario"),
		MPM_TIPO_FREQUENCIA_APRAZAMENTO("mpmTipoFrequenciaAprazamento"),
		AFA_MEDICAMENTO_BY_MED_MAT_CODIGO("afaMedicamentoByMedMatCodigo"),
		AFA_MEDICAMENTO_BY_MED_MAT_CODIGO_DILUENTE("afaMedicamentoByMedMatCodigoDiluente"),
		AFA_FORMA_DOSAGEM("afaFormaDosagem"),
		AFA_TIPO_VELOC_ADMINISTRACOES("afaTipoVelocAdministracoes"),
		AFA_VIA_ADMINISTRACAO("afaViaAdministracao"),
		FREQUENCIA("frequencia"),
		HORA_INICIO_ADMINISTRACAO("horaInicioAdministracao"),
		QTDE_HORAS_CORRER("qtdeHorasCorrer"),
		UNID_HORAS_CORRER("unidHorasCorrer"),
		GOTEJO("gotejo"),
		IND_SE_NECESSARIO("indSeNecessario"),
		OBSERVACAO("observacao"),
		OBSERVACAO_ITEM("observacaoItem"),
		DOSE("dose"),
		IND_SOLUCAO("indSolucao"),
		VOLUME_DILUENTE_ML("volumeDiluenteMl"),
		DIAS_USO_DOMICILIAR("diasUsoDomiciliar");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MptItemMdtoSumario)) {
			return false;
		}
		MptItemMdtoSumario other = (MptItemMdtoSumario) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AesEscala generated by hbm2java
 */
@Entity
@Table(name = "AES_ESCALAS", schema = "AGH")
public class AesEscala extends BaseEntityId<AesEscalaId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 6662290654947021718L;
	private AesEscalaId id;
	private Integer version;
	private AesSubgrupoTrabalho aesSubgrupoTrabalho;
	private AesRegime aesRegime;
	private RapServidores rapServidoresByAesEscSerFk1;
	private RapServidores rapServidoresByAesEscSerFk2;
	private AesSituacaoEscala aesSituacaoEscala;
	private Date data;
	private Date criadoEm;
	private Integer escRegSerMatricula;
	private Short escRegSerVinCodigo;
	private Integer escRegSeq;
	private Long escSeq;
	private Date alteradoEm;
	private Set<AesSubstituicaoEscala> aesSubstituicoesEscalasForAesSubEscFk2 = new HashSet<AesSubstituicaoEscala>(0);
	private Set<AesSubstituicaoEscala> aesSubstituicoesEscalasForAesSubEscFk1 = new HashSet<AesSubstituicaoEscala>(0);

	public AesEscala() {
	}

	public AesEscala(AesEscalaId id, AesSubgrupoTrabalho aesSubgrupoTrabalho, AesRegime aesRegime,
			AesSituacaoEscala aesSituacaoEscala, Date data, Date criadoEm) {
		this.id = id;
		this.aesSubgrupoTrabalho = aesSubgrupoTrabalho;
		this.aesRegime = aesRegime;
		this.aesSituacaoEscala = aesSituacaoEscala;
		this.data = data;
		this.criadoEm = criadoEm;
	}

	public AesEscala(AesEscalaId id, AesSubgrupoTrabalho aesSubgrupoTrabalho, AesRegime aesRegime,
			RapServidores rapServidoresByAesEscSerFk1, RapServidores rapServidoresByAesEscSerFk2,
			AesSituacaoEscala aesSituacaoEscala, Date data, Date criadoEm, Integer escRegSerMatricula, Short escRegSerVinCodigo,
			Integer escRegSeq, Long escSeq, Date alteradoEm, Set<AesSubstituicaoEscala> aesSubstituicoesEscalasForAesSubEscFk2,
			Set<AesSubstituicaoEscala> aesSubstituicoesEscalasForAesSubEscFk1) {
		this.id = id;
		this.aesSubgrupoTrabalho = aesSubgrupoTrabalho;
		this.aesRegime = aesRegime;
		this.rapServidoresByAesEscSerFk1 = rapServidoresByAesEscSerFk1;
		this.rapServidoresByAesEscSerFk2 = rapServidoresByAesEscSerFk2;
		this.aesSituacaoEscala = aesSituacaoEscala;
		this.data = data;
		this.criadoEm = criadoEm;
		this.escRegSerMatricula = escRegSerMatricula;
		this.escRegSerVinCodigo = escRegSerVinCodigo;
		this.escRegSeq = escRegSeq;
		this.escSeq = escSeq;
		this.alteradoEm = alteradoEm;
		this.aesSubstituicoesEscalasForAesSubEscFk2 = aesSubstituicoesEscalasForAesSubEscFk2;
		this.aesSubstituicoesEscalasForAesSubEscFk1 = aesSubstituicoesEscalasForAesSubEscFk1;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "regSerMatricula", column = @Column(name = "REG_SER_MATRICULA", nullable = false)),
			@AttributeOverride(name = "regSerVinCodigo", column = @Column(name = "REG_SER_VIN_CODIGO", nullable = false)),
			@AttributeOverride(name = "regSeq", column = @Column(name = "REG_SEQ", nullable = false)),
			@AttributeOverride(name = "seq", column = @Column(name = "SEQ", nullable = false)) })
	public AesEscalaId getId() {
		return this.id;
	}

	public void setId(AesEscalaId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "STR_GTR_ARE_CODIGO", referencedColumnName = "GTR_ARE_CODIGO", nullable = false),
			@JoinColumn(name = "STR_GTR_CCT_CODIGO", referencedColumnName = "GTR_CCT_CODIGO", nullable = false),
			@JoinColumn(name = "STR_GTR_TGT_CODIGO", referencedColumnName = "GTR_TGT_CODIGO", nullable = false),
			@JoinColumn(name = "STR_CODIGO", referencedColumnName = "CODIGO", nullable = false) })
	public AesSubgrupoTrabalho getAesSubgrupoTrabalho() {
		return this.aesSubgrupoTrabalho;
	}

	public void setAesSubgrupoTrabalho(AesSubgrupoTrabalho aesSubgrupoTrabalho) {
		this.aesSubgrupoTrabalho = aesSubgrupoTrabalho;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "REG_SER_MATRICULA", referencedColumnName = "SER_MATRICULA", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "REG_SER_VIN_CODIGO", referencedColumnName = "SER_VIN_CODIGO", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "REG_SEQ", referencedColumnName = "SEQ", nullable = false, insertable = false, updatable = false) })
	public AesRegime getAesRegime() {
		return this.aesRegime;
	}

	public void setAesRegime(AesRegime aesRegime) {
		this.aesRegime = aesRegime;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByAesEscSerFk1() {
		return this.rapServidoresByAesEscSerFk1;
	}

	public void setRapServidoresByAesEscSerFk1(RapServidores rapServidoresByAesEscSerFk1) {
		this.rapServidoresByAesEscSerFk1 = rapServidoresByAesEscSerFk1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_E_ALTERADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_E_ALTERADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByAesEscSerFk2() {
		return this.rapServidoresByAesEscSerFk2;
	}

	public void setRapServidoresByAesEscSerFk2(RapServidores rapServidoresByAesEscSerFk2) {
		this.rapServidoresByAesEscSerFk2 = rapServidoresByAesEscSerFk2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SES_SEQ", nullable = false)
	public AesSituacaoEscala getAesSituacaoEscala() {
		return this.aesSituacaoEscala;
	}

	public void setAesSituacaoEscala(AesSituacaoEscala aesSituacaoEscala) {
		this.aesSituacaoEscala = aesSituacaoEscala;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATA", nullable = false, length = 29)
	public Date getData() {
		return this.data;
	}

	public void setData(Date data) {
		this.data = data;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "ESC_REG_SER_MATRICULA")
	public Integer getEscRegSerMatricula() {
		return this.escRegSerMatricula;
	}

	public void setEscRegSerMatricula(Integer escRegSerMatricula) {
		this.escRegSerMatricula = escRegSerMatricula;
	}

	@Column(name = "ESC_REG_SER_VIN_CODIGO")
	public Short getEscRegSerVinCodigo() {
		return this.escRegSerVinCodigo;
	}

	public void setEscRegSerVinCodigo(Short escRegSerVinCodigo) {
		this.escRegSerVinCodigo = escRegSerVinCodigo;
	}

	@Column(name = "ESC_REG_SEQ")
	public Integer getEscRegSeq() {
		return this.escRegSeq;
	}

	public void setEscRegSeq(Integer escRegSeq) {
		this.escRegSeq = escRegSeq;
	}

	@Column(name = "ESC_SEQ")
	public Long getEscSeq() {
		return this.escSeq;
	}

	public void setEscSeq(Long escSeq) {
		this.escSeq = escSeq;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 29)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "aesEscalasByAesSubEscFk2")
	public Set<AesSubstituicaoEscala> getAesSubstituicoesEscalasForAesSubEscFk2() {
		return this.aesSubstituicoesEscalasForAesSubEscFk2;
	}

	public void setAesSubstituicoesEscalasForAesSubEscFk2(Set<AesSubstituicaoEscala> aesSubstituicoesEscalasForAesSubEscFk2) {
		this.aesSubstituicoesEscalasForAesSubEscFk2 = aesSubstituicoesEscalasForAesSubEscFk2;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "aesEscalasByAesSubEscFk1")
	public Set<AesSubstituicaoEscala> getAesSubstituicoesEscalasForAesSubEscFk1() {
		return this.aesSubstituicoesEscalasForAesSubEscFk1;
	}

	public void setAesSubstituicoesEscalasForAesSubEscFk1(Set<AesSubstituicaoEscala> aesSubstituicoesEscalasForAesSubEscFk1) {
		this.aesSubstituicoesEscalasForAesSubEscFk1 = aesSubstituicoesEscalasForAesSubEscFk1;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		AES_SUBGRUPOS_TRABALHO("aesSubgrupoTrabalho"),
		AES_REGIMES("aesRegime"),
		RAP_SERVIDORES_BY_AES_ESC_SER_FK1("rapServidoresByAesEscSerFk1"),
		RAP_SERVIDORES_BY_AES_ESC_SER_FK2("rapServidoresByAesEscSerFk2"),
		AES_SITUACOES_ESCALA("aesSituacaoEscala"),
		DATA("data"),
		CRIADO_EM("criadoEm"),
		ESC_REG_SER_MATRICULA("escRegSerMatricula"),
		ESC_REG_SER_VIN_CODIGO("escRegSerVinCodigo"),
		ESC_REG_SEQ("escRegSeq"),
		ESC_SEQ("escSeq"),
		ALTERADO_EM("alteradoEm"),
		AES_SUBSTITUICOES_ESCALAS_FOR_AES_SUB_ESC_FK2("aesSubstituicoesEscalasForAesSubEscFk2"),
		AES_SUBSTITUICOES_ESCALAS_FOR_AES_SUB_ESC_FK1("aesSubstituicoesEscalasForAesSubEscFk1");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AesEscala)) {
			return false;
		}
		AesEscala other = (AesEscala) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

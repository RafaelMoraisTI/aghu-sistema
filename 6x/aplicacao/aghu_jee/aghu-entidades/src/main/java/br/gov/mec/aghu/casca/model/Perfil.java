package br.gov.mec.aghu.casca.model;

// Generated May 1, 2010 9:46:52 AM by Hibernate Tools 3.3.0.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.model.CsePerfisUsuarios;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * Perfil generated by hbm2java
 */
@Entity
@Table(name = "CSC_PERFIL", schema = "CASCA")
@SequenceGenerator(name="cscPerfSeq", sequenceName="casca.casca_perfil_sq1", allocationSize = 1)
public class Perfil extends BaseEntityId<Integer> {

	private static final long serialVersionUID = 1282232221625732429L;

	private Integer id;
	private String nome;
	private String descricao;
	private String descricaoResumida;
	private Date dataCriacao;
	private DominioSituacao situacao;
	private boolean delegavel;
	
	private Set<PerfisPermissoes> perfisPermissoeses = new HashSet<PerfisPermissoes>(0);
	private Set<PerfisUsuarios> perfisUsuarioses = new HashSet<PerfisUsuarios>(0);
	private Set<CsePerfisUsuarios> csePerfisUsuarios = new HashSet<CsePerfisUsuarios>(0);

	public Perfil() {
	}

	public Perfil(Integer id, String nome, String descricao, Date dataCriacao,
			DominioSituacao situacao) {
		this.id = id;
		this.nome = nome;
		this.descricao = descricao;
		this.dataCriacao = dataCriacao;
		this.situacao = situacao;
	}

	public Perfil(Integer id, String nome, String descricao,
			String descricaoResumida, Date dataCriacao, DominioSituacao situacao,
			Set<PerfisPermissoes> perfisPermissoeses,
			Set<PerfisUsuarios> perfisUsuarioses) {
		this.id = id;
		this.nome = nome;
		this.descricao = descricao;
		this.descricaoResumida = descricaoResumida;
		this.dataCriacao = dataCriacao;
		this.situacao = situacao;
		this.perfisPermissoeses = perfisPermissoeses;
		this.perfisUsuarioses = perfisUsuarioses;
	}

	@Id
	@Column(name = "ID", nullable = false, precision = 8, scale = 0)
	@GeneratedValue(strategy=GenerationType.AUTO, generator="cscPerfSeq")
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "NOME", nullable = false, length = 500)
	@Length(max = 500, message = "Nome do perfil pode conter no máximo 500 caracteres")
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 1000)
	@Length(min = 5, max = 1000, message = "Descrição do perfil deve ter no mínimo 5 e no máximo 1000 caracteres")	
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "DESCRICAO_RESUMIDA", length = 250)
	@Length(max = 250, message = "Descrição resumida do perfil pode conter no máximo 250 caracteres")	
	public String getDescricaoResumida() {
		return this.descricaoResumida;
	}

	public void setDescricaoResumida(String descricaoResumida) {
		this.descricaoResumida = descricaoResumida;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATA_CRIACAO", nullable = false, updatable = false)
	public Date getDataCriacao() {
		return this.dataCriacao;
	}

	public void setDataCriacao(Date dataCriacao) {
		this.dataCriacao = dataCriacao;
	}
		
	@Column(name = "SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getSituacao() {
		return this.situacao;
	}

	public void setSituacao(DominioSituacao situacao) {
		this.situacao = situacao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "perfil")
	public Set<PerfisPermissoes> getPerfisPermissoeses() {
		return this.perfisPermissoeses;
	}

	public void setPerfisPermissoeses(Set<PerfisPermissoes> perfisPermissoeses) {
		this.perfisPermissoeses = perfisPermissoeses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "perfil")
	public Set<PerfisUsuarios> getPerfisUsuarioses() {
		return this.perfisUsuarioses;
	}

	public void setPerfisUsuarioses(Set<PerfisUsuarios> perfisUsuarioses) {
		this.perfisUsuarioses = perfisUsuarioses;
	}
	
	
	

	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final Integer prime = 31;
		Integer result = super.hashCode();
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (!(obj instanceof Perfil)) {
			return false;
		}
		Perfil other = (Perfil) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.getId())) {
			return false;
		}
		return true;
	}




	public enum Fields {
		ID("id"), NOME("nome"), DESCRICAO("descricao"), CSE_PERFIS_USUARIOS("csePerfisUsuarios"), DESCRICAO_RESUMIDA(
				"descricaoResumida"), DATA_CRIACAO("dataCriacao"), SITUACAO(
				"situacao"), PERFIS_PERMISSOES("perfisPermissoeses"), PERFIS_USUARIOS(
				"perfisUsuarioses"), DELEGAVEL("delegavel");
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}



	@Column(name = "DELEGAVEL", nullable = false)
	public boolean isDelegavel() {
		return delegavel;
	}

	public void setDelegavel(boolean delegavel) {
		this.delegavel = delegavel;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy="perfil")
	public Set<CsePerfisUsuarios> getCsePerfisUsuarios() {
		return csePerfisUsuarios;
	}

	public void setCsePerfisUsuarios(Set<CsePerfisUsuarios> csePerfisUsuarios) {
		this.csePerfisUsuarios = csePerfisUsuarios;
	}
	
}
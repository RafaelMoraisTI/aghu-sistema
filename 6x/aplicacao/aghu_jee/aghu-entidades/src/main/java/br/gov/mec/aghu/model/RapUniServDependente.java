package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * RapUniServDependente generated by hbm2java
 */
@Entity
@Table(name = "RAP_UNI_SERV_DEPENDENTES", schema = "AGH")
public class RapUniServDependente extends BaseEntityId<RapUniServDependenteId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2809628369816443717L;
	private RapUniServDependenteId id;
	private Integer version;
	private RapServidores rapServidoresByRapSdeSerFk2;
	private RapUniServAdesao rapUniServAdesao;
	private RapServidores rapServidoresByRapSdeSerFk1;
	private RapUniMotivoDesligamento rapUniMotivoDesligamento;
	private Date dtFim;
	private Long nroCarteira;
	private Date criadoEm;
	private Date alteradoEm;
	private Set<RapUniDepIncapacidade> rapUniDepIncapacidadees = new HashSet<RapUniDepIncapacidade>(0);
	private Set<RapUniDepDocumento> rapUniDepDocumentoes = new HashSet<RapUniDepDocumento>(0);
	private RapUniDepSos rapUniDepSos;
	private RapUniDepCarencia rapUniDepCarencia;
	private Set<RapUniDepSubsidio> rapUniDepSubsidioes = new HashSet<RapUniDepSubsidio>(0);
	private Set<RapUniDepOdonto> rapUniDepOdontoes = new HashSet<RapUniDepOdonto>(0);

	public RapUniServDependente() {
	}

	public RapUniServDependente(RapUniServDependenteId id, RapUniServAdesao rapUniServAdesao,
			RapServidores rapServidoresByRapSdeSerFk1, Date criadoEm) {
		this.id = id;
		this.rapUniServAdesao = rapUniServAdesao;
		this.rapServidoresByRapSdeSerFk1 = rapServidoresByRapSdeSerFk1;
		this.criadoEm = criadoEm;
	}

	public RapUniServDependente(RapUniServDependenteId id, RapServidores rapServidoresByRapSdeSerFk2,
			RapUniServAdesao rapUniServAdesao, RapServidores rapServidoresByRapSdeSerFk1,
			RapUniMotivoDesligamento rapUniMotivoDesligamento, Date dtFim, Long nroCarteira, Date criadoEm, Date alteradoEm,
			Set<RapUniDepIncapacidade> rapUniDepIncapacidadees, Set<RapUniDepDocumento> rapUniDepDocumentoes,
			RapUniDepSos rapUniDepSos, RapUniDepCarencia rapUniDepCarencia, Set<RapUniDepSubsidio> rapUniDepSubsidioes,
			Set<RapUniDepOdonto> rapUniDepOdontoes) {
		this.id = id;
		this.rapServidoresByRapSdeSerFk2 = rapServidoresByRapSdeSerFk2;
		this.rapUniServAdesao = rapUniServAdesao;
		this.rapServidoresByRapSdeSerFk1 = rapServidoresByRapSdeSerFk1;
		this.rapUniMotivoDesligamento = rapUniMotivoDesligamento;
		this.dtFim = dtFim;
		this.nroCarteira = nroCarteira;
		this.criadoEm = criadoEm;
		this.alteradoEm = alteradoEm;
		this.rapUniDepIncapacidadees = rapUniDepIncapacidadees;
		this.rapUniDepDocumentoes = rapUniDepDocumentoes;
		this.rapUniDepSos = rapUniDepSos;
		this.rapUniDepCarencia = rapUniDepCarencia;
		this.rapUniDepSubsidioes = rapUniDepSubsidioes;
		this.rapUniDepOdontoes = rapUniDepOdontoes;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "sadSerMatricula", column = @Column(name = "SAD_SER_MATRICULA", nullable = false)),
			@AttributeOverride(name = "sadSerVinCodigo", column = @Column(name = "SAD_SER_VIN_CODIGO", nullable = false)),
			@AttributeOverride(name = "sadSeqp", column = @Column(name = "SAD_SEQP", nullable = false)),
			@AttributeOverride(name = "depPesCodigo", column = @Column(name = "DEP_PES_CODIGO", nullable = false)),
			@AttributeOverride(name = "depCodigo", column = @Column(name = "DEP_CODIGO", nullable = false)),
			@AttributeOverride(name = "dtInicio", column = @Column(name = "DT_INICIO", nullable = false, length = 29)) })
	public RapUniServDependenteId getId() {
		return this.id;
	}

	public void setId(RapUniServDependenteId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_ALTERADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_ALTERADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByRapSdeSerFk2() {
		return this.rapServidoresByRapSdeSerFk2;
	}

	public void setRapServidoresByRapSdeSerFk2(RapServidores rapServidoresByRapSdeSerFk2) {
		this.rapServidoresByRapSdeSerFk2 = rapServidoresByRapSdeSerFk2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SAD_SER_MATRICULA", referencedColumnName = "SER_MATRICULA", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "SAD_SER_VIN_CODIGO", referencedColumnName = "SER_VIN_CODIGO", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "SAD_SEQP", referencedColumnName = "SEQP", nullable = false, insertable = false, updatable = false) })
	public RapUniServAdesao getRapUniServAdesao() {
		return this.rapUniServAdesao;
	}

	public void setRapUniServAdesao(RapUniServAdesao rapUniServAdesao) {
		this.rapUniServAdesao = rapUniServAdesao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_CRIADO", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO_CRIADO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByRapSdeSerFk1() {
		return this.rapServidoresByRapSdeSerFk1;
	}

	public void setRapServidoresByRapSdeSerFk1(RapServidores rapServidoresByRapSdeSerFk1) {
		this.rapServidoresByRapSdeSerFk1 = rapServidoresByRapSdeSerFk1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MDE_CODIGO")
	public RapUniMotivoDesligamento getRapUniMotivoDesligamento() {
		return this.rapUniMotivoDesligamento;
	}

	public void setRapUniMotivoDesligamento(RapUniMotivoDesligamento rapUniMotivoDesligamento) {
		this.rapUniMotivoDesligamento = rapUniMotivoDesligamento;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_FIM", length = 29)
	public Date getDtFim() {
		return this.dtFim;
	}

	public void setDtFim(Date dtFim) {
		this.dtFim = dtFim;
	}

	@Column(name = "NRO_CARTEIRA")
	public Long getNroCarteira() {
		return this.nroCarteira;
	}

	public void setNroCarteira(Long nroCarteira) {
		this.nroCarteira = nroCarteira;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 29)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rapUniServDependente")
	public Set<RapUniDepIncapacidade> getRapUniDepIncapacidadees() {
		return this.rapUniDepIncapacidadees;
	}

	public void setRapUniDepIncapacidadees(Set<RapUniDepIncapacidade> rapUniDepIncapacidadees) {
		this.rapUniDepIncapacidadees = rapUniDepIncapacidadees;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rapUniServDependente")
	public Set<RapUniDepDocumento> getRapUniDepDocumentoes() {
		return this.rapUniDepDocumentoes;
	}

	public void setRapUniDepDocumentoes(Set<RapUniDepDocumento> rapUniDepDocumentoes) {
		this.rapUniDepDocumentoes = rapUniDepDocumentoes;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "rapUniServDependente")
	public RapUniDepSos getRapUniDepSos() {
		return this.rapUniDepSos;
	}

	public void setRapUniDepSos(RapUniDepSos rapUniDepSos) {
		this.rapUniDepSos = rapUniDepSos;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "rapUniServDependente")
	public RapUniDepCarencia getRapUniDepCarencia() {
		return this.rapUniDepCarencia;
	}

	public void setRapUniDepCarencia(RapUniDepCarencia rapUniDepCarencia) {
		this.rapUniDepCarencia = rapUniDepCarencia;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rapUniServDependente")
	public Set<RapUniDepSubsidio> getRapUniDepSubsidioes() {
		return this.rapUniDepSubsidioes;
	}

	public void setRapUniDepSubsidioes(Set<RapUniDepSubsidio> rapUniDepSubsidioes) {
		this.rapUniDepSubsidioes = rapUniDepSubsidioes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rapUniServDependente")
	public Set<RapUniDepOdonto> getRapUniDepOdontoes() {
		return this.rapUniDepOdontoes;
	}

	public void setRapUniDepOdontoes(Set<RapUniDepOdonto> rapUniDepOdontoes) {
		this.rapUniDepOdontoes = rapUniDepOdontoes;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		RAP_SERVIDORES_BY_RAP_SDE_SER_FK2("rapServidoresByRapSdeSerFk2"),
		RAP_UNI_SERV_ADESOES("rapUniServAdesao"),
		RAP_SERVIDORES_BY_RAP_SDE_SER_FK1("rapServidoresByRapSdeSerFk1"),
		RAP_UNI_MOTIVO_DESLIGAMENTOS("rapUniMotivoDesligamento"),
		DT_FIM("dtFim"),
		NRO_CARTEIRA("nroCarteira"),
		CRIADO_EM("criadoEm"),
		ALTERADO_EM("alteradoEm"),
		RAP_UNI_DEP_INCAPACIDADEES("rapUniDepIncapacidadees"),
		RAP_UNI_DEP_DOCUMENTOES("rapUniDepDocumentoes"),
		RAP_UNI_DEP_SOS("rapUniDepSos"),
		RAP_UNI_DEP_CARENCIAS("rapUniDepCarencia"),
		RAP_UNI_DEP_SUBSIDIOES("rapUniDepSubsidioes"),
		RAP_UNI_DEP_ODONTOES("rapUniDepOdontoes"),
		SAD_SER_MATRICULA("id.sadSerMatricula"),
		SAD_SER_VIN_CODIGO("id.sadSerVinCodigo"),
		DT_INICIO("id.dtInicio"),
		DEP_CODIGO("id.depCodigo"),
		DEP_PES_CODIGO("id.depPesCodigo")
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof RapUniServDependente)) {
			return false;
		}
		RapUniServDependente other = (RapUniServDependente) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

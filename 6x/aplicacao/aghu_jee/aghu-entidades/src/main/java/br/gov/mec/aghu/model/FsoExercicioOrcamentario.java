package br.gov.mec.aghu.model;

// Generated 01/12/2011 14:28:55 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


/**
 * FsoExerciciosOrcamentarios generated by hbm2java
 */
@Entity
@Table(name = "FSO_EXERCICIOS_ORCAMENTARIOS", schema = "AGH")
public class FsoExercicioOrcamentario implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 5890864134370851918L;

	private Date exercicio;
	private Boolean exercicioCorrente;
	private Set<FsoPrevisaoOrcamentaria> previsoesOrcamentariases = new HashSet<FsoPrevisaoOrcamentaria>(
			0);

	public FsoExercicioOrcamentario() {
	}

	public FsoExercicioOrcamentario(Date exercicio,
			Boolean exercicioCorrente) {
		this.exercicio = exercicio;
		this.exercicioCorrente = exercicioCorrente;
	}

	public FsoExercicioOrcamentario(Date exercicio,
			Boolean exercicioCorrente,
			Set<FsoPrevisaoOrcamentaria> previsoesOrcamentariases) {
		this.exercicio = exercicio;
		this.exercicioCorrente = exercicioCorrente;
		this.previsoesOrcamentariases = previsoesOrcamentariases;
	}

	@Id
	@Temporal(TemporalType.DATE)
	@Column(name = "EXERCICIO", unique = true, nullable = false, length = 7)
	public Date getExercicio() {
		return this.exercicio;
	}

	public void setExercicio(Date exercicio) {
		this.exercicio = exercicio;
	}

	@Column(name = "IND_EXERCICIO_CORRENTE", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getExercicioCorrente() {
		return exercicioCorrente;
	}

	public void setExercicioCorrente(Boolean exercicioCorrente) {
		this.exercicioCorrente = exercicioCorrente;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "exercicioOrcamentario")
	public Set<FsoPrevisaoOrcamentaria> getPrevisoesOrcamentariases() {
		return previsoesOrcamentariases;
	}

	public void setPrevisoesOrcamentariases(
			Set<FsoPrevisaoOrcamentaria> previsoesOrcamentariases) {
		this.previsoesOrcamentariases = previsoesOrcamentariases;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((exercicio == null) ? 0 : exercicio.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		FsoExercicioOrcamentario other = (FsoExercicioOrcamentario) obj;
		if (exercicio == null) {
			if (other.exercicio != null) {
				return false;
			}
		} else if (!exercicio.equals(other.exercicio)) {
			return false;
		}
		return true;
	}

	public enum Fields {
		EXEC_CORRENTE("exercicioCorrente");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}

}

package br.gov.mec.aghu.model;

// Generated 31/05/2011 14:56:51 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;

import br.gov.mec.aghu.dominio.DominioResponsavelColetaExames;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AelTiposAmoExameConv generated by hbm2java
 */

@Entity
@Table(name = "AEL_TIPOS_AMO_EXAME_CONV", schema = "AGH")
public class AelTipoAmoExameConv extends BaseEntityId<AelTipoAmoExameConvId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1791121466547212879L;
	private AelTipoAmoExameConvId id;
	private Integer version;
	private DominioResponsavelColetaExames responsavelColeta;
	private Date criadoEm;
	private RapServidores servidor;
	private FatConvenioSaudePlano convSaudePlanos;
	private AelTipoAmostraExame tipoAmostraExame;
	
	@EmbeddedId
	@AttributeOverrides({
		@AttributeOverride(name = "taeEmaExaSigla", column = @Column(name = "TAE_EMA_EXA_SIGLA", nullable = false, length = 5)),
		@AttributeOverride(name = "taeEmaManSeq", column = @Column(name = "TAE_EMA_MAN_SEQ", nullable = false)),
		@AttributeOverride(name = "taeManSeq", column = @Column(name = "TAE_MAN_SEQ", nullable = false)),
		@AttributeOverride(name = "taeOrigemAtendimento", column = @Column(name = "TAE_ORIGEM_ATENDIMENTO", nullable = false, length = 1)),
		@AttributeOverride(name = "cspSeq", column = @Column(name = "CSP_SEQ", nullable = false)),
		@AttributeOverride(name = "cspCnvCodigo", column = @Column(name = "CSP_CNV_CODIGO", nullable = false)) })
		public AelTipoAmoExameConvId getId() {
		return this.id;
	}

	public void setId(AelTipoAmoExameConvId id) {
		this.id = id;
	}
	
    @ManyToOne (fetch = FetchType.LAZY)
	@JoinColumns( {
		@JoinColumn(name = "CSP_CNV_CODIGO",referencedColumnName = "CNV_CODIGO", nullable = false,insertable=false, updatable=false),
		@JoinColumn(name = "CSP_SEQ",referencedColumnName = "SEQ", nullable = false,insertable=false, updatable=false) })
	public FatConvenioSaudePlano getConvSaudePlanos() {
		return convSaudePlanos;
	}
	
	
	public void setConvSaudePlanos(FatConvenioSaudePlano convSaudePlanos) {
		this.convSaudePlanos = convSaudePlanos;
	}
	
	@ManyToOne (fetch = FetchType.LAZY)
	@JoinColumns( {
		@JoinColumn(name = "TAE_EMA_EXA_SIGLA",referencedColumnName = "EMA_EXA_SIGLA", nullable = false,insertable=false, updatable=false),
		@JoinColumn(name = "TAE_EMA_MAN_SEQ",referencedColumnName = "EMA_MAN_SEQ", nullable = false,insertable=false, updatable=false),
		@JoinColumn(name = "TAE_MAN_SEQ",referencedColumnName = "MAN_SEQ", nullable = false,insertable=false, updatable=false),
		@JoinColumn(name = "TAE_ORIGEM_ATENDIMENTO",referencedColumnName = "ORIGEM_ATENDIMENTO", nullable = false,insertable=false, updatable=false) })
	public AelTipoAmostraExame getTipoAmostraExame() {
		return tipoAmostraExame;
	}
	
	
	public void setTipoAmostraExame(AelTipoAmostraExame tipoAmostraExame) {
		this.tipoAmostraExame = tipoAmostraExame;
	}

	public AelTipoAmoExameConv() {
	}

	public AelTipoAmoExameConv(AelTipoAmoExameConvId id, DominioResponsavelColetaExames responsavelColeta, Date criadoEm, RapServidores servidor) {
		this.id = id;
		this.responsavelColeta = responsavelColeta;
		this.criadoEm = criadoEm;
		this.servidor = servidor;  
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Column(name = "RESPONSAVEL_COLETA", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioResponsavelColetaExames getResponsavelColeta() {
		return responsavelColeta;
	}

	public void setResponsavelColeta(
			DominioResponsavelColetaExames responsavelColeta) {
		this.responsavelColeta = responsavelColeta;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
		@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
		@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
		public RapServidores getServidor() {
		return servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}


	@Override
	public boolean equals(Object other) {
		if (!(other instanceof AelTipoAmoExameConv)) {
			return false;
		}
		AelTipoAmoExameConv castOther = (AelTipoAmoExameConv) other;
		return new EqualsBuilder().append(this.getId(), castOther.getId())
		.isEquals();
	}

	@Override
	public int hashCode() {
		return new HashCodeBuilder().append(this.getId()).toHashCode();
	}
	
	public enum Fields {
		ID("id"), //
		RESPONSAVEL_COLETA("responsavelColeta"),//
		CRIADOEM("criadoEm"), //
		SERVIDOR("servidor"), //
		TAE_ORIGEM_ATEND("id.taeOrigemAtendimento"),// 
		TAE_EMA_EXA_SIGLA("id.taeEmaExaSigla"), //
		TAE_EMA_MAN_SEQ("id.taeEmaManSeq"), //
		TAE_MAN_SEQ("id.taeManSeq"), //
		CSP_SEQ("id.cspSeq"), //
		CSP_CNV_COD("id.cspCnvCodigo"),//
		TIPO_AMOSTRA_EXAME("tipoAmostraExame"),//
		CONVENIO_SAUDE_PLANO("convSaudePlanos"),//
		;
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}
		@Override
		public String toString() {
			return this.fields;
		}
	}	

}

package br.gov.mec.aghu.model;

// Generated 26/02/2010 19:31:12 by Hibernate Tools 3.2.5.Beta

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;


import org.hibernate.annotations.Immutable;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSimNao;
import br.gov.mec.aghu.dominio.DominioTipoEndereco;
import br.gov.mec.aghu.core.model.BaseJournal;

/**
 * AipEnderecosPacientesJn generated by hbm2java
 */
@SuppressWarnings({"PMD.AghuUsoIndevidoDaEnumDominioSimNaoEntity"})
@Entity
@Table(name = "AIP_ENDERECOS_PACIENTES_JN", schema = "AGH")
@SequenceGenerator(name = "aipEnpJnSeq", sequenceName = "AGH.AIP_ENP_JN_SEQ", allocationSize = 1)

@Immutable
public class AipEnderecosPacientesJn extends BaseJournal implements
		java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -558523015015865625L;
	private Short seqp;
	private Integer pacCodigo;
	private DominioTipoEndereco tipoEndereco;
	private DominioSimNao indPadrao;
	private AipCidades cidade;
	private AipUfs uf;
	private String logradouro;
	private Integer nroLogradouro;
	private String complLogradouro;
	private String bairro;
	private String nomeCidade;
	private Integer cep;
	private Integer bclBaiCodigo;
	private Integer bclCloCep;
	private Integer bclCloLgrCodigo;
	// TODO arrumar esse mapeamento (gera refactory na EnderecoON)
	// private AipBairrosCepLogradouro bairrosCepLogradouro;
	private DominioSimNao indExclusaoForcada;

	public AipEnderecosPacientesJn() {
	}
	
	@Id
	@Column(name = "SEQ_JN", unique = true, nullable = false)
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "aipEnpJnSeq")
	@Override
	public Integer getSeqJn() {
		return super.getSeqJn();
	}

	@Column(name = "SEQP", nullable = false, precision = 3, scale = 0)
	public Short getSeqp() {
		return this.seqp;
	}

	public void setSeqp(Short seqp) {
		this.seqp = seqp;
	}

	@Column(name = "PAC_CODIGO", nullable = false, precision = 8, scale = 0)
	public Integer getPacCodigo() {
		return this.pacCodigo;
	}

	public void setPacCodigo(Integer pacCodigo) {
		this.pacCodigo = pacCodigo;
	}

	@Column(name = "TIPO_ENDERECO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioTipoEndereco getTipoEndereco() {
		return this.tipoEndereco;
	}

	public void setTipoEndereco(DominioTipoEndereco tipoEndereco) {
		this.tipoEndereco = tipoEndereco;
	}

	@Column(name = "IND_PADRAO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSimNao getIndPadrao() {
		return this.indPadrao;
	}

	public void setIndPadrao(DominioSimNao indPadrao) {
		this.indPadrao = indPadrao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CDD_CODIGO")
	public AipCidades getCidade() {
		return this.cidade;
	}

	public void setCidade(AipCidades cidade) {
		this.cidade = cidade;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UF_SIGLA")
	public AipUfs getUf() {
		return this.uf;
	}

	public void setUf(AipUfs uf) {
		this.uf = uf;
	}

	@Column(name = "LOGRADOURO", length = 120)
	@Length(max = 120, message = "Logradouro do endereço do paciente tem tamanho máximo de 120 caracteres")
	public String getLogradouro() {
		return this.logradouro;
	}

	public void setLogradouro(String logradouro) {
		this.logradouro = logradouro;
	}

	@Column(name = "NRO_LOGRADOURO", precision = 5, scale = 0)
	public Integer getNroLogradouro() {
		return this.nroLogradouro;
	}

	public void setNroLogradouro(Integer nroLogradouro) {
		this.nroLogradouro = nroLogradouro;
	}

	@Column(name = "COMPL_LOGRADOURO", length = 200)
	@Length(max = 200)
	public String getComplLogradouro() {
		return this.complLogradouro;
	}

	public void setComplLogradouro(String complLogradouro) {
		this.complLogradouro = complLogradouro;
	}

	@Column(name = "BAIRRO", length = 100)
	@Length(max = 100, message = "Bairro do endereço do paciente tem tamanho máximo de 100 caracteres")
	public String getBairro() {
		return this.bairro;
	}

	public void setBairro(String bairro) {
		this.bairro = bairro;
	}

	@Column(name = "CIDADE", length = 40)
	@Length(max = 40, message = "Cidade do endereço do paciente tem tamanho máximo de 40 caracteres")
	public String getNomeCidade() {
		return this.nomeCidade;
	}

	public void setNomeCidade(String nomeCidade) {
		this.nomeCidade = nomeCidade;
	}

	@Column(name = "CEP", precision = 8, scale = 0)
	public Integer getCep() {
		return this.cep;
	}

	public void setCep(Integer cep) {
		this.cep = cep;
	}

	@Column(name = "BCL_BAI_CODIGO", precision = 5, scale = 0)
	public Integer getBclBaiCodigo() {
		return this.bclBaiCodigo;
	}

	public void setBclBaiCodigo(Integer bclBaiCodigo) {
		this.bclBaiCodigo = bclBaiCodigo;
	}

	@Column(name = "BCL_CLO_CEP", precision = 8, scale = 0)
	public Integer getBclCloCep() {
		return this.bclCloCep;
	}

	public void setBclCloCep(Integer bclCloCep) {
		this.bclCloCep = bclCloCep;
	}

	@Column(name = "BCL_CLO_LGR_CODIGO", precision = 9, scale = 0)
	public Integer getBclCloLgrCodigo() {
		return this.bclCloLgrCodigo;
	}

	public void setBclCloLgrCodigo(Integer bclCloLgrCodigo) {
		this.bclCloLgrCodigo = bclCloLgrCodigo;
	}

	/*
	 * @ManyToOne(fetch = FetchType.LAZY)
	 * 
	 * @JoinColumns( {
	 * 
	 * @JoinColumn(name = "BCL_CLO_LGR_CODIGO", referencedColumnName =
	 * "CLO_LGR_CODIGO"),
	 * 
	 * @JoinColumn(name = "BCL_CLO_CEP", referencedColumnName = "CLO_CEP"),
	 * 
	 * @JoinColumn(name = "BCL_BAI_CODIGO", referencedColumnName = "BAI_CODIGO")
	 * }) public AipBairrosCepLogradouro getBairrosCepLogradouro() { return
	 * this.bairrosCepLogradouro; }
	 * 
	 * public void setBairrosCepLogradouro( AipBairrosCepLogradouro
	 * aipBairrosCepLogradouro) { this.bairrosCepLogradouro =
	 * aipBairrosCepLogradouro; }
	 */

	@Column(name = "IND_EXCLUSAO_FORCADA", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSimNao getIndExclusaoForcada() {
		return this.indExclusaoForcada;
	}

	public void setIndExclusaoForcada(DominioSimNao indExclusaoForcada) {
		this.indExclusaoForcada = indExclusaoForcada;
	}


	public enum Fields {
		
		PAC_CODIGO("pacCodigo"), DATA_ALTERACAO("dataAlteracao");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
		
	}
	
}

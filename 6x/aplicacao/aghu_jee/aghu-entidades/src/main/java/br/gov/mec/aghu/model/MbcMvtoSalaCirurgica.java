package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.dominio.DominioTipoSala;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MbcMvtoSalaCirurgica generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mbcMscSq1", sequenceName="AGH.MBC_MSC_SQ1", allocationSize = 1)
@Table(name = "MBC_MVTO_SALA_CIRURGICAS", schema = "AGH")
public class MbcMvtoSalaCirurgica extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1293328247086925274L;
	private Integer seq;
	private Integer version;
	private RapServidores rapServidoresByMbcMscSerFk1;
	private RapServidores rapServidoresByMbcMscSerFk2;
	private MbcSalaCirurgica mbcSalaCirurgica;
	private MbcMvtoSalaCirurgica mbcMvtoSalaCirurgica;
	private Date criadoEm;
	private Date dtInicioMvto;
	private Date dtFimMvto;
	private String nome;
	private Boolean indEspecial;
	private String motivoInat;
	private DominioSituacao situacao;
	private Date alteradoEm;
	@Deprecated
	private DominioTipoSala tipoSala;
	private MbcTipoSala mbcTipoSala;
	private Boolean visivelMonitor; 
	
	private Set<MbcMvtoSalaCirurgica> mbcMvtoSalaCirurgicaes = new HashSet<MbcMvtoSalaCirurgica>(0);

	public MbcMvtoSalaCirurgica() {
	}

	public MbcMvtoSalaCirurgica(Integer seq, RapServidores rapServidoresByMbcMscSerFk1, MbcSalaCirurgica mbcSalaCirurgica,
			Date criadoEm, Date dtInicioMvto, Boolean indEspecial, DominioSituacao situacao) {
		this.seq = seq;
		this.rapServidoresByMbcMscSerFk1 = rapServidoresByMbcMscSerFk1;
		this.mbcSalaCirurgica = mbcSalaCirurgica;
		this.criadoEm = criadoEm;
		this.dtInicioMvto = dtInicioMvto;
		this.indEspecial = indEspecial;
		this.situacao = situacao;
	}

	public MbcMvtoSalaCirurgica(Integer seq, RapServidores rapServidoresByMbcMscSerFk1, RapServidores rapServidoresByMbcMscSerFk2,
			MbcSalaCirurgica mbcSalaCirurgica, MbcMvtoSalaCirurgica mbcMvtoSalaCirurgica, Date criadoEm, Date dtInicioMvto,
			Date dtFimMvto, String nome, Boolean indEspecial, String motivoInat, DominioSituacao situacao, Date alteradoEm,
			Set<MbcMvtoSalaCirurgica> mbcMvtoSalaCirurgicaes) {
		this.seq = seq;
		this.rapServidoresByMbcMscSerFk1 = rapServidoresByMbcMscSerFk1;
		this.rapServidoresByMbcMscSerFk2 = rapServidoresByMbcMscSerFk2;
		this.mbcSalaCirurgica = mbcSalaCirurgica;
		this.mbcMvtoSalaCirurgica = mbcMvtoSalaCirurgica;
		this.criadoEm = criadoEm;
		this.dtInicioMvto = dtInicioMvto;
		this.dtFimMvto = dtFimMvto;
		this.nome = nome;
		this.indEspecial = indEspecial;
		this.motivoInat = motivoInat;
		this.situacao = situacao;
		this.alteradoEm = alteradoEm;
		this.mbcMvtoSalaCirurgicaes = mbcMvtoSalaCirurgicaes;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mbcMscSq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByMbcMscSerFk1() {
		return this.rapServidoresByMbcMscSerFk1;
	}

	public void setRapServidoresByMbcMscSerFk1(RapServidores rapServidoresByMbcMscSerFk1) {
		this.rapServidoresByMbcMscSerFk1 = rapServidoresByMbcMscSerFk1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_ALTERA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_ALTERA", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMbcMscSerFk2() {
		return this.rapServidoresByMbcMscSerFk2;
	}

	public void setRapServidoresByMbcMscSerFk2(RapServidores rapServidoresByMbcMscSerFk2) {
		this.rapServidoresByMbcMscSerFk2 = rapServidoresByMbcMscSerFk2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SCI_UNF_SEQ", referencedColumnName = "UNF_SEQ", nullable = false),
			@JoinColumn(name = "SCI_SEQP", referencedColumnName = "SEQP", nullable = false) })
	public MbcSalaCirurgica getMbcSalaCirurgica() {
		return this.mbcSalaCirurgica;
	}

	public void setMbcSalaCirurgica(MbcSalaCirurgica mbcSalaCirurgica) {
		this.mbcSalaCirurgica = mbcSalaCirurgica;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MSC_SEQ")
	public MbcMvtoSalaCirurgica getMbcMvtoSalaCirurgica() {
		return this.mbcMvtoSalaCirurgica;
	}

	public void setMbcMvtoSalaCirurgica(MbcMvtoSalaCirurgica mbcMvtoSalaCirurgica) {
		this.mbcMvtoSalaCirurgica = mbcMvtoSalaCirurgica;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_INICIO_MVTO", nullable = false, length = 29)
	public Date getDtInicioMvto() {
		return this.dtInicioMvto;
	}

	public void setDtInicioMvto(Date dtInicioMvto) {
		this.dtInicioMvto = dtInicioMvto;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_FIM_MVTO", length = 29)
	public Date getDtFimMvto() {
		return this.dtFimMvto;
	}

	public void setDtFimMvto(Date dtFimMvto) {
		this.dtFimMvto = dtFimMvto;
	}

	@Column(name = "NOME", length = 60)
	@Length(max = 60)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Column(name = "IND_ESPECIAL", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndEspecial() {
		return this.indEspecial;
	}

	public void setIndEspecial(Boolean indEspecial) {
		this.indEspecial = indEspecial;
	}

	@Column(name = "MOTIVO_INAT", length = 120)
	@Length(max = 120)
	public String getMotivoInat() {
		return this.motivoInat;
	}

	public void setMotivoInat(String motivoInat) {
		this.motivoInat = motivoInat;
	}

	@Column(name = "SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getSituacao() {
		return this.situacao;
	}

	public void setSituacao(DominioSituacao situacao) {
		this.situacao = situacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 29)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mbcMvtoSalaCirurgica")
	public Set<MbcMvtoSalaCirurgica> getMbcMvtoSalaCirurgicaes() {
		return this.mbcMvtoSalaCirurgicaes;
	}

	public void setMbcMvtoSalaCirurgicaes(Set<MbcMvtoSalaCirurgica> mbcMvtoSalaCirurgicaes) {
		this.mbcMvtoSalaCirurgicaes = mbcMvtoSalaCirurgicaes;
	}
	
	
	@Column(name = "IND_VISIVEL_MONITOR", length=1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getVisivelMonitor() {
		return this.visivelMonitor;
	}

	public void setVisivelMonitor(Boolean visivelMonitor) {
		this.visivelMonitor = visivelMonitor;
	}
	
	@Column(name = "IND_TIPO_SALA", length=1)
	@Enumerated(EnumType.STRING)
	public DominioTipoSala getTipoSala() {
		return this.tipoSala;
	}

	public void setTipoSala(DominioTipoSala tipoSala) {
		this.tipoSala = tipoSala;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TIS_SEQ", nullable = true)
	public MbcTipoSala getMbcTipoSala() {
		return mbcTipoSala;
	}

	public void setMbcTipoSala(MbcTipoSala mbcTipoSala) {
		this.mbcTipoSala = mbcTipoSala;
	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		RAP_SERVIDORES_BY_MBC_MSC_SER_FK1("rapServidoresByMbcMscSerFk1"),
		RAP_SERVIDORES_BY_MBC_MSC_SER_FK2("rapServidoresByMbcMscSerFk2"),
		MBC_SALA_CIRURGICA("mbcSalaCirurgica"),
		UNF_SEQ("mbcSalaCirurgica.id.unfSeq"),
		SEQP("mbcSalaCirurgica.id.seqp"),
		MBC_MVTO_SALA_CIRURGICAS("mbcMvtoSalaCirurgica"),
		CRIADO_EM("criadoEm"),
		DT_INICIO_MVTO("dtInicioMvto"),
		DT_FIM_MVTO("dtFimMvto"),
		NOME("nome"),
		IND_ESPECIAL("indEspecial"),
		MOTIVO_INAT("motivoInat"),
		SITUACAO("situacao"),
		ALTERADO_EM("alteradoEm"),
		MBC_TIPO_SALA("mbcTipoSala"),
		VISIVEL_MONITOR("visivelMonitor"),
		MBC_MVTO_SALA_CIRURGICAES("mbcMvtoSalaCirurgicaes");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MbcMvtoSalaCirurgica)) {
			return false;
		}
		MbcMvtoSalaCirurgica other = (MbcMvtoSalaCirurgica) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

// Generated 24/04/2012 11:20:03 by Hibernate Tools 3.4.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Version;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * ScoFornMarcaMateriais generated by hbm2java
 */
@Entity
@Table(name = "SCO_FORN_MARCA_MATERIAIS", schema = "AGH")
public class ScoFornMarcaMateriais extends BaseEntityId<ScoFornMarcaMateriaisId> implements java.io.Serializable {
	
	public enum Fields{
		FM_FRN_NUMERO("id.fmFrnNumero"),
		FM_MCM_CODIGO("id.fmMcmCodigo"),
		MAT_CODIGO("id.matCodigo");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}

	/**
	 * 
	 */
	private static final long serialVersionUID = 2933024881718677934L;
	private ScoFornMarcaMateriaisId id;
	private Integer version;
	private ScoFornecedorMarca scoFornecedorMarca;
	private ScoMaterial scoMaterial;

	public ScoFornMarcaMateriais() {
	}

	public ScoFornMarcaMateriais(ScoFornMarcaMateriaisId id) {
		this.id = id;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "fmFrnNumero", column = @Column(name = "FM_FRN_NUMERO", nullable = false)),
			@AttributeOverride(name = "fmMcmCodigo", column = @Column(name = "FM_MCM_CODIGO", nullable = false)),
			@AttributeOverride(name = "matCodigo", column = @Column(name = "MAT_CODIGO", nullable = false)) })
	public ScoFornMarcaMateriaisId getId() {
		return this.id;
	}

	public void setId(ScoFornMarcaMateriaisId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "FM_FRN_NUMERO", referencedColumnName = "FRN_NUMERO", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "FM_MCM_CODIGO", referencedColumnName = "MCM_CODIGO", nullable = false, insertable = false, updatable = false) })
	public ScoFornecedorMarca getScoFornecedorMarca() {
		return this.scoFornecedorMarca;
	}

	public void setScoFornecedorMarca(ScoFornecedorMarca scoFornecedorMarca) {
		this.scoFornecedorMarca = scoFornecedorMarca;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MAT_CODIGO", nullable = false, insertable = false, updatable = false)
	public ScoMaterial getScoMaterial() {
		return this.scoMaterial;
	}

	public void setScoMaterial(ScoMaterial scoMaterial) {
		this.scoMaterial = scoMaterial;
	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof ScoFornMarcaMateriais)) {
			return false;
		}
		ScoFornMarcaMateriais other = (ScoFornMarcaMateriais) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

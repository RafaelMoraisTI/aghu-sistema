package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MptJustificativaUsoMdto generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mptJusSq1", sequenceName="AGH.MPT_JUS_SQ1", allocationSize = 1)
@Table(name = "MPT_JUSTIFICATIVA_USO_MDTOS", schema = "AGH")
public class MptJustificativaUsoMdto extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8199934596795106324L;
	private Integer seq;
	private Integer version;
	private RapServidores rapServidoresByMptJusSerFk1;
	private RapServidores rapServidoresByMptJusSerFk2;
	private FatConvenioSaudePlano fatConvenioSaudePlano;
	private AfaMedicamento afaMedicamento;
	private AghAtendimentos aghAtendimentos;
	private String justificativa;
	private String indSituacao;
	private String indCandAprovLote;
	private Date criadoEm;
	private String indOrientacaoAvaliador;
	private String indGestante;
	private String tipoInfeccao;
	private String nomeGerme;
	private String sitAntibiograma;
	private String sensibilidadeAntibiotico;
	private String indFuncRenalComprometida;
	private String indPacImunodeprimido;
	private String observacao;
	private String indUsoMdtoAntimicrob;
	private Date alteradoEm;
	private Date dthrConhecimento;
	private Integer serMatriculaConhecimento;
	private Short serVinCodigoConhecimento;
	private String indicacao;
	private String infeccaoTratar;
	private String tratAntimicrobAnt;
	private String internacaoPrevia;
	private String inicioInfeccao;
	private String infecRelProcedInvasivo;
	private String indSondaVesicalDemora;
	private Double pesoEstimado;
	private String condutaBaseProtAssist;
	private String insufHepatica;
	private String vantagemNsPadronizacao;
	private String usoCronicoPrevInt;
	private Double custoDiarioEstReal;
	private String refBibliograficas;
	private String diagnostico;
	private String ecog;
	private String intencaoTrat;
	private String linhaTrat;
	private String tratAntCirurgia;
	private String tratAntRadio;
	private String tratAntQuimio;
	private Date mesAnoUltCiclo;
	private String tratAntHormonio;
	private String tratAntOutros;
	private Set<MptParecerUsoMdto> mptParecerUsoMdtoes = new HashSet<MptParecerUsoMdto>(0);
	
	// FIXME Implementar este relacionamento
//	private Set<MptItemPrescricaoMedicamento> mptItemPrescricaoMedicamentoes = new HashSet<MptItemPrescricaoMedicamento>(0);

	public MptJustificativaUsoMdto() {
	}

	public MptJustificativaUsoMdto(Integer seq, RapServidores rapServidoresByMptJusSerFk2, AfaMedicamento afaMedicamento,
			AghAtendimentos aghAtendimentos, String justificativa, String indSituacao, String indCandAprovLote, Date criadoEm) {
		this.seq = seq;
		this.rapServidoresByMptJusSerFk2 = rapServidoresByMptJusSerFk2;
		this.afaMedicamento = afaMedicamento;
		this.aghAtendimentos = aghAtendimentos;
		this.justificativa = justificativa;
		this.indSituacao = indSituacao;
		this.indCandAprovLote = indCandAprovLote;
		this.criadoEm = criadoEm;
	}

	@SuppressWarnings({"PMD.ExcessiveParameterList"})
	public MptJustificativaUsoMdto(Integer seq, RapServidores rapServidoresByMptJusSerFk1, RapServidores rapServidoresByMptJusSerFk2,
			FatConvenioSaudePlano fatConvenioSaudePlano, AfaMedicamento afaMedicamento, AghAtendimentos aghAtendimentos,
			String justificativa, String indSituacao, String indCandAprovLote, Date criadoEm, String indOrientacaoAvaliador,
			String indGestante, String tipoInfeccao, String nomeGerme, String sitAntibiograma, String sensibilidadeAntibiotico,
			String indFuncRenalComprometida, String indPacImunodeprimido, String observacao, String indUsoMdtoAntimicrob,
			Date alteradoEm, Date dthrConhecimento, Integer serMatriculaConhecimento, Short serVinCodigoConhecimento,
			String indicacao, String infeccaoTratar, String tratAntimicrobAnt, String internacaoPrevia, String inicioInfeccao,
			String infecRelProcedInvasivo, String indSondaVesicalDemora, Double pesoEstimado, String condutaBaseProtAssist,
			String insufHepatica, String vantagemNsPadronizacao, String usoCronicoPrevInt, Double custoDiarioEstReal,
			String refBibliograficas, String diagnostico, String ecog, String intencaoTrat, String linhaTrat, String tratAntCirurgia,
			String tratAntRadio, String tratAntQuimio, Date mesAnoUltCiclo, String tratAntHormonio, String tratAntOutros,
//			Set<MptItemPrescricaoMedicamento> mptItemPrescricaoMedicamentoes,
			Set<MptParecerUsoMdto> mptParecerUsoMdtoes) {
		this.seq = seq;
		this.rapServidoresByMptJusSerFk1 = rapServidoresByMptJusSerFk1;
		this.rapServidoresByMptJusSerFk2 = rapServidoresByMptJusSerFk2;
		this.fatConvenioSaudePlano = fatConvenioSaudePlano;
		this.afaMedicamento = afaMedicamento;
		this.aghAtendimentos = aghAtendimentos;
		this.justificativa = justificativa;
		this.indSituacao = indSituacao;
		this.indCandAprovLote = indCandAprovLote;
		this.criadoEm = criadoEm;
		this.indOrientacaoAvaliador = indOrientacaoAvaliador;
		this.indGestante = indGestante;
		this.tipoInfeccao = tipoInfeccao;
		this.nomeGerme = nomeGerme;
		this.sitAntibiograma = sitAntibiograma;
		this.sensibilidadeAntibiotico = sensibilidadeAntibiotico;
		this.indFuncRenalComprometida = indFuncRenalComprometida;
		this.indPacImunodeprimido = indPacImunodeprimido;
		this.observacao = observacao;
		this.indUsoMdtoAntimicrob = indUsoMdtoAntimicrob;
		this.alteradoEm = alteradoEm;
		this.dthrConhecimento = dthrConhecimento;
		this.serMatriculaConhecimento = serMatriculaConhecimento;
		this.serVinCodigoConhecimento = serVinCodigoConhecimento;
		this.indicacao = indicacao;
		this.infeccaoTratar = infeccaoTratar;
		this.tratAntimicrobAnt = tratAntimicrobAnt;
		this.internacaoPrevia = internacaoPrevia;
		this.inicioInfeccao = inicioInfeccao;
		this.infecRelProcedInvasivo = infecRelProcedInvasivo;
		this.indSondaVesicalDemora = indSondaVesicalDemora;
		this.pesoEstimado = pesoEstimado;
		this.condutaBaseProtAssist = condutaBaseProtAssist;
		this.insufHepatica = insufHepatica;
		this.vantagemNsPadronizacao = vantagemNsPadronizacao;
		this.usoCronicoPrevInt = usoCronicoPrevInt;
		this.custoDiarioEstReal = custoDiarioEstReal;
		this.refBibliograficas = refBibliograficas;
		this.diagnostico = diagnostico;
		this.ecog = ecog;
		this.intencaoTrat = intencaoTrat;
		this.linhaTrat = linhaTrat;
		this.tratAntCirurgia = tratAntCirurgia;
		this.tratAntRadio = tratAntRadio;
		this.tratAntQuimio = tratAntQuimio;
		this.mesAnoUltCiclo = mesAnoUltCiclo;
		this.tratAntHormonio = tratAntHormonio;
		this.tratAntOutros = tratAntOutros;
//		this.mptItemPrescricaoMedicamentoes = mptItemPrescricaoMedicamentoes;
		this.mptParecerUsoMdtoes = mptParecerUsoMdtoes;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mptJusSq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_INC_VALIDADA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_INC_VALIDADA", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMptJusSerFk1() {
		return this.rapServidoresByMptJusSerFk1;
	}

	public void setRapServidoresByMptJusSerFk1(RapServidores rapServidoresByMptJusSerFk1) {
		this.rapServidoresByMptJusSerFk1 = rapServidoresByMptJusSerFk1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByMptJusSerFk2() {
		return this.rapServidoresByMptJusSerFk2;
	}

	public void setRapServidoresByMptJusSerFk2(RapServidores rapServidoresByMptJusSerFk2) {
		this.rapServidoresByMptJusSerFk2 = rapServidoresByMptJusSerFk2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "CSP_CNV_CODIGO", referencedColumnName = "CNV_CODIGO"),
			@JoinColumn(name = "CSP_SEQ", referencedColumnName = "SEQ") })
	public FatConvenioSaudePlano getFatConvenioSaudePlano() {
		return this.fatConvenioSaudePlano;
	}

	public void setFatConvenioSaudePlano(FatConvenioSaudePlano fatConvenioSaudePlano) {
		this.fatConvenioSaudePlano = fatConvenioSaudePlano;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MED_MAT_CODIGO", nullable = false)
	public AfaMedicamento getAfaMedicamento() {
		return this.afaMedicamento;
	}

	public void setAfaMedicamento(AfaMedicamento afaMedicamento) {
		this.afaMedicamento = afaMedicamento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ATD_SEQ", nullable = false)
	public AghAtendimentos getAghAtendimentos() {
		return this.aghAtendimentos;
	}

	public void setAghAtendimentos(AghAtendimentos aghAtendimentos) {
		this.aghAtendimentos = aghAtendimentos;
	}

	@Column(name = "JUSTIFICATIVA", nullable = false, length = 500)
	@Length(max = 500)
	public String getJustificativa() {
		return this.justificativa;
	}

	public void setJustificativa(String justificativa) {
		this.justificativa = justificativa;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(String indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Column(name = "IND_CAND_APROV_LOTE", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndCandAprovLote() {
		return this.indCandAprovLote;
	}

	public void setIndCandAprovLote(String indCandAprovLote) {
		this.indCandAprovLote = indCandAprovLote;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "IND_ORIENTACAO_AVALIADOR", length = 1)
	@Length(max = 1)
	public String getIndOrientacaoAvaliador() {
		return this.indOrientacaoAvaliador;
	}

	public void setIndOrientacaoAvaliador(String indOrientacaoAvaliador) {
		this.indOrientacaoAvaliador = indOrientacaoAvaliador;
	}

	@Column(name = "IND_GESTANTE", length = 1)
	@Length(max = 1)
	public String getIndGestante() {
		return this.indGestante;
	}

	public void setIndGestante(String indGestante) {
		this.indGestante = indGestante;
	}

	@Column(name = "TIPO_INFECCAO", length = 1)
	@Length(max = 1)
	public String getTipoInfeccao() {
		return this.tipoInfeccao;
	}

	public void setTipoInfeccao(String tipoInfeccao) {
		this.tipoInfeccao = tipoInfeccao;
	}

	@Column(name = "NOME_GERME", length = 60)
	@Length(max = 60)
	public String getNomeGerme() {
		return this.nomeGerme;
	}

	public void setNomeGerme(String nomeGerme) {
		this.nomeGerme = nomeGerme;
	}

	@Column(name = "SIT_ANTIBIOGRAMA", length = 1)
	@Length(max = 1)
	public String getSitAntibiograma() {
		return this.sitAntibiograma;
	}

	public void setSitAntibiograma(String sitAntibiograma) {
		this.sitAntibiograma = sitAntibiograma;
	}

	@Column(name = "SENSIBILIDADE_ANTIBIOTICO", length = 120)
	@Length(max = 120)
	public String getSensibilidadeAntibiotico() {
		return this.sensibilidadeAntibiotico;
	}

	public void setSensibilidadeAntibiotico(String sensibilidadeAntibiotico) {
		this.sensibilidadeAntibiotico = sensibilidadeAntibiotico;
	}

	@Column(name = "IND_FUNC_RENAL_COMPROMETIDA", length = 1)
	@Length(max = 1)
	public String getIndFuncRenalComprometida() {
		return this.indFuncRenalComprometida;
	}

	public void setIndFuncRenalComprometida(String indFuncRenalComprometida) {
		this.indFuncRenalComprometida = indFuncRenalComprometida;
	}

	@Column(name = "IND_PAC_IMUNODEPRIMIDO", length = 1)
	@Length(max = 1)
	public String getIndPacImunodeprimido() {
		return this.indPacImunodeprimido;
	}

	public void setIndPacImunodeprimido(String indPacImunodeprimido) {
		this.indPacImunodeprimido = indPacImunodeprimido;
	}

	@Column(name = "OBSERVACAO", length = 500)
	@Length(max = 500)
	public String getObservacao() {
		return this.observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}

	@Column(name = "IND_USO_MDTO_ANTIMICROB", length = 1)
	@Length(max = 1)
	public String getIndUsoMdtoAntimicrob() {
		return this.indUsoMdtoAntimicrob;
	}

	public void setIndUsoMdtoAntimicrob(String indUsoMdtoAntimicrob) {
		this.indUsoMdtoAntimicrob = indUsoMdtoAntimicrob;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 29)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_CONHECIMENTO", length = 29)
	public Date getDthrConhecimento() {
		return this.dthrConhecimento;
	}

	public void setDthrConhecimento(Date dthrConhecimento) {
		this.dthrConhecimento = dthrConhecimento;
	}

	@Column(name = "SER_MATRICULA_CONHECIMENTO")
	public Integer getSerMatriculaConhecimento() {
		return this.serMatriculaConhecimento;
	}

	public void setSerMatriculaConhecimento(Integer serMatriculaConhecimento) {
		this.serMatriculaConhecimento = serMatriculaConhecimento;
	}

	@Column(name = "SER_VIN_CODIGO_CONHECIMENTO")
	public Short getSerVinCodigoConhecimento() {
		return this.serVinCodigoConhecimento;
	}

	public void setSerVinCodigoConhecimento(Short serVinCodigoConhecimento) {
		this.serVinCodigoConhecimento = serVinCodigoConhecimento;
	}

	@Column(name = "INDICACAO", length = 500)
	@Length(max = 500)
	public String getIndicacao() {
		return this.indicacao;
	}

	public void setIndicacao(String indicacao) {
		this.indicacao = indicacao;
	}

	@Column(name = "INFECCAO_TRATAR", length = 120)
	@Length(max = 120)
	public String getInfeccaoTratar() {
		return this.infeccaoTratar;
	}

	public void setInfeccaoTratar(String infeccaoTratar) {
		this.infeccaoTratar = infeccaoTratar;
	}

	@Column(name = "TRAT_ANTIMICROB_ANT", length = 500)
	@Length(max = 500)
	public String getTratAntimicrobAnt() {
		return this.tratAntimicrobAnt;
	}

	public void setTratAntimicrobAnt(String tratAntimicrobAnt) {
		this.tratAntimicrobAnt = tratAntimicrobAnt;
	}

	@Column(name = "INTERNACAO_PREVIA", length = 1)
	@Length(max = 1)
	public String getInternacaoPrevia() {
		return this.internacaoPrevia;
	}

	public void setInternacaoPrevia(String internacaoPrevia) {
		this.internacaoPrevia = internacaoPrevia;
	}

	@Column(name = "INICIO_INFECCAO", length = 1)
	@Length(max = 1)
	public String getInicioInfeccao() {
		return this.inicioInfeccao;
	}

	public void setInicioInfeccao(String inicioInfeccao) {
		this.inicioInfeccao = inicioInfeccao;
	}

	@Column(name = "INFEC_REL_PROCED_INVASIVO", length = 1)
	@Length(max = 1)
	public String getInfecRelProcedInvasivo() {
		return this.infecRelProcedInvasivo;
	}

	public void setInfecRelProcedInvasivo(String infecRelProcedInvasivo) {
		this.infecRelProcedInvasivo = infecRelProcedInvasivo;
	}

	@Column(name = "IND_SONDA_VESICAL_DEMORA", length = 1)
	@Length(max = 1)
	public String getIndSondaVesicalDemora() {
		return this.indSondaVesicalDemora;
	}

	public void setIndSondaVesicalDemora(String indSondaVesicalDemora) {
		this.indSondaVesicalDemora = indSondaVesicalDemora;
	}

	@Column(name = "PESO_ESTIMADO", precision = 17, scale = 17)
	public Double getPesoEstimado() {
		return this.pesoEstimado;
	}

	public void setPesoEstimado(Double pesoEstimado) {
		this.pesoEstimado = pesoEstimado;
	}

	@Column(name = "CONDUTA_BASE_PROT_ASSIST", length = 1)
	@Length(max = 1)
	public String getCondutaBaseProtAssist() {
		return this.condutaBaseProtAssist;
	}

	public void setCondutaBaseProtAssist(String condutaBaseProtAssist) {
		this.condutaBaseProtAssist = condutaBaseProtAssist;
	}

	@Column(name = "INSUF_HEPATICA", length = 1)
	@Length(max = 1)
	public String getInsufHepatica() {
		return this.insufHepatica;
	}

	public void setInsufHepatica(String insufHepatica) {
		this.insufHepatica = insufHepatica;
	}

	@Column(name = "VANTAGEM_NS_PADRONIZACAO", length = 500)
	@Length(max = 500)
	public String getVantagemNsPadronizacao() {
		return this.vantagemNsPadronizacao;
	}

	public void setVantagemNsPadronizacao(String vantagemNsPadronizacao) {
		this.vantagemNsPadronizacao = vantagemNsPadronizacao;
	}

	@Column(name = "USO_CRONICO_PREV_INT", length = 1)
	@Length(max = 1)
	public String getUsoCronicoPrevInt() {
		return this.usoCronicoPrevInt;
	}

	public void setUsoCronicoPrevInt(String usoCronicoPrevInt) {
		this.usoCronicoPrevInt = usoCronicoPrevInt;
	}

	@Column(name = "CUSTO_DIARIO_EST_REAL", precision = 17, scale = 17)
	public Double getCustoDiarioEstReal() {
		return this.custoDiarioEstReal;
	}

	public void setCustoDiarioEstReal(Double custoDiarioEstReal) {
		this.custoDiarioEstReal = custoDiarioEstReal;
	}

	@Column(name = "REF_BIBLIOGRAFICAS", length = 500)
	@Length(max = 500)
	public String getRefBibliograficas() {
		return this.refBibliograficas;
	}

	public void setRefBibliograficas(String refBibliograficas) {
		this.refBibliograficas = refBibliograficas;
	}

	@Column(name = "DIAGNOSTICO", length = 120)
	@Length(max = 120)
	public String getDiagnostico() {
		return this.diagnostico;
	}

	public void setDiagnostico(String diagnostico) {
		this.diagnostico = diagnostico;
	}

	@Column(name = "ECOG", length = 1)
	@Length(max = 1)
	public String getEcog() {
		return this.ecog;
	}

	public void setEcog(String ecog) {
		this.ecog = ecog;
	}

	@Column(name = "INTENCAO_TRAT", length = 1)
	@Length(max = 1)
	public String getIntencaoTrat() {
		return this.intencaoTrat;
	}

	public void setIntencaoTrat(String intencaoTrat) {
		this.intencaoTrat = intencaoTrat;
	}

	@Column(name = "LINHA_TRAT", length = 1)
	@Length(max = 1)
	public String getLinhaTrat() {
		return this.linhaTrat;
	}

	public void setLinhaTrat(String linhaTrat) {
		this.linhaTrat = linhaTrat;
	}

	@Column(name = "TRAT_ANT_CIRURGIA", length = 120)
	@Length(max = 120)
	public String getTratAntCirurgia() {
		return this.tratAntCirurgia;
	}

	public void setTratAntCirurgia(String tratAntCirurgia) {
		this.tratAntCirurgia = tratAntCirurgia;
	}

	@Column(name = "TRAT_ANT_RADIO", length = 120)
	@Length(max = 120)
	public String getTratAntRadio() {
		return this.tratAntRadio;
	}

	public void setTratAntRadio(String tratAntRadio) {
		this.tratAntRadio = tratAntRadio;
	}

	@Column(name = "TRAT_ANT_QUIMIO", length = 500)
	@Length(max = 500)
	public String getTratAntQuimio() {
		return this.tratAntQuimio;
	}

	public void setTratAntQuimio(String tratAntQuimio) {
		this.tratAntQuimio = tratAntQuimio;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "MES_ANO_ULT_CICLO", length = 29)
	public Date getMesAnoUltCiclo() {
		return this.mesAnoUltCiclo;
	}

	public void setMesAnoUltCiclo(Date mesAnoUltCiclo) {
		this.mesAnoUltCiclo = mesAnoUltCiclo;
	}

	@Column(name = "TRAT_ANT_HORMONIO", length = 120)
	@Length(max = 120)
	public String getTratAntHormonio() {
		return this.tratAntHormonio;
	}

	public void setTratAntHormonio(String tratAntHormonio) {
		this.tratAntHormonio = tratAntHormonio;
	}

	@Column(name = "TRAT_ANT_OUTROS", length = 120)
	@Length(max = 120)
	public String getTratAntOutros() {
		return this.tratAntOutros;
	}

	public void setTratAntOutros(String tratAntOutros) {
		this.tratAntOutros = tratAntOutros;
	}

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mptJustificativaUsoMdto")
//	public Set<MptItemPrescricaoMedicamento> getMptItemPrescricaoMedicamentoes() {
//		return this.mptItemPrescricaoMedicamentoes;
//	}
//
//	public void setMptItemPrescricaoMedicamentoes(Set<MptItemPrescricaoMedicamento> mptItemPrescricaoMedicamentoes) {
//		this.mptItemPrescricaoMedicamentoes = mptItemPrescricaoMedicamentoes;
//	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mptJustificativaUsoMdto")
	public Set<MptParecerUsoMdto> getMptParecerUsoMdtoes() {
		return this.mptParecerUsoMdtoes;
	}

	public void setMptParecerUsoMdtoes(Set<MptParecerUsoMdto> mptParecerUsoMdtoes) {
		this.mptParecerUsoMdtoes = mptParecerUsoMdtoes;
	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		RAP_SERVIDORES_BY_MPT_JUS_SER_FK1("rapServidoresByMptJusSerFk1"),
		RAP_SERVIDORES_BY_MPT_JUS_SER_FK2("rapServidoresByMptJusSerFk2"),
		FAT_CONVENIO_SAUDE_PLANO("fatConvenioSaudePlano"),
		AFA_MEDICAMENTO("afaMedicamento"),
		AGH_ATENDIMENTOS("aghAtendimentos"),
		JUSTIFICATIVA("justificativa"),
		IND_SITUACAO("indSituacao"),
		IND_CAND_APROV_LOTE("indCandAprovLote"),
		CRIADO_EM("criadoEm"),
		IND_ORIENTACAO_AVALIADOR("indOrientacaoAvaliador"),
		IND_GESTANTE("indGestante"),
		TIPO_INFECCAO("tipoInfeccao"),
		NOME_GERME("nomeGerme"),
		SIT_ANTIBIOGRAMA("sitAntibiograma"),
		SENSIBILIDADE_ANTIBIOTICO("sensibilidadeAntibiotico"),
		IND_FUNC_RENAL_COMPROMETIDA("indFuncRenalComprometida"),
		IND_PAC_IMUNODEPRIMIDO("indPacImunodeprimido"),
		OBSERVACAO("observacao"),
		IND_USO_MDTO_ANTIMICROB("indUsoMdtoAntimicrob"),
		ALTERADO_EM("alteradoEm"),
		DTHR_CONHECIMENTO("dthrConhecimento"),
		SER_MATRICULA_CONHECIMENTO("serMatriculaConhecimento"),
		SER_VIN_CODIGO_CONHECIMENTO("serVinCodigoConhecimento"),
		INDICACAO("indicacao"),
		INFECCAO_TRATAR("infeccaoTratar"),
		TRAT_ANTIMICROB_ANT("tratAntimicrobAnt"),
		INTERNACAO_PREVIA("internacaoPrevia"),
		INICIO_INFECCAO("inicioInfeccao"),
		INFEC_REL_PROCED_INVASIVO("infecRelProcedInvasivo"),
		IND_SONDA_VESICAL_DEMORA("indSondaVesicalDemora"),
		PESO_ESTIMADO("pesoEstimado"),
		CONDUTA_BASE_PROT_ASSIST("condutaBaseProtAssist"),
		INSUF_HEPATICA("insufHepatica"),
		VANTAGEM_NS_PADRONIZACAO("vantagemNsPadronizacao"),
		USO_CRONICO_PREV_INT("usoCronicoPrevInt"),
		CUSTO_DIARIO_EST_REAL("custoDiarioEstReal"),
		REF_BIBLIOGRAFICAS("refBibliograficas"),
		DIAGNOSTICO("diagnostico"),
		ECOG("ecog"),
		INTENCAO_TRAT("intencaoTrat"),
		LINHA_TRAT("linhaTrat"),
		TRAT_ANT_CIRURGIA("tratAntCirurgia"),
		TRAT_ANT_RADIO("tratAntRadio"),
		TRAT_ANT_QUIMIO("tratAntQuimio"),
		MES_ANO_ULT_CICLO("mesAnoUltCiclo"),
		TRAT_ANT_HORMONIO("tratAntHormonio"),
		TRAT_ANT_OUTROS("tratAntOutros"),
//		MPT_ITEM_PRESCRICAO_MEDICAMENTOES("mptItemPrescricaoMedicamentoes"),
		MPT_PARECER_USO_MDTOES("mptParecerUsoMdtoes");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MptJustificativaUsoMdto)) {
			return false;
		}
		MptJustificativaUsoMdto other = (MptJustificativaUsoMdto) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

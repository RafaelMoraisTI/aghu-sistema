package br.gov.mec.aghu.model;

// Generated 26/02/2010 17:37:25 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * McoNascIndicacoes generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mcoNaiSq1", sequenceName="AGH.MCO_NAI_SQ1", allocationSize = 1)
@Table(name = "MCO_NASC_INDICACOES", schema = "AGH")
public class McoNascIndicacoes extends BaseEntitySeq<String> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 5415808070919519133L;
	private String seq;
	private McoForcipes mcoForcipes;
	private McoCesarianas mcoCesarianas;
	private McoIndicacaoNascimento indicacaoNascimento;
	private RapServidores servidor;
	private Date criadoEm;

	
	//private Set<MbcFichaAnestesias> fichasAnestesias;
	
	public McoNascIndicacoes() {
	}

	public McoNascIndicacoes(String seq, McoForcipes mcoForcipes,
			McoCesarianas mcoCesarianas,
			McoIndicacaoNascimento indicacaoNascimento, RapServidores servidor,
			Date criadoEm) {
		super();
		this.seq = seq;
		this.mcoForcipes = mcoForcipes;
		this.mcoCesarianas = mcoCesarianas;
		this.indicacaoNascimento = indicacaoNascimento;
		this.servidor = servidor;
		this.criadoEm = criadoEm;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mcoNaiSq1")
	@Column(name = "SEQ", nullable = false, length = 8)
	@Length(max = 8)
	public String getSeq() {
		return this.seq;
	}

	public void setSeq(String seq) {
		this.seq = seq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "FCP_NAS_GSO_PAC_CODIGO", referencedColumnName = "NAS_GSO_PAC_CODIGO"),
			@JoinColumn(name = "FCP_NAS_GSO_SEQP", referencedColumnName = "NAS_GSO_SEQP"),
			@JoinColumn(name = "FCP_NAS_SEQP", referencedColumnName = "NAS_SEQP") })
	public McoForcipes getMcoForcipes() {
		return this.mcoForcipes;
	}

	public void setMcoForcipes(McoForcipes mcoForcipes) {
		this.mcoForcipes = mcoForcipes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "CSR_NAS_GSO_PAC_CODIGO", referencedColumnName = "NAS_GSO_PAC_CODIGO"),
			@JoinColumn(name = "CSR_NAS_GSO_SEQP", referencedColumnName = "NAS_GSO_SEQP"),
			@JoinColumn(name = "CSR_NAS_SEQP", referencedColumnName = "NAS_SEQP") })
	public McoCesarianas getMcoCesarianas() {
		return this.mcoCesarianas;
	}

	public void setMcoCesarianas(McoCesarianas mcoCesarianas) {
		this.mcoCesarianas = mcoCesarianas;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
		@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
		@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO")})
	public RapServidores getServidor() {
		return servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	public enum Fields {
		FORCIPES("mcoForcipes"),
		FORCIPES_CODIGO_PACIENTE("mcoForcipes.id.gsoPacCodigo"), 
		FORCIPES_SEQUENCE("mcoForcipes.id.gsoSeqp"),
		FORCIPES_SEQP("mcoForcipes.id.seqp"),
		CESARIANA("mcoCesarianas"),
		CESARIANA_CODIGO_PACIENTE("mcoCesarianas.id.gsoPacCodigo"),
		CESARIANA_SEQUENCE("mcoCesarianas.id.gsoSeqp"),
		INDICACAO_NASCIMENTO("indicacaoNascimento"),
		CESARIANA_SEQP("mcoCesarianas.id.seqp");
		
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}		


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof McoNascIndicacoes)) {
			return false;
		}
		McoNascIndicacoes other = (McoNascIndicacoes) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "INA_SEQ", nullable=false)
	public McoIndicacaoNascimento getIndicacaoNascimento() {
		return indicacaoNascimento;
	}

	public void setIndicacaoNascimento(McoIndicacaoNascimento indicacaoNascimento) {
		this.indicacaoNascimento = indicacaoNascimento;
	}

	/*@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "MCO_GESTACOES", schema = "AGH"
		, joinColumns = {
			@JoinColumn(name = "PAC_CODIGO", nullable = false, updatable = false),
			@JoinColumn(name = "SEQP", nullable = false, updatable = false) }
		,inverseJoinColumns = {
			@JoinColumn(name = "csr_nas_gso_pac_codigo", nullable = false, updatable = false),
			@JoinColumn(name = "csr_nas_gso_seqp", nullable = false, updatable = false)})
	public Set<MbcFichaAnestesias> getFichasAnestesias() {
		return fichasAnestesias;
	}

	public void setFichasAnestesias(Set<MbcFichaAnestesias> fichasAnestesias) {
		this.fichasAnestesias = fichasAnestesias;
	}*/
}

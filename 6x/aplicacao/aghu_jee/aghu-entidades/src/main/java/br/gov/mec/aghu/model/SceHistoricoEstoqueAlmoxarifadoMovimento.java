package br.gov.mec.aghu.model;

// Generated 12/12/2011 09:29:46 by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Version;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * SceHistEstqAlmoxMvtos generated by hbm2java
 */
@Entity
@Table(name = "SCE_HIST_ESTQ_ALMOX_MVTOS", schema = "AGH")
public class SceHistoricoEstoqueAlmoxarifadoMovimento extends BaseEntityId<SceHistoricoEstoqueAlmoxarifadoMovimentoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 324454571748493493L;
	private SceHistoricoEstoqueAlmoxarifadoMovimentoId id;
	private Integer version;
	private SceHistoricoEstoqueAlmoxarifado historicoEstoqueAlmoxarifado;
	private Integer quantidade;
	private BigDecimal valor;

	public SceHistoricoEstoqueAlmoxarifadoMovimento() {
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "heaSeq", column = @Column(name = "HEA_SEQ", nullable = false)),
			@AttributeOverride(name = "heaDtCompetencia", column = @Column(name = "HEA_DT_COMPETENCIA", nullable = false, length = 29)),
			@AttributeOverride(name = "tmvSeq", column = @Column(name = "TMV_SEQ", nullable = false)),
			@AttributeOverride(name = "tmvComplemento", column = @Column(name = "TMV_COMPLEMENTO", nullable = false)) })
	public SceHistoricoEstoqueAlmoxarifadoMovimentoId getId() {
		return this.id;
	}

	public void setId(SceHistoricoEstoqueAlmoxarifadoMovimentoId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return version;
	}
	
	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "HEA_SEQ", referencedColumnName = "SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "HEA_DT_COMPETENCIA", referencedColumnName = "DT_COMPETENCIA", nullable = false, insertable = false, updatable = false) })
	public SceHistoricoEstoqueAlmoxarifado getHistoricoEstoqueAlmoxarifado() {
		return historicoEstoqueAlmoxarifado;
	}
	
	public void setHistoricoEstoqueAlmoxarifado(SceHistoricoEstoqueAlmoxarifado historicoEstoqueAlmoxarifado) {
		this.historicoEstoqueAlmoxarifado = historicoEstoqueAlmoxarifado;
	}

	@Column(name = "QUANTIDADE", nullable = false)
	public Integer getQuantidade() {
		return quantidade;
	}
	
	public void setQuantidade(Integer quantidade) {
		this.quantidade = quantidade;
	}

	@Column(name = "VALOR", precision = 17, scale = 17)
	public BigDecimal getValor() {
		return this.valor;
	}

	public void setValor(BigDecimal valor) {
		this.valor = valor;
	}
	
	public enum Fields {
		ID("id"),
		ID_HEA_SEQ("id.heaSeq"),
		ID_HEA_DT_COMPETENCIA("id.heaDtCompetencia"),
		ID_TMV_SEQ("id.tmvSeq"),
		ID_TMV_COMPLEMENTO("id.tmvComplemento"),
		HISTORICO_ESTOQUE_ALMOXARIFADO("historicoEstoqueAlmoxarifado"),
		QUANTIDADE("quantidade"),
		VALOR("valor");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof SceHistoricoEstoqueAlmoxarifadoMovimento)) {
			return false;
		}
		SceHistoricoEstoqueAlmoxarifadoMovimento other = (SceHistoricoEstoqueAlmoxarifadoMovimento) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

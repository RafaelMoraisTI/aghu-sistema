package br.gov.mec.aghu.model;

// Generated 23/06/2010 17:36:58 by Hibernate Tools 3.2.5.Beta

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Version;

import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * FatRelMotAltas generated by hbm2java
 */
@Entity
@Table(name = "FAT_REL_MOT_ALTAS", schema = "AGH")

public class FatRelMotivoAlta extends BaseEntityId<FatRelMotivoAltaId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4148438160532902237L;
	private FatRelMotivoAltaId id;
	private AinTiposAltaMedica tipoAltaMedica;
	private FatSituacaoSaidaPaciente situacaoSaidaPaciente;
	private String estadoPaciente;
	private String necropsia;
	private String tipoAlta;
	private Integer version;

	public FatRelMotivoAlta() {
	}

	public FatRelMotivoAlta(FatRelMotivoAltaId id) {
		this.id = id;
	}

	public FatRelMotivoAlta(FatRelMotivoAltaId id,
			AinTiposAltaMedica tipoAltaMedica,
			FatSituacaoSaidaPaciente situacaoSaidaPaciente) {
		this.id = id;
		this.tipoAltaMedica = tipoAltaMedica;
		this.situacaoSaidaPaciente = situacaoSaidaPaciente;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "tamCodigo", column = @Column(name = "TAM_CODIGO", length = 3)),
			@AttributeOverride(name = "siaMspSeq", column = @Column(name = "SIA_MSP_SEQ", precision = 3, scale = 0)),
			@AttributeOverride(name = "siaSeq", column = @Column(name = "SIA_SEQ", precision = 3, scale = 0)) })
	public FatRelMotivoAltaId getId() {
		return this.id;
	}

	public void setId(FatRelMotivoAltaId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TAM_CODIGO", insertable = false, updatable = false)
	public AinTiposAltaMedica getTipoAltaMedica() {
		return this.tipoAltaMedica;
	}

	public void setTipoAltaMedica(AinTiposAltaMedica tipoAltaMedica) {
		this.tipoAltaMedica = tipoAltaMedica;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SIA_MSP_SEQ", referencedColumnName = "MSP_SEQ", insertable = false, updatable = false),
			@JoinColumn(name = "SIA_SEQ", referencedColumnName = "SEQ", insertable = false, updatable = false) })
	public FatSituacaoSaidaPaciente getSituacaoSaidaPaciente() {
		return this.situacaoSaidaPaciente;
	}

	public void setSituacaoSaidaPaciente(
			FatSituacaoSaidaPaciente situacaoSaidaPaciente) {
		this.situacaoSaidaPaciente = situacaoSaidaPaciente;
	}
	
	@Column(name = "ESTADO_PACIENTE", length = 1)
	@Length(max = 1)
	public String getEstadoPaciente() {
		return this.estadoPaciente;
	}

	public void setEstadoPaciente(String estadoPaciente) {
		this.estadoPaciente = estadoPaciente;
	}

	@Column(name = "NECROPSIA", length = 1)
	@Length(max = 1)
	public String getNecropsia() {
		return this.necropsia;
	}

	public void setNecropsia(String necropsia) {
		this.necropsia = necropsia;
	}

	// Essa coluna é referente ao sismtea do SUS e os valores não sáo
	// controlados por domínios pelo HCPA
	@Column(name = "IND_TIPO_ALTA", length = 1)
	@Length(max = 1)
	public String getTipoAlta() {
		return this.tipoAlta;
	}

	public void setTipoAlta(String tipoAlta) {
		this.tipoAlta = tipoAlta;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		FatRelMotivoAlta other = (FatRelMotivoAlta) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}

	public enum Fields {
		IND_TIPO_ALTA("tipoAlta"), TIPO_ALTA_MEDICA("tipoAltaMedica"), ID_TIPO_ALTA_CODIGO(
				"id.tamCodigo"), ESTADO_PACIENTE("estadoPaciente");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

}

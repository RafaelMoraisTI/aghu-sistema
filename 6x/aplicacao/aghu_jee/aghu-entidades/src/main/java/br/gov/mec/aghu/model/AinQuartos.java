package br.gov.mec.aghu.model;

// Generated 15/12/2009 15:33:32 by Hibernate Tools 3.2.5.Beta

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.Version;


import org.hibernate.annotations.Cascade;

import br.gov.mec.aghu.dominio.DominioSexo;
import br.gov.mec.aghu.dominio.DominioSexoDeterminante;
import br.gov.mec.aghu.dominio.DominioSimNao;
import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.exception.BusinessExceptionCode;
import br.gov.mec.aghu.core.persistence.BaseEntityNumero;

/**
 * AinQuartos generated by hbm2java
 */
@SuppressWarnings({"PMD.AghuUsoIndevidoDaEnumDominioSimNaoEntity"})
@Entity
@Table(name = "AIN_QUARTOS", schema = "AGH")
@SequenceGenerator(name="ainqrtsq1", sequenceName="AIN_QRT_SQ1", allocationSize = 1)
public class AinQuartos extends BaseEntityNumero<Short> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 8389324801884885802L;
	/**
	 * Campo para representar o andar do quarto. Existe uma restrição no BD
	 * Oracle (CheckConstraint) para que o mesmo seja menor ou igual a 13, pois
	 * o HCPA tem 13 andares. Conforme conversa entre Everton (desenvolvedor) e
	 * Vicente (analista) em 20/01/2010, ficou definido que essa restrição não
	 * será implementada devido a idéia da utilização do AGHU em todos hospitais
	 * universitários do Brasil.
	 */
	private Short numero;

	/**
	 * Coluna adicionada do refactor de quartos e leitos, chave única, usada
	 * para identificar o quarto no hospital.
	 */
	private String descricao;
	/**
	 * 
	 */
	private DominioSimNao indConsSexo;
	/**
	 * 
	 */
	private DominioSexoDeterminante sexoDeterminante;
	/**
	 * 
	 */
	private DominioSimNao indConsClin;
	/**
	 * 
	 */
	private AghAla ala;
	/**
	 * 
	 */
	private DominioSimNao indExclusivInfeccao;
	/**
	 * 
	 */
	private Short capacInternacao;
	/**
	 * 
	 */
	private AinAcomodacoes acomodacao;
	/**
	 * 
	 */
	private AghUnidadesFuncionais unidadeFuncional;
	/**
	 * 
	 */
	private DominioSexo sexoOcupacao;
	/**
	 * 
	 */
	private AghClinicas clinica;
	/**
	 * 
	 */
	private List<AinLeitos> ainLeitos = new ArrayList<AinLeitos>(0);

	private Set<AinSolicTransfPacientes> ainSolicTransfPacientes = new HashSet<AinSolicTransfPacientes>(
			0);

	private Set<AinInternacao> internacoes;
	
	private Integer version;
	
	private enum QuartoExceptionCode implements BusinessExceptionCode {
		CAPACIDADE_QUARTO_INVALIDA
	}

	
	public AinQuartos() {
	}

	public AinQuartos(Short numero, DominioSimNao indConsSexo,
			DominioSexoDeterminante sexoDeterminante,
			DominioSimNao indConsClin, AghAla a,
			DominioSimNao indExclusivInfeccao, Short capacInternacao,
			AinAcomodacoes ainAcomodacoes,
			AghUnidadesFuncionais unidadeFuncional) {
		this.numero = numero;
		this.indConsSexo = indConsSexo;
		this.sexoDeterminante = sexoDeterminante;
		this.indConsClin = indConsClin;
		this.ala = a;
		this.indExclusivInfeccao = indExclusivInfeccao;
		this.capacInternacao = capacInternacao;
		this.acomodacao = ainAcomodacoes;
		this.unidadeFuncional = unidadeFuncional;
	}

	public AinQuartos(Short numero, DominioSimNao indConsSexo,
			DominioSexoDeterminante sexoDeterminante,
			DominioSimNao indConsClin, AghAla a,
			DominioSimNao indExclusivInfeccao, Short capacInternacao,
			AinAcomodacoes ainAcomodacoes,
			AghUnidadesFuncionais unidadeFuncional,
			DominioSexo sexoOcupacao, AghClinicas clcCodigo,
			List<AinLeitos> ainLeitos) {
		this.numero = numero;
		this.indConsSexo = indConsSexo;
		this.sexoDeterminante = sexoDeterminante;
		this.indConsClin = indConsClin;
		this.ala = a;
		this.indExclusivInfeccao = indExclusivInfeccao;
		this.capacInternacao = capacInternacao;
		this.acomodacao = ainAcomodacoes;
		this.unidadeFuncional = unidadeFuncional;
		this.sexoOcupacao = sexoOcupacao;
		this.clinica = clcCodigo;
		this.ainLeitos = ainLeitos;
	}

	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void validarQuarto() {
		if (this.getCapacInternacao() <= 0) {
			throw new BaseRuntimeException(QuartoExceptionCode.CAPACIDADE_QUARTO_INVALIDA);
		}
	}

	@Id
	@Column(name = "NUMERO", nullable = false, precision = 4, scale = 0)
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "ainqrtsq1")
	public Short getNumero() {
		return this.numero;
	}

	public void setNumero(Short numero) {
		this.numero = numero;
	}

	@Column(name = "IND_CONS_SEXO", nullable = false, length=1)
	@Enumerated(EnumType.STRING)
	public DominioSimNao getIndConsSexo() {
		return this.indConsSexo;
	}

	public void setIndConsSexo(DominioSimNao indConsSexo) {
		this.indConsSexo = indConsSexo;
	}

	/**
	 * Campo sintético criado para mapear diretamente este dominio booleano em
	 * um componente selectOneCheckBox
	 * 
	 * @author jvaranda
	 * @return
	 */
	@Transient
	public boolean isConsSexo() {
		if (getIndConsSexo() != null) {
			return getIndConsSexo() == DominioSimNao.S;
		} else {
			return Boolean.FALSE;
		}
	}

	public void setConsSexo(boolean valor) {
		setIndConsSexo(DominioSimNao.getInstance(valor));
	}

	@Column(name = "SEXO_DETERMINANTE", nullable = false,length=1)
	@Enumerated(EnumType.STRING)
	public DominioSexoDeterminante getSexoDeterminante() {
		return this.sexoDeterminante;
	}

	public void setSexoDeterminante(DominioSexoDeterminante sexoDeterminante) {
		this.sexoDeterminante = sexoDeterminante;
	}

	@Column(name = "IND_CONS_CLIN", nullable = false,length=1)
	@Enumerated(EnumType.STRING)
	public DominioSimNao getIndConsClin() {
		return this.indConsClin;
	}

	public void setIndConsClin(DominioSimNao indConsClin) {
		this.indConsClin = indConsClin;
	}

	/**
	 * Campo sintético criado para mapear diretamente este dominio booleano em
	 * um componente selectOneCheckBox
	 * 
	 * @author jvaranda
	 * @return
	 */
	@Transient
	public boolean isConsClin() {
		if (getIndConsClin() != null) {
			return getIndConsClin() == DominioSimNao.S;
		} else {
			return Boolean.FALSE;
		}
	}

	public void setConsClin(boolean valor) {
		setIndConsClin(DominioSimNao.getInstance(valor));
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ALA")
	public AghAla getAla() {
		return this.ala;
	}

	public void setAla(AghAla a) {
		this.ala = a;
	}

	@Column(name = "IND_EXCLUSIV_INFECCAO", nullable = false,length=1)
	@Enumerated(EnumType.STRING)
	public DominioSimNao getIndExclusivInfeccao() {
		return this.indExclusivInfeccao;
	}

	public void setIndExclusivInfeccao(DominioSimNao indExclusivInfeccao) {
		this.indExclusivInfeccao = indExclusivInfeccao;
	}

	/**
	 * Campo sintético criado para mapear diretamente este dominio booleano em
	 * um componente selectOneCheckBox
	 * 
	 * @author jvaranda
	 * @return
	 */
	@Transient
	public boolean isExclusivInfeccao() {
		if (getIndExclusivInfeccao() != null) {
			return getIndExclusivInfeccao() == DominioSimNao.S;
		} else {
			return Boolean.FALSE;
		}
	}

	public void setExclusivInfeccao(boolean valor) {
		setIndExclusivInfeccao(DominioSimNao.getInstance(valor));
	}

	@Column(name = "CAPAC_INTERNACAO", nullable = false, precision = 3, scale = 0)
	public Short getCapacInternacao() {
		return this.capacInternacao;
	}

	public void setCapacInternacao(Short capacInternacao) {
		this.capacInternacao = capacInternacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ACM_SEQ", nullable = false)
	public AinAcomodacoes getAcomodacao() {
		return this.acomodacao;
	}

	public void setAcomodacao(AinAcomodacoes ainAcomodacoes) {
		this.acomodacao = ainAcomodacoes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ", nullable = false)
	@Cascade({
		org.hibernate.annotations.CascadeType.REFRESH
	})
	public AghUnidadesFuncionais getUnidadeFuncional() {
		return this.unidadeFuncional;
	}

	public void setUnidadeFuncional(
			AghUnidadesFuncionais unidadeFuncional) {
		this.unidadeFuncional = unidadeFuncional;
	}

	@Column(name = "SEXO_OCUPACAO", length=1)
	@Enumerated(EnumType.STRING)
	public DominioSexo getSexoOcupacao() {
		return this.sexoOcupacao;
	}

	public void setSexoOcupacao(DominioSexo sexoOcupacao) {
		this.sexoOcupacao = sexoOcupacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CLC_CODIGO")
	public AghClinicas getClinica() {
		return this.clinica;
	}

	public void setClinica(AghClinicas clcCodigo) {
		this.clinica = clcCodigo;
	}

	//@Cascade( { org.hibernate.annotations.CascadeType.ALL })
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "quarto")
	public List<AinLeitos> getAinLeitos() {
		return this.ainLeitos;
	}

	public void setAinLeitos(List<AinLeitos> ainLeitos) {
		this.ainLeitos = ainLeitos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ainQuartos")
	public Set<AinSolicTransfPacientes> getAinSolicTransfPacientes() {
		return this.ainSolicTransfPacientes;
	}

	public void setAinSolicTransfPacientes(
			Set<AinSolicTransfPacientes> ainSolicTransfPacientes) {
		this.ainSolicTransfPacientes = ainSolicTransfPacientes;
	}
	

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "quarto")
	public Set<AinInternacao> getInternacoes() {
		return this.internacoes;
	}

	public void setInternacoes(Set<AinInternacao> internacoes) {
		this.internacoes = internacoes;
	}
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((numero == null) ? 0 : numero.hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AinQuartos)) {
			return false;
		}
		AinQuartos other = (AinQuartos) obj;
		if (numero == null) {
			if (other.numero != null) {
				return false;
			}
		} else if (!numero.equals(other.numero)) {
			return false;
		}
		return true;
	}
	
	public enum Fields {
		NUMERO("numero"), 
		DESCRICAO("descricao"),
		LEITOS("ainLeitos"), 
		UNIDADES_FUNCIONAIS("unidadeFuncional"), 
		ACOMODACAO("acomodacao"), 
		ACOMODACAO_SEQ("acomodacao.seq"),
		CLINICA("clinica"),
		SOLIC_TRANSF_PACIENTE("ainSolicTransfPacientes"), 
		SEXO_OCUPACAO("sexoOcupacao"), 
		SEXO_DETERMINANTE("sexoDeterminante"), 	
		ALA("ala"),
		IND_CON_SEXO("indConsSexo"),
		IND_EXCLUSIV_INFECCAO("indExclusivInfeccao"),
		EXCLUSIVO_INFEC("indExclusivInfeccao"), 
		CONSISTE_CLI("indConsClin"),
		CLINICA_CODIGO("clinica.codigo"),
		UNIDADE_FUNCIONAL_SEQ("unidadeFuncional.seq"),
		CAPAC_INTERNACAO("capacInternacao");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}
	
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}
	
	public void setVersion(Integer version) {
		this.version = version;
	}

	@Column(name = "DESCRICAO", nullable = true)
	public String getDescricao() {
		return descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}
}

package br.gov.mec.aghu.model;

// Generated 28/03/2012 15:17:44 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MbcFichaMedicPreAnests generated by hbm2java
 */
@Entity
@Table(name = "MBC_FICHA_MEDIC_PRE_ANESTS", schema = "AGH")
public class MbcFichaMedicPreAnest extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -728090764191180367L;
	private Integer seq;
	private Integer version;
	private MbcFichaAnestesias mbcFichaAnestesias;
	private Double dose;
	private Boolean selecionado;
	private AfaMedicamento medicamento;
	private AfaViaAdministracao viaAdministracao;
	private AfaFormaDosagem formaDosagem;
	private Date criadoEm;
	private RapServidores servidor;

	public MbcFichaMedicPreAnest() {
	}

	public MbcFichaMedicPreAnest(Integer seq, MbcFichaAnestesias mbcFichaAnestesias, Double dose,
			Boolean selecionado, AfaMedicamento medicamento,
			AfaViaAdministracao viaAdministracao, AfaFormaDosagem formaDosagem,
			Date criadoEm, RapServidores servidor) {
		super();
		this.seq = seq;
		this.mbcFichaAnestesias = mbcFichaAnestesias;
		this.dose = dose;
		this.selecionado = selecionado;
		this.medicamento = medicamento;
		this.viaAdministracao = viaAdministracao;
		this.formaDosagem = formaDosagem;
		this.criadoEm = criadoEm;
		this.servidor = servidor;
	}

	@Id
	@Column(name = "SEQ", unique = true, nullable = false)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FIC_SEQ", nullable = false)
	public MbcFichaAnestesias getMbcFichaAnestesias() {
		return this.mbcFichaAnestesias;
	}

	public void setMbcFichaAnestesias(MbcFichaAnestesias mbcFichaAnestesias) {
		this.mbcFichaAnestesias = mbcFichaAnestesias;
	}

	@Column(name = "DOSE", nullable = false, precision = 17, scale = 17)
	public Double getDose() {
		return this.dose;
	}

	public void setDose(Double dose) {
		this.dose = dose;
	}

	@Column(name = "SELECIONADO", length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getSelecionado() {
		return this.selecionado;
	}

	public void setSelecionado(Boolean selecionado) {
		this.selecionado = selecionado;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
		@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
		@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO")})
	public RapServidores getServidor() {
		return servidor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "VAD_SIGLA", referencedColumnName = "SIGLA")
	public AfaViaAdministracao getViaAdministracao() {
		return viaAdministracao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FDS_SEQ", referencedColumnName = "SEQ")
	public AfaFormaDosagem getFormaDosagem() {
		return formaDosagem;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MED_MAT_CODIGO", referencedColumnName = "MAT_CODIGO", nullable = false)
	public AfaMedicamento getMedicamento() {
		return medicamento;
	}

	public void setMedicamento(AfaMedicamento medicamento) {
		this.medicamento = medicamento;
	}

	public void setViaAdministracao(AfaViaAdministracao viaAdministracao) {
		this.viaAdministracao = viaAdministracao;
	}

	public void setFormaDosagem(AfaFormaDosagem formaDosagem) {
		this.formaDosagem = formaDosagem;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	public enum Fields {
		SEQ("seq"),
		FICHAS_ANESTESIAS("mbcFichaAnestesias"),
		DOSE("dose"),
		SELECIONADO("selecionado"),
		MEDICAMENTO("medicamento"),
		VIA_ADMINISTRACAO("viaAdministracao"),
		FORMA_DOSAGEM("formaDosagem"),
		CRIADO_EM("criadoEm"),
		SERVIDOR("servidor"),
		VIA_ADMINISTRACAO_VAD_SIGLA("viaAdministracao.sigla");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MbcFichaMedicPreAnest)) {
			return false;
		}
		MbcFichaMedicPreAnest other = (MbcFichaMedicPreAnest) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

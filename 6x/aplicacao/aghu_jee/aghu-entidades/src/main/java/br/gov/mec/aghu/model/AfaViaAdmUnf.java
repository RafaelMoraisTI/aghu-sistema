package br.gov.mec.aghu.model;

// Generated 01/10/2010 17:36:06 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AfaViaAdmUnfs generated by hbm2java
 */
@Entity
@Table(name = "AFA_VIA_ADM_UNFS", schema = "AGH")

public class AfaViaAdmUnf extends BaseEntityId<AfaViaAdmUnfId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -3232231740095985497L;
	private AfaViaAdmUnfId id;
	private RapServidores servidor;
	private Date criadoEm;
	private DominioSituacao indSituacao;
	private AfaViaAdministracao viaAdministracao;
	
	
	public AfaViaAdmUnf() {
	}

	public AfaViaAdmUnf(AfaViaAdmUnfId id, RapServidores servidor,
			Date criadoEm, DominioSituacao indSituacao) {
		this.id = id;
		this.servidor = servidor;
		this.criadoEm = criadoEm;
		this.indSituacao = indSituacao;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "unfSeq", column = @Column(name = "UNF_SEQ", nullable = false, precision = 4, scale = 0)),
			@AttributeOverride(name = "vadSigla", column = @Column(name = "VAD_SIGLA", nullable = false, length = 2)) })
	
	public AfaViaAdmUnfId getId() {
		return this.id;
	}

	public void setId(AfaViaAdmUnfId id) {
		this.id = id;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO")  })
	
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}
	

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "VAD_SIGLA", nullable = false, insertable = false, updatable = false)
	public AfaViaAdministracao getViaAdministracao() {
		return viaAdministracao;
	}

	public void setViaAdministracao(AfaViaAdministracao viaAdministracao) {
		this.viaAdministracao = viaAdministracao;
	}


	/**
	 * FIELDS
	 * 
	 */
	public enum Fields {
		ID("id"),
		UNF_SEQ("id.unfSeq"),
		VAD_SIGLA("id.vadSigla"),
		SERVIDOR("servidor"),
		CRIADO_EM("criadoEm"),
		IND_SITUACAO("indSituacao"),
		VIA_ADMINISTRACAO("viaAdministracao");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AfaViaAdmUnf)) {
			return false;
		}
		AfaViaAdmUnf other = (AfaViaAdmUnf) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

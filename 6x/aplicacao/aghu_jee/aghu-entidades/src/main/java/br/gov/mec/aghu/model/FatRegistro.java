package br.gov.mec.aghu.model;

// Generated 15/03/2011 13:46:58 by Hibernate Tools 3.2.5.Beta

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityCodigo;
import br.gov.mec.aghu.dominio.DominioSituacao;

/**
 * FatRegistros generated by hbm2java
 */
@Entity
@Table(name = "FAT_REGISTROS", schema = "AGH")
public class FatRegistro extends BaseEntityCodigo<String> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7887132878314108276L;
	private String codigo;
	private String descricao;
	private DominioSituacao indSituacao;
	private Set<FatProcedimentoRegistro> fatProcedimentoRegistros = new HashSet<FatProcedimentoRegistro>(
			0);
	private Integer version;

	public FatRegistro() {
	}

	public FatRegistro(String codigo, String descricao) {
		this.codigo = codigo;
		this.descricao = descricao;
	}

	public FatRegistro(String codigo, String descricao, DominioSituacao indSituacao,
			Set<FatProcedimentoRegistro> fatProcedimentoRegistros) {
		this.codigo = codigo;
		this.descricao = descricao;
		this.indSituacao = indSituacao;
		this.fatProcedimentoRegistros = fatProcedimentoRegistros;
	}

	@Id
	@Column(name = "CODIGO", unique = true, nullable = false, length = 2)
	@Length(max = 2)
	public String getCodigo() {
		return this.codigo;
	}

	public void setCodigo(String codigo) {
		this.codigo = codigo;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 30)
	@Length(max = 30)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fatRegistro")
	public Set<FatProcedimentoRegistro> getFatProcedimentoRegistros() {
		return this.fatProcedimentoRegistros;
	}

	public void setFatProcedimentoRegistros(
			Set<FatProcedimentoRegistro> fatProcedimentoRegistros) {
		this.fatProcedimentoRegistros = fatProcedimentoRegistros;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((codigo == null) ? 0 : codigo.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj){
			return true;
		}
		if (obj == null){
			return false;
		}
		if (getClass() != obj.getClass()){
			return false;
		}
		FatRegistro other = (FatRegistro) obj;
		if (codigo == null) {
			if (other.codigo != null){
				return false;
			}
		} else if (!codigo.equals(other.codigo)){
			return false;
		}
		return true;
	}

	public enum Fields {

		CODIGO("codigo"),
		DESCRICAO("descricao"),
		IND_SITUACAO("indSituacao"),
		FAT_PROCEDIMENTO_REGISTROS("fatProcedimentoRegistros"),
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}

}

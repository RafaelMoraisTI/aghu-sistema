package br.gov.mec.aghu.model;

// Generated 14/09/2010 17:49:55 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MpmLogMensPrescricao generated by hbm2java
 */
@Entity
@Table(name = "MPM_LOG_MENS_PRESCRICOES", schema = "AGH")
public class MpmLogMensPrescricao extends BaseEntityId<MpmLogMensPrescricaoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1137223594415090505L;

	/**
	 * Chave primária (composta) da base de dados
	 */
	private MpmLogMensPrescricaoId id;

	/**
	 * Mensagem.
	 */
	private MpmMensPrescricao mensagemPrescricao;

	/**
	 * Data de criação do log.
	 */
	private Date criadoEm;

	/**
	 * Servidor.
	 */
	private RapServidores servidor;
	
	/**
	 * Atendimento.
	 */
	private AghAtendimentos antendimento;

	public MpmLogMensPrescricao() {
	}

	public MpmLogMensPrescricao(MpmLogMensPrescricaoId id,
			MpmMensPrescricao mpmMensPrescricoes, Date criadoEm) {
		this.id = id;
		this.mensagemPrescricao = mpmMensPrescricoes;
		this.criadoEm = criadoEm;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "serMatricula", column = @Column(name = "SER_MATRICULA", nullable = false, precision = 7, scale = 0)),
			@AttributeOverride(name = "serVinCodigo", column = @Column(name = "SER_VIN_CODIGO", nullable = false, precision = 3, scale = 0)),
			@AttributeOverride(name = "atdSeq", column = @Column(name = "ATD_SEQ", nullable = false, precision = 7, scale = 0)),
			@AttributeOverride(name = "mepSeq", column = @Column(name = "MEP_SEQ", nullable = false, precision = 4, scale = 0)) })
	public MpmLogMensPrescricaoId getId() {
		return this.id;
	}

	public void setId(MpmLogMensPrescricaoId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MEP_SEQ", nullable = false, insertable = false, updatable = false)
	public MpmMensPrescricao getMensagemPrescricao() {
		return this.mensagemPrescricao;
	}

	public void setMensagemPrescricao(MpmMensPrescricao mpmMensPrescricoes) {
		this.mensagemPrescricao = mpmMensPrescricoes;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false, insertable = false, updatable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name="ATD_SEQ",nullable = false, insertable = false, updatable = false)
	public AghAtendimentos getAntendimento() {
		return antendimento;
	}

	public void setAntendimento(AghAtendimentos antendimento) {
		this.antendimento = antendimento;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MpmLogMensPrescricao)) {
			return false;
		}
		MpmLogMensPrescricao other = (MpmLogMensPrescricao) obj;
		if (id == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!id.equals(other.getId())) {
			return false;
		}
		return true;
	}

	public enum Fields {

		ID("id"),
		MENSAGEM_PRESCRICAO("mensagemPrescricao"),
		CRIADO_EM("criadoEm"),
		SERVIDOR("servidor"),
		ANTENDIMENTO("antendimento");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}

}

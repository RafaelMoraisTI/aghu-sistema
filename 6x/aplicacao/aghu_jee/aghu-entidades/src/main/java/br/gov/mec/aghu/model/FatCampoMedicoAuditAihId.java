package br.gov.mec.aghu.model;

// Generated 15/03/2011 13:46:58 by Hibernate Tools 3.2.5.Beta

import javax.persistence.Column;
import javax.persistence.Embeddable;

import br.gov.mec.aghu.core.persistence.EntityCompositeId;

/**
 * FatCamposMedicoAuditAihId generated by hbm2java
 */
@Embeddable
public class FatCampoMedicoAuditAihId implements EntityCompositeId {

	/**
	 * 
	 */
	private static final long serialVersionUID = 3950908421419301432L;
	private Integer eaiSeq;
	private Integer eaiCthSeq;
	private Byte seqp;

	public FatCampoMedicoAuditAihId() {
	}

	public FatCampoMedicoAuditAihId(Integer eaiSeq, Integer eaiCthSeq, Byte seqp) {
		this.eaiSeq = eaiSeq;
		this.eaiCthSeq = eaiCthSeq;
		this.seqp = seqp;
	}

	@Column(name = "EAI_SEQ", nullable = false, precision = 8, scale = 0)
	public Integer getEaiSeq() {
		return this.eaiSeq;
	}

	public void setEaiSeq(Integer eaiSeq) {
		this.eaiSeq = eaiSeq;
	}

	@Column(name = "EAI_CTH_SEQ", nullable = false, precision = 8, scale = 0)
	public Integer getEaiCthSeq() {
		return this.eaiCthSeq;
	}

	public void setEaiCthSeq(Integer eaiCthSeq) {
		this.eaiCthSeq = eaiCthSeq;
	}

	@Column(name = "SEQP", nullable = false, precision = 2, scale = 0)
	public Byte getSeqp() {
		return this.seqp;
	}

	public void setSeqp(Byte seqp) {
		this.seqp = seqp;
	}

	@Override
	public boolean equals(Object other) {
		if ((this == other)) {
			return true;
		}
		if ((other == null)) {
			return false;
		}
		if (!(other instanceof FatCampoMedicoAuditAihId)) {
			return false;
		}
		FatCampoMedicoAuditAihId castOther = (FatCampoMedicoAuditAihId) other;

		return (this.getEaiSeq() == castOther.getEaiSeq())
				&& (this.getEaiCthSeq() == castOther.getEaiCthSeq())
				&& (this.getSeqp() == castOther.getSeqp());
	}

	@Override
	public int hashCode() {
		int result = 17;

		result = 37 * result + this.getEaiSeq();
		result = 37 * result + this.getEaiCthSeq();
		result = 37 * result + this.getSeqp();
		return result;
	}

}

package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AfaEscalaProducaoFarmacia generated by hbm2java
 */
@Entity
@Table(name = "AFA_ESCALA_PRODUCAO_FARMACIAS", schema = "AGH")
public class AfaEscalaProducaoFarmacia extends BaseEntityId<AfaEscalaProducaoFarmaciaId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 6920251318535946588L;
	private AfaEscalaProducaoFarmaciaId id;
	private Integer version;
	private RapServidores rapServidoresByAfaEpfSerFk2;
	private RapServidores rapServidoresByAfaEpfSerFk1;
	private AghUnidadesFuncionais aghUnidadesFuncionais;
	private Date criadoEm;

	public AfaEscalaProducaoFarmacia() {
	}

	public AfaEscalaProducaoFarmacia(AfaEscalaProducaoFarmaciaId id, RapServidores rapServidoresByAfaEpfSerFk2,
			RapServidores rapServidoresByAfaEpfSerFk1, AghUnidadesFuncionais aghUnidadesFuncionais, Date criadoEm) {
		this.id = id;
		this.rapServidoresByAfaEpfSerFk2 = rapServidoresByAfaEpfSerFk2;
		this.rapServidoresByAfaEpfSerFk1 = rapServidoresByAfaEpfSerFk1;
		this.aghUnidadesFuncionais = aghUnidadesFuncionais;
		this.criadoEm = criadoEm;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "unfSeq", column = @Column(name = "UNF_SEQ", nullable = false)),
			@AttributeOverride(name = "tipo", column = @Column(name = "TIPO", nullable = false, length = 1)),
			@AttributeOverride(name = "data", column = @Column(name = "DATA", nullable = false, length = 29)),
			@AttributeOverride(name = "turno", column = @Column(name = "TURNO", nullable = false, length = 1)) })
	public AfaEscalaProducaoFarmaciaId getId() {
		return this.id;
	}

	public void setId(AfaEscalaProducaoFarmaciaId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByAfaEpfSerFk2() {
		return this.rapServidoresByAfaEpfSerFk2;
	}

	public void setRapServidoresByAfaEpfSerFk2(RapServidores rapServidoresByAfaEpfSerFk2) {
		this.rapServidoresByAfaEpfSerFk2 = rapServidoresByAfaEpfSerFk2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_RESPONSAVEL", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO_RESPONSAVEL", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByAfaEpfSerFk1() {
		return this.rapServidoresByAfaEpfSerFk1;
	}

	public void setRapServidoresByAfaEpfSerFk1(RapServidores rapServidoresByAfaEpfSerFk1) {
		this.rapServidoresByAfaEpfSerFk1 = rapServidoresByAfaEpfSerFk1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ", nullable = false, insertable = false, updatable = false)
	public AghUnidadesFuncionais getAghUnidadesFuncionais() {
		return this.aghUnidadesFuncionais;
	}

	public void setAghUnidadesFuncionais(AghUnidadesFuncionais aghUnidadesFuncionais) {
		this.aghUnidadesFuncionais = aghUnidadesFuncionais;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		RAP_SERVIDORES_BY_AFA_EPF_SER_FK2("rapServidoresByAfaEpfSerFk2"),
		RAP_SERVIDORES_BY_AFA_EPF_SER_FK1("rapServidoresByAfaEpfSerFk1"),
		AGH_UNIDADES_FUNCIONAIS("aghUnidadesFuncionais"),
		CRIADO_EM("criadoEm");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AfaEscalaProducaoFarmacia)) {
			return false;
		}
		AfaEscalaProducaoFarmacia other = (AfaEscalaProducaoFarmacia) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

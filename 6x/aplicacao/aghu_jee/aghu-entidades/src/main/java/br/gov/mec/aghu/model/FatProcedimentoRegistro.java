package br.gov.mec.aghu.model;

// Generated 15/03/2011 13:46:58 by Hibernate Tools 3.2.5.Beta

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Version;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * FatProcedimentosRegistro generated by hbm2java
 */

@Entity
@Table(name = "FAT_PROCEDIMENTOS_REGISTRO", schema = "AGH")
public class FatProcedimentoRegistro extends BaseEntityId<FatProcedimentoRegistroId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -3618048120584853326L;
	private FatProcedimentoRegistroId id;
	private FatRegistro fatRegistro;
	private Long codProcedimento;
	
	private FatItensProcedHospitalar itemProcedHospitalar;
	private Integer version;
	
	public FatProcedimentoRegistro() {
	}

	public FatProcedimentoRegistro(FatProcedimentoRegistroId id,
			FatRegistro fatRegistro) {
		this.id = id;
		this.fatRegistro = fatRegistro;
	}

	public FatProcedimentoRegistro(FatProcedimentoRegistroId id,
			FatRegistro fatRegistro, Long codProcedimento) {
		this.id = id;
		this.fatRegistro = fatRegistro;
		this.codProcedimento = codProcedimento;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "iphPhoSeq", column = @Column(name = "IPH_PHO_SEQ", nullable = false, precision = 4, scale = 0)),
			@AttributeOverride(name = "iphSeq", column = @Column(name = "IPH_SEQ", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "codRegistro", column = @Column(name = "COD_REGISTRO", nullable = false, length = 2)) })
	public FatProcedimentoRegistroId getId() {
		return this.id;
	}

	public void setId(FatProcedimentoRegistroId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "COD_REGISTRO", nullable = false, insertable = false, updatable = false)
	public FatRegistro getFatRegistro() {
		return this.fatRegistro;
	}

	public void setFatRegistro(FatRegistro fatRegistro) {
		this.fatRegistro = fatRegistro;
	}

	@Column(name = "COD_PROCEDIMENTO", nullable = false, precision = 10, scale = 0)
	public Long getCodProcedimento() {
		return this.codProcedimento;
	}

	public void setCodProcedimento(Long codProcedimento) {
		this.codProcedimento = codProcedimento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "IPH_PHO_SEQ", nullable=false, insertable = false, updatable = false),
			@JoinColumn(name = "IPH_SEQ", nullable=false, insertable = false, updatable = false)})
	public FatItensProcedHospitalar getItemProcedHospitalar() {
		return itemProcedHospitalar;
	}

	public void setItemProcedHospitalar(FatItensProcedHospitalar itemProcedHospitalar) {
		this.itemProcedHospitalar = itemProcedHospitalar;
	}
	
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		FatProcedimentoRegistro other = (FatProcedimentoRegistro) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}
	
	
	public enum Fields {
		ID("id"), 
		COD_REGISTRO("id.codRegistro"),
		IPH_PHO_SEQ("id.iphPhoSeq"),
		IPH_SEQ("id.iphSeq"),
		ITEM_PROCED_HOSPITALAR("itemProcedHospitalar"),
		;
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

}

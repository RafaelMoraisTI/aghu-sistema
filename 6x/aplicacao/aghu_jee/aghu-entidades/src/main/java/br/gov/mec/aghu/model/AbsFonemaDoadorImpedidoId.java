package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Embeddable;


import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.EntityCompositeId;

/**
 * AbsFonemaDoadorImpedidoId generated by hbm2java
 */
@Embeddable
public class AbsFonemaDoadorImpedidoId implements EntityCompositeId {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1678460658416958044L;
	private String cfdFonema;
	private Integer dieSeq;

	public AbsFonemaDoadorImpedidoId() {
	}

	public AbsFonemaDoadorImpedidoId(String cfdFonema, Integer dieSeq) {
		this.cfdFonema = cfdFonema;
		this.dieSeq = dieSeq;
	}

	@Column(name = "CFD_FONEMA", nullable = false, length = 6)
	@Length(max = 6)
	public String getCfdFonema() {
		return this.cfdFonema;
	}

	public void setCfdFonema(String cfdFonema) {
		this.cfdFonema = cfdFonema;
	}

	@Column(name = "DIE_SEQ", nullable = false)
	public Integer getDieSeq() {
		return this.dieSeq;
	}

	public void setDieSeq(Integer dieSeq) {
		this.dieSeq = dieSeq;
	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		HashCodeBuilder umHashCodeBuilder = new HashCodeBuilder();
		umHashCodeBuilder.append(this.getCfdFonema());
		umHashCodeBuilder.append(this.getDieSeq());
		return umHashCodeBuilder.toHashCode();
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AbsFonemaDoadorImpedidoId)) {
			return false;
		}
		AbsFonemaDoadorImpedidoId other = (AbsFonemaDoadorImpedidoId) obj;
		EqualsBuilder umEqualsBuilder = new EqualsBuilder();
		umEqualsBuilder.append(this.getCfdFonema(), other.getCfdFonema());
		umEqualsBuilder.append(this.getDieSeq(), other.getDieSeq());
		return umEqualsBuilder.isEquals();
	}
	// ##### GeradorEqualsHashCodeMain #####
	
}

package br.gov.mec.aghu.model;

// Generated 03/02/2011 17:19:32 by Hibernate Tools 3.2.5.Beta

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MpaUsoOrdItemHemoters generated by hbm2java
 */
@Entity
@Table(name = "MPA_USO_ORD_ITEM_HEMOTERS", schema = "AGH")
public class MpaUsoOrdItemHemoters extends BaseEntityId<MpaUsoOrdItemHemotersId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 6583344342521577556L;
	private MpaUsoOrdItemHemotersId id;
	private Integer cieCohSeq;
	private BigDecimal cieSeqp;
	private RapServidores servidor;
	private Date criadoEm;
	private Boolean indIrradiado;
	private Boolean indFiltrado;
	private Boolean indLavado;
	private AbsItensSolHemoterapicas itemSolucaoHemoterapica;
	private AbsProcedHemoterapico procedimentoHemoterapico;
	private AbsComponenteSanguineo componenteSanguineo;
	private MpmTipoFrequenciaAprazamento tipoFrequenciaAprazamento;
	private Short frequencia;
	private Short qtdeAplicacoes;
	private Byte qtdeUnidades;
	private Short qtdeMl;
	
	

	public MpaUsoOrdItemHemoters() {
	}

	public MpaUsoOrdItemHemoters(MpaUsoOrdItemHemotersId id, Integer cieCohSeq,
			BigDecimal cieSeqp, RapServidores servidor, Date criadoEm,
			Boolean indIrradiado, Boolean indFiltrado, Boolean indLavado,
			AbsItensSolHemoterapicas itemSolucaoHemoterapica,
			AbsProcedHemoterapico procedimentoHemoterapico,
			AbsComponenteSanguineo componenteSanguineo,
			MpmTipoFrequenciaAprazamento tipoFrequenciaAprazamento,
			Short frequencia, Short qtdeAplicacoes, Byte qtdeUnidades,
			Short qtdeMl) {
		this.id = id;
		this.cieCohSeq = cieCohSeq;
		this.cieSeqp = cieSeqp;
		this.servidor = servidor;
		this.criadoEm = criadoEm;
		this.indIrradiado = indIrradiado;
		this.indFiltrado = indFiltrado;
		this.indLavado = indLavado;
		this.itemSolucaoHemoterapica = itemSolucaoHemoterapica;
		this.procedimentoHemoterapico = procedimentoHemoterapico;
		this.componenteSanguineo = componenteSanguineo;
		this.tipoFrequenciaAprazamento = tipoFrequenciaAprazamento;
		this.frequencia = frequencia;
		this.qtdeAplicacoes = qtdeAplicacoes;
		this.qtdeUnidades = qtdeUnidades;
		this.qtdeMl = qtdeMl;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "uohSeq", column = @Column(name = "UOH_SEQ", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false, precision = 4, scale = 0)) })
	public MpaUsoOrdItemHemotersId getId() {
		return this.id;
	}

	public void setId(MpaUsoOrdItemHemotersId id) {
		this.id = id;
	}

	@Column(name = "CIE_COH_SEQ", precision = 8, scale = 0)
	public Integer getCieCohSeq() {
		return this.cieCohSeq;
	}

	public void setCieCohSeq(Integer cieCohSeq) {
		this.cieCohSeq = cieCohSeq;
	}

	@Column(name = "CIE_SEQP", precision = 22, scale = 0)
	public BigDecimal getCieSeqp() {
		return this.cieSeqp;
	}

	public void setCieSeqp(BigDecimal cieSeqp) {
		this.cieSeqp = cieSeqp;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "IND_IRRADIADO", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndIrradiado() {
		return this.indIrradiado;
	}

	public void setIndIrradiado(Boolean indIrradiado) {
		this.indIrradiado = indIrradiado;
	}

	@Column(name = "IND_FILTRADO", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndFiltrado() {
		return this.indFiltrado;
	}

	public void setIndFiltrado(Boolean indFiltrado) {
		this.indFiltrado = indFiltrado;
	}

	@Column(name = "IND_LAVADO", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndLavado() {
		return this.indLavado;
	}

	public void setIndLavado(Boolean indLavado) {
		this.indLavado = indLavado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "ISH_SHE_ATD_SEQ", referencedColumnName = "SHE_ATD_SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "ISH_SHE_SEQ", referencedColumnName = "SHE_SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "ISH_SEQUENCIA", referencedColumnName = "SEQUENCIA", nullable = false, insertable = false, updatable = false) })
	public AbsItensSolHemoterapicas getItemSolucaoHemoterapica() {
		return itemSolucaoHemoterapica;
	}

	public void setItemSolucaoHemoterapica(
			AbsItensSolHemoterapicas itemSolucaoHemoterapica) {
		this.itemSolucaoHemoterapica = itemSolucaoHemoterapica;
	}
	


	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PHE_CODIGO", referencedColumnName = "CODIGO", nullable = false)
	public AbsProcedHemoterapico getProcedimentoHemoterapico() {
		return this.procedimentoHemoterapico;
	}

	public void setProcedimentoHemoterapico(AbsProcedHemoterapico procedimentoHemoterapico) {
		this.procedimentoHemoterapico = procedimentoHemoterapico;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CSA_CODIGO", referencedColumnName = "CODIGO", nullable = false)
	public AbsComponenteSanguineo getComponenteSanguineo() {
		return this.componenteSanguineo;
	}

	public void setComponenteSanguineo(AbsComponenteSanguineo componenteSanguineo) {
		this.componenteSanguineo = componenteSanguineo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TFQ_SEQ", referencedColumnName = "SEQ", nullable = false)
	public MpmTipoFrequenciaAprazamento getTipoFrequenciaAprazamento() {
		return this.tipoFrequenciaAprazamento;
	}

	public void setTipoFrequenciaAprazamento(MpmTipoFrequenciaAprazamento tipoFrequenciaAprazamento) {
		this.tipoFrequenciaAprazamento = tipoFrequenciaAprazamento;
	}

	@Column(name = "FREQUENCIA", precision = 3, scale = 0)
	public Short getFrequencia() {
		return this.frequencia;
	}

	public void setFrequencia(Short frequencia) {
		this.frequencia = frequencia;
	}

	@Column(name = "QTDE_APLICACOES", precision = 3, scale = 0)
	public Short getQtdeAplicacoes() {
		return this.qtdeAplicacoes;
	}

	public void setQtdeAplicacoes(Short qtdeAplicacoes) {
		this.qtdeAplicacoes = qtdeAplicacoes;
	}

	@Column(name = "QTDE_UNIDADES", precision = 2, scale = 0)
	public Byte getQtdeUnidades() {
		return this.qtdeUnidades;
	}

	public void setQtdeUnidades(Byte qtdeUnidades) {
		this.qtdeUnidades = qtdeUnidades;
	}

	@Column(name = "QTDE_ML", precision = 4, scale = 0)
	public Short getQtdeMl() {
		return this.qtdeMl;
	}

	public void setQtdeMl(Short qtdeMl) {
		this.qtdeMl = qtdeMl;
	}

	public enum Fields {

		ID("id"),
		CIE_COH_SEQ("cieCohSeq"),
		CIE_SEQP("cieSeqp"),
		SERVIDOR("servidor"),
		CRIADO_EM("criadoEm"),
		IND_IRRADIADO("indIrradiado"),
		IND_FILTRADO("indFiltrado"),
		IND_LAVADO("indLavado"),
		ITEM_SOLUCAO_HEMOTERAPICA("itemSolucaoHemoterapica"),
		PROCEDIMENTO_HEMOTERAPICO("procedimentoHemoterapico"),
		COMPONENTE_SANGUINEO("componenteSanguineo"),
		TIPO_FREQUENCIA_APRAZAMENTO("tipoFrequenciaAprazamento"),
		FREQUENCIA("frequencia"),
		QTDE_APLICACOES("qtdeAplicacoes"),
		QTDE_UNIDADES("qtdeUnidades"),
		QTDE_ML("qtdeMl");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MpaUsoOrdItemHemoters)) {
			return false;
		}
		MpaUsoOrdItemHemoters other = (MpaUsoOrdItemHemoters) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

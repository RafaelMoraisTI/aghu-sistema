package br.gov.mec.aghu.model;

// Generated 10/05/2011 17:37:54 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AelExecExamesMatAnalise generated by hbm2java
 */
@Entity
@Table(name = "AEL_EXEC_EXAMES_MAT_ANALISE", schema = "AGH")
public class AelExecExamesMatAnalise extends BaseEntityId<AelExecExamesMatAnaliseId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5028911963949758376L;
	private AelExecExamesMatAnaliseId id;
	private AelEquipamentos aelEquipamentos;
	private Short ordem;
	private DominioSituacao situacao;
	private Date criadoEm;
	private RapServidores servidor;
	


	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "emaExaSigla", column = @Column(name = "EMA_EXA_SIGLA", nullable = false, length = 5)),
			@AttributeOverride(name = "emaManSeq", column = @Column(name = "EMA_MAN_SEQ", nullable = false, precision = 5, scale = 0)),
			@AttributeOverride(name = "equSeq", column = @Column(name = "EQU_SEQ", nullable = false, precision = 4, scale = 0)),
			@AttributeOverride(name = "programacao", column = @Column(name = "PROGRAMACAO", nullable = false, length = 1)) })
	public AelExecExamesMatAnaliseId getId() {
		return this.id;
	}

	public void setId(AelExecExamesMatAnaliseId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EQU_SEQ", nullable = false, insertable = false, updatable = false)
	public AelEquipamentos getAelEquipamentos() {
		return this.aelEquipamentos;
	}

	public void setAelEquipamentos(AelEquipamentos aelEquipamentos) {
		this.aelEquipamentos = aelEquipamentos;
	}

	@Column(name = "ORDEM", nullable = false, precision = 3, scale = 0)
	public Short getOrdem() {
		return this.ordem;
	}

	public void setOrdem(Short ordem) {
		this.ordem = ordem;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getSituacao() {
		return this.situacao;
	}

	public void setSituacao(DominioSituacao situacao) {
		this.situacao = situacao;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}


	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}
	
	public enum Fields {
		EQUIPAMENTOS("aelEquipamentos"),
		EQUIPAMENTOS_SEQ("aelEquipamentos.seq"),
		EMA_EXA_SIGLA("id.emaExaSigla"),
		EMA_MAN_SEQ("id.emaManSeq"),
		PROGRAMACAO("id.programacao"),
		IND_SITUACAO("situacao"),
		ORDEM("ordem"),
		SERVIDOR("servidor");


		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AelExecExamesMatAnalise)) {
			return false;
		}
		AelExecExamesMatAnalise other = (AelExecExamesMatAnalise) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

// Generated 21/09/2010 19:23:57 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;



import org.hibernate.annotations.Type;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntityCodigo;

/**
 * AbsProcedHemoterapicos generated by hbm2java
 */

@Entity
@Table(name = "ABS_PROCED_HEMOTERAPICOS", schema = "AGH")
public class AbsProcedHemoterapico extends BaseEntityCodigo<String> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2634618409980773592L;
	private String codigo;
	private String descricao;
	private Boolean indAmostra;
	private String informacoes;
	private DominioSituacao indSituacao;
	private Date criadoEm;
	private Boolean indJustificativa;
	private RapServidores rapServidores;
	private Set<AbsItensSolHemoterapicas> absItensSolHemoterapicases = new HashSet<AbsItensSolHemoterapicas>(0);
	private Set<FatProcedHospInternos> fatProcedHospInternos = new HashSet<FatProcedHospInternos>(0);
	
	public AbsProcedHemoterapico() {
	}

	public AbsProcedHemoterapico(String codigo, String descricao,
			Boolean indAmostra, DominioSituacao indSituacao, Date criadoEm,
			Boolean indJustificativa) {
		this.codigo = codigo;
		this.descricao = descricao;
		this.indAmostra = indAmostra;
		this.indSituacao = indSituacao;
		this.criadoEm = criadoEm;
		this.indJustificativa = indJustificativa;
	}

	public AbsProcedHemoterapico(String codigo, String descricao,
			Boolean indAmostra, String informacoes, DominioSituacao indSituacao,
			Date criadoEm, Boolean indJustificativa, RapServidores rapServidores,
			Set<AbsItensSolHemoterapicas> absItensSolHemoterapicases) {
		this.codigo = codigo;
		this.descricao = descricao;
		this.indAmostra = indAmostra;
		this.informacoes = informacoes;
		this.indSituacao = indSituacao;
		this.criadoEm = criadoEm;
		this.indJustificativa = indJustificativa;
		this.rapServidores = rapServidores;
		this.absItensSolHemoterapicases = absItensSolHemoterapicases;
	}

	@Id
	@Column(name = "CODIGO", unique = true, nullable = false, length = 2)
	public String getCodigo() {
		return this.codigo;
	}

	public void setCodigo(String codigo) {
		this.codigo = codigo;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 45)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "IND_AMOSTRA", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndAmostra() {
		return this.indAmostra;
	}

	public void setIndAmostra(Boolean indAmostra) {
		this.indAmostra = indAmostra;
	}

	@Lob
	@Type(type="text")
	@Column(name = "INFORMACOES")
	public String getInformacoes() {
		return this.informacoes;
	}

	public void setInformacoes(String informacoes) {
		this.informacoes = informacoes;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "IND_JUSTIFICATIVA", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndJustificativa() {
		return this.indJustificativa;
	}

	public void setIndJustificativa(Boolean indJustificativa) {
		this.indJustificativa = indJustificativa;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "procedHemoterapico")
	public Set<AbsItensSolHemoterapicas> getAbsItensSolHemoterapicases() {
		return this.absItensSolHemoterapicases;
	}

	public void setAbsItensSolHemoterapicases(
			Set<AbsItensSolHemoterapicas> absItensSolHemoterapicases) {
		this.absItensSolHemoterapicases = absItensSolHemoterapicases;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
		@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
		@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidores() {
		return rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "procedHemoterapico")
	protected Set<FatProcedHospInternos> getFatProcedHospInternos() {
		return fatProcedHospInternos;
	}

	protected void setFatProcedHospInternos(Set<FatProcedHospInternos> fatProcedHospInternos) {
		this.fatProcedHospInternos = fatProcedHospInternos;
	}

	/**
	 * FIELDS
	 * @author bsoliveira
	 *
	 */
	public enum Fields {

		CODIGO("codigo"), DESCRICAO("descricao"), IND_AMOSTRA("indAmostra"), 
		INFORMACOES("informacoes"), IND_SITUACAO("indSituacao"), CRIADO_EM("criadoEm"), 
		IND_JUSTIFICATIVA("indJustificativa"), RAP_SERVIDORES("rapServidores"), 
		ABS_ITENS_SOL_HEMOTERAPICAS("absItensSolHemoterapicases"),
		FAT_PROCED_HOSP_INTERNOS("fatProcedHospInternos");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getCodigo() == null) ? 0 : getCodigo().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AbsProcedHemoterapico)) {
			return false;
		}
		AbsProcedHemoterapico other = (AbsProcedHemoterapico) obj;
		if (getCodigo() == null) {
			if (other.getCodigo() != null) {
				return false;
			}
		} else if (!getCodigo().equals(other.getCodigo())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

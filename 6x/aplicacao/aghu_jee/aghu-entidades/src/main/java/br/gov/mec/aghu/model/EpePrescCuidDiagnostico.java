package br.gov.mec.aghu.model;

// Generated 17/10/2011 14:21:24 by Hibernate Tools 3.4.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Version;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * EpePrescCuidDiagnosticos generated by hbm2java
 */
@Entity
@Table(name = "EPE_PRESC_CUID_DIAGNOSTICOS", schema = "AGH")
public class EpePrescCuidDiagnostico extends BaseEntityId<EpePrescCuidDiagnosticoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -3068582392615928696L;
	private EpePrescCuidDiagnosticoId id;
	private Integer version;
	private EpeCuidadoDiagnostico cuidadoDiagnostico;
	private EpePrescricoesCuidados prescricaoCuidado;
	private EpeFatRelacionado fatRelacionado;
	private EpeDiagnostico diagnostico;

	public EpePrescCuidDiagnostico() {
	}
	
	public EpePrescCuidDiagnostico(EpePrescCuidDiagnosticoId id) {
		this.id = id;
	}

	public EpePrescCuidDiagnostico(EpePrescCuidDiagnosticoId id,
			EpeCuidadoDiagnostico cuidadoDiagnostico) {
		this.id = id;
		this.cuidadoDiagnostico = cuidadoDiagnostico;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "prcAtdSeq", column = @Column(name = "PRC_ATD_SEQ", nullable = false, precision = 9, scale = 0)),
			@AttributeOverride(name = "prcSeq", column = @Column(name = "PRC_SEQ", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "cdgFdgDgnSnbGnbSeq", column = @Column(name = "CDG_FDG_DGN_SNB_GNB_SEQ", nullable = false, precision = 4, scale = 0)),
			@AttributeOverride(name = "cdgFdgDgnSnbSequencia", column = @Column(name = "CDG_FDG_DGN_SNB_SEQUENCIA", nullable = false, precision = 3, scale = 0)),
			@AttributeOverride(name = "cdgFdgDgnSequencia", column = @Column(name = "CDG_FDG_DGN_SEQUENCIA", nullable = false, precision = 4, scale = 0)),
			@AttributeOverride(name = "cdgFdgFreSeq", column = @Column(name = "CDG_FDG_FRE_SEQ", nullable = false, precision = 4, scale = 0)),
			@AttributeOverride(name = "cdgCuiSeq", column = @Column(name = "CDG_CUI_SEQ", nullable = false, precision = 4, scale = 0)) })
	public EpePrescCuidDiagnosticoId getId() {
		return this.id;
	}

	public void setId(EpePrescCuidDiagnosticoId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false, precision = 9, scale = 0)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CDG_FDG_DGN_SNB_GNB_SEQ", referencedColumnName = "FDG_DGN_SNB_GNB_SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CDG_FDG_DGN_SNB_SEQUENCIA", referencedColumnName = "FDG_DGN_SNB_SEQUENCIA", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CDG_FDG_DGN_SEQUENCIA", referencedColumnName = "FDG_DGN_SEQUENCIA", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CDG_FDG_FRE_SEQ", referencedColumnName = "FDG_FRE_SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CDG_CUI_SEQ", referencedColumnName = "CUI_SEQ", nullable = false, insertable = false, updatable = false) })
	public EpeCuidadoDiagnostico getCuidadoDiagnostico() {
		return this.cuidadoDiagnostico;
	}

	public void setCuidadoDiagnostico(
			EpeCuidadoDiagnostico cuidadoDiagnostico) {
		this.cuidadoDiagnostico = cuidadoDiagnostico;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "PRC_ATD_SEQ", referencedColumnName = "ATD_SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "PRC_SEQ", referencedColumnName = "SEQ", nullable = false, insertable = false, updatable = false) })
	public EpePrescricoesCuidados getPrescricaoCuidado() {
		return this.prescricaoCuidado;
	}

	public void setPrescricaoCuidado(
			EpePrescricoesCuidados prescricaoCuidado) {
		this.prescricaoCuidado = prescricaoCuidado;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CDG_FDG_FRE_SEQ", referencedColumnName = "SEQ", nullable = false, insertable = false, updatable = false)
	public EpeFatRelacionado getFatRelacionado() {
		return fatRelacionado;
	}

	public void setFatRelacionado(EpeFatRelacionado fatRelacionado) {
		this.fatRelacionado = fatRelacionado;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
		@JoinColumn(name = "CDG_FDG_DGN_SNB_GNB_SEQ", referencedColumnName = "SNB_GNB_SEQ", nullable = false, insertable = false, updatable = false),
		@JoinColumn(name = "CDG_FDG_DGN_SNB_SEQUENCIA", referencedColumnName = "SNB_SEQUENCIA", nullable = false, insertable = false, updatable = false),
		@JoinColumn(name = "CDG_FDG_DGN_SEQUENCIA", referencedColumnName = "SEQUENCIA", nullable = false, insertable = false, updatable = false)})	
	public EpeDiagnostico getDiagnostico() {
		return diagnostico;
	}

	public void setDiagnostico(EpeDiagnostico diagnostico) {
		this.diagnostico = diagnostico;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		EpePrescCuidDiagnostico other = (EpePrescCuidDiagnostico) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}
	
	public enum Fields {
		PRESCRICAO_CUIDADO("prescricaoCuidado"),
		PRC_ATD_SEQ("id.prcAtdSeq"),
		PRC_SEQ("id.prcSeq"),
		CDG_FDG_DGN_SNB_GNB_SEQ("id.cdgFdgDgnSnbGnbSeq"),
		CDG_FDG_DGN_SNB_SEQUENCIA("id.cdgFdgDgnSnbSequencia"),
		CDG_FDG_DGN_SEQUENCIA("id.cdgFdgDgnSequencia"),
		CDG_FDG_FRE_SEQ("id.cdgFdgFreSeq"),
		CDG_CUI_SEQ("id.cdgCuiSeq"),
		FAT_RELACIONADO("fatRelacionado"),
		DIAGNOSTICO("diagnostico");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}

}

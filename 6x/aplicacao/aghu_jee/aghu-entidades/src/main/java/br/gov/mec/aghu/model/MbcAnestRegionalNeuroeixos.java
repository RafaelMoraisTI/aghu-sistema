package br.gov.mec.aghu.model;

// Generated 28/03/2012 15:17:44 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MbcAnestRegionalNeuroeixos generated by hbm2java
 */
@Entity
@Table(name = "MBC_ANEST_REGIONAL_NEUROEIXOS", schema = "AGH")
public class MbcAnestRegionalNeuroeixos extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4584836786479128094L;
	private Integer seq;
	private Integer version;
	private MbcFichaAnestesias mbcFichaAnestesias;
	private MbcNivelBloqueio mbcNivelBloqueiosByNblSeqFinal;
	private MbcNivelBloqueio mbcNivelBloqueiosByNblSeqInicial;
	private Boolean cateterPrevio;
	private String abordagem;
	private Double volumeInicialInjetado;
	private Date criadoEm;
	private RapServidores servidor;
	private Set<MbcNeuroeixoNvlPuncionados> mbcNeuroeixoNvlPuncionadoses = new HashSet<MbcNeuroeixoNvlPuncionados>(
			0);

	public MbcAnestRegionalNeuroeixos() {
	}

	public MbcAnestRegionalNeuroeixos(Integer seq,
			MbcFichaAnestesias mbcFichaAnestesias, Date criadoEm,
			RapServidores servidor) {
		this.seq = seq;
		this.mbcFichaAnestesias = mbcFichaAnestesias;
		this.criadoEm = criadoEm;
		this.servidor = servidor;
	}

	public MbcAnestRegionalNeuroeixos(Integer seq,
			MbcFichaAnestesias mbcFichaAnestesias,
			MbcNivelBloqueio mbcNivelBloqueiosByNblSeqFinal,
			MbcNivelBloqueio mbcNivelBloqueiosByNblSeqInicial,
			Boolean cateterPrevio, String abordagem,
			Double volumeInicialInjetado, Date criadoEm, RapServidores servidor,
			Set<MbcNeuroeixoNvlPuncionados> mbcNeuroeixoNvlPuncionadoses) {
		this.seq = seq;
		this.mbcFichaAnestesias = mbcFichaAnestesias;
		this.mbcNivelBloqueiosByNblSeqFinal = mbcNivelBloqueiosByNblSeqFinal;
		this.mbcNivelBloqueiosByNblSeqInicial = mbcNivelBloqueiosByNblSeqInicial;
		this.cateterPrevio = cateterPrevio;
		this.abordagem = abordagem;
		this.volumeInicialInjetado = volumeInicialInjetado;
		this.criadoEm = criadoEm;
		this.servidor = servidor;
		this.mbcNeuroeixoNvlPuncionadoses = mbcNeuroeixoNvlPuncionadoses;
	}

	@Id
	@Column(name = "SEQ", unique = true, nullable = false)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FIC_SEQ", nullable = false)
	public MbcFichaAnestesias getMbcFichaAnestesias() {
		return this.mbcFichaAnestesias;
	}

	public void setMbcFichaAnestesias(MbcFichaAnestesias mbcFichaAnestesias) {
		this.mbcFichaAnestesias = mbcFichaAnestesias;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "NBL_SEQ_FINAL")
	public MbcNivelBloqueio getMbcNivelBloqueiosByNblSeqFinal() {
		return this.mbcNivelBloqueiosByNblSeqFinal;
	}

	public void setMbcNivelBloqueiosByNblSeqFinal(
			MbcNivelBloqueio mbcNivelBloqueiosByNblSeqFinal) {
		this.mbcNivelBloqueiosByNblSeqFinal = mbcNivelBloqueiosByNblSeqFinal;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "NBL_SEQ_INICIAL")
	public MbcNivelBloqueio getMbcNivelBloqueiosByNblSeqInicial() {
		return this.mbcNivelBloqueiosByNblSeqInicial;
	}

	public void setMbcNivelBloqueiosByNblSeqInicial(
			MbcNivelBloqueio mbcNivelBloqueiosByNblSeqInicial) {
		this.mbcNivelBloqueiosByNblSeqInicial = mbcNivelBloqueiosByNblSeqInicial;
	}

	@Column(name = "CATETER_PREVIO", length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getCateterPrevio() {
		return this.cateterPrevio;
	}

	public void setCateterPrevio(Boolean cateterPrevio) {
		this.cateterPrevio = cateterPrevio;
	}

	@Column(name = "ABORDAGEM", length = 1)
	@Length(max = 1)
	public String getAbordagem() {
		return this.abordagem;
	}

	public void setAbordagem(String abordagem) {
		this.abordagem = abordagem;
	}

	@Column(name = "VOLUME_INICIAL_INJETADO", precision = 17, scale = 17)
	public Double getVolumeInicialInjetado() {
		return this.volumeInicialInjetado;
	}

	public void setVolumeInicialInjetado(Double volumeInicialInjetado) {
		this.volumeInicialInjetado = volumeInicialInjetado;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY, optional = false)
	@JoinColumns( {
		@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
		@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
	return servidor;
	}

	public void setServidor(RapServidores sevidor) {
		this.servidor = sevidor;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mbcAnestRegionalNeuroeixos")
	public Set<MbcNeuroeixoNvlPuncionados> getMbcNeuroeixoNvlPuncionadoses() {
		return this.mbcNeuroeixoNvlPuncionadoses;
	}

	public void setMbcNeuroeixoNvlPuncionadoses(
			Set<MbcNeuroeixoNvlPuncionados> mbcNeuroeixoNvlPuncionadoses) {
		this.mbcNeuroeixoNvlPuncionadoses = mbcNeuroeixoNvlPuncionadoses;
	}

	public enum Fields {

		SEQ("seq"),
		MBC_FICHA_ANESTESIAS("mbcFichaAnestesias"),
		MBC_NIVEL_BLOQUEIOS_BY_NBL_SEQ_FINAL("mbcNivelBloqueiosByNblSeqFinal"),
		MBC_NIVEL_BLOQUEIOS_BY_NBL_SEQ_INICIAL("mbcNivelBloqueiosByNblSeqInicial"),
		CATETER_PREVIO("cateterPrevio"),
		ABORDAGEM("abordagem"),
		VOLUME_INICIAL_INJETADO("volumeInicialInjetado"),
		CRIADO_EM("criadoEm"),
		SER_MATRICULA("servidor.id.matricula"),
		SER_VIN_CODIGO("servidor.id.vinCodigo"),
		MBC_NEUROEIXO_NVL_PUNCIONADOSES("mbcNeuroeixoNvlPuncionadoses");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MbcAnestRegionalNeuroeixos)) {
			return false;
		}
		MbcAnestRegionalNeuroeixos other = (MbcAnestRegionalNeuroeixos) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

// Generated 23/06/2010 17:36:58 by Hibernate Tools 3.2.5.Beta

import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.Version;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSexoDeterminante;
import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.dominio.DominioTipoUsoSumario;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * FatSituacoesSaidaPaciente generated by hbm2java
 */
@Entity
@Table(name = "FAT_SITUACOES_SAIDA_PACIENTE", schema = "AGH")
public class FatSituacaoSaidaPaciente extends BaseEntityId<FatSituacaoSaidaPacienteId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 5555220615440083913L;
	
	private FatSituacaoSaidaPacienteId id;
	private Byte codigoSus;
	private String descricao;
	private DominioSituacao situacao;
	private Boolean cobrancaDias;
	private DominioTipoUsoSumario tipoUso;
	private DominioSexoDeterminante sexo;
	private Short idadeMinima;
	private Short idadeMaxima;
	private String descricaoEditada;
	private FatMotivoSaidaPaciente motivoSaidaPaciente;
	private Set<FatRelMotivoAlta> relMotAltas = new HashSet<FatRelMotivoAlta>(0);
	private Integer version;

	public FatSituacaoSaidaPaciente() {
	}

	public FatSituacaoSaidaPaciente(FatSituacaoSaidaPacienteId id,
			Byte codigoSus, String descricao, DominioSituacao situacao,
			Boolean cobrancaDias) {
		this.id = id;
		this.codigoSus = codigoSus;
		this.descricao = descricao;
		this.situacao = situacao;
		this.cobrancaDias = cobrancaDias;
	}

	public FatSituacaoSaidaPaciente(FatSituacaoSaidaPacienteId id,
			Byte codigoSus, String descricao, DominioSituacao situacao,
			Boolean cobrancaDias, FatMotivoSaidaPaciente motivoSaidaPaciente, Set<FatRelMotivoAlta> relMotAltas) {
		this.id = id;
		this.codigoSus = codigoSus;
		this.descricao = descricao;
		this.situacao = situacao;
		this.cobrancaDias = cobrancaDias;
		this.motivoSaidaPaciente = motivoSaidaPaciente;
		this.relMotAltas = relMotAltas;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "mspSeq", column = @Column(name = "MSP_SEQ", nullable = false, precision = 3, scale = 0)),
			@AttributeOverride(name = "seq", column = @Column(name = "SEQ", nullable = false, precision = 3, scale = 0)) })
	public FatSituacaoSaidaPacienteId getId() {
		return this.id;
	}

	public void setId(FatSituacaoSaidaPacienteId id) {
		this.id = id;
	}

	@Column(name = "CODIGO_SUS", nullable = false, precision = 2, scale = 0)
	public Byte getCodigoSus() {
		return this.codigoSus;
	}

	public void setCodigoSus(Byte codigoSus) {
		this.codigoSus = codigoSus;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 120)
	@Length(max = 120)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getSituacao() {
		return this.situacao;
	}

	public void setSituacao(DominioSituacao situacao) {
		this.situacao = situacao;
	}

	@Column(name = "IND_COBRANCA_DIAS", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getCobrancaDias() {
		return this.cobrancaDias;
	}

	public void setCobrancaDias(Boolean cobrancaDias) {
		this.cobrancaDias = cobrancaDias;
	}

	@Column(name = "TIPO_USO_SUMARIO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioTipoUsoSumario getTipoUso() {
		return tipoUso;
	}

	public void setTipoUso(DominioTipoUsoSumario tipoUso) {
		this.tipoUso = tipoUso;
	}

	@Column(name = "SEXO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSexoDeterminante getSexo() {
		return sexo;
	}

	public void setSexo(DominioSexoDeterminante sexo) {
		this.sexo = sexo;
	}

	@Column(name = "IDADE_MINIMA", precision = 3, scale = 0)
	public Short getIdadeMinima() {
		return idadeMinima;
	}

	public void setIdadeMinima(Short idadeMinima) {
		this.idadeMinima = idadeMinima;
	}

	@Column(name = "IDADE_MAXIMA", precision = 3, scale = 0)
	public Short getIdadeMaxima() {
		return idadeMaxima;
	}

	public void setIdadeMaxima(Short idadeMaxima) {
		this.idadeMaxima = idadeMaxima;
	}

	@Column(name = "DESCRICAO_EDITADA_SUMARIO", length = 180)
	@Length(max = 180)
	public String getDescricaoEditada() {
		return descricaoEditada;
	}

	public void setDescricaoEditada(String descricaoEditada) {
		this.descricaoEditada = descricaoEditada;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MSP_SEQ", insertable=false, updatable=false, nullable=false)
	public FatMotivoSaidaPaciente getMotivoSaidaPaciente() {
		return motivoSaidaPaciente;
	}

	public void setMotivoSaidaPaciente(FatMotivoSaidaPaciente motivoSaidaPaciente) {
		this.motivoSaidaPaciente = motivoSaidaPaciente;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "situacaoSaidaPaciente")
	public Set<FatRelMotivoAlta> getRelMotAltas() {
		return this.relMotAltas;
	}

	public void setRelMotAltas(Set<FatRelMotivoAlta> relMotAltas) {
		this.relMotAltas = relMotAltas;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Override
	public int hashCode() {
		HashCodeBuilder umHashCodeBuilder = new HashCodeBuilder();
		umHashCodeBuilder.append(this.getId());
        umHashCodeBuilder.append(this.getCodigoSus());
        umHashCodeBuilder.append(this.getDescricao());
        umHashCodeBuilder.append(this.getSituacao());
        umHashCodeBuilder.append(this.getTipoUso());
        umHashCodeBuilder.append(this.getSexo());
        umHashCodeBuilder.append(this.getIdadeMinima());
        umHashCodeBuilder.append(this.getIdadeMaxima());
        umHashCodeBuilder.append(this.getDescricaoEditada());
        umHashCodeBuilder.append(this.getVersion());
        return umHashCodeBuilder.toHashCode();
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		FatSituacaoSaidaPaciente other = (FatSituacaoSaidaPaciente) obj;
		EqualsBuilder umEqualsBuilder = new EqualsBuilder();
		umEqualsBuilder.append(this.getId(), other.getId());
        umEqualsBuilder.append(this.getCodigoSus(), other.getCodigoSus());
        umEqualsBuilder.append(this.getDescricao(), other.getDescricao());
        umEqualsBuilder.append(this.getTipoUso(), other.getTipoUso());
        umEqualsBuilder.append(this.getSexo(), other.getSexo());
        umEqualsBuilder.append(this.getIdadeMinima(), other.getIdadeMinima());
        umEqualsBuilder.append(this.getIdadeMaxima(), other.getIdadeMaxima());
        umEqualsBuilder.append(this.getCobrancaDias(), other.getCobrancaDias());
        umEqualsBuilder.append(this.getSituacao(), other.getSituacao());
        umEqualsBuilder.append(this.getDescricaoEditada(), other.getDescricaoEditada());
        umEqualsBuilder.append(this.getVersion(), other.getVersion());
        return umEqualsBuilder.isEquals();
	}

	public enum Fields {
		SEQ("id.seq"),
		MSP_SEQ("id.mspSeq"),
		CODIGO_SUS("codigoSus"),
		DESCRICAO("descricao"),
		TIPO_USO("tipoUso"),
		SEXO("sexo"),
		IDADE_MINIMA("idadeMinima"),
		IDADE_MAXIMA("idadeMaxima"),
		COBRANCA_DIAS("cobrancaDias"),
		SITUACAO("situacao"),
		DESCRICAO_EDITADA("descricaoEditada"),
		MOTIVO_SAIDA_PACIENTE("motivoSaidaPaciente")
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}
	
	@Transient
	public String getCodigoSusDescricao(){
		return getCodigoSus().toString() + " - " + getDescricao();
	}
}

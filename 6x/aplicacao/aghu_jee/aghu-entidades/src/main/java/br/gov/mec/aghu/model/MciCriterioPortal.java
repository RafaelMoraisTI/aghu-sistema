package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MciCriterioPortal generated by hbm2java
 */
@Entity
@Table(name = "MCI_CRITERIOS_PORTAL", schema = "AGH")
public class MciCriterioPortal extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4892841704692507047L;
	private Integer seq;
	private Integer version;
	private AghEspecialidades aghEspecialidades;
	private MciCidNotificacao mciCidNotificacao;
	private RapServidores rapServidores;
	private MciCondicaoClinica mciCondicaoClinica;
	private AinLeitos ainLeitos;
	private MciProcedimentoRisco mciProcedimentoRisco;
	private AghEquipes aghEquipes;
	private MciAreaPortal mciAreaPortal;
	private AipPacientes aipPacientes;
	private String tipoCaso;
	private String indConfirmacaoCci;
	private Date criadoEm;
	private Set<MciCriterioXUnidade> mciCriterioXUnidadees = new HashSet<MciCriterioXUnidade>(0);

	public MciCriterioPortal() {
	}

	public MciCriterioPortal(Integer seq, RapServidores rapServidores) {
		this.seq = seq;
		this.rapServidores = rapServidores;
	}

	public MciCriterioPortal(Integer seq, AghEspecialidades aghEspecialidades, MciCidNotificacao mciCidNotificacao,
			RapServidores rapServidores, MciCondicaoClinica mciCondicaoClinica, AinLeitos ainLeitos,
			MciProcedimentoRisco mciProcedimentoRisco, AghEquipes aghEquipes, MciAreaPortal mciAreaPortal,
			AipPacientes aipPacientes, String tipoCaso, String indConfirmacaoCci, Date criadoEm,
			Set<MciCriterioXUnidade> mciCriterioXUnidadees) {
		this.seq = seq;
		this.aghEspecialidades = aghEspecialidades;
		this.mciCidNotificacao = mciCidNotificacao;
		this.rapServidores = rapServidores;
		this.mciCondicaoClinica = mciCondicaoClinica;
		this.ainLeitos = ainLeitos;
		this.mciProcedimentoRisco = mciProcedimentoRisco;
		this.aghEquipes = aghEquipes;
		this.mciAreaPortal = mciAreaPortal;
		this.aipPacientes = aipPacientes;
		this.tipoCaso = tipoCaso;
		this.indConfirmacaoCci = indConfirmacaoCci;
		this.criadoEm = criadoEm;
		this.mciCriterioXUnidadees = mciCriterioXUnidadees;
	}

	@Id
	@Column(name = "SEQ", unique = true, nullable = false)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ESP_SEQ")
	public AghEspecialidades getAghEspecialidades() {
		return this.aghEspecialidades;
	}

	public void setAghEspecialidades(AghEspecialidades aghEspecialidades) {
		this.aghEspecialidades = aghEspecialidades;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CIF_SEQ")
	public MciCidNotificacao getMciCidNotificacao() {
		return this.mciCidNotificacao;
	}

	public void setMciCidNotificacao(MciCidNotificacao mciCidNotificacao) {
		this.mciCidNotificacao = mciCidNotificacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CCL_SEQ")
	public MciCondicaoClinica getMciCondicaoClinica() {
		return this.mciCondicaoClinica;
	}

	public void setMciCondicaoClinica(MciCondicaoClinica mciCondicaoClinica) {
		this.mciCondicaoClinica = mciCondicaoClinica;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LTO_LTO_ID")
	public AinLeitos getAinLeitos() {
		return this.ainLeitos;
	}

	public void setAinLeitos(AinLeitos ainLeitos) {
		this.ainLeitos = ainLeitos;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "POR_SEQ")
	public MciProcedimentoRisco getMciProcedimentoRisco() {
		return this.mciProcedimentoRisco;
	}

	public void setMciProcedimentoRisco(MciProcedimentoRisco mciProcedimentoRisco) {
		this.mciProcedimentoRisco = mciProcedimentoRisco;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EQP_SEQ")
	public AghEquipes getAghEquipes() {
		return this.aghEquipes;
	}

	public void setAghEquipes(AghEquipes aghEquipes) {
		this.aghEquipes = aghEquipes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ARI_SEQ")
	public MciAreaPortal getMciAreaPortal() {
		return this.mciAreaPortal;
	}

	public void setMciAreaPortal(MciAreaPortal mciAreaPortal) {
		this.mciAreaPortal = mciAreaPortal;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO")
	public AipPacientes getAipPacientes() {
		return this.aipPacientes;
	}

	public void setAipPacientes(AipPacientes aipPacientes) {
		this.aipPacientes = aipPacientes;
	}

	@Column(name = "TIPO_CASO", length = 1)
	@Length(max = 1)
	public String getTipoCaso() {
		return this.tipoCaso;
	}

	public void setTipoCaso(String tipoCaso) {
		this.tipoCaso = tipoCaso;
	}

	@Column(name = "IND_CONFIRMACAO_CCI", length = 1)
	@Length(max = 1)
	public String getIndConfirmacaoCci() {
		return this.indConfirmacaoCci;
	}

	public void setIndConfirmacaoCci(String indConfirmacaoCci) {
		this.indConfirmacaoCci = indConfirmacaoCci;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciCriterioPortal")
	public Set<MciCriterioXUnidade> getMciCriterioXUnidadees() {
		return this.mciCriterioXUnidadees;
	}

	public void setMciCriterioXUnidadees(Set<MciCriterioXUnidade> mciCriterioXUnidadees) {
		this.mciCriterioXUnidadees = mciCriterioXUnidadees;
	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		AGH_ESPECIALIDADES("aghEspecialidades"),
		MCI_CID_NOTIFICACAO("mciCidNotificacao"),
		RAP_SERVIDORES("rapServidores"),
		MCI_CONDICAO_CLINICAS("mciCondicaoClinica"),
		AIN_LEITOS("ainLeitos"),
		MCI_PROCEDIMENTO_RISCOS("mciProcedimentoRisco"),
		AGH_EQUIPES("aghEquipes"),
		MCI_AREA_PORTAIS("mciAreaPortal"),
		AIP_PACIENTES("aipPacientes"),
		TIPO_CASO("tipoCaso"),
		IND_CONFIRMACAO_CCI("indConfirmacaoCci"),
		CRIADO_EM("criadoEm"),
		MCI_CRITERIO_X_UNIDADEES("mciCriterioXUnidadees"),
		POR_SEQ("mciProcedimentoRisco.seq");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MciCriterioPortal)) {
			return false;
		}
		MciCriterioPortal other = (MciCriterioPortal) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

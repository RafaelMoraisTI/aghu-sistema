package br.gov.mec.aghu.model;

// Generated 09/11/2010 13:45:21 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AfaLocalDispensacaoMdtos generated by hbm2java
 */
@Entity
@Table(name = "AFA_LOCAL_DISPENSACAO_MDTOS", schema = "AGH")
public class AfaLocalDispensacaoMdtos extends BaseEntityId<AfaLocalDispensacaoMdtosId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 3219991648175457913L;
	/**
	 * 
	 */
	
	private AfaLocalDispensacaoMdtosId id;
	private RapServidores servidor;
	private AghUnidadesFuncionais unidadeFuncionalDispDoseInt;
	private AghUnidadesFuncionais unidadeFuncionalDispDoseFrac;
	private AghUnidadesFuncionais unidadeFuncionalDispAlternativa;
	private AghUnidadesFuncionais unidadeFuncionalDispUsoDomiciliar;
	private Date criadoEm;
	private AghUnidadesFuncionais unidadeFuncional;
	private AfaMedicamento medicamento;
	private Integer version;

	public AfaLocalDispensacaoMdtos() {
	}

	public AfaLocalDispensacaoMdtos(AfaLocalDispensacaoMdtosId id,
			RapServidores servidor, AghUnidadesFuncionais unidadeFuncionalDispDoseInt,
			AghUnidadesFuncionais unidadeFuncionalDispDoseFrac, 
			AghUnidadesFuncionais unidadeFuncionalDispAlternativa, Date criadoEm) {
		this.id = id;
		this.servidor = servidor;
		this.unidadeFuncionalDispDoseInt = unidadeFuncionalDispDoseInt;
		this.unidadeFuncionalDispDoseFrac = unidadeFuncionalDispDoseFrac;
		this.unidadeFuncionalDispAlternativa = unidadeFuncionalDispAlternativa;
		this.criadoEm = criadoEm;
	}

	public AfaLocalDispensacaoMdtos(AfaLocalDispensacaoMdtosId id,
			RapServidores servidor, AghUnidadesFuncionais unidadeFuncionalDispDoseInt,
			AghUnidadesFuncionais unidadeFuncionalDispDoseFrac, AghUnidadesFuncionais unidadeFuncionalDispAlternativa,
			Date criadoEm, AghUnidadesFuncionais unidadeFuncionalDispUsoDomiciliar) {
		this.id = id;
		this.servidor = servidor;
		this.unidadeFuncionalDispDoseInt = unidadeFuncionalDispDoseInt;
		this.unidadeFuncionalDispDoseFrac = unidadeFuncionalDispDoseFrac;
		this.unidadeFuncionalDispAlternativa = unidadeFuncionalDispAlternativa;
		this.criadoEm = criadoEm;
		this.unidadeFuncionalDispUsoDomiciliar = unidadeFuncionalDispUsoDomiciliar;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "medMatCodigo", column = @Column(name = "MED_MAT_CODIGO", nullable = false, precision = 6, scale = 0)),
			@AttributeOverride(name = "unfSeq", column = @Column(name = "UNF_SEQ", nullable = false, precision = 4, scale = 0)) })
	public AfaLocalDispensacaoMdtosId getId() {
		return this.id;
	}

	public void setId(AfaLocalDispensacaoMdtosId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	//@Column(name = "UNF_SEQ_DISP_DOSE_INT", nullable = false, precision = 4, scale = 0)
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ_DISP_DOSE_INT", referencedColumnName = "SEQ")
	public AghUnidadesFuncionais getUnidadeFuncionalDispDoseInt() {
		return this.unidadeFuncionalDispDoseInt;
	}

	public void setUnidadeFuncionalDispDoseInt(AghUnidadesFuncionais unidadeFuncionalDispDoseInt) {
		this.unidadeFuncionalDispDoseInt = unidadeFuncionalDispDoseInt;
	}

	//@Column(name = "UNF_SEQ_DISP_DOSE_FRAC", nullable = false, precision = 4, scale = 0)
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ_DISP_DOSE_FRAC", referencedColumnName = "SEQ")
	public AghUnidadesFuncionais getUnidadeFuncionalDispDoseFrac() {
		return this.unidadeFuncionalDispDoseFrac;
	}

	public void setUnidadeFuncionalDispDoseFrac(AghUnidadesFuncionais unidadeFuncionalDispDoseFrac) {
		this.unidadeFuncionalDispDoseFrac = unidadeFuncionalDispDoseFrac;
	}

	//@Column(name = "UNF_SEQ_DISP_ALTERNATIVA", nullable = false, precision = 4, scale = 0)
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ_DISP_ALTERNATIVA", referencedColumnName = "SEQ")
	public AghUnidadesFuncionais getUnidadeFuncionalDispAlternativa() {
		return this.unidadeFuncionalDispAlternativa;
	}

	public void setUnidadeFuncionalDispAlternativa(AghUnidadesFuncionais unidadeFuncionalDispAlternativa) {
		this.unidadeFuncionalDispAlternativa = unidadeFuncionalDispAlternativa;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	//@Column(name = "UNF_SEQ_DISP_USO_DOMICILIAR", precision = 4, scale = 0)
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ_DISP_USO_DOMICILIAR", referencedColumnName = "SEQ")
	public AghUnidadesFuncionais getUnidadeFuncionalDispUsoDomiciliar() {
		return this.unidadeFuncionalDispUsoDomiciliar;
	}

	public void setUnidadeFuncionalDispUsoDomiciliar(AghUnidadesFuncionais unidadeFuncionalDispUsoDomiciliar) {
		this.unidadeFuncionalDispUsoDomiciliar = unidadeFuncionalDispUsoDomiciliar;
	}
	
	//@Column(name = "MED_MAT_CODIGO", nullable = false, precision = 6, scale = 0, insertable=false, updatable=false)
	@ManyToOne
	@JoinColumn(name = "MED_MAT_CODIGO", insertable = false, updatable = false)
	public AfaMedicamento getMedicamento() {
		return this.medicamento;
	}

	public void setMedicamento(AfaMedicamento medicamento) {
		this.medicamento = medicamento;
	}
	
	//@Column(name = "UNF_SEQ", nullable = false, precision = 4, scale = 0, insertable=false, updatable=false)
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ", referencedColumnName = "SEQ", insertable=false, updatable=false)
	public AghUnidadesFuncionais getUnidadeFuncional() {
		return this.unidadeFuncional;
	}

	public void setUnidadeFuncional(AghUnidadesFuncionais unidadeFuncional) {
		this.unidadeFuncional = unidadeFuncional;
	}
	
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}
	
	public enum Fields {

		ID("id"),
		SERVIDOR("servidor"),
		UNF_SEQ_DISP_DOSE_INT("unidadeFuncionalDispDoseInt"),
		UNF_SEQ_DISP_DOSE_FRAC("unidadeFuncionalDispDoseFrac"),
		UNF_SEQ_DISP_ALTERNATIVA("unidadeFuncionalDispAlternativa"),
		UNF_SEQ_DISP_USO_DOMICILIAR("unidadeFuncionalDispUsoDomiciliar"),
		CRIADO_EM("criadoEm"),
		ID_UNF_SEQ("id.unfSeq"),
		ID_MED_MAT_CODIGO("id.medMatCodigo"),
		UNIDADE_FUNCIONAL("unidadeFuncional");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}	

	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AfaLocalDispensacaoMdtos)) {
			return false;
		}
		AfaLocalDispensacaoMdtos other = (AfaLocalDispensacaoMdtos) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}
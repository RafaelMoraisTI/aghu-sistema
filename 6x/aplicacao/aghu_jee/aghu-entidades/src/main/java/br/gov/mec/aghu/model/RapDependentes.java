package br.gov.mec.aghu.model;

// Generated 08/02/2010 17:25:25 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.annotations.Parameter;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioGrauParentesco;
import br.gov.mec.aghu.dominio.DominioSexoDependente;
import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * RapDependentes generated by hbm2java
 */

@Entity
@Table(name = "RAP_DEPENDENTES", schema = "AGH")
public class RapDependentes extends BaseEntityId<RapDependentesId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 651815322471710192L;
	private RapDependentesId id;
	private String nome;
	private Date dtNascimento;
	//private String sexo;
	//private Boolean grauParentesco;
	private DominioSexoDependente sexo;
	private DominioGrauParentesco grauParentesco;
	private Integer pacProntuario;
	private AipPacientes paciente;
	private DominioSituacao indSituacao;
	private RapPessoasFisicas pessoaFisica;
	
	private Integer version;

	public RapDependentes() {
	}

	public RapDependentes(RapDependentesId id, String nome, Date dtNascimento,
			DominioSexoDependente sexo, DominioGrauParentesco grauParentesco) {
		this.id = id;
		this.nome = nome;
		this.dtNascimento = dtNascimento;
		this.sexo = sexo;
		this.grauParentesco = grauParentesco;
	}

	public RapDependentes(RapDependentesId id, String nome, Date dtNascimento,
		   DominioSexoDependente sexo, DominioGrauParentesco grauParentesco, Integer pacProntuario,
			AipPacientes paciente) {
		this.id = id;
		this.nome = nome;
		this.dtNascimento = dtNascimento;
		this.sexo = sexo;
		this.grauParentesco = grauParentesco;
		this.pacProntuario = pacProntuario;
		this.paciente = paciente;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "pesCodigo", column = @Column(name = "PES_CODIGO", nullable = false, precision = 9, scale = 0)),
			@AttributeOverride(name = "codigo", column = @Column(name = "CODIGO", nullable = false, precision = 7, scale = 0)) })
	public RapDependentesId getId() {
		return this.id;
	}

	public void setId(RapDependentesId id) {
		this.id = id;
	}

	@Column(name = "NOME", nullable = false, length = 50)
	@Length(max = 50)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		if (nome != null) {
		this.nome = nome.toUpperCase();
		}
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DT_NASCIMENTO", nullable = false, length = 7)
	public Date getDtNascimento() {
		return this.dtNascimento;
	}

	public void setDtNascimento(Date dtNascimento) {
		this.dtNascimento = dtNascimento;
	}

	@Column(name = "SEXO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSexoDependente getSexo() {
		return this.sexo;
	}

	public void setSexo(DominioSexoDependente sexo) {
		this.sexo = sexo;
	}

	@Column(name = "GRAU_PARENTESCO", nullable = false, precision = 1, scale = 0)
	@org.hibernate.annotations.Type(parameters = { @Parameter(name = "enumClassName", value = "br.gov.mec.aghu.dominio.DominioGrauParentesco") }, type = "br.gov.mec.aghu.core.model.jpa.DominioUserType")
	public DominioGrauParentesco getGrauParentesco() {
		return grauParentesco;
	}

	public void setGrauParentesco(DominioGrauParentesco grauParentesco) {
		this.grauParentesco = grauParentesco;
	}	
	
	
	@Column(name = "PAC_PRONTUARIO", precision = 8, scale = 0)
	public Integer getPacProntuario() {
		return this.pacProntuario;
	}

	public void setPacProntuario(Integer pacProntuario) {
		this.pacProntuario = pacProntuario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO", unique = true)
	public AipPacientes getPaciente() {
		return this.paciente;
	}

	public void setPaciente(AipPacientes paciente) {
		this.paciente = paciente;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PES_CODIGO", nullable = false, insertable = false, updatable = false)
	public RapPessoasFisicas getPessoaFisica() {
		return pessoaFisica;
	}

	public void setPessoaFisica(RapPessoasFisicas rapPessoaFisica) {
		this.pessoaFisica = rapPessoaFisica;
	}
	
	@Column(name = "IND_SITUACAO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}
	
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}		

	public enum Fields {
		PESSOA_FISICA("pessoaFisica"),
		PACIENTE("paciente"),
		PAC_CODIGO("paciente.codigo"),
		PES_CODIGO("id.pesCodigo"),
		CODIGO("id.codigo"),
		SITUACAO("indSituacao"),
		PARENTESCO("grauParentesco"),
		DT_NASCIMENTO("dtNascimento"),
		PAC_PRONTUARIO("pacProntuario");


		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof RapDependentes)) {
			return false;
		}
		RapDependentes other = (RapDependentes) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

// Generated 15/03/2011 13:46:58 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * FatPendenciasContaHosp generated by hbm2java
 */
@Entity
@Table(name = "FAT_PENDENCIAS_CONTA_HOSP", schema = "AGH")
public class FatPendenciaContaHosp extends BaseEntityId<FatPendenciaContaHospId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4568727953080793815L;
	private FatPendenciaContaHospId id;
	private FatMotivoPendencia fatMotivoPendencia;
	private FatContasHospitalares contaHospitalar;
	private Short unfSeq;
	private DominioSituacao indSituacao;
	private Date criadoEm;
	private Integer serMatricula;
	private Short serVinCodigo;
	private Date alteradoEm;
	private Integer serMatriculaAlterado;
	private Short serVinCodigoAlterado;
	private AghUnidadesFuncionais unidadeFuncional;
	private Integer version;
	
	public FatPendenciaContaHosp() {
	}

	public FatPendenciaContaHosp(FatPendenciaContaHospId id,
			FatMotivoPendencia fatMotivoPendencia, FatContasHospitalares contaHospitalar, DominioSituacao indSituacao,
			Date criadoEm) {
		this.id = id;
		this.fatMotivoPendencia = fatMotivoPendencia;
		this.contaHospitalar = contaHospitalar;
		this.indSituacao = indSituacao;
		this.criadoEm = criadoEm;
	}

	public FatPendenciaContaHosp(FatPendenciaContaHospId id,
			FatMotivoPendencia fatMotivoPendencia, FatContasHospitalares contaHospitalar, Short unfSeq,
			DominioSituacao indSituacao, Date criadoEm, Integer serMatricula,
			Short serVinCodigo, Date alteradoEm, Integer serMatriculaAlterado,
			Short serVinCodigoAlterado) {
		this.id = id;
		this.fatMotivoPendencia = fatMotivoPendencia;
		this.contaHospitalar = contaHospitalar;
		this.unfSeq = unfSeq;
		this.indSituacao = indSituacao;
		this.criadoEm = criadoEm;
		this.serMatricula = serMatricula;
		this.serVinCodigo = serVinCodigo;
		this.alteradoEm = alteradoEm;
		this.serMatriculaAlterado = serMatriculaAlterado;
		this.serVinCodigoAlterado = serVinCodigoAlterado;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "cthSeq", column = @Column(name = "CTH_SEQ", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false, precision = 4, scale = 0)) })
	public FatPendenciaContaHospId getId() {
		return this.id;
	}

	public void setId(FatPendenciaContaHospId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FPE_SEQ", nullable = false)
	public FatMotivoPendencia getFatMotivoPendencia() {
		return this.fatMotivoPendencia;
	}

	public void setFatMotivoPendencia(FatMotivoPendencia fatMotivoPendencia) {
		this.fatMotivoPendencia = fatMotivoPendencia;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CTH_SEQ", nullable = false, insertable = false, updatable = false)
	public FatContasHospitalares getContaHospitalar() {
		return contaHospitalar;
	}

	public void setContaHospitalar(FatContasHospitalares contaHospitalar) {
		this.contaHospitalar = contaHospitalar;
	}

	@Column(name = "UNF_SEQ", precision = 4, scale = 0)
	public Short getUnfSeq() {
		return this.unfSeq;
	}

	public void setUnfSeq(Short unfSeq) {
		this.unfSeq = unfSeq;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "SER_MATRICULA", precision = 7, scale = 0)
	public Integer getSerMatricula() {
		return this.serMatricula;
	}

	public void setSerMatricula(Integer serMatricula) {
		this.serMatricula = serMatricula;
	}

	@Column(name = "SER_VIN_CODIGO", precision = 3, scale = 0)
	public Short getSerVinCodigo() {
		return this.serVinCodigo;
	}

	public void setSerVinCodigo(Short serVinCodigo) {
		this.serVinCodigo = serVinCodigo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 7)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@Column(name = "SER_MATRICULA_ALTERADO", precision = 7, scale = 0)
	public Integer getSerMatriculaAlterado() {
		return this.serMatriculaAlterado;
	}

	public void setSerMatriculaAlterado(Integer serMatriculaAlterado) {
		this.serMatriculaAlterado = serMatriculaAlterado;
	}

	@Column(name = "SER_VIN_CODIGO_ALTERADO", precision = 3, scale = 0)
	public Short getSerVinCodigoAlterado() {
		return this.serVinCodigoAlterado;
	}

	public void setSerVinCodigoAlterado(Short serVinCodigoAlterado) {
		this.serVinCodigoAlterado = serVinCodigoAlterado;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		FatPendenciaContaHosp other = (FatPendenciaContaHosp) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}
	
	public enum Fields {
		ID("id"),
		IND_SITUACAO("indSituacao"),
		CONTA_HOSPITALAR("contaHospitalar"),
		CTH_SEQ("id.cthSeq"),
		SEQP("id.seqp"),
		FAT_MOTIVO_PENDENCIA("fatMotivoPendencia"),
		UNIDADE_FUNCIONAL("unidadeFuncional"),
		;
		
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ", nullable = false, insertable = false, updatable = false)
	public AghUnidadesFuncionais getUnidadeFuncional() {
		return unidadeFuncional;
	}

	public void setUnidadeFuncional(AghUnidadesFuncionais unidadeFuncional) {
		this.unidadeFuncional = unidadeFuncional;
	}

}

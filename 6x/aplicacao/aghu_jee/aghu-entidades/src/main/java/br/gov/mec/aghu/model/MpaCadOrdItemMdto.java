package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MpaCadOrdItemMdto generated by hbm2java
 */
@Entity
@Table(name = "MPA_CAD_ORD_ITEM_MDTOS", schema = "AGH")
public class MpaCadOrdItemMdto extends BaseEntityId<MpaCadOrdItemMdtoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 3459728436220977572L;
	private MpaCadOrdItemMdtoId id;
	private Integer version;
	private RapServidores rapServidores;
	private MpaCadOrdMdto mpaCadOrdMdto;
	private AfaMedicamento afaMedicamento;
	private AfaFormaDosagem afaFormaDosagem;
	private Date criadoEm;
	private Double dose;
	private Set<MpaUsoOrdItemMdto> mpaUsoOrdItemMdtoes = new HashSet<MpaUsoOrdItemMdto>(0);
	private Set<MpaParamCalculoDose> mpaParamCalculoDosees = new HashSet<MpaParamCalculoDose>(0);
	
	// FIXME Implementar este relacionamento
//	private Set<MptItemPrescricaoMedicamento> mptItemPrescricaoMedicamentoes = new HashSet<MptItemPrescricaoMedicamento>(0);

	public MpaCadOrdItemMdto() {
	}

	public MpaCadOrdItemMdto(MpaCadOrdItemMdtoId id, RapServidores rapServidores, MpaCadOrdMdto mpaCadOrdMdto,
			AfaMedicamento afaMedicamento, Date criadoEm) {
		this.id = id;
		this.rapServidores = rapServidores;
		this.mpaCadOrdMdto = mpaCadOrdMdto;
		this.afaMedicamento = afaMedicamento;
		this.criadoEm = criadoEm;
	}

	public MpaCadOrdItemMdto(MpaCadOrdItemMdtoId id, RapServidores rapServidores, MpaCadOrdMdto mpaCadOrdMdto,
			AfaMedicamento afaMedicamento, AfaFormaDosagem afaFormaDosagem, Date criadoEm, Double dose,
			Set<MpaUsoOrdItemMdto> mpaUsoOrdItemMdtoes, Set<MpaParamCalculoDose> mpaParamCalculoDosees
//			,Set<MptItemPrescricaoMedicamento> mptItemPrescricaoMedicamentoes
			) {
		this.id = id;
		this.rapServidores = rapServidores;
		this.mpaCadOrdMdto = mpaCadOrdMdto;
		this.afaMedicamento = afaMedicamento;
		this.afaFormaDosagem = afaFormaDosagem;
		this.criadoEm = criadoEm;
		this.dose = dose;
		this.mpaUsoOrdItemMdtoes = mpaUsoOrdItemMdtoes;
		this.mpaParamCalculoDosees = mpaParamCalculoDosees;
//		this.mptItemPrescricaoMedicamentoes = mptItemPrescricaoMedicamentoes;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "comSeq", column = @Column(name = "COM_SEQ", nullable = false)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false)) })
	public MpaCadOrdItemMdtoId getId() {
		return this.id;
	}

	public void setId(MpaCadOrdItemMdtoId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "COM_SEQ", nullable = false, insertable = false, updatable = false)
	public MpaCadOrdMdto getMpaCadOrdMdto() {
		return this.mpaCadOrdMdto;
	}

	public void setMpaCadOrdMdto(MpaCadOrdMdto mpaCadOrdMdto) {
		this.mpaCadOrdMdto = mpaCadOrdMdto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MED_MAT_CODIGO", nullable = false)
	public AfaMedicamento getAfaMedicamento() {
		return this.afaMedicamento;
	}

	public void setAfaMedicamento(AfaMedicamento afaMedicamento) {
		this.afaMedicamento = afaMedicamento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FDS_SEQ")
	public AfaFormaDosagem getAfaFormaDosagem() {
		return this.afaFormaDosagem;
	}

	public void setAfaFormaDosagem(AfaFormaDosagem afaFormaDosagem) {
		this.afaFormaDosagem = afaFormaDosagem;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "DOSE", precision = 17, scale = 17)
	public Double getDose() {
		return this.dose;
	}

	public void setDose(Double dose) {
		this.dose = dose;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mpaCadOrdItemMdto")
	public Set<MpaUsoOrdItemMdto> getMpaUsoOrdItemMdtoes() {
		return this.mpaUsoOrdItemMdtoes;
	}

	public void setMpaUsoOrdItemMdtoes(Set<MpaUsoOrdItemMdto> mpaUsoOrdItemMdtoes) {
		this.mpaUsoOrdItemMdtoes = mpaUsoOrdItemMdtoes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mpaCadOrdItemMdto")
	public Set<MpaParamCalculoDose> getMpaParamCalculoDosees() {
		return this.mpaParamCalculoDosees;
	}

	public void setMpaParamCalculoDosees(Set<MpaParamCalculoDose> mpaParamCalculoDosees) {
		this.mpaParamCalculoDosees = mpaParamCalculoDosees;
	}

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mpaCadOrdItemMdto")
//	public Set<MptItemPrescricaoMedicamento> getMptItemPrescricaoMedicamentoes() {
//		return this.mptItemPrescricaoMedicamentoes;
//	}
//
//	public void setMptItemPrescricaoMedicamentoes(Set<MptItemPrescricaoMedicamento> mptItemPrescricaoMedicamentoes) {
//		this.mptItemPrescricaoMedicamentoes = mptItemPrescricaoMedicamentoes;
//	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		RAP_SERVIDORES("rapServidores"),
		MPA_CAD_ORD_MDTOS("mpaCadOrdMdto"),
		AFA_MEDICAMENTO("afaMedicamento"),
		AFA_FORMA_DOSAGEM("afaFormaDosagem"),
		CRIADO_EM("criadoEm"),
		DOSE("dose"),
		MPA_USO_ORD_ITEM_MDTOES("mpaUsoOrdItemMdtoes"),
		MPA_PARAM_CALCULO_DOSEES("mpaParamCalculoDosees"),
//		MPT_ITEM_PRESCRICAO_MEDICAMENTOES("mptItemPrescricaoMedicamentoes")
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MpaCadOrdItemMdto)) {
			return false;
		}
		MpaCadOrdItemMdto other = (MpaCadOrdItemMdto) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

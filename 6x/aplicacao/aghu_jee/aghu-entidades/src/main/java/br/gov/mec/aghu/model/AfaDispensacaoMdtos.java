package br.gov.mec.aghu.model;

// Generated 01/12/2010 16:36:27 by Hibernate Tools 3.2.5.Beta

import java.math.BigDecimal;
import java.util.Date;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;


import br.gov.mec.aghu.dominio.DominioCtrlDispensario;
import br.gov.mec.aghu.dominio.DominioSituacaoDispensacaoMdto;
import br.gov.mec.aghu.dominio.DominioSituacaoItemPrescritoDispensacaoMdto;

/**
 * AfaDispensacaoMdtos generated by hbm2java
 */
@Entity
@Table(name = "AFA_DISPENSACAO_MDTOS", schema = "AGH")
@Inheritance(strategy=InheritanceType.TABLE_PER_CLASS)
@SequenceGenerator(name="afaDsmSq1", sequenceName="AGH.AFA_DSM_SQ1", allocationSize = 1)
public class AfaDispensacaoMdtos extends AfaDispensacaoMdtosPai implements java.io.Serializable {

	private static final long serialVersionUID = 5590670832612269663L;
	
	//transient
	private Boolean saldoInsuficiente;
	private Boolean permiteDispensacaoSemEtiqueta;
	
	public AfaDispensacaoMdtos() {
		super();
	}
	
	public AfaDispensacaoMdtos(Long seq, AfaMedicamento medicamento, Date criadoEm,
			BigDecimal qtdeDispensada, DominioSituacaoDispensacaoMdto indSituacao, 
			AghUnidadesFuncionais unidadeFuncional, /*int atdSeq*/ AghAtendimentos atendimento) {
		super(seq, medicamento, criadoEm, qtdeDispensada, indSituacao, unidadeFuncional, atendimento);
	}

	@SuppressWarnings({"PMD.ExcessiveParameterList"})
	public AfaDispensacaoMdtos(Long seq, MpmPrescricaoMedica prescricaoMedica, Integer pmeSeq,
			MpmItemPrescricaoMdto itemPrescricaoMdto, AfaMedicamento medicamento, 
			RapServidores servidor,
			RapServidores servidorEntregue, Date criadoEm,
			BigDecimal qtdeDispensada, DominioSituacaoDispensacaoMdto indSituacao, 
			AfaTipoOcorDispensacao tipoOcorrenciaDispensacao,
			AghUnidadesFuncionais unidadeFuncional, Date dthrEntrega, BigDecimal qtdeSolicitada,
			Date dthrDispensacao, Date dthrConferencia,
			RapServidores servidorConferida,
			AghUnidadesFuncionais unidadeFuncionalSolicitante, DominioSituacaoItemPrescritoDispensacaoMdto indSitItemPrescrito,
			Integer dsmPmeAtdSeq, Integer dsmPmeSeq, Integer dsmImePmdAtdSeq,
			Integer dsmImePmdSeq, Integer dsmImeMedMatCodigo, Short dsmImeSeqp,
			Long dsmSeq, String nomeEstacaoDisp, BigDecimal qtdeEstornada, Date dthrEstorno, 
			RapServidores servidorEstornado, Short todSeqEstornado,
			Integer cpoItoPtoSeq, Short cpoItoSeqp, Short cpoSeqp,
			Integer imoPmoPteAtdSeq, Integer imoPmoPteSeq, Integer imoPmoSeq,
			Short imoSeqp, AghAtendimentos atendimento, Date dthrTriado,
			RapServidores servidorTriadoPor, Set<AfaDispMdtoCbSps> afaDispMdtoCbSpss, 
			DominioCtrlDispensario indCtrlDispensario, Boolean indSitEspecial) {
		
		super(seq, prescricaoMedica, pmeSeq, itemPrescricaoMdto, medicamento, servidor,
				servidorEntregue, criadoEm, qtdeDispensada, indSituacao, tipoOcorrenciaDispensacao, 
				unidadeFuncional, dthrEntrega, qtdeSolicitada, dthrDispensacao, dthrConferencia, servidorConferida, 
				unidadeFuncionalSolicitante, indSitItemPrescrito, dsmPmeAtdSeq, dsmPmeSeq, dsmImePmdAtdSeq, dsmImePmdSeq, 
				dsmImeMedMatCodigo, dsmImeSeqp, dsmSeq, nomeEstacaoDisp, qtdeEstornada, dthrEstorno, servidorEstornado, 
				todSeqEstornado, cpoItoPtoSeq, cpoItoSeqp, cpoSeqp, imoPmoPteAtdSeq, imoPmoPteSeq, imoPmoSeq, imoSeqp, 
				atendimento, dthrTriado, servidorTriadoPor, afaDispMdtoCbSpss, indCtrlDispensario, indSitEspecial
			  );
	}
	
	@Id
	@Column(name = "SEQ", unique = true, nullable = false, precision = 14)
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "afaDsmSq1")
	@Override
	public Long getSeq() {
		return super.getSeq();
	}

	@Transient
	public Boolean getSaldoInsuficiente() {
		return saldoInsuficiente;
	}

	public void setSaldoInsuficiente(Boolean saldoInsuficiente) {
		this.saldoInsuficiente = saldoInsuficiente;
	}

	public enum Fields {
		SEQ ("seq"),
		ITEM_PRESCRICAO_MEDICAMENTO("itemPrescricaoMdto"),
		QTDE_SOLICITADA("qtdeSolicitada"),
		MEDICAMENTO("medicamento"),
		MED_MAT_CODIGO("medicamento.matCodigo"),
		QTDE_DISPENSADA("qtdeDispensada"),
		CRIADO_EM("criadoEm"),
		PRESCRICAO_MEDICA("prescricaoMedica"),
		IND_SITUACAO("indSituacao"),
		IND_SIT_ITEM_PRESCRITO("indSitItemPrescrito"),
		TIPO_OCORRENCIA_DISPENSACAO("tipoOcorrenciaDispensacao"),
		TIPO_OCORRENCIA_DISPENSACAO_SEQ("tipoOcorrenciaDispensacao.seq"),
		SERVIDOR("servidor"),
		SERVIDOR_ENTREGUE("servidorEntregue"),
		SERVIDOR_CONFERIDA("servidorConferida"),
		SERVIDOR_ESTORNADO("servidorEstornado"),
		SERVIDOR_TRIADO_POR("servidorTriadoPor"),
		FARMACIA("unidadeFuncional"),
		UNID_SOLICITANTE("unidadeFuncionalSolicitante"),	
		UNID_SOLICITANTE_SEQ("unidadeFuncionalSolicitante.seq"),
		DSM_PME_ATQ_SEQ("dsmPmeAtdSeq"),
		FARMACIA_SEQ("unidadeFuncional.seq"),
		PRESCRICAO_MEDICA_SEQ("prescricaoMedica.id.seq"),
		PRESCRICAO_MEDICA_ATD_SEQ("prescricaoMedica.id.atdSeq"),
		IMO_PMO_PTE_ATD_SEQ("imoPmoPteAtdSeq"),
		IMO_PMO_PTE_SEQ("imoPmoPteSeq"),
		ATENDIMENTO ("atendimento"),
		DTHR_DISPENSACAO("dthrDispensacao"),
		DTHR_TRIADO("dthrTriado"),
		DTHR_TICKET("dthrTicket"),
		QTDE_ESTORNADA("qtdeEstornada"),		
		DATA_HORA_ENTREGA("dthrEntrega"),
		DTHR_ESTORNO ("dthrEstorno"),
		PRESCRICAO_MEDICA_DTHRINICIO("prescricaoMedica.dthrInicio"),
		ITEM_PRESCRICAO_MEDICAMENTO_PMD_ATD_SEQ("itemPrescricaoMdto.id.pmdAtdSeq"),
		ITEM_PRESCRICAO_MEDICAMENTO_PMD_SEQ("itemPrescricaoMdto.id.pmdSeq"),
		ITEM_PRESCRICAO_MEDICAMENTO_MED_MAT_CODIGO("itemPrescricaoMdto.id.medMatCodigo"),
		ITEM_PRESCRICAO_MEDICAMENTO_SEQP("itemPrescricaoMdto.id.seqp"),
		DSM_SEQ("dsmSeq"),
		ATENDIMENTO_SEQ ("atendimento.seq"),
		PRESCRICAO_MEDICA_DT_REFERENCIA("prescricaoMedica.dtReferencia"),
		TIPO_OCORRENCIA_DISPENSACAO_ESTORNADO("tipoOcorrenciaDispensacaoEstornado"),
		NOME_ESTACAO_DISP("nomeEstacaoDisp"),
		IND_PM_NAO_ELETRONICA("indPmNaoEletronica"),
		AFA_PRESCRICAO_MEDICAMENTO("prescricaoMedicamento"),
		AFA_PRESCRICAO_MEDICAMENTO_SEQ("prescricaoMedicamento.seq"),
		AFA_DISP_MDTO_CB_SPS("afaDispMdtoCbSpss");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AfaDispensacaoMdtos)) {
			return false;
		}
		AfaDispensacaoMdtos other = (AfaDispensacaoMdtos) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####
	
	@Transient
	public Boolean getPermiteDispensacaoSemEtiqueta() {
		return permiteDispensacaoSemEtiqueta;
	}

	public void setPermiteDispensacaoSemEtiqueta(
			Boolean permiteDispensacaoSemEtiqueta) {
		this.permiteDispensacaoSemEtiqueta = permiteDispensacaoSemEtiqueta;
	}
}
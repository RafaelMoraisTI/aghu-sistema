package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * ScoCaracteristicaFornecedor generated by hbm2java
 */
@Entity
@Table(name = "SCO_CARACTERISTICAS_FORNECEDOR", schema = "AGH")
public class ScoCaracteristicaFornecedor extends BaseEntityId<ScoCaracteristicaFornecedorId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5484115585979296563L;
	private ScoCaracteristicaFornecedorId id;
	private Integer version;
	private ScoFornecedor scoFornecedor;
	private ScoCaracteristica scoCaracteristica;
	private RapServidores rapServidores;
	private Double valorNumerico;
	private String valorChar;
	private Date valorData;
	private Date criadoEm;
	private Date alteradoEm;
	private String tipoTributo;
	private String imposto;
	private Float aliquota;
	private Short gmtCodigo;
	private Long cn5Numero;
	private Integer matCodigo;
	private Integer srvCodigo;
	private Date dtValidadeCaract;

	public ScoCaracteristicaFornecedor() {
	}

	public ScoCaracteristicaFornecedor(ScoCaracteristicaFornecedorId id, ScoFornecedor scoFornecedor,
			ScoCaracteristica scoCaracteristica, RapServidores rapServidores, Date criadoEm, Date alteradoEm) {
		this.id = id;
		this.scoFornecedor = scoFornecedor;
		this.scoCaracteristica = scoCaracteristica;
		this.rapServidores = rapServidores;
		this.criadoEm = criadoEm;
		this.alteradoEm = alteradoEm;
	}

	public ScoCaracteristicaFornecedor(ScoCaracteristicaFornecedorId id, ScoFornecedor scoFornecedor,
			ScoCaracteristica scoCaracteristica, RapServidores rapServidores, Double valorNumerico, String valorChar,
			Date valorData, Date criadoEm, Date alteradoEm, String tipoTributo, String imposto, Float aliquota, Short gmtCodigo,
			Long cn5Numero, Integer matCodigo, Integer srvCodigo, Date dtValidadeCaract) {
		this.id = id;
		this.scoFornecedor = scoFornecedor;
		this.scoCaracteristica = scoCaracteristica;
		this.rapServidores = rapServidores;
		this.valorNumerico = valorNumerico;
		this.valorChar = valorChar;
		this.valorData = valorData;
		this.criadoEm = criadoEm;
		this.alteradoEm = alteradoEm;
		this.tipoTributo = tipoTributo;
		this.imposto = imposto;
		this.aliquota = aliquota;
		this.gmtCodigo = gmtCodigo;
		this.cn5Numero = cn5Numero;
		this.matCodigo = matCodigo;
		this.srvCodigo = srvCodigo;
		this.dtValidadeCaract = dtValidadeCaract;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "crtCodigo", column = @Column(name = "CRT_CODIGO", nullable = false)),
			@AttributeOverride(name = "frnNumero", column = @Column(name = "FRN_NUMERO", nullable = false)) })
	public ScoCaracteristicaFornecedorId getId() {
		return this.id;
	}

	public void setId(ScoCaracteristicaFornecedorId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FRN_NUMERO", nullable = false, insertable = false, updatable = false)
	public ScoFornecedor getScoFornecedor() {
		return this.scoFornecedor;
	}

	public void setScoFornecedor(ScoFornecedor scoFornecedor) {
		this.scoFornecedor = scoFornecedor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CRT_CODIGO", nullable = false, insertable = false, updatable = false)
	public ScoCaracteristica getScoCaracteristica() {
		return this.scoCaracteristica;
	}

	public void setScoCaracteristica(ScoCaracteristica scoCaracteristica) {
		this.scoCaracteristica = scoCaracteristica;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@Column(name = "VALOR_NUMERICO", precision = 17, scale = 17)
	public Double getValorNumerico() {
		return this.valorNumerico;
	}

	public void setValorNumerico(Double valorNumerico) {
		this.valorNumerico = valorNumerico;
	}

	@Column(name = "VALOR_CHAR", length = 240)
	@Length(max = 240)
	public String getValorChar() {
		return this.valorChar;
	}

	public void setValorChar(String valorChar) {
		this.valorChar = valorChar;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "VALOR_DATA", length = 29)
	public Date getValorData() {
		return this.valorData;
	}

	public void setValorData(Date valorData) {
		this.valorData = valorData;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", nullable = false, length = 29)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@Column(name = "TIPO_TRIBUTO", length = 1)
	@Length(max = 1)
	public String getTipoTributo() {
		return this.tipoTributo;
	}

	public void setTipoTributo(String tipoTributo) {
		this.tipoTributo = tipoTributo;
	}

	@Column(name = "IMPOSTO", length = 10)
	@Length(max = 10)
	public String getImposto() {
		return this.imposto;
	}

	public void setImposto(String imposto) {
		this.imposto = imposto;
	}

	@Column(name = "ALIQUOTA", precision = 8, scale = 8)
	public Float getAliquota() {
		return this.aliquota;
	}

	public void setAliquota(Float aliquota) {
		this.aliquota = aliquota;
	}

	@Column(name = "GMT_CODIGO")
	public Short getGmtCodigo() {
		return this.gmtCodigo;
	}

	public void setGmtCodigo(Short gmtCodigo) {
		this.gmtCodigo = gmtCodigo;
	}

	@Column(name = "CN5_NUMERO")
	public Long getCn5Numero() {
		return this.cn5Numero;
	}

	public void setCn5Numero(Long cn5Numero) {
		this.cn5Numero = cn5Numero;
	}

	@Column(name = "MAT_CODIGO")
	public Integer getMatCodigo() {
		return this.matCodigo;
	}

	public void setMatCodigo(Integer matCodigo) {
		this.matCodigo = matCodigo;
	}

	@Column(name = "SRV_CODIGO")
	public Integer getSrvCodigo() {
		return this.srvCodigo;
	}

	public void setSrvCodigo(Integer srvCodigo) {
		this.srvCodigo = srvCodigo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_VALIDADE_CARACT", length = 29)
	public Date getDtValidadeCaract() {
		return this.dtValidadeCaract;
	}

	public void setDtValidadeCaract(Date dtValidadeCaract) {
		this.dtValidadeCaract = dtValidadeCaract;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		SCO_FORNECEDOR("scoFornecedor"),
		SCO_CARACTERISTICA("scoCaracteristica"),
		RAP_SERVIDORES("rapServidores"),
		VALOR_NUMERICO("valorNumerico"),
		VALOR_CHAR("valorChar"),
		VALOR_DATA("valorData"),
		CRIADO_EM("criadoEm"),
		ALTERADO_EM("alteradoEm"),
		TIPO_TRIBUTO("tipoTributo"),
		IMPOSTO("imposto"),
		ALIQUOTA("aliquota"),
		GMT_CODIGO("gmtCodigo"),
		CN5_NUMERO("cn5Numero"),
		MAT_CODIGO("matCodigo"),
		SRV_CODIGO("srvCodigo"),
		DT_VALIDADE_CARACT("dtValidadeCaract");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof ScoCaracteristicaFornecedor)) {
			return false;
		}
		ScoCaracteristicaFornecedor other = (ScoCaracteristicaFornecedor) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

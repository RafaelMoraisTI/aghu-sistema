package br.gov.mec.aghu.model;

// Generated 15/03/2011 13:46:58 by Hibernate Tools 3.2.5.Beta

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Version;


import br.gov.mec.aghu.dominio.DominioTipoQuantidadeProced;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * FatAtosObrigatoriosProced generated by hbm2java
 */
@Entity
@Table(name = "FAT_ATOS_OBRIGATORIOS_PROCED", schema = "AGH")
public class FatAtoObrigatorioProced extends BaseEntityId<FatAtoObrigatorioProcedId> implements java.io.Serializable {
	private static final long serialVersionUID = 6768357371493576078L;
	
	private FatAtoObrigatorioProcedId id;
	private FatTiposVinculo fatTiposVinculo;
	private FatTipoAto fatTipoAto;
	private Short quantidade;
	private DominioTipoQuantidadeProced tipoQuantidade;
	private FatItensProcedHospitalar fatItemProcedimentoHospitalarRealizado;
	private Integer version;
	
	public FatAtoObrigatorioProced() {
	}

	public FatAtoObrigatorioProced(FatAtoObrigatorioProcedId id,
			FatTiposVinculo fatTiposVinculo, FatTipoAto fatTipoAto,
			Short quantidade, DominioTipoQuantidadeProced tipoQuantidade) {
		this.id = id;
		this.fatTiposVinculo = fatTiposVinculo;
		this.fatTipoAto = fatTipoAto;
		this.quantidade = quantidade;
		this.tipoQuantidade = tipoQuantidade;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "iphPhoSeq", column = @Column(name = "IPH_PHO_SEQ", nullable = false, precision = 4, scale = 0)),
			@AttributeOverride(name = "iphSeq", column = @Column(name = "IPH_SEQ", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "iphPhoSeqCobrado", column = @Column(name = "IPH_PHO_SEQ_COBRADO", nullable = false, precision = 4, scale = 0)),
			@AttributeOverride(name = "iphSeqCobrado", column = @Column(name = "IPH_SEQ_COBRADO", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "tivSeq", column = @Column(name = "TIV_SEQ", nullable = false, precision = 5, scale = 0)),
			@AttributeOverride(name = "taoSeq", column = @Column(name = "TAO_SEQ", nullable = false, precision = 2, scale = 0)) })
	public FatAtoObrigatorioProcedId getId() {
		return this.id;
	}

	public void setId(FatAtoObrigatorioProcedId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TIV_SEQ", nullable = false, insertable = false, updatable = false)
	public FatTiposVinculo getFatTiposVinculo() {
		return this.fatTiposVinculo;
	}

	public void setFatTiposVinculo(FatTiposVinculo fatTiposVinculo) {
		this.fatTiposVinculo = fatTiposVinculo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TAO_SEQ", nullable = false, insertable = false, updatable = false)
	public FatTipoAto getFatTipoAto() {
		return this.fatTipoAto;
	}

	public void setFatTipoAto(FatTipoAto fatTipoAto) {
		this.fatTipoAto = fatTipoAto;
	}

	@Column(name = "QUANTIDADE", nullable = false, precision = 3, scale = 0)
	public Short getQuantidade() {
		return this.quantidade;
	}

	public void setQuantidade(Short quantidade) {
		this.quantidade = quantidade;
	}

	@Column(name = "TIPO_QUANTIDADE", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioTipoQuantidadeProced getTipoQuantidade() {
		return this.tipoQuantidade;
	}

	public void setTipoQuantidade(DominioTipoQuantidadeProced tipoQuantidade) {
		this.tipoQuantidade = tipoQuantidade;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
		@JoinColumn(name = "IPH_SEQ", referencedColumnName = "SEQ", nullable = false, insertable=false, updatable=false),
		@JoinColumn(name = "IPH_PHO_SEQ", referencedColumnName = "PHO_SEQ", nullable = false, insertable=false, updatable=false)})
		public FatItensProcedHospitalar getFatItemProcedimentoHospitalarRealizado() {
		return fatItemProcedimentoHospitalarRealizado;
	}

	public void setFatItemProcedimentoHospitalarRealizado(
			final FatItensProcedHospitalar fatItemProcedimentoHospitalarRealizado) {
		this.fatItemProcedimentoHospitalarRealizado = fatItemProcedimentoHospitalarRealizado;
	}
	
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		FatAtoObrigatorioProced other = (FatAtoObrigatorioProced) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}

	public enum Fields {
		
		IPH_PHO_SEQ("id.iphPhoSeq"),
		IPH_SEQ("id.iphSeq"),
		IPH_PHO_SEQ_COBRADO("id.iphPhoSeqCobrado"),
		IPH_SEQ_COBRADO("id.iphSeqCobrado"),
		TIV_SEQ("id.tivSeq"),
		TAO_SEQ("id.taoSeq"),
		QUANTIDADE("quantidade"),
		TIPO_QUANTIDADE("tipoQuantidade")
		;
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

}

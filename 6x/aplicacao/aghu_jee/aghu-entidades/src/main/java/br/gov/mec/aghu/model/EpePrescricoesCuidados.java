package br.gov.mec.aghu.model;

// Generated 03/02/2011 17:19:32 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;


import org.apache.commons.lang3.StringUtils;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioIndPendentePrescricoesCuidados;
import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.exception.BusinessExceptionCode;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * EpePrescricoesCuidados generated by hbm2java
 */
@Entity
@Table(name = "EPE_PRESCRICOES_CUIDADOS", schema = "AGH")
public class EpePrescricoesCuidados extends BaseEntityId<EpePrescricoesCuidadosId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1885349382024298509L;
	private EpePrescricoesCuidadosId id;
	private EpePrescricoesCuidados prescricaoCuidado;
	private EpeCuidados cuidado;
	private MpmTipoFrequenciaAprazamento tipoFrequenciaAprazamento;
	private RapServidores servidor;
	private RapServidores servidorMovimentado;
	private DominioIndPendentePrescricoesCuidados pendente;
	private Date dthrInicio;
	private Date criadoEm;
	private Date dthrFim;
	private Short frequencia;
	private String descricao;
	private Date alteradoEm;
	private RapServidores servidorValida;
	private RapServidores servidorMvtoValida;
	private Date dthrValida;
	private Date dthrValidaMovimento;
	
	private EpePrescricaoEnfermagem prescricaoEnfermagem;
	
	private Set<EpePrescricoesCuidados> prescricoesCuidados = new HashSet<EpePrescricoesCuidados>(
			0);
	
	public EpePrescricoesCuidados() {
	}

	public EpePrescricoesCuidados(EpePrescricoesCuidadosId id,
			EpePrescricoesCuidados prescricaoCuidado,
			EpeCuidados cuidado,
			MpmTipoFrequenciaAprazamento tipoFrequenciaAprazamento,
			RapServidores servidor, RapServidores servidorMovimentado,
			DominioIndPendentePrescricoesCuidados pendente, Date dthrInicio,
			Date criadoEm, Date dthrFim, Short frequencia, String descricao,
			Date alteradoEm, RapServidores servidorValida,
			RapServidores servidorMvtoValida,
			Set<EpePrescricoesCuidados> prescricoesCuidados) {
		this.id = id;
		this.prescricaoCuidado = prescricaoCuidado;
		this.cuidado = cuidado;
		this.tipoFrequenciaAprazamento = tipoFrequenciaAprazamento;
		this.servidor = servidor;
		this.servidorMovimentado = servidorMovimentado;
		this.pendente = pendente;
		this.dthrInicio = dthrInicio;
		this.criadoEm = criadoEm;
		this.dthrFim = dthrFim;
		this.frequencia = frequencia;
		this.descricao = descricao;
		this.alteradoEm = alteradoEm;
		this.servidorValida = servidorValida;
		this.servidorMvtoValida = servidorMvtoValida;
		this.prescricoesCuidados = prescricoesCuidados;
	}
	
	public EpePrescricoesCuidados(EpePrescricoesCuidadosId id) {
		this.id = id;
	}
	
	private enum EpePrescricoesCuidadosExceptionCode implements BusinessExceptionCode {
		ERRO_AO_PERSISTIR_TIPO_FREQUENCIA_APRAZAMENTO
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "atdSeq", column = @Column(name = "ATD_SEQ", nullable = false, precision = 7, scale = 0)),
			@AttributeOverride(name = "seq", column = @Column(name = "SEQ", nullable = false, precision = 8, scale = 0)) })
	public EpePrescricoesCuidadosId getId() {
		return this.id;
	}

	public void setId(EpePrescricoesCuidadosId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "PRC_ATD_SEQ", referencedColumnName = "ATD_SEQ"),
			@JoinColumn(name = "PRC_SEQ", referencedColumnName = "SEQ") })
	public EpePrescricoesCuidados getPrescricaoCuidado() {
		return this.prescricaoCuidado;
	}

	public void setPrescricaoCuidado(
			EpePrescricoesCuidados prescricaoCuidado) {
		this.prescricaoCuidado = prescricaoCuidado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CUI_SEQ", nullable = false)
	public EpeCuidados getCuidado() {
		return this.cuidado;
	}

	public void setCuidado(EpeCuidados cuidado) {
		this.cuidado = cuidado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TFQ_SEQ", nullable = false)
	public MpmTipoFrequenciaAprazamento getTipoFrequenciaAprazamento() {
		return tipoFrequenciaAprazamento;
	}

	public void setTipoFrequenciaAprazamento(
			MpmTipoFrequenciaAprazamento tipoFrequenciaAprazamento) {
		this.tipoFrequenciaAprazamento = tipoFrequenciaAprazamento;
	}


	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA_MOVIMENTADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_MOVIMENTADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorMovimentado() {
		return this.servidorMovimentado;
	}

	public void setServidorMovimentado(RapServidores servidorMovimentado) {
		this.servidorMovimentado = servidorMovimentado;
	}
	
	@Column(name = "IND_PENDENTE", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioIndPendentePrescricoesCuidados getPendente() {
		return this.pendente;
	}

	public void setPendente(DominioIndPendentePrescricoesCuidados pendente) {
		this.pendente = pendente;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_INICIO", nullable = false, length = 7)
	public Date getDthrInicio() {
		return this.dthrInicio;
	}

	public void setDthrInicio(Date dthrInicio) {
		this.dthrInicio = dthrInicio;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_FIM", length = 7)
	public Date getDthrFim() {
		return this.dthrFim;
	}

	public void setDthrFim(Date dthrFim) {
		this.dthrFim = dthrFim;
	}

	@Column(name = "FREQUENCIA", precision = 3, scale = 0)
	public Short getFrequencia() {
		return this.frequencia;
	}

	public void setFrequencia(Short frequencia) {
		this.frequencia = frequencia;
	}

	@Column(name = "DESCRICAO", length = 240)
	@Length(max = 240)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 7)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA_VALIDA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_VALIDA", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorValida() {
		return this.servidorValida;
	}

	public void setServidorValida(RapServidores servidorValida) {
		this.servidorValida = servidorValida;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA_MVTO_VALIDA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_MVTO_VALIDA", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorMvtoValida() {
		return this.servidorMvtoValida;
	}

	public void setServidorMvtoValida(RapServidores servidorMvtoValida) {
		this.servidorMvtoValida = servidorMvtoValida;
	}
	

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "prescricaoCuidado")
	public Set<EpePrescricoesCuidados> getPrescricoesCuidados() {
		return this.prescricoesCuidados;
	}

	public void setPrescricoesCuidados(
			Set<EpePrescricoesCuidados> prescricoesCuidados) {
		this.prescricoesCuidados = prescricoesCuidados;
	}

	/**
	 * Evitar de usar a referência para a entidade de Atendimentos.
	 * Esta referência ainda foi mantida por questões do legado do 
	 * HC de Porto Alegre (HCPA). Ao invés de referenciar Atendimentos
	 * preterir referenciar a entidade de Prescrição de Enfermagem. 
	 * @return null
	 */
	@Deprecated
	@Transient
	public AghAtendimentos getAtendimento() {
		return null;
	}

	@Deprecated
	@Transient
	public void setAtendimento(AghAtendimentos atendimento) {
		atendimento = null;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "PEN_ATD_SEQ", referencedColumnName = "ATD_SEQ"),
			@JoinColumn(name = "PEN_SEQ", referencedColumnName = "SEQ") })
	public EpePrescricaoEnfermagem getPrescricaoEnfermagem() {
		return prescricaoEnfermagem;
	}

	public void setPrescricaoEnfermagem(EpePrescricaoEnfermagem prescricaoEnfermagem) {
		this.prescricaoEnfermagem = prescricaoEnfermagem;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_VALIDA")
	public Date getDthrValida() {
		return dthrValida;
	}

	public void setDthrValida(Date dthrValida) {
		this.dthrValida = dthrValida;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_VALIDA_MVTO")
	public Date getDthrValidaMovimento() {
		return dthrValidaMovimento;
	}

	public void setDthrValidaMovimento(Date dthrValidaMovimento) {
		this.dthrValidaMovimento = dthrValidaMovimento;
	}
	

	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void validarTipoFrequenciaAprazamento() {
		if (!((this.tipoFrequenciaAprazamento == null && this.frequencia == null ) || this.tipoFrequenciaAprazamento != null)) {
			throw new BaseRuntimeException(EpePrescricoesCuidadosExceptionCode.ERRO_AO_PERSISTIR_TIPO_FREQUENCIA_APRAZAMENTO);
		}
	}
	
	/**
	 * Descrição do cuidado formatada, seguindo o padrão:
	 * NOME DO CUIDADO - COMPLEMENTO, APRAZAMENTO;
	 */
	@Transient
	public String getDescricaoFormatada() {
		String descricaoFormatada = null;
		String descricaoTipoFreqAprazamentos = null;
		String descricaoPrescCuidado = this.getDescricao();
		
		StringBuffer descricaoCuidado = new StringBuffer(this.getCuidado().getDescricao());
		
		if (descricaoPrescCuidado != null) {
			descricaoCuidado.append(" - ").append(descricaoPrescCuidado);
		}		

		// Força carregamento de campo lazy ao acessar o getter
		MpmTipoFrequenciaAprazamento mpmTipoFreqAprazamentos = this.getTipoFrequenciaAprazamento();
		if (mpmTipoFreqAprazamentos.getSintaxe() != null && this.getFrequencia() != null) {
			descricaoTipoFreqAprazamentos = StringUtils.replace(
					mpmTipoFreqAprazamentos.getSintaxe(), "#", this.getFrequencia().toString());
		} else {
			descricaoTipoFreqAprazamentos = mpmTipoFreqAprazamentos.getDescricao();
		}

		descricaoFormatada = descricaoCuidado.append(", ").append(descricaoTipoFreqAprazamentos).append(';').toString();

		return descricaoFormatada.trim();
	}	
	
	public enum Fields {
		SEQ("id.seq"),
		ATD_SEQ("id.atdSeq"),
		DTHR_INICIO("dthrInicio"),
		DTHR_FIM("dthrFim"),
		PEN_ID("prescricaoEnfermagem.id"),
		PEN_SEQ("prescricaoEnfermagem.id.seq"),
		PEN_ATD_SEQ("prescricaoEnfermagem.id.atdSeq"),
		CRIADO_EM("criadoEm"),
		ALTERADO_EM("alteradoEm"),
		IND_PENDENTE("pendente"),
		PRESCRICAO_ENFERMAGEM("prescricaoEnfermagem"),
		CUI_SEQ("cuidado.seq"),
		CUIDADO("cuidado"),
		DESCRICAO("descricao"),
		DTHR_VALIDA_MVTO("dthrValidaMovimento"),
		PRESCRICAO_CUIDADO("prescricaoCuidado"),
		SERVIDOR_VALIDACAO("servidorValida"),
		PRESCRICAO_CUIDADO_SEQ("prescricaoCuidado.id.seq"),
		SERVIDOR_MOVIMENTO_VALIDACAO("servidorMvtoValida"),
		PRESCRICAO_CUIDADO_ATD_SEQ("prescricaoCuidado.id.atdSeq"),
		TFQ_SEQ("tipoFrequenciaAprazamento.seq"),
		FREQUENCIA("frequencia");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}

}

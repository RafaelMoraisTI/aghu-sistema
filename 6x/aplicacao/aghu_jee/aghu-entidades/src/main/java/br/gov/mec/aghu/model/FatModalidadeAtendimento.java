package br.gov.mec.aghu.model;

// Generated 15/03/2011 13:46:58 by Hibernate Tools 3.2.5.Beta

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntityCodigo;

/**
 * FatModalidadeAtendimentos generated by hbm2java
 */
@Entity
@Table(name = "FAT_MODALIDADE_ATENDIMENTOS", schema = "AGH")
public class FatModalidadeAtendimento extends BaseEntityCodigo<Short> implements java.io.Serializable {

	private static final long serialVersionUID = -5070603777093404722L;

	public enum Fields {
		CODIGO("codigo"),
		DESCRICAO("descricao"),
		SITUACAO("indSituacao"),
		;


		private String fields;

		private Fields(final String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	private Short codigo;
	private String descricao;
	private DominioSituacao indSituacao;
	private Set<FatProcedimentoModalidade> fatProcedimentoModalidades = new HashSet<FatProcedimentoModalidade>(
			0);
	private Integer version;

	public FatModalidadeAtendimento() {
	}

	public FatModalidadeAtendimento(final Short codigo, final String descricao) {
		this.codigo = codigo;
		this.descricao = descricao;
	}

	public FatModalidadeAtendimento(final Short codigo, final String descricao,
			final DominioSituacao indSituacao,
			final Set<FatProcedimentoModalidade> fatProcedimentoModalidades) {
		this.codigo = codigo;
		this.descricao = descricao;
		this.indSituacao = indSituacao;
		this.fatProcedimentoModalidades = fatProcedimentoModalidades;
	}

	@Id
	@Column(name = "CODIGO", unique = true, nullable = false, precision = 3, scale = 0)
	public Short getCodigo() {
		return this.codigo;
	}

	public void setCodigo(final Short codigo) {
		this.codigo = codigo;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 50)
	@Length(max = 50)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(final String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "IND_SITUACAO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(final DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fatModalidadeAtendimento")
	public Set<FatProcedimentoModalidade> getFatProcedimentoModalidades() {
		return this.fatProcedimentoModalidades;
	}

	public void setFatProcedimentoModalidades(
			final Set<FatProcedimentoModalidade> fatProcedimentoModalidades) {
		this.fatProcedimentoModalidades = fatProcedimentoModalidades;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((codigo == null) ? 0 : codigo.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		FatModalidadeAtendimento other = (FatModalidadeAtendimento) obj;
		if (codigo == null) {
			if (other.codigo != null) {
				return false;
			}
		} else if (!codigo.equals(other.codigo)) {
			return false;
		}
		return true;
	}

}

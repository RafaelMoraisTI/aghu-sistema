package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

import org.hibernate.validator.constraints.Email;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSimNao;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * ScoContatoFornecedor generated by hbm2java
 */
@Entity
@Table(name = "SCO_CONTATOS_FORNECEDOR", schema = "AGH")
@SuppressWarnings("PMD.AghuUsoIndevidoDaEnumDominioSimNaoEntity")
public class ScoContatoFornecedor extends BaseEntityId<ScoContatoFornecedorId> implements java.io.Serializable , Cloneable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8622382399457608205L;
	private ScoContatoFornecedorId id;
	private Integer version;
	private ScoFornecedor scoFornecedor;
	private String nome;
	private String funcao;
	private Long fone;
	private Short ddd;
	private String EMail;
	private String observacao;
	private Boolean indRecEmailAf;
	private DominioSimNao indEnvioEmailSupTec;
	private Boolean indRecEmailEdital;
	private Boolean indAtuContato;
	private Date dtAtuContato;
	private String EMailNf;
	private String indEnvioEmailFiscal;

	public ScoContatoFornecedor() {
	}

	public ScoContatoFornecedor(ScoContatoFornecedorId id, ScoFornecedor scoFornecedor, String nome, String funcao) {
		this.id = id;
		this.scoFornecedor = scoFornecedor;
		this.nome = nome;
		this.funcao = funcao;
	}

	public ScoContatoFornecedor(ScoContatoFornecedorId id, ScoFornecedor scoFornecedor, String nome, String funcao, Long fone,
			Short ddd, String EMail, String observacao, Boolean indRecEmailAf, Boolean indRecEmailEdital, Boolean indAtuContato,
			Date dtAtuContato, String EMailNf, String indEnvioEmailFiscal) {
		this.id = id;
		this.scoFornecedor = scoFornecedor;
		this.nome = nome;
		this.funcao = funcao;
		this.fone = fone;
		this.ddd = ddd;
		this.EMail = EMail;
		this.observacao = observacao;
		this.indRecEmailAf = indRecEmailAf;
		this.indRecEmailEdital = indRecEmailEdital;
		this.indAtuContato = indAtuContato;
		this.dtAtuContato = dtAtuContato;
		this.EMailNf = EMailNf;
		this.indEnvioEmailFiscal = indEnvioEmailFiscal;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "frnNumero", column = @Column(name = "FRN_NUMERO", nullable = false)),
			@AttributeOverride(name = "numero", column = @Column(name = "NUMERO", nullable = false)) })
	public ScoContatoFornecedorId getId() {
		return this.id;
	}

	public void setId(ScoContatoFornecedorId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FRN_NUMERO", nullable = false, insertable = false, updatable = false)
	public ScoFornecedor getScoFornecedor() {
		return this.scoFornecedor;
	}

	public void setScoFornecedor(ScoFornecedor scoFornecedor) {
		this.scoFornecedor = scoFornecedor;
	}

	@Column(name = "NOME", nullable = false, length = 15)
	@Length(max = 15)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Column(name = "FUNCAO", nullable = false, length = 20)
	@Length(max = 20)
	public String getFuncao() {
		return this.funcao;
	}

	public void setFuncao(String funcao) {
		this.funcao = funcao;
	}

	@Column(name = "FONE")
	public Long getFone() {
		return this.fone;
	}

	public void setFone(Long fone) {
		this.fone = fone;
	}

	@Column(name = "DDD")
	public Short getDdd() {
		return this.ddd;
	}

	public void setDdd(Short ddd) {
		this.ddd = ddd;
	}

	@Column(name = "E_MAIL", length = 100)
	@Length(max = 100)
	@Email(message = "O E-mail informado não é válido")
	public String getEMail() {
		return this.EMail;
	}

	public void setEMail(String EMail) {
		this.EMail = EMail;
	}

	@Column(name = "OBSERVACAO", length = 60)
	@Length(max = 60)
	public String getObservacao() {
		return this.observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}


	@Column(name = "IND_REC_EMAIL_AF", length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndRecEmailAf() {
		return this.indRecEmailAf;
	}

	public void setIndRecEmailAf(Boolean indRecEmailAf) {
		this.indRecEmailAf = indRecEmailAf;
	}

	@Column(name = "IND_REC_EMAIL_EDITAL", length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndRecEmailEdital() {
		return this.indRecEmailEdital;
	}

	public void setIndRecEmailEdital(Boolean indRecEmailEdital) {
		this.indRecEmailEdital = indRecEmailEdital;
	}


	@Column(name = "IND_ATU_CONTATO", length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndAtuContato() {
		return this.indAtuContato;
	}

	public void setIndAtuContato(Boolean indAtuContato) {
		this.indAtuContato = indAtuContato;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_ATU_CONTATO", length = 29)
	public Date getDtAtuContato() {
		return this.dtAtuContato;
	}

	public void setDtAtuContato(Date dtAtuContato) {
		this.dtAtuContato = dtAtuContato;
	}

	@Column(name = "E_MAIL_NF", length = 100)
	@Length(max = 100)
	@Email(message = "O E-mail informado não é válido")
	public String getEMailNf() {
		return this.EMailNf;
	}

	public void setEMailNf(String EMailNf) {
		this.EMailNf = EMailNf;
	}

	@Column(name = "IND_ENVIO_EMAIL_FISCAL", length = 1)
	@Length(max = 1)
	public String getIndEnvioEmailFiscal() {
		return this.indEnvioEmailFiscal;
	}

	public void setIndEnvioEmailFiscal(String indEnvioEmailFiscal) {
		this.indEnvioEmailFiscal = indEnvioEmailFiscal;
	}

	public enum Fields {

		ID("id"),
		NUMERO("id.numero"),
		FRN_NUMERO("id.frnNumero"),
		VERSION("version"),
		SCO_FORNECEDOR("scoFornecedor"),
		SCO_FORNECEDOR_NUMERO("scoFornecedor.numero"),
		NOME("nome"),
		FUNCAO("funcao"),
		FONE("fone"),
		DDD("ddd"),
		_E_MAIL("EMail"),
		OBSERVACAO("observacao"),
		IND_REC_EMAIL_AF("indRecEmailAf"),
		IND_REC_EMAIL_EDITAL("indRecEmailEdital"),
		IND_ATU_CONTATO("indAtuContato"),
		DT_ATU_CONTATO("dtAtuContato"),
		_E_MAIL_NF("EMailNf"),
		IND_ENVIO_EMAIL_FISCAL("indEnvioEmailFiscal");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof ScoContatoFornecedor)) {
			return false;
		}
		ScoContatoFornecedor other = (ScoContatoFornecedor) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	
	
	// ##### GeradorEqualsHashCodeMain #####
	
	@Override
	public Object clone() throws CloneNotSupportedException{
		return super.clone();
	}

	
	@Column(name = "IND_ENVIO_EMAIL_SUP_TEC")
	@Enumerated(EnumType.STRING)
	public DominioSimNao getIndEnvioEmailSupTec() {
		return indEnvioEmailSupTec;
	}

	public void setIndEnvioEmailSupTec(DominioSimNao indEnvioEmailSupTec) {
		this.indEnvioEmailSupTec = indEnvioEmailSupTec;
	}



}

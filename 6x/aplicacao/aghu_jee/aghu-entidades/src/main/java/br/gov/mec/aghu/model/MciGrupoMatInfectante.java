package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MciGrupoMatInfectante generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mciGmiSq1", sequenceName="AGH.MCI_GMI_SQ1", allocationSize = 1)
@Table(name = "MCI_GRUPO_MAT_INFECTANTES", schema = "AGH")
public class MciGrupoMatInfectante extends BaseEntitySeq<Short> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 6679227997849878148L;
	private Short seq;
	private Integer version;
	private MciGrupoMatInfectante mciGrupoMatInfectante;
	private RapServidores rapServidoresByMciGmiSerFk1;
	private RapServidores rapServidoresByMciGmiSerFk2;
	private String descricao;
	private String indSituacao;
	private Date criadoEm;
	private Date alteradoEm;
	private String indTotalizacao;
	private String indMenorImunidade;
	private String descricaoReduzida;
	private String procedOperacionalPadrao;
	private Set<MciGrupoMatInfecMaterial> mciGrupoMatInfecMateriales = new HashSet<MciGrupoMatInfecMaterial>(0);
	private Set<MciGrupoMatInfectante> mciGrupoMatInfectantees = new HashSet<MciGrupoMatInfectante>(0);
	private Set<MciMaterialInfecPatologia> mciMaterialInfecPatologiaes = new HashSet<MciMaterialInfecPatologia>(0);
	private Set<MciParamGrpMatInfectante> mciParamGrpMatInfectantees = new HashSet<MciParamGrpMatInfectante>(0);
	private Set<MciCelulaTmpEstatistica> mciCelulaTmpEstatisticaes = new HashSet<MciCelulaTmpEstatistica>(0);
	private Set<MciGrpMatInfectanteReport> mciGrpMatInfectanteReportes = new HashSet<MciGrpMatInfectanteReport>(0);

	public MciGrupoMatInfectante() {
	}

	public MciGrupoMatInfectante(Short seq, RapServidores rapServidoresByMciGmiSerFk1, String descricao, String indSituacao,
			Date criadoEm, String indTotalizacao, String indMenorImunidade) {
		this.seq = seq;
		this.rapServidoresByMciGmiSerFk1 = rapServidoresByMciGmiSerFk1;
		this.descricao = descricao;
		this.indSituacao = indSituacao;
		this.criadoEm = criadoEm;
		this.indTotalizacao = indTotalizacao;
		this.indMenorImunidade = indMenorImunidade;
	}

	public MciGrupoMatInfectante(Short seq, MciGrupoMatInfectante mciGrupoMatInfectante, RapServidores rapServidoresByMciGmiSerFk1,
			RapServidores rapServidoresByMciGmiSerFk2, String descricao, String indSituacao, Date criadoEm, Date alteradoEm,
			String indTotalizacao, String indMenorImunidade, String descricaoReduzida, String procedOperacionalPadrao,
			Set<MciGrupoMatInfecMaterial> mciGrupoMatInfecMateriales, Set<MciGrupoMatInfectante> mciGrupoMatInfectantees,
			Set<MciMaterialInfecPatologia> mciMaterialInfecPatologiaes, Set<MciParamGrpMatInfectante> mciParamGrpMatInfectantees,
			Set<MciCelulaTmpEstatistica> mciCelulaTmpEstatisticaes, Set<MciGrpMatInfectanteReport> mciGrpMatInfectanteReportes) {
		this.seq = seq;
		this.mciGrupoMatInfectante = mciGrupoMatInfectante;
		this.rapServidoresByMciGmiSerFk1 = rapServidoresByMciGmiSerFk1;
		this.rapServidoresByMciGmiSerFk2 = rapServidoresByMciGmiSerFk2;
		this.descricao = descricao;
		this.indSituacao = indSituacao;
		this.criadoEm = criadoEm;
		this.alteradoEm = alteradoEm;
		this.indTotalizacao = indTotalizacao;
		this.indMenorImunidade = indMenorImunidade;
		this.descricaoReduzida = descricaoReduzida;
		this.procedOperacionalPadrao = procedOperacionalPadrao;
		this.mciGrupoMatInfecMateriales = mciGrupoMatInfecMateriales;
		this.mciGrupoMatInfectantees = mciGrupoMatInfectantees;
		this.mciMaterialInfecPatologiaes = mciMaterialInfecPatologiaes;
		this.mciParamGrpMatInfectantees = mciParamGrpMatInfectantees;
		this.mciCelulaTmpEstatisticaes = mciCelulaTmpEstatisticaes;
		this.mciGrpMatInfectanteReportes = mciGrpMatInfectanteReportes;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mciGmiSq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Short getSeq() {
		return this.seq;
	}

	public void setSeq(Short seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "GMI_SEQ")
	public MciGrupoMatInfectante getMciGrupoMatInfectante() {
		return this.mciGrupoMatInfectante;
	}

	public void setMciGrupoMatInfectante(MciGrupoMatInfectante mciGrupoMatInfectante) {
		this.mciGrupoMatInfectante = mciGrupoMatInfectante;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByMciGmiSerFk1() {
		return this.rapServidoresByMciGmiSerFk1;
	}

	public void setRapServidoresByMciGmiSerFk1(RapServidores rapServidoresByMciGmiSerFk1) {
		this.rapServidoresByMciGmiSerFk1 = rapServidoresByMciGmiSerFk1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_MOVIMENTADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_MOVIMENTADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMciGmiSerFk2() {
		return this.rapServidoresByMciGmiSerFk2;
	}

	public void setRapServidoresByMciGmiSerFk2(RapServidores rapServidoresByMciGmiSerFk2) {
		this.rapServidoresByMciGmiSerFk2 = rapServidoresByMciGmiSerFk2;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 60)
	@Length(max = 60)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(String indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 29)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@Column(name = "IND_TOTALIZACAO", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndTotalizacao() {
		return this.indTotalizacao;
	}

	public void setIndTotalizacao(String indTotalizacao) {
		this.indTotalizacao = indTotalizacao;
	}

	@Column(name = "IND_MENOR_IMUNIDADE", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndMenorImunidade() {
		return this.indMenorImunidade;
	}

	public void setIndMenorImunidade(String indMenorImunidade) {
		this.indMenorImunidade = indMenorImunidade;
	}

	@Column(name = "DESCRICAO_REDUZIDA", length = 10)
	@Length(max = 10)
	public String getDescricaoReduzida() {
		return this.descricaoReduzida;
	}

	public void setDescricaoReduzida(String descricaoReduzida) {
		this.descricaoReduzida = descricaoReduzida;
	}

	@Column(name = "PROCED_OPERACIONAL_PADRAO", length = 120)
	@Length(max = 120)
	public String getProcedOperacionalPadrao() {
		return this.procedOperacionalPadrao;
	}

	public void setProcedOperacionalPadrao(String procedOperacionalPadrao) {
		this.procedOperacionalPadrao = procedOperacionalPadrao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciGrupoMatInfectante")
	public Set<MciGrupoMatInfecMaterial> getMciGrupoMatInfecMateriales() {
		return this.mciGrupoMatInfecMateriales;
	}

	public void setMciGrupoMatInfecMateriales(Set<MciGrupoMatInfecMaterial> mciGrupoMatInfecMateriales) {
		this.mciGrupoMatInfecMateriales = mciGrupoMatInfecMateriales;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciGrupoMatInfectante")
	public Set<MciGrupoMatInfectante> getMciGrupoMatInfectantees() {
		return this.mciGrupoMatInfectantees;
	}

	public void setMciGrupoMatInfectantees(Set<MciGrupoMatInfectante> mciGrupoMatInfectantees) {
		this.mciGrupoMatInfectantees = mciGrupoMatInfectantees;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciGrupoMatInfectante")
	public Set<MciMaterialInfecPatologia> getMciMaterialInfecPatologiaes() {
		return this.mciMaterialInfecPatologiaes;
	}

	public void setMciMaterialInfecPatologiaes(Set<MciMaterialInfecPatologia> mciMaterialInfecPatologiaes) {
		this.mciMaterialInfecPatologiaes = mciMaterialInfecPatologiaes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciGrupoMatInfectante")
	public Set<MciParamGrpMatInfectante> getMciParamGrpMatInfectantees() {
		return this.mciParamGrpMatInfectantees;
	}

	public void setMciParamGrpMatInfectantees(Set<MciParamGrpMatInfectante> mciParamGrpMatInfectantees) {
		this.mciParamGrpMatInfectantees = mciParamGrpMatInfectantees;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciGrupoMatInfectante")
	public Set<MciCelulaTmpEstatistica> getMciCelulaTmpEstatisticaes() {
		return this.mciCelulaTmpEstatisticaes;
	}

	public void setMciCelulaTmpEstatisticaes(Set<MciCelulaTmpEstatistica> mciCelulaTmpEstatisticaes) {
		this.mciCelulaTmpEstatisticaes = mciCelulaTmpEstatisticaes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciGrupoMatInfectante")
	public Set<MciGrpMatInfectanteReport> getMciGrpMatInfectanteReportes() {
		return this.mciGrpMatInfectanteReportes;
	}

	public void setMciGrpMatInfectanteReportes(Set<MciGrpMatInfectanteReport> mciGrpMatInfectanteReportes) {
		this.mciGrpMatInfectanteReportes = mciGrpMatInfectanteReportes;
	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		MCI_GRUPO_MAT_INFECTANTES("mciGrupoMatInfectante"),
		RAP_SERVIDORES_BY_MCI_GMI_SER_FK1("rapServidoresByMciGmiSerFk1"),
		RAP_SERVIDORES_BY_MCI_GMI_SER_FK2("rapServidoresByMciGmiSerFk2"),
		DESCRICAO("descricao"),
		IND_SITUACAO("indSituacao"),
		CRIADO_EM("criadoEm"),
		ALTERADO_EM("alteradoEm"),
		IND_TOTALIZACAO("indTotalizacao"),
		IND_MENOR_IMUNIDADE("indMenorImunidade"),
		DESCRICAO_REDUZIDA("descricaoReduzida"),
		PROCED_OPERACIONAL_PADRAO("procedOperacionalPadrao"),
		MCI_GRUPO_MAT_INFEC_MATERIALES("mciGrupoMatInfecMateriales"),
		MCI_GRUPO_MAT_INFECTANTEES("mciGrupoMatInfectantees"),
		MCI_MATERIAL_INFEC_PATOLOGIAES("mciMaterialInfecPatologiaes"),
		MCI_PARAM_GRP_MAT_INFECTANTEES("mciParamGrpMatInfectantees"),
		MCI_CELULA_TMP_ESTATISTICAES("mciCelulaTmpEstatisticaes"),
		MCI_GRP_MAT_INFECTANTE_REPORTES("mciGrpMatInfectanteReportes");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MciGrupoMatInfectante)) {
			return false;
		}
		MciGrupoMatInfectante other = (MciGrupoMatInfectante) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

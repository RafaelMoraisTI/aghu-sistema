package br.gov.mec.aghu.model;

// Generated 28/03/2012 15:17:44 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.dominio.DominioTipoFluidoAdministrado;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MbcFluidoAdministrados generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mbcFlaSq1", sequenceName="AGH.MBC_FLA_SQ1", allocationSize = 1)
@Table(name = "MBC_FLUIDO_ADMINISTRADOS", schema = "AGH")
public class MbcFluidoAdministrados extends BaseEntitySeq<Short> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7635624142963848190L;
	private Short seq;
	private Integer version;
	private Date criadoEm;
	private DominioTipoFluidoAdministrado tipo;
	private DominioSituacao situacao;
	private AbsComponenteSanguineo componenteSanguineo;
	private AfaMedicamento medicamento;
	private MpmProcedEspecialDiversos procedEspecialDiverso;
	private RapServidores servidor;

	public MbcFluidoAdministrados() {
	}

	public MbcFluidoAdministrados(Short seq, Integer version, Date criadoEm,
			DominioTipoFluidoAdministrado tipo, DominioSituacao situacao,
			AbsComponenteSanguineo componenteSanguineo,
			AfaMedicamento medicamento,
			MpmProcedEspecialDiversos procedEspecialDiverso,
			RapServidores servidor) {
		super();
		this.seq = seq;
		this.version = version;
		this.criadoEm = criadoEm;
		this.tipo = tipo;
		this.situacao = situacao;
		this.componenteSanguineo = componenteSanguineo;
		this.medicamento = medicamento;
		this.procedEspecialDiverso = procedEspecialDiverso;
		this.servidor = servidor;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mbcFlaSq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Short getSeq() {
		return this.seq;
	}

	public void setSeq(Short seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "TIPO", nullable = false, length = 2)
	@Enumerated(EnumType.STRING)
	public DominioTipoFluidoAdministrado getTipo() {
		return this.tipo;
	}

	@Column(name = "SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getSituacao() {
		return this.situacao;
	}

	public void setSituacao(DominioSituacao situacao) {
		this.situacao = situacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CSA_CODIGO")
	public AbsComponenteSanguineo getComponenteSanguineo() {
		return componenteSanguineo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MED_MAT_CODIGO")
	public AfaMedicamento getMedicamento() {
		return medicamento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PED_SEQ")
	public MpmProcedEspecialDiversos getProcedEspecialDiverso() {
		return procedEspecialDiverso;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
		@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
		@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO")})
	public RapServidores getServidor() {
		return servidor;
	}

	public void setTipo(DominioTipoFluidoAdministrado tipo) {
		this.tipo = tipo;
	}

	public void setComponenteSanguineo(AbsComponenteSanguineo componenteSanguineo) {
		this.componenteSanguineo = componenteSanguineo;
	}

	public void setMedicamento(AfaMedicamento medicamento) {
		this.medicamento = medicamento;
	}

	public void setProcedEspecialDiverso(
			MpmProcedEspecialDiversos procedEspecialDiverso) {
		this.procedEspecialDiverso = procedEspecialDiverso;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}
	
	public enum Fields {
		SEQ("seq"),
		CRIADO_EM("criadoEm"),
		TIPO("tipo"),
		SITUACAO("situacao"),
		COMPONENTE_SANGUINEO("componenteSanguineo"),
		MEDICAMENTO("medicamento"),
		PROCED_ESPECIAL_DIVERSO("procedEspecialDiverso"),
		SERVIDOR("servidor");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
		
	}

	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MbcFluidoAdministrados)) {
			return false;
		}
		MbcFluidoAdministrados other = (MbcFluidoAdministrados) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

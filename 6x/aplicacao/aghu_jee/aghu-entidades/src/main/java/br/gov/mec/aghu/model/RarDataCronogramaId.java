package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Embeddable;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;

import br.gov.mec.aghu.core.persistence.EntityCompositeId;

/**
 * RarDataCronogramaId generated by hbm2java
 */
@Embeddable
public class RarDataCronogramaId implements EntityCompositeId {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1361592143271584676L;
	private Short croAvaSeq;
	private Short croSeqp;
	private Short ano;

	public RarDataCronogramaId() {
	}

	public RarDataCronogramaId(Short croAvaSeq, Short croSeqp, Short ano) {
		this.croAvaSeq = croAvaSeq;
		this.croSeqp = croSeqp;
		this.ano = ano;
	}

	@Column(name = "CRO_AVA_SEQ", nullable = false)
	public Short getCroAvaSeq() {
		return this.croAvaSeq;
	}

	public void setCroAvaSeq(Short croAvaSeq) {
		this.croAvaSeq = croAvaSeq;
	}

	@Column(name = "CRO_SEQP", nullable = false)
	public Short getCroSeqp() {
		return this.croSeqp;
	}

	public void setCroSeqp(Short croSeqp) {
		this.croSeqp = croSeqp;
	}

	@Column(name = "ANO", nullable = false)
	public Short getAno() {
		return this.ano;
	}

	public void setAno(Short ano) {
		this.ano = ano;
	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		HashCodeBuilder umHashCodeBuilder = new HashCodeBuilder();
		umHashCodeBuilder.append(this.getAno());
		umHashCodeBuilder.append(this.getCroAvaSeq());
		umHashCodeBuilder.append(this.getCroSeqp());
		return umHashCodeBuilder.toHashCode();
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof RarDataCronogramaId)) {
			return false;
		}
		RarDataCronogramaId other = (RarDataCronogramaId) obj;
		EqualsBuilder umEqualsBuilder = new EqualsBuilder();
		umEqualsBuilder.append(this.getAno(), other.getAno());
		umEqualsBuilder.append(this.getCroAvaSeq(), other.getCroAvaSeq());
		umEqualsBuilder.append(this.getCroSeqp(), other.getCroSeqp());
		return umEqualsBuilder.isEquals();
	}
	// ##### GeradorEqualsHashCodeMain #####
	
}

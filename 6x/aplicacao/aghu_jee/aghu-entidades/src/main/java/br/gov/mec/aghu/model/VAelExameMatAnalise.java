package br.gov.mec.aghu.model;

// Generated 15/03/2011 17:49:26 by Hibernate Tools 3.4.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang3.StringUtils;
import org.hibernate.annotations.Immutable;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * VAelExameMatAnalise generated by hbm2java
 */

@Entity
@Table(name = "V_AEL_EXAME_MAT_ANALISE", schema = "AGH")
@Immutable
public class VAelExameMatAnalise extends BaseEntityId<AelExamesMaterialAnaliseId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -6301020787652136822L;

	private AelExamesMaterialAnaliseId id;

	private String descricaoExame;
	private String descricaoUsualExame;
	private String descricaoMaterial;
	private String nomeUsualMaterial;
	private String indDependente;
	private String indCci;
	private String indExigeDescMatAnls;
	private String indLimitaSolic;
	private String indComedi;
	private AelExamesMaterialAnalise exameMaterialAnalise;

	
	
	public VAelExameMatAnalise() {
	}

	public VAelExameMatAnalise(AelExamesMaterialAnaliseId id) {
		this.id = id;
	}
	
	public VAelExameMatAnalise(AelExamesMaterialAnaliseId identifier,
			String descricaoExame, String descricaoUsualExame,
			String descricaoMaterial, String nomeUsualMaterial,
			String indDependente, String indCci, String indExigeDescMatAnls,
			String indLimitaSolic, String indComedi) {
		this.id = identifier;
		this.descricaoExame = descricaoExame;
		this.descricaoUsualExame = descricaoUsualExame;
		this.descricaoMaterial = descricaoMaterial;
		this.nomeUsualMaterial = nomeUsualMaterial;
		this.indDependente = indDependente;
		this.indCci = indCci;
		this.indExigeDescMatAnls = indExigeDescMatAnls;
		this.indLimitaSolic = indLimitaSolic;
		this.indComedi = indComedi;
	}

	

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "exaSigla", column = @Column(name = "SIGLA", length = 5)),
			@AttributeOverride(name = "manSeq", column = @Column(name = "MAN_SEQ")) })
	public AelExamesMaterialAnaliseId getId() {
		return this.id;
	}

	public void setId(AelExamesMaterialAnaliseId id) {
		this.id = id;
	}
	
	
	@Column(name = "DESCRICAO_EXAME", length = 100)
	@Length(max = 100)
	public String getDescricaoExame() {
		return this.descricaoExame;
	}

	public void setDescricaoExame(String descricaoExame) {
		this.descricaoExame = descricaoExame;
	}

	@Column(name = "DESCRICAO_USUAL_EXAME", length = 100)
	@Length(max = 100)
	public String getDescricaoUsualExame() {
		return this.descricaoUsualExame;
	}

	public void setDescricaoUsualExame(String descricaoUsualExame) {
		this.descricaoUsualExame = descricaoUsualExame;
	}

	@Column(name = "DESCRICAO_MATERIAL", length = 60)
	@Length(max = 60)
	public String getDescricaoMaterial() {
		return this.descricaoMaterial;
	}

	public void setDescricaoMaterial(String descricaoMaterial) {
		this.descricaoMaterial = descricaoMaterial;
	}

	@Column(name = "NOME_USUAL_MATERIAL")
	public String getNomeUsualMaterial() {
		return this.nomeUsualMaterial;
	}

	public void setNomeUsualMaterial(String nomeUsualMaterial) {
		this.nomeUsualMaterial = nomeUsualMaterial;
	}

	@Column(name = "IND_DEPENDENTE", length = 1)
	@Length(max = 1)
	public String getIndDependente() {
		return this.indDependente;
	}

	public void setIndDependente(String indDependente) {
		this.indDependente = indDependente;
	}

	@Column(name = "IND_CCI", length = 1)
	@Length(max = 1)
	public String getIndCci() {
		return this.indCci;
	}

	public void setIndCci(String indCci) {
		this.indCci = indCci;
	}

	@Column(name = "IND_EXIGE_DESC_MAT_ANLS", length = 1)
	@Length(max = 1)
	public String getIndExigeDescMatAnls() {
		return this.indExigeDescMatAnls;
	}

	public void setIndExigeDescMatAnls(String indExigeDescMatAnls) {
		this.indExigeDescMatAnls = indExigeDescMatAnls;
	}

	@Column(name = "IND_LIMITA_SOLIC", length = 1)
	@Length(max = 1)
	public String getIndLimitaSolic() {
		return this.indLimitaSolic;
	}

	public void setIndLimitaSolic(String indLimitaSolic) {
		this.indLimitaSolic = indLimitaSolic;
	}

	@Column(name = "IND_COMEDI", length = 1)
	@Length(max = 1)
	public String getIndComedi() {
		return this.indComedi;
	}

	public void setIndComedi(String indComedi) {
		this.indComedi = indComedi;
	}
	
	@Transient
	public String getExasiglaManseq() {
		StringBuffer returnValue = new StringBuffer();
		
		if (this.getId() != null) {
			if (StringUtils.isNotBlank(this.getId().getExaSigla())) {
				returnValue.append(this.getId().getExaSigla());				
			}
			
			if (this.getId().getManSeq() != null) {
				if (returnValue.length() > 0) {
					returnValue.append(" - ");
				}
				returnValue.append(this.getId().getManSeq());				
			}
		}
		
		return returnValue.toString();
	}
	
	
	@Override
	public boolean equals(Object other) {
		if ((this == other)) {
			return true;
		}
		if ((other == null)) {
			return false;
		}
		if (!(other instanceof VAelExameMatAnalise)) {
			return false;
		}
		VAelExameMatAnalise castOther = (VAelExameMatAnalise) other;

		return (
			(this.getId() == castOther.getId() 
			|| (this.getId() != null && castOther.getId() != null 
					&& this.getId().equals(castOther.getId())))
		);
	}

	@Override
	public int hashCode() {
		int result = 17;

		result = 37 * result + (this.getId() == null ? 0 : this.getId().hashCode());
		
		return result;
	}

	public enum Fields {

		SIGLA("id.exaSigla"),//
		MAN_SEQ("id.manSeq"),//
		IND_DEPENDENTE("indDependente"),//
		NOME_USUAL_MATERIAL("nomeUsualMaterial"),//
		DESCRICAO_EXAME("descricaoExame"),//
		DESCRICAO_MATERIAL("descricaoMaterial"),//
		NOME_USUAL_EXAME("descricaoUsualExame"),//
		IND_CCI("indCci"),
		EXAME_MATERIAL("exameMaterialAnalise"),
		IND_EXIGE_DESC_MAT_ANLS("indExigeDescMatAnls");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}	
	}
	
	
	@OneToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SIGLA", referencedColumnName = "id.exaSigla", insertable=false, updatable=false),
			@JoinColumn(name = "MAN_SEQ", referencedColumnName = "id.manSeq", insertable=false, updatable=false) })
	public AelExamesMaterialAnalise getExameMaterialAnalise() {
		return exameMaterialAnalise;
	}

	public void setExameMaterialAnalise(
			AelExamesMaterialAnalise exameMaterialAnalise) {
		this.exameMaterialAnalise = exameMaterialAnalise;
	}


}

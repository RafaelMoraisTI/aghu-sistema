package br.gov.mec.aghu.model;

// Generated 26/02/2010 17:37:25 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;

import br.gov.mec.aghu.dominio.DominioTamanhoForcipe;
import br.gov.mec.aghu.dominio.DominioTipoForcipe;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * McoForcipes generated by hbm2java
 */
@SuppressWarnings({"PMD.AghuUsoIndevidoDaEnumDominioSimNaoEntity"})
@Entity
@Table(name = "MCO_FORCIPES", schema = "AGH")
public class McoForcipes extends BaseEntityId<McoNascimentosId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1578339170257731747L;
	private McoNascimentosId id;
	private McoNascimentos mcoNascimentos;
	private DominioTipoForcipe tipoForcipe;
	private DominioTamanhoForcipe tamanhoForcipe;
	private Boolean indForcipeComRotacao;
	private Date criadoEm;
	private Set<McoNascIndicacoes> mcoNascIndicacoeses = new HashSet<McoNascIndicacoes>(0);

	public McoForcipes() {
	}

	public McoForcipes(McoNascimentos mcoNascimentos, DominioTipoForcipe tipoForcipe,
			DominioTamanhoForcipe tamanhoForcipe, Boolean indForcipeComRotacao, Date criadoEm) {
		this.mcoNascimentos = mcoNascimentos;
		this.tipoForcipe = tipoForcipe;
		this.tamanhoForcipe = tamanhoForcipe;
		this.indForcipeComRotacao = indForcipeComRotacao;
		this.criadoEm = criadoEm;
	}

	public McoForcipes(McoNascimentos mcoNascimentos, DominioTipoForcipe tipoForcipe,
			DominioTamanhoForcipe tamanhoForcipe, Boolean indForcipeComRotacao, Date criadoEm,
			Set<McoNascIndicacoes> mcoNascIndicacoeses) {
		this.mcoNascimentos = mcoNascimentos;
		this.tipoForcipe = tipoForcipe;
		this.tamanhoForcipe = tamanhoForcipe;
		this.indForcipeComRotacao = indForcipeComRotacao;
		this.criadoEm = criadoEm;
		this.mcoNascIndicacoeses = mcoNascIndicacoeses;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "gsoPacCodigo", column = @Column(name = "NAS_GSO_PAC_CODIGO", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "gsoSeqp", column = @Column(name = "NAS_GSO_SEQP", nullable = false, precision = 3, scale = 0)),
			@AttributeOverride(name = "seqp", column = @Column(name = "NAS_SEQP", nullable = false, precision = 5, scale = 0)) })
//			@AttributeOverrides( {
//				@AttributeOverride(name = "nasGsoPacCodigo", column = @Column(name = "NAS_GSO_PAC_CODIGO", nullable = false, precision = 8, scale = 0)),
//				@AttributeOverride(name = "nasGsoSeqp", column = @Column(name = "NAS_GSO_SEQP", nullable = false, precision = 3, scale = 0)),
//				@AttributeOverride(name = "nasSeqp", column = @Column(name = "NAS_SEQP", nullable = false, precision = 5, scale = 0)) })
	public McoNascimentosId getId() {
		return this.id;
	}

	public void setId(McoNascimentosId id) {
		this.id = id;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public McoNascimentos getMcoNascimentos() {
		return this.mcoNascimentos;
	}

	public void setMcoNascimentos(McoNascimentos mcoNascimentos) {
		this.mcoNascimentos = mcoNascimentos;
	}

	@Column(name = "TIPO_FORCIPE", nullable = false)
	@NotNull
	@Enumerated(EnumType.STRING)
	public DominioTipoForcipe getTipoForcipe() {
		return this.tipoForcipe;
	}

	public void setTipoForcipe(DominioTipoForcipe tipoForcipe) {
		this.tipoForcipe = tipoForcipe;
	}

	@Column(name = "TAMANHO_FORCIPE", nullable = false)
	@NotNull
	@Enumerated(EnumType.STRING)
	public DominioTamanhoForcipe getTamanhoForcipe() {
		return this.tamanhoForcipe;
	}

	public void setTamanhoForcipe(DominioTamanhoForcipe tamanhoForcipe) {
		this.tamanhoForcipe = tamanhoForcipe;
	}

	@Column(name = "IND_FORCIPE_COM_ROTACAO", nullable = false)
	@NotNull
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndForcipeComRotacao() {
		return this.indForcipeComRotacao;
	}

	public void setIndForcipeComRotacao(Boolean indForcipeComRotacao) {
		this.indForcipeComRotacao = indForcipeComRotacao;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mcoForcipes")
	public Set<McoNascIndicacoes> getMcoNascIndicacoeses() {
		return this.mcoNascIndicacoeses;
	}

	public void setMcoNascIndicacoeses(
			Set<McoNascIndicacoes> mcoNascIndicacoeses) {
		this.mcoNascIndicacoeses = mcoNascIndicacoeses;
	}

	// FIXME Tocchetto Validar com o JH a problema da PK e corrigir a enum FIELDS de acordo com esse ajuste.
//	public enum Fields {
//		CODIGO_PACIENTE("id.nasGsoPacCodigo"), 
//		SEQUENCE("id.nasGsoSeqp");
//		
//		private String fields;
//
//		private Fields(String fields) {
//			this.fields = fields;
//		}
//
//		@Override
//		public String toString() {
//			return this.fields;
//		}
//	}		

	public enum Fields {

		ID("id"),
		MCO_NASCIMENTOS("mcoNascimentos"),
		TIPO_FORCIPE("tipoForcipe"),
		TAMANHO_FORCIPE("tamanhoForcipe"),
		IND_FORCIPE_COM_ROTACAO("indForcipeComRotacao"),
		CRIADO_EM("criadoEm"),
		MCO_NASC_INDICACOESES("mcoNascIndicacoeses"),

		CODIGO_PACIENTE("id.gsoPacCodigo"),
		SEQUENCE("id.gsoSeqp"),
		SEQP("id.seqp");
		
		

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof McoForcipes)) {
			return false;
		}
		McoForcipes other = (McoForcipes) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

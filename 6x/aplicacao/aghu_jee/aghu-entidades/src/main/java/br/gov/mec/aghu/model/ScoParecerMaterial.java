package br.gov.mec.aghu.model;

// Generated 04/01/2012 11:23:42 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.apache.commons.lang3.builder.EqualsBuilder;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntityCodigo;

/**
 * ScoParecer Material generated by hbm2java
 */
@Entity
@Table(name = "SCO_PARECER_MATERIAL", schema = "AGH")
@SequenceGenerator(name="scoPmtSq1", sequenceName="AGH.SCO_PMT_SQ1", allocationSize = 1)
public class ScoParecerMaterial extends BaseEntityCodigo<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 3106739787329036872L;
	
	private Integer codigo;
	private ScoMaterial material;
	private ScoMarcaComercial marcaComercial;
	private ScoMarcaModelo scoMarcaModelo;
	private ScoOrigemParecerTecnico origemParecerTecnico;
	private Integer numeroSubPasta;
	private String nrRegistro;
	private Date dtVenctRegistro;
	private DominioSituacao indSituacao;
	private Date dtCriacao;
	private RapServidores servidorCriacao;
	private Date dtAlteracao;
	private RapServidores servidorAlteracao;
	private String observacao;
	private Integer version;
	
	private List<ScoParecerAvaliacao> itensParecerAvaliacoes; 	
	private List<ScoParecerOcorrencia> itensParecerOcorrencias; 
	
	public ScoParecerMaterial() {
	}

	@Id
	@Column(name = "CODIGO", nullable = false, precision = 6, scale = 0)
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "scoPmtSq1")
	public Integer getCodigo() {
		return codigo;
	}

	public void setCodigo(Integer codigo) {
		this.codigo = codigo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MAT_CODIGO", referencedColumnName = "CODIGO")
	public ScoMaterial getMaterial() {
		return material;
	}

	public void setMaterial(ScoMaterial material) {
		this.material = material;
	}

	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="MCM_CODIGO")
	public ScoMarcaComercial getMarcaComercial() {
		return marcaComercial;
	}

	public void setMarcaComercial(ScoMarcaComercial marcaComercial) {
		this.marcaComercial = marcaComercial;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "MOM_MCM_CODIGO", referencedColumnName = "MCM_CODIGO"),
			@JoinColumn(name = "MOM_SEQP", referencedColumnName = "SEQP") })
	public ScoMarcaModelo getScoMarcaModelo() {
		return scoMarcaModelo;
	}

	public void setScoMarcaModelo(ScoMarcaModelo scoMarcaModelo) {
		this.scoMarcaModelo = scoMarcaModelo;
	}

	// bi-directional many-to-one association to ScoOrigemParecerTecnico
	@ManyToOne
	@JoinColumn(name = "OPT_CODIGO")
	public ScoOrigemParecerTecnico getOrigemParecerTecnico() {
		return origemParecerTecnico;
	}

	public void setOrigemParecerTecnico(ScoOrigemParecerTecnico origemParecerTecnico) {
		this.origemParecerTecnico = origemParecerTecnico;
	}

	@Column(name = "NUMERO_SUB_PASTA", precision = 6, scale = 0)
	public Integer getNumeroSubPasta() {
		return numeroSubPasta;
	}

	public void setNumeroSubPasta(Integer numeroSubPasta) {
		this.numeroSubPasta = numeroSubPasta;
	}

	@Column(name = "NR_REGISTRO", length = 20)
	@Length(max = 20)
	public String getNrRegistro() {
		return nrRegistro;
	}

	public void setNrRegistro(String nrRegistro) {
		this.nrRegistro = nrRegistro;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_VENCT_REGISTRO", length = 7)
	public Date getDtVenctRegistro() {
		return dtVenctRegistro;
	}

	public void setDtVenctRegistro(Date dtVenctRegistro) {
		this.dtVenctRegistro = dtVenctRegistro;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_CRIACAO", length = 7)
	public Date getDtCriacao() {
		return dtCriacao;
	}

	public void setDtCriacao(Date dtCriacao) {
		this.dtCriacao = dtCriacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA_CRIACAO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_CRIACAO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorCriacao() {
		return servidorCriacao;
	}

	public void setServidorCriacao(RapServidores servidorCriacao) {
		this.servidorCriacao = servidorCriacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_ALTERACAO", length = 7)
	public Date getDtAlteracao() {
		return dtAlteracao;
	}

	public void setDtAlteracao(Date dtAlteracao) {
		this.dtAlteracao = dtAlteracao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA_ALTERACAO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_ALTERACAO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorAlteracao() {
		return servidorAlteracao;
	}

	public void setServidorAlteracao(RapServidores servidorAlteracao) {
		this.servidorAlteracao = servidorAlteracao;
	}

	@Column(name = "OBSERVACAO", length = 250)
	@Length(max = 250)
	public String getObservacao() {
		return observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}

	@Column(name = "VERSION", nullable = false)
	@Version
	public Integer getVersion() {
		return version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "parecerMaterial")
	public List<ScoParecerAvaliacao> getItensParecerAvaliacoes() {
		return itensParecerAvaliacoes;
	}

	public void setItensParecerAvaliacoes(
			List<ScoParecerAvaliacao> itensParecerAvaliacoes) {
		this.itensParecerAvaliacoes = itensParecerAvaliacoes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "parecerMaterial")
	public List<ScoParecerOcorrencia> getItensParecerOcorrencias() {
		return itensParecerOcorrencias;
	}

	public void setItensParecerOcorrencias(
			List<ScoParecerOcorrencia> itensParecerOcorrencias) {
		this.itensParecerOcorrencias = itensParecerOcorrencias;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((codigo == null) ? 0 : codigo.hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object other) {
		if (other instanceof ScoParecerMaterial){
			ScoParecerMaterial castOther = (ScoParecerMaterial) other;
			return new EqualsBuilder()
				.append(this.codigo, castOther.codigo)
			.isEquals();
		}
		else {
			return false;
		}	
	}	
	
	
	public enum Fields {
		CODIGO("codigo"),
		MATERIAL("material"),
		MARCA_COMERCIAL("marcaComercial"),
		MARCA_MODELO("scoMarcaModelo"),
		ORIGEM_PARECER_TECNICO("origemParecerTecnico"),
		NUMERO_SUB_PASTA("numeroSubPasta"),
		NR_REGISTRO("nrRegistro"),
		DT_VENCT_REGISTRO("dtVenctRegistro"),
		SITUACAO("indSituacao"),
		DT_CRIACAO("dtCriacao"),
		SERVIDOR_CRIACAO("servidorCriacao"),
		MATRICULA_SERVIDOR_CRIACAO("servidorCriacao.id.matricula"),
		CODIGO_VINCULO_SERVIDOR_CRIACAO("servidorCriacao.id.vinCodigo"),
		DT_ALTERACAO("dtAlteracao"),
		SERVIDOR_ALTERACAO("servidorAlteracao"),
		MATRICULA_SERVIDOR_ALTERACAO("servidorAlteracao.id.matricula"),
		CODIGO_VINCULO_SERVIDOR_ALTERACAO("servidorAlteracao.id.vinCodigo"),
		OBSERVACAO("observacao"),
		ITENS_AVALIACAO("itensParecerAvaliacoes"),
		ITENS_OCORRENCIA("itensParecerOcorrencias"),
		MATERIAL_CODIGO("material.codigo"),
		MARCA_COMERCIAL_CODIGO("marcaComercial.codigo"),
		MODELO_COMERCIAL_SEQP("scoMarcaModelo.id.seqp"),
		MODELO_COMERCIAL_MARCA_CODIGO("scoMarcaModelo.id.mcmCodigo");
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}	

}

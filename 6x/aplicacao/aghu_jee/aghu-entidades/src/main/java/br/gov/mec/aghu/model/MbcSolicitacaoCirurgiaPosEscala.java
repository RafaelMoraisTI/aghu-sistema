package br.gov.mec.aghu.model;

// Generated 17/06/2010 15:43:38 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioFuncaoProfissional;
import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.exception.BusinessExceptionCode;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MbcSolicCirgPosEscalas generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mbcSpeSq1", sequenceName="AGH.MBC_SPE_SQ1", allocationSize = 1)
@Table(name = "MBC_SOLIC_CIRG_POS_ESCALAS", schema = "AGH")

public class MbcSolicitacaoCirurgiaPosEscala extends BaseEntitySeq<Integer> implements java.io.Serializable {
	
	// TODO Implementar triggers (não foi implementado, pois o mapeamento
	// foi feito na implementação do módulo de internação)

	/**
	 * 
	 */
	private static final long serialVersionUID = 8067066633879001784L;
	private Integer seq;
	private MbcProfAtuaUnidCirgs mbcProfAtuaUnidCirgs;
	private RapServidores servidorAtendente;
	private MbcSolicitacaoCirurgiaPosEscala solicitacaoCirurgiaPosEscala;
	private AghEspecialidades especialidade;
	private RapServidores servidorExclusao;
	private RapServidores servidor;
	private FatConvenioSaudePlano convenioSaudePlano;
	private AghUnidadesFuncionais unidadeFuncional;
	private AipPacientes paciente;
	private Date criadoEm;
	private Date data;
	private MbcEspecialidadeProcCirgs mbcEspecialidadeProcCirgs;
	private DominioFuncaoProfissional pucIndFuncaoProf;
	private Date horaPrevisaoInicio;
	private Short tempoPrevistoHora;
	private Byte tempoPrevistoMinuto;
	private String medicoSolicitante;
	private Boolean solicitacaoAtendida;
	private String solicitacoesEspeciais;
	private Date dataSolicitacaoAtendida;
	private Date dataInclusaoLista;
	private Boolean solicitacaoExcluida;
	private Date dataSolicitacaoExcluida;
	private String justificativaExclusao;
	private Set<MbcSolicitacaoCirurgiaPosEscala> solicitacoesCirurgiaPosEscala = new HashSet<MbcSolicitacaoCirurgiaPosEscala>(
			0);
	private Set<MbcCirurgias> cirurgias = new HashSet<MbcCirurgias>(0);
	
	// TODO Implementar version quando necessário
	// private Integer version;
	
	private enum MbcSolicitacaoCirurgiaPosEscalaExceptionCode implements
	BusinessExceptionCode {
		MBC_SPE_CK3, MBC_SPE_CK4, MBC_SPE_CK5, MBC_SPE_UNF_FK1_NOTNULL, MBC_SPE_ESP_FK1_NOTNULL, MBC_SPE_PUC_CK1_NOTNULL
}

	public MbcSolicitacaoCirurgiaPosEscala() {
	}

	public MbcSolicitacaoCirurgiaPosEscala(Integer seq,
			AghEspecialidades especialidade, RapServidores servidor,
			FatConvenioSaudePlano convenioSaudePlano,
			AghUnidadesFuncionais unidadeFuncional, AipPacientes paciente,
			Date criadoEm, Date data, DominioFuncaoProfissional pucIndFuncaoProf,
			Boolean solicitacaoAtendida, Date dataInclusaoLista,
			Boolean solicitacaoExcluida) {
		this.seq = seq;
		this.especialidade = especialidade;
		this.servidor = servidor;
		this.convenioSaudePlano = convenioSaudePlano;
		this.unidadeFuncional = unidadeFuncional;
		this.paciente = paciente;
		this.criadoEm = criadoEm;
		this.data = data;
			this.pucIndFuncaoProf = pucIndFuncaoProf;
		this.solicitacaoAtendida = solicitacaoAtendida;
		this.dataInclusaoLista = dataInclusaoLista;
		this.solicitacaoExcluida = solicitacaoExcluida;
	}

	@SuppressWarnings({"PMD.ExcessiveParameterList"})
	public MbcSolicitacaoCirurgiaPosEscala(Integer seq,
			RapServidores servidorAtendente,
			MbcSolicitacaoCirurgiaPosEscala solicitacaoCirurgiaPosEscala,
			AghEspecialidades especialidade, RapServidores servidorExclusao,
			RapServidores servidor, FatConvenioSaudePlano convenioSaudePlano,
			AghUnidadesFuncionais unidadeFuncional, AipPacientes paciente,
			Date criadoEm, Date data, DominioFuncaoProfissional pucIndFuncaoProf, Date horaPrevisaoInicio,
			Short tempoPrevistoHora, Byte tempoPrevistoMinuto,
			String medicoSolicitante, Boolean solicitacaoAtendida,
			String solicitacoesEspeciais, Date dataSolicitacaoAtendida,
			Date dataInclusaoLista, Boolean solicitacaoExcluida,
			Date dataSolicitacaoExcluida, String justificativaExclusao,
			Set<MbcSolicitacaoCirurgiaPosEscala> solicitacoesCirurgiaPosEscala,
			Set<MbcCirurgias> cirurgias) {
		this.seq = seq;
		this.servidorAtendente = servidorAtendente;
		this.solicitacaoCirurgiaPosEscala = solicitacaoCirurgiaPosEscala;
		this.especialidade = especialidade;
		this.servidorExclusao = servidorExclusao;
		this.servidor = servidor;
		this.convenioSaudePlano = convenioSaudePlano;
		this.unidadeFuncional = unidadeFuncional;
		this.paciente = paciente;
		this.criadoEm = criadoEm;
		this.data = data;
		this.pucIndFuncaoProf = pucIndFuncaoProf;
		this.horaPrevisaoInicio = horaPrevisaoInicio;
		this.tempoPrevistoHora = tempoPrevistoHora;
		this.tempoPrevistoMinuto = tempoPrevistoMinuto;
		this.medicoSolicitante = medicoSolicitante;
		this.solicitacaoAtendida = solicitacaoAtendida;
		this.solicitacoesEspeciais = solicitacoesEspeciais;
		this.dataSolicitacaoAtendida = dataSolicitacaoAtendida;
		this.dataInclusaoLista = dataInclusaoLista;
		this.solicitacaoExcluida = solicitacaoExcluida;
		this.dataSolicitacaoExcluida = dataSolicitacaoExcluida;
		this.justificativaExclusao = justificativaExclusao;
		this.solicitacoesCirurgiaPosEscala = solicitacoesCirurgiaPosEscala;
		this.cirurgias = cirurgias;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mbcSpeSq1")
	@Column(name = "SEQ", nullable = false, precision = 8, scale = 0)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "PUC_SER_MATRICULA", referencedColumnName = "SER_MATRICULA"),
			@JoinColumn(name = "PUC_SER_VIN_CODIGO", referencedColumnName = "SER_VIN_CODIGO"),
			@JoinColumn(name = "PUC_UNF_SEQ", referencedColumnName = "UNF_SEQ"),
			@JoinColumn(name = "PUC_IND_FUNCAO_PROF", referencedColumnName = "IND_FUNCAO_PROF") })
	public MbcProfAtuaUnidCirgs getMbcProfAtuaUnidCirgs() {
		return this.mbcProfAtuaUnidCirgs;
	}

	public void setMbcProfAtuaUnidCirgs(
			MbcProfAtuaUnidCirgs mbcProfAtuaUnidCirgs) {
		this.mbcProfAtuaUnidCirgs = mbcProfAtuaUnidCirgs;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_ATENDE", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_ATENDE", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorAtendente() {
		return this.servidorAtendente;
	}

	public void setServidorAtendente(RapServidores servidorAtendente) {
		this.servidorAtendente = servidorAtendente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SPE_SEQ")
	public MbcSolicitacaoCirurgiaPosEscala getSolicitacaoCirurgiaPosEscala() {
		return this.solicitacaoCirurgiaPosEscala;
	}

	public void setSolicitacaoCirurgiaPosEscala(
			MbcSolicitacaoCirurgiaPosEscala solicitacaoCirurgiaPosEscala) {
		this.solicitacaoCirurgiaPosEscala = solicitacaoCirurgiaPosEscala;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ESP_SEQ", nullable = false, insertable = false, updatable = false)
	public AghEspecialidades getEspecialidade() {
		return this.especialidade;
	}

	public void setEspecialidade(AghEspecialidades especialidade) {
		this.especialidade = especialidade;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_EXCLUI", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_EXCLUI", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorExclusao() {
		return this.servidorExclusao;
	}

	public void setServidorExclusao(RapServidores servidorExclusao) {
		this.servidorExclusao = servidorExclusao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "CSP_CNV_CODIGO", referencedColumnName = "CNV_CODIGO", nullable = false),
			@JoinColumn(name = "CSP_SEQ", referencedColumnName = "SEQ", nullable = false) })
	public FatConvenioSaudePlano getConvenioSaudePlano() {
		return this.convenioSaudePlano;
	}

	public void setConvenioSaudePlano(FatConvenioSaudePlano convenioSaudePlano) {
		this.convenioSaudePlano = convenioSaudePlano;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ", nullable = false)
	public AghUnidadesFuncionais getUnidadeFuncional() {
		return this.unidadeFuncional;
	}

	public void setUnidadeFuncional(AghUnidadesFuncionais unidadeFuncional) {
		this.unidadeFuncional = unidadeFuncional;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO", nullable = false)
	public AipPacientes getPaciente() {
		return this.paciente;
	}

	public void setPaciente(AipPacientes paciente) {
		this.paciente = paciente;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATA", nullable = false, length = 9)
	public Date getData() {
		return this.data;
	}

	public void setData(Date data) {
		this.data = data;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "EPR_PCI_SEQ", referencedColumnName = "PCI_SEQ", nullable = false),
			@JoinColumn(name = "EPR_ESP_SEQ", referencedColumnName = "ESP_SEQ", nullable = false) })
	public MbcEspecialidadeProcCirgs getMbcEspecialidadeProcCirgs() {
		return this.mbcEspecialidadeProcCirgs;
	}

	public void setMbcEspecialidadeProcCirgs(MbcEspecialidadeProcCirgs mbcEspecialidadeProcCirgs) {
		this.mbcEspecialidadeProcCirgs = mbcEspecialidadeProcCirgs;
	}

	@Column(name = "PUC_IND_FUNCAO_PROF", nullable = false, insertable = false, updatable = false, length=3)
	@Enumerated(EnumType.STRING)
	public DominioFuncaoProfissional getPucIndFuncaoProf() {
		return this.pucIndFuncaoProf;
	}

	public void setPucIndFuncaoProf(DominioFuncaoProfissional pucIndFuncaoProf) {
		this.pucIndFuncaoProf = pucIndFuncaoProf;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "HORA_PREV_INICIO", length = 7)
	public Date getHoraPrevisaoInicio() {
		return this.horaPrevisaoInicio;
	}

	public void setHoraPrevisaoInicio(Date horaPrevisaoInicio) {
		this.horaPrevisaoInicio = horaPrevisaoInicio;
	}

	@Column(name = "TEMPO_PREV_HORAS", precision = 3, scale = 0)
	public Short getTempoPrevistoHora() {
		return this.tempoPrevistoHora;
	}

	public void setTempoPrevistoHora(Short tempoPrevistoHora) {
		this.tempoPrevistoHora = tempoPrevistoHora;
	}

	@Column(name = "TEMPO_PREV_MINUTOS", precision = 2, scale = 0)
	public Byte getTempoPrevistoMinuto() {
		return this.tempoPrevistoMinuto;
	}

	public void setTempoPrevistoMinuto(Byte tempoPrevistoMinuto) {
		this.tempoPrevistoMinuto = tempoPrevistoMinuto;
	}

	@Column(name = "MEDICO_SOLICITANTE", length = 120)
	@Length(max = 120)
	public String getMedicoSolicitante() {
		return this.medicoSolicitante;
	}

	public void setMedicoSolicitante(String medicoSolicitante) {
		this.medicoSolicitante = medicoSolicitante;
	}

	@Column(name = "IND_SOLIC_ATENDIDA", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getSolicitacaoAtendida() {
		return this.solicitacaoAtendida;
	}

	public void setSolicitacaoAtendida(Boolean solicitacaoAtendida) {
		this.solicitacaoAtendida = solicitacaoAtendida;
	}

	@Column(name = "SOLICITACOES_ESPECIAIS", length = 500)
	@Length(max = 500)
	public String getSolicitacoesEspeciais() {
		return this.solicitacoesEspeciais;
	}

	public void setSolicitacoesEspeciais(String solicitacoesEspeciais) {
		this.solicitacoesEspeciais = solicitacoesEspeciais;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTHR_SOLIC_ATENDIDA")
	public Date getDataSolicitacaoAtendida() {
		return this.dataSolicitacaoAtendida;
	}

	public void setDataSolicitacaoAtendida(Date dataSolicitacaoAtendida) {
		this.dataSolicitacaoAtendida = dataSolicitacaoAtendida;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DTHR_INCLUSAO_LISTA", nullable = false)
	public Date getDataInclusaoLista() {
		return this.dataInclusaoLista;
	}

	public void setDataInclusaoLista(Date dataInclusaoLista) {
		this.dataInclusaoLista = dataInclusaoLista;
	}

	@Column(name = "IND_SOLIC_EXCLUIDA", nullable = false, length=1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getSolicitacaoExcluida() {
		return this.solicitacaoExcluida;
	}

	public void setSolicitacaoExcluida(Boolean solicitacaoExcluida) {
		this.solicitacaoExcluida = solicitacaoExcluida;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_SOLIC_EXCLUIDA")
	public Date getDataSolicitacaoExcluida() {
		return this.dataSolicitacaoExcluida;
	}

	public void setDataSolicitacaoExcluida(Date dataSolicitacaoExcluida) {
		this.dataSolicitacaoExcluida = dataSolicitacaoExcluida;
	}

	@Column(name = "JUSTIF_EXCLUSAO", length = 500)
	@Length(max = 500)
	public String getJustificativaExclusao() {
		return this.justificativaExclusao;
	}

	public void setJustificativaExclusao(String justificativaExclusao) {
		this.justificativaExclusao = justificativaExclusao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "solicitacaoCirurgiaPosEscala")
	public Set<MbcSolicitacaoCirurgiaPosEscala> getSolicitacoesCirurgiaPosEscala() {
		return this.solicitacoesCirurgiaPosEscala;
	}

	public void setSolicitacoesCirurgiaPosEscala(
			Set<MbcSolicitacaoCirurgiaPosEscala> solicitacoesCirurgiaPosEscala) {
		this.solicitacoesCirurgiaPosEscala = solicitacoesCirurgiaPosEscala;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "solicitacaoCirurgiaPosEscala")
	public Set<MbcCirurgias> getCirurgias() {
		return this.cirurgias;
	}

	public void setCirurgias(Set<MbcCirurgias> cirurgias) {
		this.cirurgias = cirurgias;
	}
	
	/*
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}
	*/

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((seq == null) ? 0 : seq.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		MbcSolicitacaoCirurgiaPosEscala other = (MbcSolicitacaoCirurgiaPosEscala) obj;
		if (seq == null) {
			if (other.seq != null) {
				return false;
			}
		} else if (!seq.equals(other.seq)) {
			return false;
		}
		return true;
	}

	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void validarDados() {
		if (this.getTempoPrevistoMinuto() != null
				&& this.getTempoPrevistoMinuto() >= 60) {
			throw new BaseRuntimeException(MbcSolicitacaoCirurgiaPosEscalaExceptionCode.MBC_SPE_CK3);
		}
		
		if(this.getUnidadeFuncional() == null){
			throw new BaseRuntimeException(MbcSolicitacaoCirurgiaPosEscalaExceptionCode.MBC_SPE_UNF_FK1_NOTNULL);
		}

		if(this.getEspecialidade() == null){
			throw new BaseRuntimeException(MbcSolicitacaoCirurgiaPosEscalaExceptionCode.MBC_SPE_ESP_FK1_NOTNULL);
		}
		
		if (getMbcProfAtuaUnidCirgs().getId().getIndFuncaoProf() == null) {
			throw new BaseRuntimeException(MbcSolicitacaoCirurgiaPosEscalaExceptionCode.MBC_SPE_PUC_CK1_NOTNULL);
		}
		
		if (!(this.getUnidadeFuncional().getSeq().equals(this.getMbcProfAtuaUnidCirgs().getId().getUnfSeq()))){
			throw new BaseRuntimeException(MbcSolicitacaoCirurgiaPosEscalaExceptionCode.MBC_SPE_CK4);
		}
		if(!(this.getEspecialidade().getSeq().equals(this.getMbcEspecialidadeProcCirgs().getId().getEspSeq()))){
			throw new BaseRuntimeException(MbcSolicitacaoCirurgiaPosEscalaExceptionCode.MBC_SPE_CK5);
		}
	}

	public enum Fields {

		SEQ("seq"),
		SERVIDOR_ATENDENTE("servidorAtendente"),
		SOLICITACAO_CIRURGIA_POS_ESCALA("solicitacaoCirurgiaPosEscala"),
		ESPECIALIDADE("especialidade"),
		SERVIDOR_EXCLUSAO("servidorExclusao"),
		SERVIDOR("servidor"),
		CONVENIO_SAUDE_PLANO("convenioSaudePlano"),
		PACIENTE("paciente"),
		CRIADO_EM("criadoEm"),
		DATA("data"),
		FUNCAO_PROFESSOR("pucIndFuncaoProf"),
		HORA_PREVISAO_INICIO("horaPrevisaoInicio"),
		TEMPO_PREVISTO_HORA("tempoPrevistoHora"),
		TEMPO_PREVISTO_MINUTO("tempoPrevistoMinuto"),
		MEDICO_SOLICITANTE("medicoSolicitante"),
		SOLICITACAO_ATENDIDA("solicitacaoAtendida"),
		SOLICITACOES_ESPECIAIS("solicitacoesEspeciais"),
		DATA_SOLICITACAO_ATENDIDA("dataSolicitacaoAtendida"),
		DATA_INCLUSAO_LISTA("dataInclusaoLista"),
		SOLICITACAO_EXCLUIDA("solicitacaoExcluida"),
		DATA_SOLICITACAO_EXCLUIDA("dataSolicitacaoExcluida"),
		JUSTIFICATIVA_EXCLUSAO("justificativaExclusao"),
		SOLICITACOES_CIRURGIA_POS_ESCALA("solicitacoesCirurgiaPosEscala"),
		CIRURGIAS("cirurgias");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}

}

package br.gov.mec.aghu.model;

// Generated 28/03/2011 14:28:14 by Hibernate Tools 3.3.0.GA

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;


import org.apache.commons.lang3.builder.ToStringBuilder;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSimNao;
import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntityCodigo;

/**
 * AelSitItemSolicitacoes generated by hbm2java
 */

@Entity
@Table(name = "AEL_SIT_ITEM_SOLICITACOES", schema = "AGH")
@org.hibernate.annotations.Cache(usage=org.hibernate.annotations.CacheConcurrencyStrategy.TRANSACTIONAL)
public class AelSitItemSolicitacoes extends BaseEntityCodigo<String> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 6343900571481768677L;
	private String codigo;
	private String descricao;
	private DominioSituacao indSituacao;
	private Date criadoEm;
	private RapServidores servidor;
	private Boolean indPermiteManterResultado;
	private Boolean indMostraSolicitarExames;
	private Boolean indAlertaExameJaSolic;
	private List<AelMatrizSituacao> matrizesSituacao;

	public AelSitItemSolicitacoes() {
		matrizesSituacao = new ArrayList<AelMatrizSituacao>();
	}
	
	public AelSitItemSolicitacoes(String codigo, String descricao,
			DominioSituacao indSituacao, Date criadoEm, RapServidores servidor,
			Boolean indPermiteManterResultado,
			Boolean indMostraSolicitarExames, Boolean indAlertaExameJaSolic,
			List<AelMatrizSituacao> matrizesSituacao) {
		this.codigo = codigo;
		this.descricao = descricao;
		this.indSituacao = indSituacao;
		this.criadoEm = criadoEm;
		this.servidor = servidor;
		this.indPermiteManterResultado = indPermiteManterResultado;
		this.indMostraSolicitarExames = indMostraSolicitarExames;
		this.indAlertaExameJaSolic = indAlertaExameJaSolic;
		matrizesSituacao = new ArrayList<AelMatrizSituacao>();
	}

	public AelSitItemSolicitacoes(String codigo, String descricao, DominioSituacao indSituacao) {
		this.codigo = codigo;
		this.descricao = descricao;
		this.indSituacao = indSituacao;
		matrizesSituacao = new ArrayList<AelMatrizSituacao>();
	}

	@Id
	@Column(name = "CODIGO", unique = true, nullable = false, length = 2)
	@Length(max = 2)
	public String getCodigo() {
		return this.codigo;
	}

	public void setCodigo(String codigo) {
		this.codigo = codigo;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 45)
	@Length(max = 45)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}
	
	public void setServidor(RapServidores s) {
		this.servidor = s;
	}

	@Column(name = "IND_PERMITE_MANTER_RESULTADO", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndPermiteManterResultado() {
		return this.indPermiteManterResultado;
	}
	
	@Transient
	public DominioSimNao getIndPermiteManterResultadoDominio() {
		if(indPermiteManterResultado != null) {
			return DominioSimNao.getInstance(this.indPermiteManterResultado);
		}
		return null;
	}

	public void setIndPermiteManterResultado(Boolean e) {
		this.indPermiteManterResultado = e;
	}
	
	public void setIndPermiteManterResultadoDominio(DominioSimNao dominio) {
		this.indPermiteManterResultado = dominio.isSim();
	}

	@Column(name = "IND_ALERTA_EXAME_JA_SOLIC", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndAlertaExameJaSolic() {
		return this.indAlertaExameJaSolic;
	}
	
	@Transient
	public DominioSimNao getIndAlertaExameJaSolicDominio() {
		if(indAlertaExameJaSolic != null) {
			return DominioSimNao.getInstance(this.indAlertaExameJaSolic);
		}
		return null;
	}

	public void setIndAlertaExameJaSolic(Boolean e) {
		this.indAlertaExameJaSolic = e;
	}
	
	public void setIndAlertaExameJaSolicDominio(DominioSimNao dominio) {
		this.indAlertaExameJaSolic = dominio.isSim();
		}

	@OneToMany(fetch = FetchType.LAZY, mappedBy="situacaoExame")
	public List<AelMatrizSituacao> getMatrizesSituacao() {
		return matrizesSituacao;
		}
	
	public void setMatrizesSituacao(List<AelMatrizSituacao> matrizesSituacao) {
		this.matrizesSituacao = matrizesSituacao;
	}
	
	
	public enum Fields {
		
		CODIGO("codigo"),
		DESCRICAO("descricao"),
		SITUACAO("indSituacao"),
		CRIADO_EM("criadoEm"),
		SERVIDOR("servidor"),
		PERMITE_MANTER_RESULTADO("indPermiteManterResultado"),
		MOSTRA_SOLICITAR_EXAMES("indMostraSolicitarExames"),
		ALERTA_EXAME_JA_SOLIC("indAlertaExameJaSolic"),;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}


	@Override
	public String toString() {
		ToStringBuilder asString = new ToStringBuilder(this);
		
		asString.append("codigo", this.getCodigo());
		
		return asString.toString();
	}
	
	@Column(name = "IND_MOSTRA_SOLICITAR_EXAMES", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndMostraSolicitarExames() {
		return indMostraSolicitarExames;
	}

	public void setIndMostraSolicitarExames(Boolean indMostraSolicitarExames) {
		this.indMostraSolicitarExames = indMostraSolicitarExames;
	}
	
	@Transient
	public DominioSimNao getIndMostraSolicitarExamesDominio() {
		if(indMostraSolicitarExames != null) {
			return DominioSimNao.getInstance(this.indMostraSolicitarExames);
		}
		return null;
	}
	
	public void setIndMostraSolicitarExamesDominio(DominioSimNao dominio) {
		if (dominio != null) {
			this.indMostraSolicitarExames = dominio.isSim();
		}
	}
	
	
}

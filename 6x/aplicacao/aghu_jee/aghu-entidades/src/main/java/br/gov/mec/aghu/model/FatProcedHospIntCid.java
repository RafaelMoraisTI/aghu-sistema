package br.gov.mec.aghu.model;

// Generated 13/05/2010 14:04:30 by Hibernate Tools 3.2.5.Beta

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Version;


import br.gov.mec.aghu.dominio.DominioTipoPlano;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * FatProcedHospIntCid generated by hbm2java
 */

@Entity
@Table(name = "FAT_PROCED_HOSP_INT_CID", schema = "AGH")
public class FatProcedHospIntCid extends BaseEntityId<FatProcedHospIntCidId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1195314415662513541L;
	private FatProcedHospIntCidId id;
	private FatProcedHospInternos procedimentoHospitalarInterno;
	private AghCid cid;
	private DominioTipoPlano validade;
	private Boolean principal;
	private Integer version;

	public FatProcedHospIntCid() {
	}

	public FatProcedHospIntCid(FatProcedHospIntCidId id,
			FatProcedHospInternos fatProcedHospInternos) {
		this.id = id;
		//this.procedimentoHospitalarInterno = fatProcedHospInternos;
	}

	public FatProcedHospIntCid(FatProcedHospIntCidId id, DominioTipoPlano validade,
			Boolean principal) {
		this.id = id;
		//this.procedimentoHospitalarInterno = fatProcedHospInternos;
		this.validade = validade;
		this.principal = principal;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "phiSeq", column = @Column(name = "PHI_SEQ", nullable = false, precision = 6, scale = 0)),
			@AttributeOverride(name = "cidSeq", column = @Column(name = "CID_SEQ", nullable = false, precision = 5, scale = 0)) })
	public FatProcedHospIntCidId getId() {
		return this.id;
	}

	public void setId(FatProcedHospIntCidId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PHI_SEQ", insertable = false, updatable = false)
	public FatProcedHospInternos getProcedimentoHospitalarInterno() {
		return procedimentoHospitalarInterno;
	}

	public void setProcedimentoHospitalarInterno(
			FatProcedHospInternos procedimentoHospitalarInterno) {
		this.procedimentoHospitalarInterno = procedimentoHospitalarInterno;
	}

	@Column(name = "IND_VALIDADE", length=1)
	@Enumerated(EnumType.STRING)
	public DominioTipoPlano getValidade() {
		return this.validade;
	}

	public void setValidade(DominioTipoPlano validade) {
		this.validade = validade;
	}

	@Column(name = "IND_PRINCIPAL", length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getPrincipal() {
		return this.principal;
	}

	public void setPrincipal(Boolean principal) {
		this.principal = principal;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CID_SEQ", nullable = false, insertable = false, updatable = false)
	public AghCid getCid() {
		return cid;
	}

	public void setCid(AghCid cid) {
		this.cid = cid;
	}	
	

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		FatProcedHospIntCid other = (FatProcedHospIntCid) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}

	public enum Fields {
		CID_SEQ("id.cidSeq"),
		PHI_SEQ("id.phiSeq"),
		VALIDADE("validade"),
		PRINCIPAL("principal"),
		CID("cid"),
		PROCED_HOSPITALAR_INTERNO("procedimentoHospitalarInterno");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}	

}

package br.gov.mec.aghu.model;

// Generated 14/09/2010 17:49:55 by Hibernate Tools 3.2.5.Beta

import java.math.BigDecimal;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MpmItemDietaSumario generated by hbm2java
 */
@Entity
@Table(name = "MPM_ITEM_DIETA_SUMARIOS", schema = "AGH")

public class MpmItemDietaSumario extends BaseEntityId<MpmItemDietaSumarioId> implements java.io.Serializable {
	/**
	 * 
	 */
	private static final long serialVersionUID = -6667143810757353021L;
	private MpmItemDietaSumarioId id;
	private MpmTipoFrequenciaAprazamento tipoFreqAprazamento;
	private MpmItemPrescricaoSumario itemPrescricaoSumario;
	private AnuTipoItemDieta tipoItemDieta;
	private Boolean indAvalNutricionista;
	private BigDecimal quantidade;
	private Short frequencia;
	private String observacao;
	private Byte numVezes;
	private Boolean indBombaInfusao;

	public MpmItemDietaSumario() {
	}

	public MpmItemDietaSumario(MpmItemDietaSumarioId id,
			MpmItemPrescricaoSumario itemPrescricaoSumario, AnuTipoItemDieta tipoItemDieta,
			Boolean indAvalNutricionista, Boolean indBombaInfusao) {
		this.id = id;
		this.itemPrescricaoSumario = itemPrescricaoSumario;
		this.tipoItemDieta = tipoItemDieta;
		this.indAvalNutricionista = indAvalNutricionista;
		this.indBombaInfusao = indBombaInfusao;
	}

	public MpmItemDietaSumario(MpmItemDietaSumarioId id,
			MpmTipoFrequenciaAprazamento tipoFreqAprazamento,
			MpmItemPrescricaoSumario itemPrescricaoSumario, AnuTipoItemDieta tipoItemDieta,
			Boolean indAvalNutricionista, BigDecimal quantidade,
			Short frequencia, String observacao, Byte numVezes,
			Boolean indBombaInfusao) {
		this.id = id;
		this.tipoFreqAprazamento = tipoFreqAprazamento;
		this.itemPrescricaoSumario = itemPrescricaoSumario;
		this.tipoItemDieta = tipoItemDieta;
		this.indAvalNutricionista = indAvalNutricionista;
		this.quantidade = quantidade;
		this.frequencia = frequencia;
		this.observacao = observacao;
		this.numVezes = numVezes;
		this.indBombaInfusao = indBombaInfusao;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "ituSeq", column = @Column(name = "ITU_SEQ", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false, precision = 5, scale = 0)) })
	public MpmItemDietaSumarioId getId() {
		return this.id;
	}

	public void setId(MpmItemDietaSumarioId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TFQ_SEQ")
	public MpmTipoFrequenciaAprazamento getTipoFreqAprazamento() {
		return this.tipoFreqAprazamento;
	}

	public void setTipoFreqAprazamento(MpmTipoFrequenciaAprazamento tipoFreqAprazamento) {
		this.tipoFreqAprazamento = tipoFreqAprazamento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ITU_SEQ", nullable = false, insertable = false, updatable = false)
	public MpmItemPrescricaoSumario getItemPrescricaoSumario() {
		return this.itemPrescricaoSumario;
	}

	public void setItemPrescricaoSumario(MpmItemPrescricaoSumario itemPrescricaoSumario) {
		this.itemPrescricaoSumario = itemPrescricaoSumario;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TID_SEQ", referencedColumnName = "SEQ", nullable = false)
	public AnuTipoItemDieta getTipoItemDieta() {
		return tipoItemDieta;
	}

	public void setTipoItemDieta(AnuTipoItemDieta tipoItemDieta) {
		this.tipoItemDieta = tipoItemDieta;
	}
	

	@Column(name = "IND_AVAL_NUTRICIONISTA", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndAvalNutricionista() {
		return this.indAvalNutricionista;
	}

	public void setIndAvalNutricionista(Boolean indAvalNutricionista) {
		this.indAvalNutricionista = indAvalNutricionista;
	}

	@Column(name = "QUANTIDADE", precision = 7)
	public BigDecimal getQuantidade() {
		return this.quantidade;
	}

	public void setQuantidade(BigDecimal quantidade) {
		this.quantidade = quantidade;
	}

	@Column(name = "FREQUENCIA", precision = 3, scale = 0)
	public Short getFrequencia() {
		return this.frequencia;
	}

	public void setFrequencia(Short frequencia) {
		this.frequencia = frequencia;
	}

	@Column(name = "OBSERVACAO", length = 500)
	@Length(max = 500, message="A observação possui mais de 500 caracteres.")
	public String getObservacao() {
		return this.observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}

	@Column(name = "NUM_VEZES", precision = 2, scale = 0)
	public Byte getNumVezes() {
		return this.numVezes;
	}

	public void setNumVezes(Byte numVezes) {
		this.numVezes = numVezes;
	}

	@Column(name = "IND_BOMBA_INFUSAO", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndBombaInfusao() {
		return this.indBombaInfusao;
	}

	public void setIndBombaInfusao(Boolean indBombaInfusao) {
		this.indBombaInfusao = indBombaInfusao;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		MpmItemDietaSumario other = (MpmItemDietaSumario) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}

	public enum Fields {
		ID("id"),
		TIPO_FREQ_APRAZAMENTO("tipoFreqAprazamento"),
		ITEM_PRESCRICAO_SUMARIO("itemPrescricaoSumario"),
		TIPO_ITEM_DIETA("tipoItemDieta"),
		IND_AVAL_NUTRICIONISTA("indAvalNutricionista"),
		QUANTIDADE("quantidade"),
		FREQUENCIA("frequencia"),
		OBSERVACAO("observacao"),
		NUM_VEZES("numVezes"),
		IND_BOMBA_INFUSAO("indBombaInfusao");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}
	
	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void validarDados(){
	
		//DATA DEFAULT
		if(this.indAvalNutricionista == null){
			this.indAvalNutricionista = false;
		}
		if(this.indBombaInfusao == null){
			this.indBombaInfusao = false;
		}
	}
	
}

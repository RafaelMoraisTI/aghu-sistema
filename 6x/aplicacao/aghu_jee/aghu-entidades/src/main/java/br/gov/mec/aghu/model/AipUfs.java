package br.gov.mec.aghu.model;

// Generated 24/09/2009 17:21:40 by Hibernate Tools 3.2.5.Beta

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntity;

/**
 * AipUfs generated by hbm2java
 */
@Entity
@Table(name = "AIP_UFS", schema = "AGH")
public class AipUfs implements BaseEntity {

	/**
	 * 
	 */
	private static final long serialVersionUID = 583561788397246021L;

	private String sigla;

	private AipPaises pais;

	private String nome;

	private Boolean indCidade;

	private Short codUfIbge;

	private Integer version;

	public AipUfs() {
	}

	public AipUfs(String sigla, AipPaises pais, String nome,
			Boolean indCidade) {
		this.sigla = sigla;
		this.pais = pais;
		this.nome = nome;
		this.indCidade = indCidade;
	}

	public AipUfs(String sigla, AipPaises pais, String nome,
			Boolean indCidade, Short codUfIbge) {
		this.sigla = sigla;
		this.pais = pais;
		this.nome = nome;
		this.indCidade = indCidade;
		this.codUfIbge = codUfIbge;
	}

	@Id
	@Column(name = "SIGLA", nullable = false, length = 2)
	@Length(max = 2)
	public String getSigla() {
		return this.sigla;
	}

	public void setSigla(String sigla) {
		this.sigla = (sigla == null ? null : sigla.toUpperCase());
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "PAS_SIGLA")
	public AipPaises getPais() {
		return this.pais;
	}

	public void setPais(AipPaises pais) {
		this.pais = pais;
	}

	@Column(name = "NOME", nullable = false, length = 60)
	@Length(max = 60)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = (nome == null ? null : nome.toUpperCase());
	}

	@Column(name = "IND_CIDADE", nullable = false, length=1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndCidade() {
		return this.indCidade;
	}

	public void setIndCidade(Boolean indCidade) {
		this.indCidade = indCidade;
	}

	@Column(name = "COD_UF_IBGE", precision = 3, scale = 0)
	public Short getCodUfIbge() {
		return this.codUfIbge;
	}

	public void setCodUfIbge(Short codUfIbge) {
		this.codUfIbge = codUfIbge;
	}

	/**
	 * Campo sintético criado para mapear diretamente este dominio booleano em
	 * um componente selectOneCheckBox
	 * 
	 * @author dlaks
	 * @return
	 */
	@Transient
	public boolean isCidade() {
		if (getIndCidade() != null) {
			return getIndCidade();
		} else {
			return Boolean.FALSE;
		}
	}
	
	@Transient
	public String getIndCidadeFormat(){
		if (getIndCidade() != null && getIndCidade()) {
			return "Sim";
		} else {
			return "Não";
		}
	}

	public void setCidade(boolean valor) {
		setIndCidade(valor);
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	public enum Fields {
		SIGLA("sigla"),
		NOME("nome"),
		SIGLA_PAIS("pais.sigla"),
		IND_CIDADE("indCidade"),
		PAIS("pais");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSigla() == null) ? 0 : getSigla().hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AipUfs)) {
			return false;
		}
		AipUfs other = (AipUfs) obj;
		if (getSigla() == null) {
			if (other.getSigla() != null) {
				return false;
			}
		} else if (!getSigla().equals(other.getSigla())) {
			return false;
		}
		return true;
	}

	

}

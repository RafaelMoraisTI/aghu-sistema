package br.gov.mec.aghu.model;

// Generated 14/09/2010 17:49:55 by Hibernate Tools 3.2.5.Beta

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.exception.BusinessExceptionCode;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MpmItemHemoterapiaSumario generated by hbm2java
 */
@Entity
@Table(name = "MPM_ITEM_HEMOTERAPIA_SUMARIOS", schema = "AGH")

public class MpmItemHemoterapiaSumario extends BaseEntityId<MpmItemHemoterapiaSumarioId> implements java.io.Serializable {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1515195534353910076L;
	private MpmItemHemoterapiaSumarioId id;
	private MpmTipoFrequenciaAprazamento tipoFreqAprazamento;
	private MpmItemPrescricaoSumario itemPrescricaoSumario;
	private Boolean indIrradiado;
	private Boolean indFiltrado;
	private Boolean indLavado;
	private Short frequencia;
	private Short qtdeAplicacoes;
	private Byte qtdeUnidades;
	private Short qtdeMl;
	private AbsComponenteSanguineo componenteSanguineo;
	private AbsProcedHemoterapico procedimentoHemoterapico;
	private String observacao;
	private Boolean indAferese;

	private enum ItemHemoterapiaSumariosExceptionCode implements BusinessExceptionCode {
		MPM_IHS_CK4
	}
	
	public MpmItemHemoterapiaSumario() {
	}

	public MpmItemHemoterapiaSumario(MpmItemHemoterapiaSumarioId id,
			MpmItemPrescricaoSumario itemPrescricaoSumario,
			Boolean indIrradiado, Boolean indFiltrado, Boolean indLavado,
			Boolean indAferese) {
		this.id = id;
		this.itemPrescricaoSumario = itemPrescricaoSumario;
		this.indIrradiado = indIrradiado;
		this.indFiltrado = indFiltrado;
		this.indLavado = indLavado;
		this.indAferese = indAferese;
	}

	public MpmItemHemoterapiaSumario(MpmItemHemoterapiaSumarioId id,
			MpmTipoFrequenciaAprazamento tipoFreqAprazamento,
			MpmItemPrescricaoSumario itemPrescricaoSumario,
			Boolean indIrradiado, Boolean indFiltrado, Boolean indLavado,
			Short frequencia, Short qtdeAplicacoes, Byte qtdeUnidades,
			Short qtdeMl, AbsComponenteSanguineo componenteSanguineo, AbsProcedHemoterapico procedimentoHemoterapico,
			String observacao, Boolean indAferese) {
		this.id = id;
		this.tipoFreqAprazamento = tipoFreqAprazamento;
		this.itemPrescricaoSumario = itemPrescricaoSumario;
		this.indIrradiado = indIrradiado;
		this.indFiltrado = indFiltrado;
		this.indLavado = indLavado;
		this.frequencia = frequencia;
		this.qtdeAplicacoes = qtdeAplicacoes;
		this.qtdeUnidades = qtdeUnidades;
		this.qtdeMl = qtdeMl;
		this.componenteSanguineo = componenteSanguineo;
		this.procedimentoHemoterapico = procedimentoHemoterapico;
		this.observacao = observacao;
		this.indAferese = indAferese;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "ituSeq", column = @Column(name = "ITU_SEQ", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false, precision = 5, scale = 0)) })
	public MpmItemHemoterapiaSumarioId getId() {
		return this.id;
	}

	public void setId(MpmItemHemoterapiaSumarioId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TFQ_SEQ")
	public MpmTipoFrequenciaAprazamento getTipoFreqAprazamento() {
		return this.tipoFreqAprazamento;
	}

	public void setTipoFreqAprazamento(MpmTipoFrequenciaAprazamento tipoFreqAprazamento) {
		this.tipoFreqAprazamento = tipoFreqAprazamento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ITU_SEQ", nullable = false, insertable = false, updatable = false)
	public MpmItemPrescricaoSumario getItemPrescricaoSumario() {
		return this.itemPrescricaoSumario;
	}

	public void setItemPrescricaoSumario(MpmItemPrescricaoSumario itemPrescricaoSumario) {
		this.itemPrescricaoSumario = itemPrescricaoSumario;
	}

	@Column(name = "IND_IRRADIADO", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndIrradiado() {
		return this.indIrradiado;
	}

	public void setIndIrradiado(Boolean indIrradiado) {
		this.indIrradiado = indIrradiado;
	}

	@Column(name = "IND_FILTRADO", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndFiltrado() {
		return this.indFiltrado;
	}

	public void setIndFiltrado(Boolean indFiltrado) {
		this.indFiltrado = indFiltrado;
	}

	@Column(name = "IND_LAVADO", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndLavado() {
		return this.indLavado;
	}

	public void setIndLavado(Boolean indLavado) {
		this.indLavado = indLavado;
	}

	@Column(name = "FREQUENCIA", precision = 3, scale = 0)
	public Short getFrequencia() {
		return this.frequencia;
	}

	public void setFrequencia(Short frequencia) {
		this.frequencia = frequencia;
	}

	@Column(name = "QTDE_APLICACOES", precision = 3, scale = 0)
	public Short getQtdeAplicacoes() {
		return this.qtdeAplicacoes;
	}

	public void setQtdeAplicacoes(Short qtdeAplicacoes) {
		this.qtdeAplicacoes = qtdeAplicacoes;
	}

	@Column(name = "QTDE_UNIDADES", precision = 2, scale = 0)
	public Byte getQtdeUnidades() {
		return this.qtdeUnidades;
	}

	public void setQtdeUnidades(Byte qtdeUnidades) {
		this.qtdeUnidades = qtdeUnidades;
	}

	@Column(name = "QTDE_ML", precision = 4, scale = 0)
	public Short getQtdeMl() {
		return this.qtdeMl;
	}

	public void setQtdeMl(Short qtdeMl) {
		this.qtdeMl = qtdeMl;
	}

		
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CSA_CODIGO", referencedColumnName = "CODIGO")
	public AbsComponenteSanguineo getComponenteSanguineo() {
		return componenteSanguineo;
	}

	public void setComponenteSanguineo(AbsComponenteSanguineo componenteSanguineo) {
		this.componenteSanguineo = componenteSanguineo;
	}
	

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PHE_CODIGO", referencedColumnName = "CODIGO")
	public AbsProcedHemoterapico getProcedimentoHemoterapico() {
		return procedimentoHemoterapico;
	}

	public void setProcedimentoHemoterapico(AbsProcedHemoterapico procedimentoHemoterapico) {
		this.procedimentoHemoterapico = procedimentoHemoterapico;
	}
	

	@Column(name = "OBSERVACAO", length = 60)
	@Length(max = 60, message="A observação possui mais de 60 caracteres.")
	public String getObservacao() {
		return this.observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}

	@Column(name = "IND_AFERESE", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndAferese() {
		return this.indAferese;
	}

	public void setIndAferese(Boolean indAferese) {
		this.indAferese = indAferese;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		MpmItemHemoterapiaSumario other = (MpmItemHemoterapiaSumario) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}

	public enum Fields {
		ID("id"),
		TIPO_FREQ_APRAZAMENTO("tipoFreqAprazamento"),
		ITEM_PRESCRICAO_SUMARIO("itemPrescricaoSumario"),
		IND_IRRADIADO("indIrradiado"),
		IND_FILTRADO("indFiltrado"),
		IND_LAVADO("indLavado"),
		FREQUENCIA("frequencia"),
		QTDE_APLICACOES("qtdeAplicacoes"),
		QTDE_UNIDADES("qtdeUnidades"),
		QTDE_ML("qtdeMl"),
		COMPONENTE_SANGUINEO("componenteSanguineo"),
		PROCEDIMENTO_HEMOTERAPICO("procedimentoHemoterapico"),
		OBSERVACAO("observacao"),
		IND_AFERESE("indAferese");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void validacoes() {
		
		if(!((this.procedimentoHemoterapico != null && this.componenteSanguineo == null) 
				|| (this.procedimentoHemoterapico == null && this.componenteSanguineo != null)
				|| (this.procedimentoHemoterapico == null && this.componenteSanguineo == null))){
			throw new BaseRuntimeException(ItemHemoterapiaSumariosExceptionCode.MPM_IHS_CK4);
		}
	}
	
}

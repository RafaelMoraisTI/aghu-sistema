package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MpaCadOrdExame generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mpaCoxSq1", sequenceName="AGH.MPA_COX_SQ1", allocationSize = 1)
@Table(name = "MPA_CAD_ORD_EXAMES", schema = "AGH")
public class MpaCadOrdExame extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 990324922006383394L;
	private Integer seq;
	private Integer version;
	private RapServidores rapServidores;
	private MpaCadExameDiagnostico mpaCadExameDiagnostico;
	private Date criadoEm;
	private String informacoesClinicas;
	private Set<MptPrescricaoExame> mptPrescricaoExamees = new HashSet<MptPrescricaoExame>(0);
	private Set<MpaUsoOrdExame> mpaUsoOrdExamees = new HashSet<MpaUsoOrdExame>(0);
	
	// FIXME Implementar este relacionamento
//	private Set<MpaCadOrdItemExame> mpaCadOrdItemExamees = new HashSet<MpaCadOrdItemExame>(0);

	public MpaCadOrdExame() {
	}

	public MpaCadOrdExame(Integer seq, RapServidores rapServidores, MpaCadExameDiagnostico mpaCadExameDiagnostico, Date criadoEm) {
		this.seq = seq;
		this.rapServidores = rapServidores;
		this.mpaCadExameDiagnostico = mpaCadExameDiagnostico;
		this.criadoEm = criadoEm;
	}

	public MpaCadOrdExame(Integer seq, RapServidores rapServidores, MpaCadExameDiagnostico mpaCadExameDiagnostico, Date criadoEm,
			String informacoesClinicas, Set<MptPrescricaoExame> mptPrescricaoExamees,
//			Set<MpaCadOrdItemExame> mpaCadOrdItemExamees, 
			Set<MpaUsoOrdExame> mpaUsoOrdExamees) {
		this.seq = seq;
		this.rapServidores = rapServidores;
		this.mpaCadExameDiagnostico = mpaCadExameDiagnostico;
		this.criadoEm = criadoEm;
		this.informacoesClinicas = informacoesClinicas;
		this.mptPrescricaoExamees = mptPrescricaoExamees;
//		this.mpaCadOrdItemExamees = mpaCadOrdItemExamees;
		this.mpaUsoOrdExamees = mpaUsoOrdExamees;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mpaCoxSq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "CED_CIT_VPA_PTA_SEQ", referencedColumnName = "CIT_VPA_PTA_SEQ", nullable = false),
			@JoinColumn(name = "CED_CIT_VPA_SEQP", referencedColumnName = "CIT_VPA_SEQP", nullable = false),
			@JoinColumn(name = "CED_CIT_SEQP", referencedColumnName = "CIT_SEQP", nullable = false),
			@JoinColumn(name = "CED_SEQP", referencedColumnName = "SEQP", nullable = false) })
	public MpaCadExameDiagnostico getMpaCadExameDiagnostico() {
		return this.mpaCadExameDiagnostico;
	}

	public void setMpaCadExameDiagnostico(MpaCadExameDiagnostico mpaCadExameDiagnostico) {
		this.mpaCadExameDiagnostico = mpaCadExameDiagnostico;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "INFORMACOES_CLINICAS", length = 500)
	@Length(max = 500)
	public String getInformacoesClinicas() {
		return this.informacoesClinicas;
	}

	public void setInformacoesClinicas(String informacoesClinicas) {
		this.informacoesClinicas = informacoesClinicas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mpaCadOrdExame")
	public Set<MptPrescricaoExame> getMptPrescricaoExamees() {
		return this.mptPrescricaoExamees;
	}

	public void setMptPrescricaoExamees(Set<MptPrescricaoExame> mptPrescricaoExamees) {
		this.mptPrescricaoExamees = mptPrescricaoExamees;
	}

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mpaCadOrdExame")
//	public Set<MpaCadOrdItemExame> getMpaCadOrdItemExamees() {
//		return this.mpaCadOrdItemExamees;
//	}
//
//	public void setMpaCadOrdItemExamees(Set<MpaCadOrdItemExame> mpaCadOrdItemExamees) {
//		this.mpaCadOrdItemExamees = mpaCadOrdItemExamees;
//	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mpaCadOrdExame")
	public Set<MpaUsoOrdExame> getMpaUsoOrdExamees() {
		return this.mpaUsoOrdExamees;
	}

	public void setMpaUsoOrdExamees(Set<MpaUsoOrdExame> mpaUsoOrdExamees) {
		this.mpaUsoOrdExamees = mpaUsoOrdExamees;
	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		RAP_SERVIDORES("rapServidores"),
		MPA_CAD_EXAME_DIAGNOSTICOS("mpaCadExameDiagnostico"),
		CRIADO_EM("criadoEm"),
		INFORMACOES_CLINICAS("informacoesClinicas"),
		MPT_PRESCRICAO_EXAMEES("mptPrescricaoExamees"),
//		MPA_CAD_ORD_ITEM_EXAMEES("mpaCadOrdItemExamees"),
		MPA_USO_ORD_EXAMEES("mpaUsoOrdExamees");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MpaCadOrdExame)) {
			return false;
		}
		MpaCadOrdExame other = (MpaCadOrdExame) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

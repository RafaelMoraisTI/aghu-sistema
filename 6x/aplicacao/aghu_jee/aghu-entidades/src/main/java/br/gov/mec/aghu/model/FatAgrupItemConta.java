package br.gov.mec.aghu.model;

// Generated 15/03/2011 13:46:58 by Hibernate Tools 3.2.5.Beta

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * FatAgrupItensConta generated by hbm2java
 */
/**
 * @author dlaks
 *
 */
@Entity
@Table(name = "FAT_AGRUP_ITENS_CONTA_TMP", schema = "AGH")
@org.hibernate.annotations.Cache(usage=org.hibernate.annotations.CacheConcurrencyStrategy.TRANSACTIONAL)
public class FatAgrupItemConta extends BaseEntityId<FatAgrupItemContaId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5516922718326272919L;
	private FatAgrupItemContaId id;
	private FatItensProcedHospitalar itemProcedimentoHospitalar;
	private FatProcedHospInternos procedimentoHospitalarInterno;
	private FatContasHospitalares contaHospitalar;
	private Short quantidadeRealizada;
	private BigDecimal valor;
	private Short serVinCodigoResp;
	private Integer serMatriculaResp;
	private Integer iseSoeSeq;
	private Short iseSeqp;

	public FatAgrupItemConta() {
	}

	public FatAgrupItemConta(FatAgrupItemContaId id,
			FatProcedHospInternos fatProcedHospInternos,
			FatContasHospitalares fatContasHospitalares) {
		this.id = id;
		this.procedimentoHospitalarInterno = fatProcedHospInternos;
		this.contaHospitalar = fatContasHospitalares;
	}

	public FatAgrupItemConta(FatAgrupItemContaId id, 
			FatItensProcedHospitalar fatItensProcedHospitalar,
			FatProcedHospInternos fatProcedHospInternos,
			FatContasHospitalares fatContasHospitalares, Date dthrRealizado,
			Short quantidadeRealizada, BigDecimal valor,
			Short serVinCodigoResp, Integer serMatriculaResp,
			Integer iseSoeSeq, Short iseSeqp) {
		this.id = id;
		this.quantidadeRealizada = quantidadeRealizada;
		this.valor = valor;
		this.itemProcedimentoHospitalar = fatItensProcedHospitalar;
		this.procedimentoHospitalarInterno = fatProcedHospInternos;
		this.contaHospitalar = fatContasHospitalares;
		this.serVinCodigoResp = serVinCodigoResp;
		this.serMatriculaResp = serMatriculaResp;
		this.iseSoeSeq = iseSoeSeq;
		this.iseSeqp = iseSeqp;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "cthSeq", column = @Column(name = "CTH_SEQ", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "phiSeq", column = @Column(name = "PHI_SEQ", nullable = false, precision = 6, scale = 0)),
			@AttributeOverride(name = "dthrRealizado", column = @Column(name = "DTHR_REALIZADO", nullable = false, length = 7))})
	public FatAgrupItemContaId getId() {
		return this.id;
	}

	public void setId(FatAgrupItemContaId id) {
		this.id = id;
	}

	@Column(name = "QUANTIDADE_REALIZADA", precision = 4, scale = 0)
	public Short getQuantidadeRealizada() {
		return this.quantidadeRealizada;
	}

	public void setQuantidadeRealizada(Short quantidadeRealizada) {
		this.quantidadeRealizada = quantidadeRealizada;
	}

	@Column(name = "VALOR", precision = 14)
	public BigDecimal getValor() {
		return this.valor;
	}

	public void setValor(BigDecimal valor) {
		this.valor = valor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "IPH_PHO_SEQ", referencedColumnName = "PHO_SEQ"),
			@JoinColumn(name = "IPH_SEQ", referencedColumnName = "SEQ") })
	public FatItensProcedHospitalar getItemProcedimentoHospitalar() {
		return itemProcedimentoHospitalar;
	}

	public void setItemProcedimentoHospitalar(
			FatItensProcedHospitalar itemProcedimentoHospitalar) {
		this.itemProcedimentoHospitalar = itemProcedimentoHospitalar;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PHI_SEQ", nullable = false, insertable = false, updatable = false)
	public FatProcedHospInternos getProcedimentoHospitalarInterno() {
		return procedimentoHospitalarInterno;
	}

	public void setProcedimentoHospitalarInterno(
			FatProcedHospInternos procedimentoHospitalarInterno) {
		this.procedimentoHospitalarInterno = procedimentoHospitalarInterno;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CTH_SEQ", nullable = false, insertable = false, updatable = false)
	public FatContasHospitalares getContaHospitalar() {
		return contaHospitalar;
	}

	public void setContaHospitalar(FatContasHospitalares contaHospitalar) {
		this.contaHospitalar = contaHospitalar;
	}

	@Column(name = "SER_VIN_CODIGO_RESP", precision = 3, scale = 0)
	public Short getSerVinCodigoResp() {
		return this.serVinCodigoResp;
	}

	public void setSerVinCodigoResp(Short serVinCodigoResp) {
		this.serVinCodigoResp = serVinCodigoResp;
	}

	@Column(name = "SER_MATRICULA_RESP", precision = 7, scale = 0)
	public Integer getSerMatriculaResp() {
		return this.serMatriculaResp;
	}

	public void setSerMatriculaResp(Integer serMatriculaResp) {
		this.serMatriculaResp = serMatriculaResp;
	}

	@Column(name = "ISE_SOE_SEQ", precision = 8, scale = 0)
	public Integer getIseSoeSeq() {
		return this.iseSoeSeq;
	}

	public void setIseSoeSeq(Integer iseSoeSeq) {
		this.iseSoeSeq = iseSoeSeq;
	}

	@Column(name = "ISE_SEQP", precision = 3, scale = 0)
	public Short getIseSeqp() {
		return this.iseSeqp;
	}

	public void setIseSeqp(Short iseSeqp) {
		this.iseSeqp = iseSeqp;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		FatAgrupItemConta other = (FatAgrupItemConta) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}

	public enum Fields {
		
		CTH_SEQ("id.cthSeq"),
		VALOR("valor"),
		DTHR_REALIZADO("id.dthrRealizado"),
		PHI_SEQ("id.phiSeq");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
		
	}
	
}

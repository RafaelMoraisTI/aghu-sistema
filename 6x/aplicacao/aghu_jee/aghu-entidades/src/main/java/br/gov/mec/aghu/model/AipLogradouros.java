package br.gov.mec.aghu.model;

// Generated 24/09/2009 17:21:40 by Hibernate Tools 3.2.5.Beta

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.Version;

import org.apache.lucene.analysis.br.BrazilianAnalyzer;
import org.hibernate.annotations.Cascade;
import org.hibernate.search.annotations.Analyzer;
import org.hibernate.search.annotations.DocumentId;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.Index;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.Store;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.lucene.Fonetizador;
import br.gov.mec.aghu.core.persistence.BaseEntityCodigo;

 
/**
 * AipLogradouros generated by hbm2java
 */
@Entity
@Table(name = "AIP_LOGRADOUROS", schema = "AGH")
@Indexed
@SequenceGenerator(name="aipLogradourosSq1", sequenceName="AGH.AIP_LGR_SQ1", allocationSize = 1)

public class AipLogradouros extends BaseEntityCodigo<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -3041334826895653846L;
	private Integer codigo;
	private AipTipoLogradouros aipTipoLogradouro;
	private AipCidades aipCidade;
	private AipTituloLogradouros aipTituloLogradouro;
	private Short dstCodigo;
	private String nome;
	private Integer codigoBaseCorreio;
	private String complemento;
	private Integer version;
	
	private Integer cddCodigo;
	
	private Set<AipCepLogradouros> aipCepLogradouros = new HashSet<AipCepLogradouros>();
	private Set<MamAreaAtuacao> mamAreaAtuacoeses = new HashSet<MamAreaAtuacao>(
			0);
			
	private Set<AipEnderecosPacientes> aipEnderecosPacientes = new HashSet<AipEnderecosPacientes>(0);
	
	private Set<AipBairrosCepLogradouro> listaBairroCepLogradouros = new HashSet<AipBairrosCepLogradouro>();
	
	private DominioSituacao indSituacao;
	
	public AipLogradouros() {
	}

	public AipLogradouros(Integer codigo, AipTipoLogradouros aipTipoLogradouro,
			AipCidades aipCidade, String nome) {
		this.codigo = codigo;
		this.aipTipoLogradouro = aipTipoLogradouro;
		this.aipCidade = aipCidade;
		this.nome = nome;
	}

	public AipLogradouros(Integer codigo, AipTipoLogradouros aipTipoLogradouro,
			AipCidades aipCidade, AipTituloLogradouros aipTituloLogradouro,
			Short dstCodigo, String nome, Integer codigoBaseCorreio, String complemento) {
		this.codigo = codigo;
		this.aipTipoLogradouro = aipTipoLogradouro;
		this.aipCidade = aipCidade;
		this.aipTituloLogradouro = aipTituloLogradouro;
		this.dstCodigo = dstCodigo;
		this.nome = nome;
		this.codigoBaseCorreio = codigoBaseCorreio;
		this.complemento = complemento;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "aipLogradourosSq1")
	@Column(name = "CODIGO", nullable = false, precision = 9, scale = 0)
	@DocumentId
	public Integer getCodigo() {
		return this.codigo;
	}

	public void setCodigo(Integer codigo) {
		this.codigo = codigo;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "TLG_CODIGO", nullable = false)
	public AipTipoLogradouros getAipTipoLogradouro() {
		return this.aipTipoLogradouro;
	}

	public void setAipTipoLogradouro(AipTipoLogradouros aipTipoLogradouro) {
		this.aipTipoLogradouro = aipTipoLogradouro;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "CDD_CODIGO", nullable = false)
	public AipCidades getAipCidade() {
		return this.aipCidade;
	}

	public void setAipCidade(AipCidades aipCidade) {
		this.aipCidade = aipCidade;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "TIT_CODIGO")
	public AipTituloLogradouros getAipTituloLogradouro() {
		return this.aipTituloLogradouro;
	}

	public void setAipTituloLogradouro(
			AipTituloLogradouros aipTituloLogradouro) {
		this.aipTituloLogradouro = aipTituloLogradouro;
	}

	@Column(name = "DST_CODIGO", precision = 3, scale = 0)
	public Short getDstCodigo() {
		return this.dstCodigo;
	}

	public void setDstCodigo(Short dstCodigo) {
		this.dstCodigo = dstCodigo;
	}

	@Column(name = "NOME", nullable = false, length = 60)
	@Length(max = 60)
	@Field(index = Index.YES, store = Store.YES)
	@Analyzer(impl=BrazilianAnalyzer.class)
	public String getNome() {
		return this.nome;
	}
	@Transient
	@Field(index = Index.YES, store = Store.YES)
	public String getNomeFonetico() {
		return Fonetizador.fonetizar(nome);
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	public void setAipCepLogradouros(Set<AipCepLogradouros> aipCepLogradouros) {
		this.aipCepLogradouros = aipCepLogradouros;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "logradouro", orphanRemoval=true)
	@Cascade({org.hibernate.annotations.CascadeType.ALL })
	public Set<AipCepLogradouros> getAipCepLogradouros() {
		return aipCepLogradouros;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "logradouro")
	public Set<MamAreaAtuacao> getMamAreaAtuacoeses() {
		return this.mamAreaAtuacoeses;
	}

	public void setMamAreaAtuacoeses(Set<MamAreaAtuacao> mamAreaAtuacoeses) {
		this.mamAreaAtuacoeses = mamAreaAtuacoeses;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "aipLogradouro")	
	public Set<AipEnderecosPacientes> getAipEnderecosPacientes() {
		return aipEnderecosPacientes;
	}

	public void setAipEnderecosPacientes(
			Set<AipEnderecosPacientes> aipEnderecosPacientes) {
		this.aipEnderecosPacientes = aipEnderecosPacientes;
	}

	public void setCodigoBaseCorreio(Integer codigoBaseCorreio) {
		this.codigoBaseCorreio = codigoBaseCorreio;
	}
	
	@Column(name = "CODIGO_BASE_CORREIO", nullable = true)
	public Integer getCodigoBaseCorreio() {
		return this.codigoBaseCorreio;
	}

	public void setComplemento(String complemento) {
		this.complemento = complemento;
	}
	
	@Column(name = "COMPLEMENTO", nullable = true)
	@Length(max = 100)
	public String getComplemento() {
		return this.complemento;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy="aipLogradouro")
	public Set<AipBairrosCepLogradouro> getListaBairroCepLogradouros() {
		return listaBairroCepLogradouros;
	}

	public void setListaBairroCepLogradouros(
			Set<AipBairrosCepLogradouro> listaBairroCepLogradouros) {
		this.listaBairroCepLogradouros = listaBairroCepLogradouros;
	}

	public enum Fields {
		CODIGO("codigo"), NOME("nome"), TITULO("aipTituloLogradouro"), 
		CIDADE("aipCidade"), TIPO("aipTipoLogradouro"), CEPS("aipCepLogradouros"),
		BAIRRO_CEP_LOGRADOUROS("aipCepLogradouros.bairroCepLogradouros"), 
		BAIRRO("aipCepLogradouros.bairroCepLogradouros.aipBairro"),CDD_CODIGO("aipCidade.codigo"), NOME_FONETICO("nomeFonetico"),
		TIPO_CODIGO("aipTipoLogradouro.codigo"),
		TITULO_CODIGO("aipTituloLogradouro.codigo"),
		CODIGO_BASE_CORREIO("codigoBaseCorreio"),
		COMPLEMENTO("complemento"),
		CLO_LGR_CODIGO("listaBairroCepLogradouros"),
		IND_SITUACAO("indSituacao"),
		CDD_COD("cddCodigo")
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getCodigo() == null) ? 0 : getCodigo().hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AipLogradouros)) {
			return false;
		}
		AipLogradouros other = (AipLogradouros) obj;
		if (getCodigo() == null) {
			if (other.getCodigo() != null) {
				return false;
			}
		} else if (!getCodigo().equals(other.getCodigo())) {
			return false;
		}
		return true;
	}
	
	@Column(name = "IND_SITUACAO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}
	
	//pedro.silva: Este campo foi mapeado apenas para tornar possível obtê-lo através de
	//criteria com projection na impressão do boletim de internação do paciente
	//Como está definido com insertable=false e updatable=false não deverá 
	//causar problemas
	@Column(name = "CDD_CODIGO", insertable = false, updatable = false)
	public Integer getCddCodigo() {
		return cddCodigo;
	}

	public void setCddCodigo(Integer cddCodigo) {
		this.cddCodigo = cddCodigo;
	}
}
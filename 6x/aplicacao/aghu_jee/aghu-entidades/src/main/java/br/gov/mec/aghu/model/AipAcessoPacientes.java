package br.gov.mec.aghu.model;

// Generated 08/02/2010 17:25:25 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import br.gov.mec.aghu.dominio.DominioSimNao;
import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * AipAcessoPacientes generated by hbm2java
 */
@SuppressWarnings({"PMD.AghuUsoIndevidoDaEnumDominioSimNaoEntity"})
@Entity
@SequenceGenerator(name="aipAcxSq1", sequenceName="AGH.AIP_ACX_SQ1", allocationSize = 1)
@Table(name = "AIP_ACESSO_PACIENTES", schema = "AGH")
public class AipAcessoPacientes extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1701940994936644376L;
	private Integer seq;
	private DominioSimNao indAcessoSemAtend;
	private DominioSimNao indAcessoComAtend;
	private DominioSituacao indSituacao;
	private Date criadoEm;
	private AipPacientes paciente;
	private RapServidores servidor;	
	private RapServidores servidorAcessado;	

	public AipAcessoPacientes() {
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "aipAcxSq1")
	@Column(name = "SEQ", nullable = false, precision = 6, scale = 0)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Column(name = "IND_ACESSO_SEM_ATEND", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSimNao getIndAcessoSemAtend() {
		return this.indAcessoSemAtend;
	}

	public void setIndAcessoSemAtend(DominioSimNao indAcessoSemAtend) {
		this.indAcessoSemAtend = indAcessoSemAtend;
	}

	@Column(name = "IND_ACESSO_COM_ATEND", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSimNao getIndAcessoComAtend() {
		return this.indAcessoComAtend;
	}

	public void setIndAcessoComAtend(DominioSimNao indAcessoComAtend) {
		this.indAcessoComAtend = indAcessoComAtend;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO", nullable = false)
	public AipPacientes getPaciente() {
		return this.paciente;
	}

	public void setPaciente(AipPacientes paciente) {
		this.paciente = paciente;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_ACESSADO", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO_ACESSADO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidorAcessado() {
		return this.servidorAcessado;
	}

	public void setServidorAcessado(RapServidores servidorAcessado) {
		this.servidorAcessado = servidorAcessado;
	}

	public enum Fields {
		PAC_CODIGO("paciente.codigo"), SERVIDOR_ACESSADO("servidorAcessado"), PACIENTE("paciente"),
		IND_ACESSO_SEM_ATEND("indAcessoSemAtend"), IND_ACESSO_COM_ATEND("indAcessoComAtend"), SEQ("seq"),
		SERVIDOR("servidor"), IND_SITUACAO("indSituacao");
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}

	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AipAcessoPacientes)) {
			return false;
		}
		AipAcessoPacientes other = (AipAcessoPacientes) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

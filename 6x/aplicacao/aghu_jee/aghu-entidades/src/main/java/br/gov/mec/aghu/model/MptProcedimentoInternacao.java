package br.gov.mec.aghu.model;

// Generated 10/08/2010 17:33:16 by Hibernate Tools 3.3.0.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import br.gov.mec.aghu.dominio.DominioTipoProcedimento;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MptProcedimentoInternacao generated by hbm2java
 */
@Entity
@Table(name = "MPT_PROCEDIMENTOS_INTERNACAO")

public class MptProcedimentoInternacao extends BaseEntityId<MptProcedimentoInternacaoId> implements java.io.Serializable {

	// TODO Implementar coluna version quando utilizar essa entidade para
	// persistencia

	/**
	 * 
	 */
	private static final long serialVersionUID = 8707567850031561341L;
	private MptProcedimentoInternacaoId id;
	private RapServidores servidorSolicitado;
	private FatProcedHospInternos procedimentoHospitalarInterno;
	private RapServidores servidor;
	private AghAtendimentos atendimento;
	private Date dataRealizado;
	private DominioTipoProcedimento tipoProcedimento;
	private Date criadoEm;
	private Date alteradoEm;
	private Set<FatItemContaHospitalar> itensContasHospitalares = new HashSet<FatItemContaHospitalar>(
			0);
	
	private Integer matriculaServidor;
	private Short vinCodigoServidor;
	private Integer matriculaServidorSolicitado;
	private Short vinCodigoServidorSolicitado;

	public MptProcedimentoInternacao() {
	}

	public MptProcedimentoInternacao(MptProcedimentoInternacaoId id,
			RapServidores servidorSolicitado,
			FatProcedHospInternos procedimentoHospitalarInterno,
			RapServidores servidor, AghAtendimentos atendimento,
			Date dataRealizado, DominioTipoProcedimento tipoProcedimento) {
		this.id = id;
		this.servidorSolicitado = servidorSolicitado;
		this.procedimentoHospitalarInterno = procedimentoHospitalarInterno;
		this.servidor = servidor;
		this.atendimento = atendimento;
		this.dataRealizado = dataRealizado;
		this.tipoProcedimento = tipoProcedimento;
	}

	public MptProcedimentoInternacao(MptProcedimentoInternacaoId id,
			RapServidores servidorSolicitado,
			FatProcedHospInternos procedimentoHospitalarInterno,
			RapServidores servidor, AghAtendimentos atendimento,
			Date dataRealizado, DominioTipoProcedimento tipoProcedimento,
			Date criadoEm, Date alteradoEm,
			Set<FatItemContaHospitalar> itensContasHospitalares) {
		this.id = id;
		this.servidorSolicitado = servidorSolicitado;
		this.procedimentoHospitalarInterno = procedimentoHospitalarInterno;
		this.servidor = servidor;
		this.atendimento = atendimento;
		this.dataRealizado = dataRealizado;
		this.tipoProcedimento = tipoProcedimento;
		this.criadoEm = criadoEm;
		this.alteradoEm = alteradoEm;
		this.itensContasHospitalares = itensContasHospitalares;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "atdSeq", column = @Column(name = "ATD_SEQ", nullable = false, precision = 7, scale = 0)),
			@AttributeOverride(name = "seq", column = @Column(name = "SEQ", nullable = false, precision = 4, scale = 0)) })
	public MptProcedimentoInternacaoId getId() {
		return this.id;
	}

	public void setId(MptProcedimentoInternacaoId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA_SOLICITADO", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO_SOLICITADO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidorSolicitado() {
		return this.servidorSolicitado;
	}

	public void setServidorSolicitado(RapServidores servidorSolicitado) {
		this.servidorSolicitado = servidorSolicitado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PHI_SEQ", nullable = false)
	public FatProcedHospInternos getProcedimentoHospitalarInterno() {
		return this.procedimentoHospitalarInterno;
	}

	public void setProcedimentoHospitalarInterno(
			FatProcedHospInternos procedimentoHospitalarInterno) {
		this.procedimentoHospitalarInterno = procedimentoHospitalarInterno;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ATD_SEQ", nullable = false, insertable = false, updatable = false)
	public AghAtendimentos getAtendimento() {
		return this.atendimento;
	}

	public void setAtendimento(AghAtendimentos atendimento) {
		this.atendimento = atendimento;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DATA_REALIZADO", nullable = false, length = 7)
	public Date getDataRealizado() {
		return this.dataRealizado;
	}

	public void setDataRealizado(Date dataRealizado) {
		this.dataRealizado = dataRealizado;
	}

	@Column(name = "TIPO_PROCEDIMENTO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioTipoProcedimento getTipoProcedimento() {
		return this.tipoProcedimento;
	}

	public void setTipoProcedimento(DominioTipoProcedimento tipoProcedimento) {
		this.tipoProcedimento = tipoProcedimento;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CRIADO_EM", length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "ALTERADO_EM", length = 7)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "procedimentoInternacao")
	public Set<FatItemContaHospitalar> getItensContasHospitalares() {
		return this.itensContasHospitalares;
	}

	public void setItensContasHospitalares(
			Set<FatItemContaHospitalar> itensContasHospitalares) {
		this.itensContasHospitalares = itensContasHospitalares;
	}
	
	@Column(name="SER_MATRICULA", insertable = false, updatable = false)
	public Integer getMatriculaServidor() {
		return matriculaServidor;
	}

	public void setMatriculaServidor(Integer matriculaServidor) {
		this.matriculaServidor = matriculaServidor;
	}

	@Column(name="SER_VIN_CODIGO", insertable = false, updatable = false)
	public Short getVinCodigoServidor() {
		return vinCodigoServidor;
	}

	public void setVinCodigoServidor(Short vinCodigoServidor) {
		this.vinCodigoServidor = vinCodigoServidor;
	}

	@Column(name="SER_MATRICULA_SOLICITADO", insertable = false, updatable = false)
	public Integer getMatriculaServidorSolicitado() {
		return matriculaServidorSolicitado;
	}

	public void setMatriculaServidorSolicitado(Integer matriculaServidorSolicitado) {
		this.matriculaServidorSolicitado = matriculaServidorSolicitado;
	}

	@Column(name="SER_VIN_CODIGO_SOLICITADO", insertable = false, updatable = false)
	public Short getVinCodigoServidorSolicitado() {
		return vinCodigoServidorSolicitado;
	}

	public void setVinCodigoServidorSolicitado(Short vinCodigoServidorSolicitado) {
		this.vinCodigoServidorSolicitado = vinCodigoServidorSolicitado;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		MptProcedimentoInternacao other = (MptProcedimentoInternacao) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}

	public enum Fields {

		ID("id"),
		SERVIDOR_SOLICITADO("servidorSolicitado"),
		PROCEDIMENTO_HOSPITALAR_INTERNO("procedimentoHospitalarInterno"),
		SERVIDOR("servidor"),
		ATENDIMENTO("atendimento"),
		DATA_REALIZADO("dataRealizado"),
		TIPO_PROCEDIMENTO("tipoProcedimento"),
		CRIADO_EM("criadoEm"),
		ALTERADO_EM("alteradoEm"),
		ITENS_CONTAS_HOSPITALARES("itensContasHospitalares"),
		MATRICULA_SERVIDOR("matriculaServidor"),		
		VIN_CODIGO_SERVIDOR("vinCodigoServidor"),
		MATRICULA_SERVIDOR_SOLICITADO("matriculaServidorSolicitado"),
		VIN_CODIGO_SERVIDOR_SOLICITADO("vinCodigoServidorSolicitado");
		

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}

}

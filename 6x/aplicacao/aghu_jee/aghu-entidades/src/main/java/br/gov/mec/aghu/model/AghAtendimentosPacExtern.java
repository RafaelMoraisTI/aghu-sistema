package br.gov.mec.aghu.model;

// Generated 08/02/2010 17:25:25 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.LinkedList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.exception.BusinessExceptionCode;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * AghAtendimentosPacExtern generated by hbm2java
 */

@Entity
@Table(name = "AGH_ATENDIMENTOS_PAC_EXTERN", schema = "AGH")
@SequenceGenerator(name = "aghApeSq1", sequenceName = "AGH.AGH_APE_SQ1", allocationSize = 1)
public class AghAtendimentosPacExtern extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4036212054632897099L;
	private Integer seq;
	private RapServidores servidorDigitado;
	private RapServidores servidor;
	private FatConvenioSaudePlano convenioSaudePlano;
	private AipPacientes paciente;
	private AghUnidadesFuncionais unidadeFuncional;

	private AghMedicoExterno medicoExterno;
	private AelLaboratorioExternos laboratorioExterno;
	private String codigoDoador;

	private Date criadoEm;
	private Date dtColeta;

	private String contato1;
	private Short dddFoneContato1;
	private Long foneContato1;
	private String contato2;
	private Long foneContato2;
	private Short dddFoneContato2;
	private AelDoadorRedome doadorRedome;
	private AghResponsavel responsavelConta;
	
	private List<AghAtendimentos> atendimentos = new LinkedList<AghAtendimentos>();

	public AghAtendimentosPacExtern() {
	}

	public AghAtendimentosPacExtern(Integer seq, RapServidores serDigitado,
			FatConvenioSaudePlano convenioSaudePlano, AipPacientes paciente,
			AghUnidadesFuncionais unfSeq, Date criadoEm) {
		this.seq = seq;
		this.servidorDigitado = serDigitado;
		this.convenioSaudePlano = convenioSaudePlano;
		this.paciente = paciente;
		this.unidadeFuncional = unfSeq;
		this.criadoEm = criadoEm;
	}

	public AghAtendimentosPacExtern(Integer seq, RapServidores serDigitado,
			FatConvenioSaudePlano convenioSaudePlano, AipPacientes paciente,
			AghUnidadesFuncionais unfSeq, Date criadoEm, RapServidores ser,
			AghMedicoExterno mexSeq, AelLaboratorioExternos laeSeq,
			String codDoador, Date dtColeta, String contato1,
			Long foneContato1, String contato2, Long foneContato2,
			Short dddFoneContato1, Short dddFoneContato2) {
		this.seq = seq;
		this.servidorDigitado = serDigitado;
		this.convenioSaudePlano = convenioSaudePlano;
		this.paciente = paciente;
		this.unidadeFuncional = unfSeq;
		this.criadoEm = criadoEm;
		this.servidor = ser;
		this.medicoExterno = mexSeq;
		this.laboratorioExterno = laeSeq;
		this.codigoDoador = codDoador;
		this.dtColeta = dtColeta;
		this.contato1 = contato1;
		this.foneContato1 = foneContato1;
		this.contato2 = contato2;
		this.foneContato2 = foneContato2;
		this.dddFoneContato1 = dddFoneContato1;
		this.dddFoneContato2 = dddFoneContato2;
	}

	@Id
	@Column(name = "SEQ", nullable = false, precision = 7, scale = 0)
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "aghApeSq1")
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA_DIGITADO", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO_DIGITADO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidorDigitado() {
		return servidorDigitado;
	}

	public void setServidorDigitado(RapServidores servidorDigitado) {
		this.servidorDigitado = servidorDigitado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CSP_SEQ", referencedColumnName = "SEQ", nullable = false),
			@JoinColumn(name = "CSP_CNV_CODIGO", referencedColumnName = "CNV_CODIGO", nullable = false) })
	public FatConvenioSaudePlano getConvenioSaudePlano() {
		return this.convenioSaudePlano;
	}

	public void setConvenioSaudePlano(FatConvenioSaudePlano convenioSaudePlano) {
		this.convenioSaudePlano = convenioSaudePlano;
	}

	@ManyToOne(fetch = FetchType.LAZY, optional = false)
	@JoinColumn(name = "PAC_CODIGO", nullable = false, referencedColumnName = "CODIGO")
	public AipPacientes getPaciente() {
		return paciente;
	}

	public void setPaciente(AipPacientes paciente) {
		this.paciente = paciente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ", nullable = false)
	public AghUnidadesFuncionais getUnidadeFuncional() {
		return unidadeFuncional;
	}

	public void setUnidadeFuncional(AghUnidadesFuncionais unidadeFuncional) {
		this.unidadeFuncional = unidadeFuncional;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MEX_SEQ")
	public AghMedicoExterno getMedicoExterno() {
		return medicoExterno;
	}

	public void setMedicoExterno(AghMedicoExterno medicoExterno) {
		this.medicoExterno = medicoExterno;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LAE_SEQ")
	public AelLaboratorioExternos getLaboratorioExterno() {
		return laboratorioExterno;
	}

	public void setLaboratorioExterno(AelLaboratorioExternos laboratorioExterno) {
		this.laboratorioExterno = laboratorioExterno;
	}

	@Column(name = "COD_DOADOR", length = 10)
	@Length(max = 10)
	public String getCodigoDoador() {
		return this.codigoDoador;
	}

	public void setCodigoDoador(String c) {
		this.codigoDoador = c;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_COLETA", length = 7)
	public Date getDtColeta() {
		return this.dtColeta;
	}

	public void setDtColeta(Date dtColeta) {
		this.dtColeta = dtColeta;
	}

	@Column(name = "CONTATO_1", length = 50)
	@Length(max = 50)
	public String getContato1() {
		return this.contato1;
	}

	public void setContato1(String contato1) {
		this.contato1 = contato1;
	}

	@Column(name = "FONE_CONTATO_1", precision = 10, scale = 0)
	public Long getFoneContato1() {
		return this.foneContato1;
	}

	public void setFoneContato1(Long foneContato1) {
		this.foneContato1 = foneContato1;
	}

	@Column(name = "CONTATO_2", length = 50)
	@Length(max = 50)
	public String getContato2() {
		return this.contato2;
	}

	public void setContato2(String contato2) {
		this.contato2 = contato2;
	}

	@Column(name = "FONE_CONTATO_2", precision = 10, scale = 0)
	public Long getFoneContato2() {
		return this.foneContato2;
	}

	public void setFoneContato2(Long foneContato2) {
		this.foneContato2 = foneContato2;
	}

	@Column(name = "DDD_FONE_CONTATO_1", precision = 4, scale = 0)
	public Short getDddFoneContato1() {
		return this.dddFoneContato1;
	}

	public void setDddFoneContato1(Short dddFoneContato1) {
		this.dddFoneContato1 = dddFoneContato1;
	}

	@Column(name = "DDD_FONE_CONTATO_2", precision = 4, scale = 0)
	public Short getDddFoneContato2() {
		return this.dddFoneContato2;
	}

	public void setDddFoneContato2(Short dddFoneContato2) {
		this.dddFoneContato2 = dddFoneContato2;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "atendimentoPacienteExterno")
	public List<AghAtendimentos> getAtendimentos() {
		return atendimentos;
	}
	
	public void setAtendimentos(List<AghAtendimentos> atdlist) {
		this.atendimentos = atdlist;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DOR_SEQ")
	public AelDoadorRedome getDoadorRedome() {
		return doadorRedome;
	}

	public void setDoadorRedome(AelDoadorRedome doadorRedome) {
		this.doadorRedome = doadorRedome;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RES_SEQ")
	public AghResponsavel getResponsavelConta() {
		return responsavelConta;
	}

	public void setResponsavelConta(AghResponsavel responsavelConta) {
		this.responsavelConta = responsavelConta;
	}

	@PrePersist
	@PreUpdate
	protected void validate() {
		// CONSTRAINT AGH_APE_CK1 CHECK (/* QMS$ENFORCE_ARC_1 */
		// (SER_MATRICULA IS NOT NULL AND SER_VIN_CODIGO IS NOT NULL AND MEX_SEQ IS NULL)
		// OR (SER_MATRICULA IS NULL AND SER_VIN_CODIGO IS NULL AND MEX_SEQ IS NOT NULL)
		// ) ENABLE,
		if ((this.getServidor() == null && this.getMedicoExterno() == null) 
				|| (this.getServidor() != null && this.getMedicoExterno() != null)) {
			throw new BaseRuntimeException(AghAtendimentosPacExternExceptionCode.ERRO_SERVIDOR_OU_MEDICO_EXTERNO);
		}
	}

	

	public enum Fields {
		  PAC_CODIGO("paciente.codigo")
		, PACIENTE("paciente")
		, MEX_SEQ("medicoExterno.seq")
		, SEQ("seq")
		, SERVIDORDIGITADO("servidorDigitado")
		, SERVIDOR("servidor")
		, CONVENIOSAUDEPLANO("convenioSaudePlano")
		, UNIDADEFUNCIONAL("unidadeFuncional")
		, MEDICOEXTERNO("medicoExterno")
		, LABORATORIOEXTERNO("laboratorioExterno")
		, LABORATORIO_EXTERNO_SEQ("laboratorioExterno.seq")
		, CODIGODOADOR("codigoDoador")
		, CRIADOEM("criadoEm")
		, DTCOLETA("dtColeta")
		, CONTATO1("contato1")
		, DDDFONECONTATO1("dddFoneContato1")
		, FONECONTATO1("foneContato1")
		, CONTATO2("contato2")
		, FONECONTATO2("foneContato2")
		, DDDFONECONTATO2("dddFoneContato2")
		, ATENDIMENTOS("atendimentos")
		, DOADOR_REDOME("doadorRedome")
		, DOR_SEQ("doadorRedome.seq")
		, RESPONSAVEL_CONTA("responsavelConta");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}
	
	public enum AghAtendimentosPacExternExceptionCode implements BusinessExceptionCode {
		ERRO_SERVIDOR_OU_MEDICO_EXTERNO;
	}
	
	

	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AghAtendimentosPacExtern)) {
			return false;
		}
		AghAtendimentosPacExtern other = (AghAtendimentosPacExtern) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

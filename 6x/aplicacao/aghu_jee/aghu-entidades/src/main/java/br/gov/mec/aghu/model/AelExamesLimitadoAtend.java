package br.gov.mec.aghu.model;

// Generated 18/03/2011 10:47:15 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AelExamesLimitadoAtend generated by hbm2java
 */
@Entity
@Table(name = "AEL_EXAMES_LIMITADO_ATEND", schema = "AGH")
public class AelExamesLimitadoAtend extends BaseEntityId<AelExamesLimitadoAtendId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 6501449152754757919L;
	private AelExamesLimitadoAtendId id;
	private Integer version;
	private Date criadoEm;
	private Date dthrLimite;
	private RapServidores servidor;

	public AelExamesLimitadoAtend() {
	}

	public AelExamesLimitadoAtend(AelExamesLimitadoAtendId id, Date criadoEm,
			Date dthrLimite, RapServidores servidor) {
		this.id = id;
		this.criadoEm = criadoEm;
		this.dthrLimite = dthrLimite;
		this.servidor = servidor;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "atdSeq", column = @Column(name = "ATD_SEQ", nullable = false)),
			@AttributeOverride(name = "emaExaSigla", column = @Column(name = "EMA_EXA_SIGLA", nullable = false, length = 5)),
			@AttributeOverride(name = "emaManSeq", column = @Column(name = "EMA_MAN_SEQ", nullable = false)) })
	public AelExamesLimitadoAtendId getId() {
		return this.id;
	}

	public void setId(AelExamesLimitadoAtendId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_LIMITE", nullable = false, length = 29)
	public Date getDthrLimite() {
		return this.dthrLimite;
	}

	public void setDthrLimite(Date dthrLimite) {
		this.dthrLimite = dthrLimite;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}
	
	public enum Fields {

		EMA_EXA_SIGLA("id.emaExaSigla"),
		EMA_MAN_SEQ("id.emaManSeq"),
		ATD_SEQ("id.atdSeq"),
		DTHR_LIMITE("dthrLimite");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AelExamesLimitadoAtend)) {
			return false;
		}
		AelExamesLimitadoAtend other = (AelExamesLimitadoAtend) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

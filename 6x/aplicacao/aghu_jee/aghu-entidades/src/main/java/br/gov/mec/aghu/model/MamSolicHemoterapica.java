package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MamSolicHemoterapica generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mamShmSq1", sequenceName="AGH.MAM_SHM_SQ1", allocationSize = 1)
@Table(name = "MAM_SOLIC_HEMOTERAPICAS", schema = "AGH")
public class MamSolicHemoterapica extends BaseEntitySeq<Long> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -2322541433628837887L;
	private Long seq;
	private Integer version;
	private RapServidores rapServidoresByMamShmSerFk3;
	private AacConsultas aacConsultas;
	private RapServidores rapServidoresByMamShmSerFk1;
	private RapServidores rapServidoresByMamShmSerFk4;
	private MamSolicHemoterapica mamSolicHemoterapica;
	private RapServidores rapServidoresByMamShmSerFk2;
	private AipPacientes aipPacientes;
	private String descricao;
	private String justificativa;
	private Short nroVias;
	private Date dthrCriacao;
	private Date dthrValida;
	private Date dthrMvto;
	private Date dthrValidaMvto;
	private String indPendente;
	private String indImpresso;
	private Set<MamSolicHemoterapica> mamSolicHemoterapicaes = new HashSet<MamSolicHemoterapica>(0);

	public MamSolicHemoterapica() {
	}

	public MamSolicHemoterapica(Long seq, RapServidores rapServidoresByMamShmSerFk1, AipPacientes aipPacientes, String descricao,
			String justificativa, Date dthrCriacao, String indPendente, String indImpresso) {
		this.seq = seq;
		this.rapServidoresByMamShmSerFk1 = rapServidoresByMamShmSerFk1;
		this.aipPacientes = aipPacientes;
		this.descricao = descricao;
		this.justificativa = justificativa;
		this.dthrCriacao = dthrCriacao;
		this.indPendente = indPendente;
		this.indImpresso = indImpresso;
	}

	public MamSolicHemoterapica(Long seq, RapServidores rapServidoresByMamShmSerFk3, AacConsultas aacConsultas,
			RapServidores rapServidoresByMamShmSerFk1, RapServidores rapServidoresByMamShmSerFk4,
			MamSolicHemoterapica mamSolicHemoterapica, RapServidores rapServidoresByMamShmSerFk2, AipPacientes aipPacientes,
			String descricao, String justificativa, Short nroVias, Date dthrCriacao, Date dthrValida, Date dthrMvto,
			Date dthrValidaMvto, String indPendente, String indImpresso, Set<MamSolicHemoterapica> mamSolicHemoterapicaes) {
		this.seq = seq;
		this.rapServidoresByMamShmSerFk3 = rapServidoresByMamShmSerFk3;
		this.aacConsultas = aacConsultas;
		this.rapServidoresByMamShmSerFk1 = rapServidoresByMamShmSerFk1;
		this.rapServidoresByMamShmSerFk4 = rapServidoresByMamShmSerFk4;
		this.mamSolicHemoterapica = mamSolicHemoterapica;
		this.rapServidoresByMamShmSerFk2 = rapServidoresByMamShmSerFk2;
		this.aipPacientes = aipPacientes;
		this.descricao = descricao;
		this.justificativa = justificativa;
		this.nroVias = nroVias;
		this.dthrCriacao = dthrCriacao;
		this.dthrValida = dthrValida;
		this.dthrMvto = dthrMvto;
		this.dthrValidaMvto = dthrValidaMvto;
		this.indPendente = indPendente;
		this.indImpresso = indImpresso;
		this.mamSolicHemoterapicaes = mamSolicHemoterapicaes;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mamShmSq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Long getSeq() {
		return this.seq;
	}

	public void setSeq(Long seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_MVTO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_MVTO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMamShmSerFk3() {
		return this.rapServidoresByMamShmSerFk3;
	}

	public void setRapServidoresByMamShmSerFk3(RapServidores rapServidoresByMamShmSerFk3) {
		this.rapServidoresByMamShmSerFk3 = rapServidoresByMamShmSerFk3;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CON_NUMERO")
	public AacConsultas getAacConsultas() {
		return this.aacConsultas;
	}

	public void setAacConsultas(AacConsultas aacConsultas) {
		this.aacConsultas = aacConsultas;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByMamShmSerFk1() {
		return this.rapServidoresByMamShmSerFk1;
	}

	public void setRapServidoresByMamShmSerFk1(RapServidores rapServidoresByMamShmSerFk1) {
		this.rapServidoresByMamShmSerFk1 = rapServidoresByMamShmSerFk1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_VALIDA_MVTO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_VALIDA_MVTO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMamShmSerFk4() {
		return this.rapServidoresByMamShmSerFk4;
	}

	public void setRapServidoresByMamShmSerFk4(RapServidores rapServidoresByMamShmSerFk4) {
		this.rapServidoresByMamShmSerFk4 = rapServidoresByMamShmSerFk4;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SHM_SEQ")
	public MamSolicHemoterapica getMamSolicHemoterapica() {
		return this.mamSolicHemoterapica;
	}

	public void setMamSolicHemoterapica(MamSolicHemoterapica mamSolicHemoterapica) {
		this.mamSolicHemoterapica = mamSolicHemoterapica;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_VALIDA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_VALIDA", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMamShmSerFk2() {
		return this.rapServidoresByMamShmSerFk2;
	}

	public void setRapServidoresByMamShmSerFk2(RapServidores rapServidoresByMamShmSerFk2) {
		this.rapServidoresByMamShmSerFk2 = rapServidoresByMamShmSerFk2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO", nullable = false)
	public AipPacientes getAipPacientes() {
		return this.aipPacientes;
	}

	public void setAipPacientes(AipPacientes aipPacientes) {
		this.aipPacientes = aipPacientes;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 2000)
	@Length(max = 2000)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "JUSTIFICATIVA", nullable = false, length = 2000)
	@Length(max = 2000)
	public String getJustificativa() {
		return this.justificativa;
	}

	public void setJustificativa(String justificativa) {
		this.justificativa = justificativa;
	}

	@Column(name = "NRO_VIAS")
	public Short getNroVias() {
		return this.nroVias;
	}

	public void setNroVias(Short nroVias) {
		this.nroVias = nroVias;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_CRIACAO", nullable = false, length = 29)
	public Date getDthrCriacao() {
		return this.dthrCriacao;
	}

	public void setDthrCriacao(Date dthrCriacao) {
		this.dthrCriacao = dthrCriacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_VALIDA", length = 29)
	public Date getDthrValida() {
		return this.dthrValida;
	}

	public void setDthrValida(Date dthrValida) {
		this.dthrValida = dthrValida;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_MVTO", length = 29)
	public Date getDthrMvto() {
		return this.dthrMvto;
	}

	public void setDthrMvto(Date dthrMvto) {
		this.dthrMvto = dthrMvto;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_VALIDA_MVTO", length = 29)
	public Date getDthrValidaMvto() {
		return this.dthrValidaMvto;
	}

	public void setDthrValidaMvto(Date dthrValidaMvto) {
		this.dthrValidaMvto = dthrValidaMvto;
	}

	@Column(name = "IND_PENDENTE", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndPendente() {
		return this.indPendente;
	}

	public void setIndPendente(String indPendente) {
		this.indPendente = indPendente;
	}

	@Column(name = "IND_IMPRESSO", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndImpresso() {
		return this.indImpresso;
	}

	public void setIndImpresso(String indImpresso) {
		this.indImpresso = indImpresso;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mamSolicHemoterapica")
	public Set<MamSolicHemoterapica> getMamSolicHemoterapicaes() {
		return this.mamSolicHemoterapicaes;
	}

	public void setMamSolicHemoterapicaes(Set<MamSolicHemoterapica> mamSolicHemoterapicaes) {
		this.mamSolicHemoterapicaes = mamSolicHemoterapicaes;
	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		RAP_SERVIDORES_BY_MAM_SHM_SER_FK3("rapServidoresByMamShmSerFk3"),
		AAC_CONSULTAS("aacConsultas"),
		RAP_SERVIDORES_BY_MAM_SHM_SER_FK1("rapServidoresByMamShmSerFk1"),
		RAP_SERVIDORES_BY_MAM_SHM_SER_FK4("rapServidoresByMamShmSerFk4"),
		MAM_SOLIC_HEMOTERAPICAS("mamSolicHemoterapica"),
		RAP_SERVIDORES_BY_MAM_SHM_SER_FK2("rapServidoresByMamShmSerFk2"),
		AIP_PACIENTES("aipPacientes"),
		DESCRICAO("descricao"),
		JUSTIFICATIVA("justificativa"),
		NRO_VIAS("nroVias"),
		DTHR_CRIACAO("dthrCriacao"),
		DTHR_VALIDA("dthrValida"),
		DTHR_MVTO("dthrMvto"),
		DTHR_VALIDA_MVTO("dthrValidaMvto"),
		IND_PENDENTE("indPendente"),
		IND_IMPRESSO("indImpresso"),
		MAM_SOLIC_HEMOTERAPICAES("mamSolicHemoterapicaes"),
		CON_NUMERO("aacConsultas.numero");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MamSolicHemoterapica)) {
			return false;
		}
		MamSolicHemoterapica other = (MamSolicHemoterapica) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

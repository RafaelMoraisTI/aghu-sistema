package br.gov.mec.aghu.model;

// Generated 28/03/2012 15:17:44 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioOcorrFichaFluido;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MbcOcorrFichaFluidoAdms generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mbcOfaSq1", sequenceName="AGH.MBC_OFA_SQ1", allocationSize = 1)
@Table(name = "MBC_OCORR_FICHA_FLUIDO_ADMS", schema = "AGH")
public class MbcOcorrFichaFluidoAdms extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 956359132107157215L;
	private Integer seq;
	private Integer version;
	private MbcAdministraFichaFluido mbcAdministraFichaFluidos;
	private DominioOcorrFichaFluido tipo;
	private Date dataHoraOcorr;
	private Float taxaInfusao;
	private Integer volume;
	private Integer volumeRestante;
	private Integer volumeTotal;
	private Integer volumeInfundidoPreviamente;
	private Date criadoEm;
	private RapServidores servidor;
	private Boolean permaneceNoPos;

	public MbcOcorrFichaFluidoAdms() {
	}

	public MbcOcorrFichaFluidoAdms(Integer seq, Integer version,
			MbcAdministraFichaFluido mbcAdministraFichaFluidos,
			DominioOcorrFichaFluido tipo, Date dataHoraOcorr,
			Float taxaInfusao, Integer volume, Integer volumeRestante,
			Integer volumeTotal, Integer volumeInfundidoPreviamente,
			Date criadoEm, RapServidores servidor, Boolean permaneceNoPos) {
		super();
		this.seq = seq;
		this.version = version;
		this.mbcAdministraFichaFluidos = mbcAdministraFichaFluidos;
		this.tipo = tipo;
		this.dataHoraOcorr = dataHoraOcorr;
		this.taxaInfusao = taxaInfusao;
		this.volume = volume;
		this.volumeRestante = volumeRestante;
		this.volumeTotal = volumeTotal;
		this.volumeInfundidoPreviamente = volumeInfundidoPreviamente;
		this.criadoEm = criadoEm;
		this.servidor = servidor;
		this.permaneceNoPos = permaneceNoPos;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mbcOfaSq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "AFF_SEQ", nullable = false)
	public MbcAdministraFichaFluido getMbcAdministraFichaFluidos() {
		return this.mbcAdministraFichaFluidos;
	}

	public void setMbcAdministraFichaFluidos(
			MbcAdministraFichaFluido mbcAdministraFichaFluidos) {
		this.mbcAdministraFichaFluidos = mbcAdministraFichaFluidos;
	}

	@Column(name = "TIPO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioOcorrFichaFluido getTipo() {
		return this.tipo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATA_HORA_OCORR", nullable = false, length = 29)
	public Date getDataHoraOcorr() {
		return this.dataHoraOcorr;
	}

	public void setDataHoraOcorr(Date dataHoraOcorr) {
		this.dataHoraOcorr = dataHoraOcorr;
	}

	@Column(name = "TAXA_INFUSAO", precision = 8, scale = 8)
	public Float getTaxaInfusao() {
		return this.taxaInfusao;
	}

	public void setTaxaInfusao(Float taxaInfusao) {
		this.taxaInfusao = taxaInfusao;
	}

	@Column(name = "VOLUME")
	public Integer getVolume() {
		return this.volume;
	}

	public void setVolume(Integer volume) {
		this.volume = volume;
	}

	@Column(name = "VOLUME_RESTANTE")
	public Integer getVolumeRestante() {
		return this.volumeRestante;
	}

	public void setVolumeRestante(Integer volumeRestante) {
		this.volumeRestante = volumeRestante;
	}

	@Column(name = "VOLUME_TOTAL")
	public Integer getVolumeTotal() {
		return this.volumeTotal;
	}

	public void setVolumeTotal(Integer volumeTotal) {
		this.volumeTotal = volumeTotal;
	}

	@Column(name = "VOLUME_INFUNDIDO_PREVIAMENTE")
	public Integer getVolumeInfundidoPreviamente() {
		return this.volumeInfundidoPreviamente;
	}

	public void setVolumeInfundidoPreviamente(Integer volumeInfundidoPreviamente) {
		this.volumeInfundidoPreviamente = volumeInfundidoPreviamente;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "PERMANECE_NO_POS", length = 1)
	@Length(max = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getPermaneceNoPos() {
		return this.permaneceNoPos;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
		@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
		@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO")})
	public RapServidores getServidor() {
		return servidor;
	}

	public void setTipo(DominioOcorrFichaFluido tipo) {
		this.tipo = tipo;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	public void setPermaneceNoPos(Boolean permaneceNoPos) {
		this.permaneceNoPos = permaneceNoPos;
	}
	
	public enum Fields {
		SEQ("seq"),
		ADMINISTRA_FICA_FLUIDO("mbcAdministraFichaFluidos"),
		TIPO("tipo"),
		DATA_HORA_OCORR("dataHoraOcorr"),
		TAXA_INCLUSAO("taxaInfusao"),
		VOLUME("volume"),
		VOLUME_RESTANTE("volumeRestante"),
		VOLUME_TOTAL("volumeTotal"),
		COLUME_INFUNDIDO_PREVIAMENTE("volumeInfundidoPreviamente"),
		CRIADO_EM("criadoEm"),
		SERVIDOR("servidor"),
		PERMANECE_NO_POS("permaneceNoPos");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MbcOcorrFichaFluidoAdms)) {
			return false;
		}
		MbcOcorrFichaFluidoAdms other = (MbcOcorrFichaFluidoAdms) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

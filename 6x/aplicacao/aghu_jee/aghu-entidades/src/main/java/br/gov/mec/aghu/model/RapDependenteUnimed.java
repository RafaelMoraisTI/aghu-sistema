package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * RapDependenteUnimed generated by hbm2java
 */
@Entity
@Table(name = "RAP_DEPENDENTES_UNIMED", schema = "AGH")
public class RapDependenteUnimed extends BaseEntityId<RapDependenteUnimedId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -6452283819093920880L;
	private RapDependenteUnimedId id;
	private Integer version;
	private RapServidorUnimed rapServidorUnimed;
	private Short grauParentesco;
	private String indUnimed;
	private String indSos;
	private Date dtInicio;
	private Date dtFim;
	private String indSubsidio;
	private String nroCarteira;
	private String indOdonto;
	private Date dtOdonto;

	public RapDependenteUnimed() {
	}

	public RapDependenteUnimed(RapDependenteUnimedId id, RapServidorUnimed rapServidorUnimed, Short grauParentesco) {
		this.id = id;
		this.rapServidorUnimed = rapServidorUnimed;
		this.grauParentesco = grauParentesco;
	}

	public RapDependenteUnimed(RapDependenteUnimedId id, RapServidorUnimed rapServidorUnimed, Short grauParentesco,
			String indUnimed, String indSos, Date dtInicio, Date dtFim, String indSubsidio, String nroCarteira, String indOdonto,
			Date dtOdonto) {
		this.id = id;
		this.rapServidorUnimed = rapServidorUnimed;
		this.grauParentesco = grauParentesco;
		this.indUnimed = indUnimed;
		this.indSos = indSos;
		this.dtInicio = dtInicio;
		this.dtFim = dtFim;
		this.indSubsidio = indSubsidio;
		this.nroCarteira = nroCarteira;
		this.indOdonto = indOdonto;
		this.dtOdonto = dtOdonto;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "serMatricula", column = @Column(name = "SER_MATRICULA", nullable = false)),
			@AttributeOverride(name = "serVinCodigo", column = @Column(name = "SER_VIN_CODIGO", nullable = false)),
			@AttributeOverride(name = "codigo", column = @Column(name = "CODIGO", nullable = false)) })
	public RapDependenteUnimedId getId() {
		return this.id;
	}

	public void setId(RapDependenteUnimedId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "SER_MATRICULA", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "SER_VIN_CODIGO", nullable = false, insertable = false, updatable = false) })
	public RapServidorUnimed getRapServidorUnimed() {
		return this.rapServidorUnimed;
	}

	public void setRapServidorUnimed(RapServidorUnimed rapServidorUnimed) {
		this.rapServidorUnimed = rapServidorUnimed;
	}

	@Column(name = "GRAU_PARENTESCO", nullable = false)
	public Short getGrauParentesco() {
		return this.grauParentesco;
	}

	public void setGrauParentesco(Short grauParentesco) {
		this.grauParentesco = grauParentesco;
	}

	@Column(name = "IND_UNIMED", length = 1)
	@Length(max = 1)
	public String getIndUnimed() {
		return this.indUnimed;
	}

	public void setIndUnimed(String indUnimed) {
		this.indUnimed = indUnimed;
	}

	@Column(name = "IND_SOS", length = 1)
	@Length(max = 1)
	public String getIndSos() {
		return this.indSos;
	}

	public void setIndSos(String indSos) {
		this.indSos = indSos;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_INICIO", length = 29)
	public Date getDtInicio() {
		return this.dtInicio;
	}

	public void setDtInicio(Date dtInicio) {
		this.dtInicio = dtInicio;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_FIM", length = 29)
	public Date getDtFim() {
		return this.dtFim;
	}

	public void setDtFim(Date dtFim) {
		this.dtFim = dtFim;
	}

	@Column(name = "IND_SUBSIDIO", length = 1)
	@Length(max = 1)
	public String getIndSubsidio() {
		return this.indSubsidio;
	}

	public void setIndSubsidio(String indSubsidio) {
		this.indSubsidio = indSubsidio;
	}

	@Column(name = "NRO_CARTEIRA", length = 20)
	@Length(max = 20)
	public String getNroCarteira() {
		return this.nroCarteira;
	}

	public void setNroCarteira(String nroCarteira) {
		this.nroCarteira = nroCarteira;
	}

	@Column(name = "IND_ODONTO", length = 1)
	@Length(max = 1)
	public String getIndOdonto() {
		return this.indOdonto;
	}

	public void setIndOdonto(String indOdonto) {
		this.indOdonto = indOdonto;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_ODONTO", length = 29)
	public Date getDtOdonto() {
		return this.dtOdonto;
	}

	public void setDtOdonto(Date dtOdonto) {
		this.dtOdonto = dtOdonto;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		RAP_SERVIDORES_UNIMED("rapServidorUnimed"),
		GRAU_PARENTESCO("grauParentesco"),
		IND_UNIMED("indUnimed"),
		IND_SOS("indSos"),
		DT_INICIO("dtInicio"),
		DT_FIM("dtFim"),
		IND_SUBSIDIO("indSubsidio"),
		NRO_CARTEIRA("nroCarteira"),
		IND_ODONTO("indOdonto"),
		DT_ODONTO("dtOdonto");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof RapDependenteUnimed)) {
			return false;
		}
		RapDependenteUnimed other = (RapDependenteUnimed) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

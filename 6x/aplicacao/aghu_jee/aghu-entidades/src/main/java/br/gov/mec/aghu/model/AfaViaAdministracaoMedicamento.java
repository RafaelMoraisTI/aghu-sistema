package br.gov.mec.aghu.model;

// Generated 04/10/2010 12:49:33 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.exception.BusinessExceptionCode;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AfaViaAdmMdtos generated by hbm2java
 */

@Entity
@Table(name = "AFA_VIA_ADM_MDTOS", schema = "AGH")
public class AfaViaAdministracaoMedicamento extends BaseEntityId<AfaViaAdministracaoMedicamentoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -6566427874621815357L;

	private enum ViaAdministracaoMedicamentoExceptionCode implements
			BusinessExceptionCode {
		AFA_VAM_CK4
	}

	private AfaViaAdministracaoMedicamentoId id;
	private RapServidores servidor;
	private Date criadoEm;
	private DominioSituacao situacao;
	private AfaViaAdministracao viaAdministracao;
	private AfaMedicamento medicamento;
	private Boolean permiteBi;
	private Boolean defaultBi;

	public AfaViaAdministracaoMedicamento() {
	}

	public AfaViaAdministracaoMedicamento(AfaViaAdministracaoMedicamentoId id,
			RapServidores servidor, Date criadoEm, DominioSituacao situacao,
			Boolean permiteBi, Boolean defaultBi) {
		this.id = id;
		this.servidor = servidor;
		this.criadoEm = criadoEm;
		this.situacao = situacao;
		this.permiteBi = permiteBi;
		this.defaultBi = defaultBi;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "medMatCodigo", column = @Column(name = "MED_MAT_CODIGO", nullable = false, precision = 6, scale = 0)),
			@AttributeOverride(name = "vadSigla", column = @Column(name = "VAD_SIGLA", nullable = false, length = 2)) })
	public AfaViaAdministracaoMedicamentoId getId() {
		return this.id;
	}

	public void setId(AfaViaAdministracaoMedicamentoId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "IND_SITUACAO", length = 1, nullable = false)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getSituacao() {
		return situacao;
	}

	public void setSituacao(DominioSituacao situacao) {
		this.situacao = situacao;
	}

	@Column(name = "IND_PERMITE_BI", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getPermiteBi() {
		return this.permiteBi;
	}

	public void setPermiteBi(Boolean permiteBi) {
		this.permiteBi = permiteBi;
	}

	@Column(name = "IND_DEFAULT_BI", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getDefaultBi() {
		return this.defaultBi;
	}

	public void setDefaultBi(Boolean defaultBi) {
		this.defaultBi = defaultBi;
	}
	
	@ManyToOne
	@JoinColumn(name = "VAD_SIGLA", insertable = false, updatable = false)
	public AfaViaAdministracao getViaAdministracao() {
		return viaAdministracao;
	}
	
	public void setViaAdministracao(AfaViaAdministracao viaAdministracao) {
		this.viaAdministracao = viaAdministracao;
	}
	
	@ManyToOne
	@JoinColumn(name = "MED_MAT_CODIGO", insertable = false, updatable = false)
	public AfaMedicamento getMedicamento() {
		return medicamento;
	}
	
	public void setMedicamento(AfaMedicamento medicamento) {
		this.medicamento = medicamento;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		AfaViaAdministracaoMedicamento other = (AfaViaAdministracaoMedicamento) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}

	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void validacoes() {
		if (this.situacao == null) {
			this.situacao = DominioSituacao.A;
		}

		if (this.permiteBi == null) {
			this.permiteBi = Boolean.FALSE;
		}

		if (this.defaultBi == null) {
			this.defaultBi = Boolean.FALSE;
		}

		// Constraint AFA_VAM_CK4
		if (!((!permiteBi && !defaultBi) || permiteBi)) {
			throw new BaseRuntimeException(
					ViaAdministracaoMedicamentoExceptionCode.AFA_VAM_CK4);
		}
	}

	public enum Fields {
		
		MED_MAT_CODIGO("id.medMatCodigo"),
		VAD_SIGLA("id.vadSigla"),
		SERVIDOR("servidor"),
		CRIADO_EM("criadoEm"),
		SITUACAO("situacao"),
		PERMITE_BI("permiteBi"),
		DEFAULT_BI("defaultBi"),
		VIA_ADMINISTRACAO("viaAdministracao");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
		
	}
	
}

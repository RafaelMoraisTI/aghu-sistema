package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityCodigo;

/**
 * CtbTipoFluxo generated by hbm2java
 */
@Entity
@Table(name = "CTB_TIPO_FLUXOS", schema = "AGH")
public class CtbTipoFluxo extends BaseEntityCodigo<Short> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -6563343755437736091L;
	private Short codigo;
	private Integer version;
	private String descricao;
	private Set<CtbSubNaturezaPlano> ctbSubNaturezaPlanoes = new HashSet<CtbSubNaturezaPlano>(0);
	private Set<FsoPlanilhaOrcamento> fsoPlanilhaOrcamentos = new HashSet<FsoPlanilhaOrcamento>(0);

	public CtbTipoFluxo() {
	}

	public CtbTipoFluxo(Short codigo, String descricao) {
		this.codigo = codigo;
		this.descricao = descricao;
	}

	public CtbTipoFluxo(Short codigo, String descricao, Set<CtbSubNaturezaPlano> ctbSubNaturezaPlanoes,
			Set<FsoPlanilhaOrcamento> fsoPlanilhaOrcamentos) {
		this.codigo = codigo;
		this.descricao = descricao;
		this.ctbSubNaturezaPlanoes = ctbSubNaturezaPlanoes;
		this.fsoPlanilhaOrcamentos = fsoPlanilhaOrcamentos;
	}

	@Id
	@Column(name = "CODIGO", unique = true, nullable = false)
	public Short getCodigo() {
		return this.codigo;
	}

	public void setCodigo(Short codigo) {
		this.codigo = codigo;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 20)
	@Length(max = 20)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ctbTipoFluxo")
	public Set<CtbSubNaturezaPlano> getCtbSubNaturezaPlanoes() {
		return this.ctbSubNaturezaPlanoes;
	}

	public void setCtbSubNaturezaPlanoes(Set<CtbSubNaturezaPlano> ctbSubNaturezaPlanoes) {
		this.ctbSubNaturezaPlanoes = ctbSubNaturezaPlanoes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ctbTipoFluxo")
	public Set<FsoPlanilhaOrcamento> getFsoPlanilhaOrcamentos() {
		return this.fsoPlanilhaOrcamentos;
	}

	public void setFsoPlanilhaOrcamentos(Set<FsoPlanilhaOrcamento> fsoPlanilhaOrcamentos) {
		this.fsoPlanilhaOrcamentos = fsoPlanilhaOrcamentos;
	}

	public enum Fields {

		CODIGO("codigo"),
		VERSION("version"),
		DESCRICAO("descricao"),
		CTB_SUB_NATUREZA_PLANOES("ctbSubNaturezaPlanoes"),
		FSO_PLANILHA_ORCAMENTOS("fsoPlanilhaOrcamentos");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getCodigo() == null) ? 0 : getCodigo().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof CtbTipoFluxo)) {
			return false;
		}
		CtbTipoFluxo other = (CtbTipoFluxo) obj;
		if (getCodigo() == null) {
			if (other.getCodigo() != null) {
				return false;
			}
		} else if (!getCodigo().equals(other.getCodigo())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

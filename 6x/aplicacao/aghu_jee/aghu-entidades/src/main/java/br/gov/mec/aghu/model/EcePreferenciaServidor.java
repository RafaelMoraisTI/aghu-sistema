package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * EcePreferenciaServidor generated by hbm2java
 */
@Entity
@Table(name = "ECE_PREFERENCIA_SERVIDORES", schema = "AGH")
public class EcePreferenciaServidor extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8785636100532966925L;
	private Integer seq;
	private Integer version;
	private RapServidores rapServidoresByEcePrxSerFk1;
	private AghUnidadesFuncionais aghUnidadesFuncionais;
	private RapServidores rapServidoresByEcePrxSerFk2;
	private String turno;
	private String situacao;
	private Date criadoEm;
	private String indDiaUtil;
	private String indSituacao;
	private Set<EceAuxiliarPreferencia> eceAuxiliarPreferenciaes = new HashSet<EceAuxiliarPreferencia>(0);
	private Set<EceLeitoPreferencia> eceLeitoPreferenciaes = new HashSet<EceLeitoPreferencia>(0);

	public EcePreferenciaServidor() {
	}

	public EcePreferenciaServidor(Integer seq, RapServidores rapServidoresByEcePrxSerFk1, AghUnidadesFuncionais aghUnidadesFuncionais,
			RapServidores rapServidoresByEcePrxSerFk2, Date criadoEm) {
		this.seq = seq;
		this.rapServidoresByEcePrxSerFk1 = rapServidoresByEcePrxSerFk1;
		this.aghUnidadesFuncionais = aghUnidadesFuncionais;
		this.rapServidoresByEcePrxSerFk2 = rapServidoresByEcePrxSerFk2;
		this.criadoEm = criadoEm;
	}

	public EcePreferenciaServidor(Integer seq, RapServidores rapServidoresByEcePrxSerFk1, AghUnidadesFuncionais aghUnidadesFuncionais,
			RapServidores rapServidoresByEcePrxSerFk2, String turno, String situacao, Date criadoEm, String indDiaUtil,
			String indSituacao, Set<EceAuxiliarPreferencia> eceAuxiliarPreferenciaes,
			Set<EceLeitoPreferencia> eceLeitoPreferenciaes) {
		this.seq = seq;
		this.rapServidoresByEcePrxSerFk1 = rapServidoresByEcePrxSerFk1;
		this.aghUnidadesFuncionais = aghUnidadesFuncionais;
		this.rapServidoresByEcePrxSerFk2 = rapServidoresByEcePrxSerFk2;
		this.turno = turno;
		this.situacao = situacao;
		this.criadoEm = criadoEm;
		this.indDiaUtil = indDiaUtil;
		this.indSituacao = indSituacao;
		this.eceAuxiliarPreferenciaes = eceAuxiliarPreferenciaes;
		this.eceLeitoPreferenciaes = eceLeitoPreferenciaes;
	}

	@Id
	@Column(name = "SEQ", unique = true, nullable = false)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByEcePrxSerFk1() {
		return this.rapServidoresByEcePrxSerFk1;
	}

	public void setRapServidoresByEcePrxSerFk1(RapServidores rapServidoresByEcePrxSerFk1) {
		this.rapServidoresByEcePrxSerFk1 = rapServidoresByEcePrxSerFk1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ", nullable = false)
	public AghUnidadesFuncionais getAghUnidadesFuncionais() {
		return this.aghUnidadesFuncionais;
	}

	public void setAghUnidadesFuncionais(AghUnidadesFuncionais aghUnidadesFuncionais) {
		this.aghUnidadesFuncionais = aghUnidadesFuncionais;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_SERVIDOR", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO_SERVIDOR", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByEcePrxSerFk2() {
		return this.rapServidoresByEcePrxSerFk2;
	}

	public void setRapServidoresByEcePrxSerFk2(RapServidores rapServidoresByEcePrxSerFk2) {
		this.rapServidoresByEcePrxSerFk2 = rapServidoresByEcePrxSerFk2;
	}

	@Column(name = "TURNO", length = 1)
	@Length(max = 1)
	public String getTurno() {
		return this.turno;
	}

	public void setTurno(String turno) {
		this.turno = turno;
	}

	@Column(name = "SITUACAO", length = 1)
	@Length(max = 1)
	public String getSituacao() {
		return this.situacao;
	}

	public void setSituacao(String situacao) {
		this.situacao = situacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "IND_DIA_UTIL", length = 1)
	@Length(max = 1)
	public String getIndDiaUtil() {
		return this.indDiaUtil;
	}

	public void setIndDiaUtil(String indDiaUtil) {
		this.indDiaUtil = indDiaUtil;
	}

	@Column(name = "IND_SITUACAO", length = 1)
	@Length(max = 1)
	public String getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(String indSituacao) {
		this.indSituacao = indSituacao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ecePreferenciaServidor")
	public Set<EceAuxiliarPreferencia> getEceAuxiliarPreferenciaes() {
		return this.eceAuxiliarPreferenciaes;
	}

	public void setEceAuxiliarPreferenciaes(Set<EceAuxiliarPreferencia> eceAuxiliarPreferenciaes) {
		this.eceAuxiliarPreferenciaes = eceAuxiliarPreferenciaes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ecePreferenciaServidor")
	public Set<EceLeitoPreferencia> getEceLeitoPreferenciaes() {
		return this.eceLeitoPreferenciaes;
	}

	public void setEceLeitoPreferenciaes(Set<EceLeitoPreferencia> eceLeitoPreferenciaes) {
		this.eceLeitoPreferenciaes = eceLeitoPreferenciaes;
	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		RAP_SERVIDORES_BY_ECE_PRX_SER_FK1("rapServidoresByEcePrxSerFk1"),
		AGH_UNIDADES_FUNCIONAIS("aghUnidadesFuncionais"),
		RAP_SERVIDORES_BY_ECE_PRX_SER_FK2("rapServidoresByEcePrxSerFk2"),
		TURNO("turno"),
		SITUACAO("situacao"),
		CRIADO_EM("criadoEm"),
		IND_DIA_UTIL("indDiaUtil"),
		IND_SITUACAO("indSituacao"),
		ECE_AUXILIAR_PREFERENCIAES("eceAuxiliarPreferenciaes"),
		ECE_LEITO_PREFERENCIAES("eceLeitoPreferenciaes");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof EcePreferenciaServidor)) {
			return false;
		}
		EcePreferenciaServidor other = (EcePreferenciaServidor) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

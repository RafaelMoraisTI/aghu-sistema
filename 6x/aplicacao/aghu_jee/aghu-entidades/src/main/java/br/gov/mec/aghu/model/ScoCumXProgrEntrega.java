package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * ScoCumXProgrEntrega generated by hbm2java
 */
@Entity
@Table(name = "SCO_CUM_X_PROGR_ENTREGAS", schema = "AGH")
public class ScoCumXProgrEntrega extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1006360215650761272L;
	private Integer seq;
	private Integer version;
	private SceReqMaterial sceReqMaterial;
	private SceNotaRecebProvisorio sceNotaRecebProvisorio;
	private SceItemRmps sceItemRmps;
	private ScoProgEntregaItemAutorizacaoFornecimento scoProgEntregaItemAutorizacaoFornecimento;
	private ScoItemAutorizacaoForn scoItensAutorizacaoForn;
	private SceNotaRecebimento sceNotaRecebimento;
	private String indRecbTemp;

	public ScoCumXProgrEntrega() {
	}

	public ScoCumXProgrEntrega(Integer seq, SceItemRmps sceItemRmps, ScoProgEntregaItemAutorizacaoFornecimento scoProgEntregaItemAutorizacaoFornecimento) {
		this.seq = seq;
		this.sceItemRmps = sceItemRmps;
		this.scoProgEntregaItemAutorizacaoFornecimento = scoProgEntregaItemAutorizacaoFornecimento;
	}

	public ScoCumXProgrEntrega(Integer seq, SceReqMaterial sceReqMaterial, SceNotaRecebProvisorio sceNotaRecebProvisorio,
			SceItemRmps sceItemRmps, ScoProgEntregaItemAutorizacaoFornecimento scoProgEntregaItemAutorizacaoFornecimento, SceNotaRecebimento sceNotaRecebimento,
			String indRecbTemp) {
		this.seq = seq;
		this.sceReqMaterial = sceReqMaterial;
		this.sceNotaRecebProvisorio = sceNotaRecebProvisorio;
		this.sceItemRmps = sceItemRmps;
		this.scoProgEntregaItemAutorizacaoFornecimento = scoProgEntregaItemAutorizacaoFornecimento;
		this.sceNotaRecebimento = sceNotaRecebimento;
		this.indRecbTemp = indRecbTemp;
	}

	@Id
	@Column(name = "SEQ", unique = true, nullable = false)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RMS_SEQ")
	public SceReqMaterial getSceReqMaterial() {
		return this.sceReqMaterial;
	}

	public void setSceReqMaterial(SceReqMaterial sceReqMaterial) {
		this.sceReqMaterial = sceReqMaterial;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "NRP_SEQ")
	public SceNotaRecebProvisorio getSceNotaRecebProvisorio() {
		return this.sceNotaRecebProvisorio;
	}

	public void setSceNotaRecebProvisorio(SceNotaRecebProvisorio sceNotaRecebProvisorio) {
		this.sceNotaRecebProvisorio = sceNotaRecebProvisorio;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "IPS_RMP_SEQ", referencedColumnName = "RMP_SEQ", nullable = false),
			@JoinColumn(name = "IPS_NUMERO", referencedColumnName = "NUMERO", nullable = false) })
	public SceItemRmps getSceItemRmps() {
		return this.sceItemRmps;
	}

	public void setSceItemRmps(SceItemRmps sceItemRmps) {
		this.sceItemRmps = sceItemRmps;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "PEA_IAF_AFN_NUMERO", referencedColumnName = "IAF_AFN_NUMERO", nullable = false),
			@JoinColumn(name = "PEA_IAF_NUMERO", referencedColumnName = "IAF_NUMERO", nullable = false),
			@JoinColumn(name = "PEA_SEQ", referencedColumnName = "SEQ", nullable = false),
			@JoinColumn(name = "PEA_PARCELA", referencedColumnName = "PARCELA", nullable = false) })
	public ScoProgEntregaItemAutorizacaoFornecimento getScoProgEntregaItemAutorizacaoFornecimento() {
		return this.scoProgEntregaItemAutorizacaoFornecimento;
	}

	public void setScoProgEntregaItemAutorizacaoFornecimento(ScoProgEntregaItemAutorizacaoFornecimento scoProgEntregaItemAutorizacaoFornecimento) {
		this.scoProgEntregaItemAutorizacaoFornecimento = scoProgEntregaItemAutorizacaoFornecimento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "NRS_SEQ")
	public SceNotaRecebimento getSceNotaRecebimento() {
		return this.sceNotaRecebimento;
	}

	public void setSceNotaRecebimento(SceNotaRecebimento sceNotaRecebimento) {
		this.sceNotaRecebimento = sceNotaRecebimento;
	}

	@Column(name = "IND_RECB_TEMP", length = 1)
	@Length(max = 1)
	public String getIndRecbTemp() {
		return this.indRecbTemp;
	}

	public void setIndRecbTemp(String indRecbTemp) {
		this.indRecbTemp = indRecbTemp;
	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		SCE_REQ_MATERIAL("sceReqMaterial"),
		SCE_NOTA_RECEB_PROVISORIO("sceNotaRecebProvisorio"),
		SCE_ITEM_RMPS("sceItemRmps"),
		SCO_PROG_ENTREGA_ITEM_AUTORIZACAO_FORNECIMENTO("scoProgEntregaItemAutorizacaoFornecimento"),
		SCO_PROG_ENTREGA_ITEM_AUTORIZACAO_FORNECIMENTO_PEA_PARCELA("scoProgEntregaItemAutorizacaoFornecimento.id.parcela"),
		SCO_PROG_ENTREGA_ITEM_AUTORIZACAO_FORNECIMENTO_IAF_NUMERO("scoProgEntregaItemAutorizacaoFornecimento.id.iafNumero"),
		SCO_PROG_ENTREGA_ITEM_AUTORIZACAO_FORNECIMENTO_IAF_AFN_NUMERO("scoProgEntregaItemAutorizacaoFornecimento.scoItensAutorizacaoForn.id.afnNumero"),
		SCE_NOTA_RECEBIMENTO("sceNotaRecebimento"),
		IND_RECB_TEMP("indRecbTemp"),
		PEA_IAF_AFN_NUMERO("scoItensAutorizacaoForn.id.afnNumero"),
		IAF_NUMERO("scoItensAutorizacaoForn.id.numero"),
		PEA_IAF_NUMERO("scoItensAutorizacaoForn");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof ScoCumXProgrEntrega)) {
			return false;
		}
		ScoCumXProgrEntrega other = (ScoCumXProgrEntrega) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####
	
	//bi-directional many-to-one association to ScoItensAutorizacaoForn
    @ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
		@JoinColumn(name="PEA_IAF_AFN_NUMERO", referencedColumnName="AFN_NUMERO", insertable=false, updatable=false),
		@JoinColumn(name="PEA_IAF_NUMERO", referencedColumnName="NUMERO", insertable=false, updatable=false)
		})
	public ScoItemAutorizacaoForn getScoItensAutorizacaoForn() {
		return scoItensAutorizacaoForn;
	}

	public void setScoItensAutorizacaoForn(
			ScoItemAutorizacaoForn scoItensAutorizacaoForn) {
		this.scoItensAutorizacaoForn = scoItensAutorizacaoForn;
	}
}

package br.gov.mec.aghu.model;

// Generated 25/08/2011 13:21:56 by Hibernate Tools 3.4.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AelGrpTecnicaUnfExames generated by hbm2java
 */
@Entity
@Table(name = "AEL_GRP_TECNICA_UNF_EXAMES", schema = "AGH")
public class AelGrpTecnicaUnfExames extends BaseEntityId<AelGrpTecnicaUnfExamesId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1680718980945113958L;
	private AelGrpTecnicaUnfExamesId id;
	private Integer version;
	private AelGrupoExameTecnicas aelGrupoExameTecnicas;
	private AelUnfExecutaExames aelUnfExecutaExames;
	private AelExames exames;
	private AelMateriaisAnalises materialAnalise;
	
	

	

	public AelGrpTecnicaUnfExames() {
	}

	public AelGrpTecnicaUnfExames(AelGrpTecnicaUnfExamesId id, AelGrupoExameTecnicas aelGrupoExameTecnicas) {
		this.id = id;
		this.aelGrupoExameTecnicas = aelGrupoExameTecnicas;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "grtSeq", column = @Column(name = "GRT_SEQ", nullable = false)),
			@AttributeOverride(name = "ufeEmaExaSigla", column = @Column(name = "UFE_EMA_EXA_SIGLA", nullable = false, length = 5)),
			@AttributeOverride(name = "ufeEmaManSeq", column = @Column(name = "UFE_EMA_MAN_SEQ", nullable = false)),
			@AttributeOverride(name = "ufeUnfSeq", column = @Column(name = "UFE_UNF_SEQ", nullable = false)) })
	public AelGrpTecnicaUnfExamesId getId() {
		return this.id;
	}

	public void setId(AelGrpTecnicaUnfExamesId id) {
		this.id = id;
	}

	@Transient
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "GRT_SEQ", nullable = false, insertable = false, updatable = false)
	public AelGrupoExameTecnicas getAelGrupoExameTecnicas() {
		return this.aelGrupoExameTecnicas;
	}

	public void setAelGrupoExameTecnicas(AelGrupoExameTecnicas aelGrupoExameTecnicas) {
		this.aelGrupoExameTecnicas = aelGrupoExameTecnicas;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "UFE_EMA_EXA_SIGLA", referencedColumnName = "EMA_EXA_SIGLA", updatable = false, insertable = false),
			@JoinColumn(name = "UFE_EMA_MAN_SEQ", referencedColumnName = "EMA_MAN_SEQ", updatable = false, insertable = false),
			@JoinColumn(name = "UFE_UNF_SEQ", referencedColumnName = "UNF_SEQ", updatable = false, insertable = false) })
	public AelUnfExecutaExames getAelUnfExecutaExames() {
		return aelUnfExecutaExames;
	}
	
	public void setAelUnfExecutaExames(AelUnfExecutaExames aelUnfExecutaExames) {
		this.aelUnfExecutaExames = aelUnfExecutaExames;
	}
	

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UFE_EMA_EXA_SIGLA", nullable = false, insertable = false, updatable = false)
	public AelExames getExames() {
		return exames;
	}

	public void setExames(AelExames exames) {
		this.exames = exames;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UFE_EMA_MAN_SEQ", nullable = false, insertable = false, updatable = false)
	public AelMateriaisAnalises getMaterialAnalise() {
		return materialAnalise;
	}

	public void setMaterialAnalise(AelMateriaisAnalises materialAnalise) {
		this.materialAnalise = materialAnalise;
	}
	
	
	
	public enum Fields {
		
		ID("id"),
		GRT_SEQ("id.grtSeq"),
		UFE_EMA_EXA_SIGLA("id.ufeEmaExaSigla"),
		UFE_EMA_MAN_SEQ("id.ufeEmaManSeq"),
		UFE_UFE_UNF_SEQ("id.ufeUnfSeq"),
		AEL_GRUPO_EXAME_TECNICAS("aelGrupoExameTecnicas"),
		EXAMES("exames"),
		MATERIAL_ANALISE("materialAnalise"),
		UNF_EXECUTA_EXAMES("aelUnfExecutaExames"),
		;
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}

	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AelGrpTecnicaUnfExames)) {
			return false;
		}
		AelGrpTecnicaUnfExames other = (AelGrpTecnicaUnfExames) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}
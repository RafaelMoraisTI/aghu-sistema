package br.gov.mec.aghu.model;

// Generated 26/02/2010 17:37:25 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import javax.validation.constraints.NotNull;

import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * McoAchadoExameFisicos generated by hbm2java
 */
@Entity
@Table(name = "MCO_ACHADO_EXAME_FISICOS", schema = "AGH")
public class McoAchadoExameFisicos extends BaseEntityId<McoAchadoExameFisicosId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5865217954412400872L;
	private McoAchadoExameFisicosId id;
	private McoExameFisicoRns mcoExameFisicoRns;
	private String complAchado;
	private RapServidores servidor;
	private Date criadoEm;

	public McoAchadoExameFisicos() {
	}

	public McoAchadoExameFisicos(McoAchadoExameFisicosId id,
			McoExameFisicoRns mcoExameFisicoRns, RapServidores servidor, 
			Date criadoEm) {
		this.id = id;
		this.mcoExameFisicoRns = mcoExameFisicoRns;
		this.servidor = servidor;
		this.criadoEm = criadoEm;
	}

	public McoAchadoExameFisicos(McoAchadoExameFisicosId id,
			McoExameFisicoRns mcoExameFisicoRns, String complAchado,
			RapServidores servidor, Date criadoEm) {
		this.id = id;
		this.mcoExameFisicoRns = mcoExameFisicoRns;
		this.complAchado = complAchado;
		this.servidor = servidor;
		this.criadoEm = criadoEm;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "efrRnaGsoPacCodigo", column = @Column(name = "EFR_RNA_GSO_PAC_CODIGO", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "efrRnaGsoSeqp", column = @Column(name = "EFR_RNA_GSO_SEQP", nullable = false, precision = 3, scale = 0)),
			@AttributeOverride(name = "efrRnaSeqp", column = @Column(name = "EFR_RNA_SEQP", nullable = false, precision = 2, scale = 0)),
			@AttributeOverride(name = "acdSeq", column = @Column(name = "ACD_SEQ", nullable = false, precision = 5, scale = 0)) })
	@NotNull
	public McoAchadoExameFisicosId getId() {
		return this.id;
	}

	public void setId(McoAchadoExameFisicosId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "EFR_RNA_GSO_PAC_CODIGO", referencedColumnName = "RNA_GSO_PAC_CODIGO", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "EFR_RNA_GSO_SEQP", referencedColumnName = "RNA_GSO_SEQP", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "EFR_RNA_SEQP", referencedColumnName = "RNA_SEQP", nullable = false, insertable = false, updatable = false) })
	@NotNull
	public McoExameFisicoRns getMcoExameFisicoRns() {
		return this.mcoExameFisicoRns;
	}

	public void setMcoExameFisicoRns(McoExameFisicoRns mcoExameFisicoRns) {
		this.mcoExameFisicoRns = mcoExameFisicoRns;
	}

	@Column(name = "COMPL_ACHADO", length = 100)
	@Length(max = 100)
	public String getComplAchado() {
		return this.complAchado;
	}

	public void setComplAchado(String complAchado) {
		this.complAchado = complAchado;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	@NotNull
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return servidor;
	}
	
	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	public enum Fields {
		CODIGO_PACIENTE("id.efrRnaGsoPacCodigo"), 
		SEQUENCE("id.efrRnaGsoSeqp"),
		EFR_RNA_SEQP("id.efrRnaSeqp");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}	

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof McoAchadoExameFisicos)) {
			return false;
		}
		McoAchadoExameFisicos other = (McoAchadoExameFisicos) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
}

package br.gov.mec.aghu.model;

// Generated 19/10/2011 10:59:34 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;



import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MbcDiagnosticoDescricoes generated by hbm2java
 */

@Entity
@Table(name = "MBC_DIAGNOSTICO_DESCRICOES", schema = "AGH")
public class MbcDiagnosticoDescricao extends BaseEntityId<MbcDiagnosticoDescricaoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7668241067585399180L;
	private MbcDiagnosticoDescricaoId id;
	private String complemento;
	private Boolean destacar;
	private Date criadoEm;
	private RapServidores servidor;
	private AghCid cid;
	private MbcDescricaoCirurgica mbcDescricaoCirurgica;
	private MbcCirurgias cirurgia;
	
	public MbcDiagnosticoDescricao() {
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "dcgCrgSeq", column = @Column(name = "DCG_CRG_SEQ", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "dcgSeqp", column = @Column(name = "DCG_SEQP", nullable = false, precision = 2, scale = 0)),
			@AttributeOverride(name = "cidSeq", column = @Column(name = "CID_SEQ", nullable = false, precision = 5, scale = 0)),
			@AttributeOverride(name = "classificacao", column = @Column(name = "CLASSIFICACAO", nullable = false, length = 3)) })
	public MbcDiagnosticoDescricaoId getId() {
		return this.id;
	}

	public void setId(MbcDiagnosticoDescricaoId id) {
		this.id = id;
	}

	@Column(name = "COMPLEMENTO", length = 500)
	@Length(max = 500)
	public String getComplemento() {
		return this.complemento;
	}

	public void setComplemento(String complemento) {
		this.complemento = complemento;
	}

	@Column(name = "DESTACAR", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getDestacar() {
		return this.destacar;
	}

	public void setDestacar(Boolean destacar) {
		this.destacar = destacar;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable=false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable=false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "DCG_CRG_SEQ", referencedColumnName = "CRG_SEQ", insertable = false, updatable = false),
			@JoinColumn(name = "DCG_SEQP", referencedColumnName = "SEQP", insertable = false, updatable = false) })
	public MbcDescricaoCirurgica getMbcDescricaoCirurgica() {
		return this.mbcDescricaoCirurgica;
	}

	public void setMbcDescricaoCirurgica(MbcDescricaoCirurgica mbcDescricaoCirurgica) {
		this.mbcDescricaoCirurgica = mbcDescricaoCirurgica;
	}

	public void setCid(AghCid cid) {
		this.cid = cid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "CID_SEQ", referencedColumnName = "SEQ", updatable = false, insertable = false) })
	public AghCid getCid() {
		return cid;
	}
	
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "DCG_CRG_SEQ", referencedColumnName = "SEQ", updatable = false, insertable = false) })
	public MbcCirurgias getCirurgia() {
		return cirurgia;
	}

	public void setCirurgia(MbcCirurgias cirurgia) {
		this.cirurgia = cirurgia;
	}


	

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = super.hashCode();
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj){
			return true;
		}
		if (!super.equals(obj)){
			return false;
		}
		if (getClass() != obj.getClass()){
			return false;
		}
		MbcDiagnosticoDescricao other = (MbcDiagnosticoDescricao) obj;
		if (id == null) {
			if (other.id != null){
				return false;
			}
		} else if (!id.equals(other.id)){
			return false;
		}
		return true;
	}




	public enum Fields {
		
		DCG_CRG_SEQ("id.dcgCrgSeq"),
		DCG_SEQP("id.dcgSeqp"),
		CLASSIFICACAO("id.classificacao"),
		CIRURGIA("cirurgia"),
		DESTACAR("destacar"),
		CID("cid"),
		CID_SEQ("id.cidSeq");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}	
}

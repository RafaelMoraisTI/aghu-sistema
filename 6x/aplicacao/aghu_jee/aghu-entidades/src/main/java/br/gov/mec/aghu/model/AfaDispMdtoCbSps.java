package br.gov.mec.aghu.model;

// Generated 15/07/2011 13:41:58 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioIndExcluidoDispMdtoCbSps;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * AfaDispMdtoCbSps generated by hbm2java
 */

@Entity
@Table(name = "AFA_DISP_MDTO_CB_SPS", schema = "AGH")
@SequenceGenerator(name = "afaDispMdtoCbSpsSeq", sequenceName = "AGH.AFA_SDC_SQ1", allocationSize = 1)
public class AfaDispMdtoCbSps extends BaseEntitySeq<Long> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 379816449294548708L;
	private Long seq;
	private Date criadoEm;
	private String nroEtiqueta;
	private SceLoteDocImpressao loteDocImpressao;
	private AghMicrocomputador microComputador;
	private DominioIndExcluidoDispMdtoCbSps indExcluido;
	private Date alteradoEm;
	
	private AfaDispensacaoMdtos dispensacaoMdto;
	private RapServidores servidor;
	private RapServidores servidorAlterado;

	@Id
	@Column(name = "SEQ", unique = true, nullable = false)
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "afaDispMdtoCbSpsSeq")
	public Long getSeq() {
		return this.seq;
	}

	public void setSeq(Long seq) {
		this.seq = seq;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "NRO_ETIQUETA", nullable = false, length = 15)
	@Length(max = 15)
	public String getNroEtiqueta() {
		return this.nroEtiqueta;
	}

	public void setNroEtiqueta(String nroEtiqueta) {
		this.nroEtiqueta = nroEtiqueta;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", nullable = false, length = 29)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DSM_SEQ", referencedColumnName="SEQ", nullable = false)
	public AfaDispensacaoMdtos getDispensacaoMdto() {
		return dispensacaoMdto;
	}

	public void setDispensacaoMdto(AfaDispensacaoMdtos dispensacaoMdto) {
		this.dispensacaoMdto = dispensacaoMdto;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
		@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
		@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO")})
	public RapServidores getServidor() {
		return servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
		@JoinColumn(name = "SER_MATRICULA_ALTERADO", referencedColumnName = "MATRICULA"),
		@JoinColumn(name = "SER_VIN_CODIGO_ALTERADO", referencedColumnName = "VIN_CODIGO")})
	public RapServidores getServidorAlterado() {
		return servidorAlterado;
	}

	public void setServidorAlterado(RapServidores servidorAlterado) {
		this.servidorAlterado = servidorAlterado;
	}
	
	public enum Fields {
		
		DISPENSACAO_SEQ("dispensacaoMdto.seq"),
		DISPENSACAO("dispensacaoMdto"),
		IND_EXCLUIDO("indExcluido"),
		SEQ("seq"),
		NRO_ETIQUETA("nroEtiqueta"),
		CRIADO_EM("criadoEm"),
		LOTE_DOC_IMPRESSAO("loteDocImpressao");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	public void setIndExcluido(DominioIndExcluidoDispMdtoCbSps indExcluido) {
		this.indExcluido = indExcluido;
	}
	
	@Column(name = "IND_EXCLUIDO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioIndExcluidoDispMdtoCbSps getIndExcluido() {
		return indExcluido;
	}
	
	@Override
	public int hashCode() {
		return new HashCodeBuilder().append(this.seq).toHashCode();
	}

	@Override
	public boolean equals(Object other) {
		if (!(other instanceof AfaDispMdtoCbSps)) {
			return false;
		}
		AfaDispMdtoCbSps castOther = (AfaDispMdtoCbSps) other;
		return new EqualsBuilder().append(this.seq, castOther.getSeq())
				.isEquals();
	}

	@Override
	public String toString() {
		return new ToStringBuilder(this).append("seq", this.seq).toString();
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MIC_NOME", referencedColumnName="NOME", nullable = false)
	public AghMicrocomputador getMicroComputador() {
		return microComputador;
	}

	public void setMicroComputador(AghMicrocomputador microComputador) {
		this.microComputador = microComputador;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LDI_SEQ", referencedColumnName="SEQ", nullable = false)
	public SceLoteDocImpressao getLoteDocImpressao() {
		return loteDocImpressao;
	}

	public void setLoteDocImpressao(SceLoteDocImpressao loteDocImpressao) {
		this.loteDocImpressao = loteDocImpressao;
	}

}

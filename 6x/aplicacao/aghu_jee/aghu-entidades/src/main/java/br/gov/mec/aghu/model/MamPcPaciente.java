package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MamPcPaciente generated by hbm2java
 */
@Entity
@Table(name = "MAM_PC_PACIENTES", schema = "AGH")
public class MamPcPaciente extends BaseEntityId<MamPcPacienteId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 4254793804380730317L;
	private MamPcPacienteId id;
	private Integer version;
	private RapServidores rapServidores;
	private MamPcControle mamPcControle;
	private Date criadoEm;
	private Date dthrInicio;
	private Date dthrFim;
	private AipPacientes paciente;
	private Set<MamPcAlta> mamPcAltaes = new HashSet<MamPcAlta>(0);
	private Set<MamPcSumExameTab> mamPcSumExameTabs = new HashSet<MamPcSumExameTab>(0);
	private Set<MamPcDestino> mamPcDestinoes = new HashSet<MamPcDestino>(0);

	public MamPcPaciente() {
	}

	public MamPcPaciente(MamPcPacienteId id, RapServidores rapServidores, MamPcControle mamPcControle, AipPacientes paciente, Date criadoEm) {
		this.id = id;
		this.rapServidores = rapServidores;
		this.mamPcControle = mamPcControle;
		this.paciente = paciente;
		this.criadoEm = criadoEm;
	}

	public MamPcPaciente(MamPcPacienteId id, RapServidores rapServidores, MamPcControle mamPcControle, AipPacientes pac,
			Date criadoEm, Date dthrInicio, Date dthrFim, Set<MamPcAlta> mamPcAltaes, Set<MamPcSumExameTab> mamPcSumExameTabs,
			Set<MamPcDestino> mamPcDestinoes) {
		this.id = id;
		this.rapServidores = rapServidores;
		this.mamPcControle = mamPcControle;
		this.paciente = pac;
		this.criadoEm = criadoEm;
		this.dthrInicio = dthrInicio;
		this.dthrFim = dthrFim;
		this.mamPcAltaes = mamPcAltaes;
		this.mamPcSumExameTabs = mamPcSumExameTabs;
		this.mamPcDestinoes = mamPcDestinoes;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "pleSeq", column = @Column(name = "PLE_SEQ", nullable = false)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false)) })
	public MamPcPacienteId getId() {
		return this.id;
	}

	public void setId(MamPcPacienteId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PLE_SEQ", nullable = false, insertable = false, updatable = false)
	public MamPcControle getMamPcControle() {
		return this.mamPcControle;
	}

	public void setMamPcControle(MamPcControle mamPcControle) {
		this.mamPcControle = mamPcControle;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_INICIO", length = 29)
	public Date getDthrInicio() {
		return this.dthrInicio;
	}

	public void setDthrInicio(Date dthrInicio) {
		this.dthrInicio = dthrInicio;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_FIM", length = 29)
	public Date getDthrFim() {
		return this.dthrFim;
	}

	public void setDthrFim(Date dthrFim) {
		this.dthrFim = dthrFim;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mamPcPaciente")
	public Set<MamPcAlta> getMamPcAltaes() {
		return this.mamPcAltaes;
	}

	public void setMamPcAltaes(Set<MamPcAlta> mamPcAltaes) {
		this.mamPcAltaes = mamPcAltaes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mamPcPaciente")
	public Set<MamPcSumExameTab> getMamPcSumExameTabs() {
		return this.mamPcSumExameTabs;
	}

	public void setMamPcSumExameTabs(Set<MamPcSumExameTab> mamPcSumExameTabs) {
		this.mamPcSumExameTabs = mamPcSumExameTabs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mamPcPaciente")
	public Set<MamPcDestino> getMamPcDestinoes() {
		return this.mamPcDestinoes;
	}

	public void setMamPcDestinoes(Set<MamPcDestino> mamPcDestinoes) {
		this.mamPcDestinoes = mamPcDestinoes;
	}
	
	/**
	 * @return the paciente
	 * 
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO", nullable = false)
	public AipPacientes getPaciente() {
		return this.paciente;
	}

	public void setPaciente(AipPacientes paciente) {
		this.paciente = paciente;
	}
	
	public enum Fields {

		ID("id"),
		PLE_SEQ("id.pleSeq"),
		SEQP("id.seqp"),
		VERSION("version"),
		RAP_SERVIDORES("rapServidores"),
		MAM_PC_CONTROLES("mamPcControle"),
		PAC_CODIGO("paciente.codigo"),
		PACIENTE("paciente"),
		CRIADO_EM("criadoEm"),
		DTHR_INICIO("dthrInicio"),
		DTHR_FIM("dthrFim"),
		MAM_PC_ALTAES("mamPcAltaes"),
		MAM_PC_SUM_EXAME_TABS("mamPcSumExameTabs"),
		MAM_PC_DESTINOES("mamPcDestinoes");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MamPcPaciente)) {
			return false;
		}
		MamPcPaciente other = (MamPcPaciente) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

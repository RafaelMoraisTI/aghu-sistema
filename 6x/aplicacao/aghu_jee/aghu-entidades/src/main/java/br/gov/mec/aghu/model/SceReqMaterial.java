package br.gov.mec.aghu.model;

// Generated 21/09/2011 17:21:15 by Hibernate Tools 3.4.0.CR1

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;
import br.gov.mec.aghu.dominio.DominioImpresso;
import br.gov.mec.aghu.dominio.DominioSituacaoRequisicaoMaterial;

/**
 * SceReqMaterial generated by hbm2java
 */

@Entity
@SequenceGenerator(name="sceRmsSq1", sequenceName="AGH.SCE_RMS_SQ1", allocationSize=1)
@Table(name = "SCE_REQ_MATERIAIS", schema = "AGH")
public class SceReqMaterial extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 42210741360701876L;
	private Integer seq;
	private SceReqMaterial reqMaterial;
	private SceTipoMovimento tipoMovimento;
	private SceAlmoxarifado almoxarifado;
	private FccCentroCustos centroCusto;
	private FccCentroCustos centroCustoAplica;
	private ScoGrupoMaterial grupoMaterial;
	private Date dtGeracao;
	private RapServidores servidor;
	private DominioSituacaoRequisicaoMaterial indSituacao;
	private Boolean estorno;
	private Boolean automatica = Boolean.FALSE;
	private DominioImpresso indImpresso;
	private Date dtConfirmacao;
	private RapServidores servidorConfirmado;
	private Date dtEfetivacao;
	private RapServidores servidorEfetivado;
	private Date dtEstorno;
	private RapServidores servidorEstornado;
	private ScePacoteMateriais pacoteMaterial;
	private Date dtCancelamento;
	private RapServidores servidorCancelado;
	private String nomeImpressora;
	private String observacao;
	private SceRmrPaciente rmrPaciente;
	private Integer pdmNumero;
	private Integer eslSeqOrigMat;
	private String indSitFaturamento;
	private SceRmrPaciente rmrPacienteNrs;
	private List<SceItemRms> itensRequisicaoMaterial = new ArrayList<SceItemRms>();
	private Integer codigoGrupoMaterial;
	private String descricaoGrupoMaterial;
	private Integer codigoCentroCustoRequisitante;
	private String descricaoCentroCustoRequisitante;
	private Integer codigoCentroCustoAplicacao;
	private String descricaoCentroCustoAplicacao;
	private Short   seqAlmoxarifado;
	private String descricaoAlmoxarifado;
	private Integer atendimentoSeq;
	private Short tmvSeq;
	private Byte tmvComplemento;
	private Integer matricula;
	private Short vinCodigo;
	private Integer version;

		
	private AghAtendimentos atendimento;
	
	
	
	@Id
	@Column(name = "SEQ", unique = true, nullable = false, precision = 7, scale = 0)
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "sceRmsSq1")
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "TMV_SEQ", referencedColumnName = "SEQ", nullable = false),
			@JoinColumn(name = "TMV_COMPLEMENTO", referencedColumnName = "COMPLEMENTO", nullable = false) })
	public SceTipoMovimento getTipoMovimento() {
		return tipoMovimento;
	}

	public void setTipoMovimento(SceTipoMovimento tipoMovimento) {
		this.tipoMovimento = tipoMovimento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RMS_SEQ")
	public SceReqMaterial getReqMaterial() {
		return reqMaterial;
	}

	public void setReqMaterial(SceReqMaterial reqMaterial) {
		this.reqMaterial = reqMaterial;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ALM_SEQ", nullable = false)
	public SceAlmoxarifado getAlmoxarifado() {
		return almoxarifado;
	}

	public void setAlmoxarifado(SceAlmoxarifado almoxarifado) {
		this.almoxarifado = almoxarifado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CCT_CODIGO", nullable = false)
	public FccCentroCustos getCentroCusto() {
		return centroCusto;
	}

	public void setCentroCusto(FccCentroCustos centroCusto) {
		this.centroCusto = centroCusto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CCT_CODIGO_APLICA", nullable = false)
	public FccCentroCustos getCentroCustoAplica() {
		return centroCustoAplica;
	}

	public void setCentroCustoAplica(FccCentroCustos centroCustoAplica) {
		this.centroCustoAplica = centroCustoAplica;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "GMT_CODIGO")
	public ScoGrupoMaterial getGrupoMaterial() {
		return grupoMaterial;
	}

	public void setGrupoMaterial(ScoGrupoMaterial grupoMaterial) {
		this.grupoMaterial = grupoMaterial;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_GERACAO", nullable = false)
	public Date getDtGeracao() {
		return this.dtGeracao;
	}

	public void setDtGeracao(Date dtGeracao) {
		this.dtGeracao = dtGeracao;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidor() {
		return servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacaoRequisicaoMaterial getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacaoRequisicaoMaterial indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Column(name = "IND_ESTORNO", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getEstorno() {
		return this.estorno;
	}

	public void setEstorno(Boolean estorno) {
		this.estorno = estorno;
	}

	@Column(name = "IND_AUTOMATICA", nullable = true, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getAutomatica() {
		return automatica;
	}
	
	public void setAutomatica(Boolean automatica) {
		this.automatica = automatica;
	}
	
	@Column(name = "IND_IMPRESSO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioImpresso getIndImpresso() {
		return this.indImpresso;
	}

	public void setIndImpresso(DominioImpresso indImpresso) {
		this.indImpresso = indImpresso;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_CONFIRMACAO", length = 7)
	public Date getDtConfirmacao() {
		return this.dtConfirmacao;
	}

	public void setDtConfirmacao(Date dtConfirmacao) {
		this.dtConfirmacao = dtConfirmacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA_CONFIRMADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_CONFIRMADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorConfirmado() {
		return servidorConfirmado;
	}

	public void setServidorConfirmado(RapServidores servidorConfirmado) {
		this.servidorConfirmado = servidorConfirmado;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_EFETIVACAO", length = 7)
	public Date getDtEfetivacao() {
		return this.dtEfetivacao;
	}

	public void setDtEfetivacao(Date dtEfetivacao) {
		this.dtEfetivacao = dtEfetivacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA_EFETIVADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_EFETIVADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorEfetivado() {
		return servidorEfetivado;
	}

	public void setServidorEfetivado(RapServidores servidorEfetivado) {
		this.servidorEfetivado = servidorEfetivado;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_ESTORNO", length = 7)
	public Date getDtEstorno() {
		return this.dtEstorno;
	}

	public void setDtEstorno(Date dtEstorno) {
		this.dtEstorno = dtEstorno;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA_ESTORNADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_ESTORNADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorEstornado() {
		return servidorEstornado;
	}

	public void setServidorEstornado(RapServidores servidorEstornado) {
		this.servidorEstornado = servidorEstornado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "PMT_CCT_CODIGO_REFERE", referencedColumnName = "CCT_CODIGO_REFERE"),
			@JoinColumn(name = "PMT_CCT_CODIGO", referencedColumnName = "CCT_CODIGO"), 
			@JoinColumn(name = "PMT_NUMERO", referencedColumnName = "NUMERO") })
	public ScePacoteMateriais getPacoteMaterial() {
		return pacoteMaterial;
	}

	public void setPacoteMaterial(ScePacoteMateriais pacoteMaterial) {
		this.pacoteMaterial = pacoteMaterial;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DT_CANCELAMENTO", length = 7)
	public Date getDtCancelamento() {
		return this.dtCancelamento;
	}

	public void setDtCancelamento(Date dtCancelamento) {
		this.dtCancelamento = dtCancelamento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA_CANCELADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_CANCELADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorCancelado() {
		return servidorCancelado;
	}

	public void setServidorCancelado(RapServidores servidorCancelado) {
		this.servidorCancelado = servidorCancelado;
	}

	@Column(name = "NOME_IMPRESSORA", length = 60)
	@Length(max = 60)
	public String getNomeImpressora() {
		return this.nomeImpressora;
	}

	public void setNomeImpressora(String nomeImpressora) {
		this.nomeImpressora = nomeImpressora;
	}

	@Column(name = "OBSERVACAO", length = 120)
	@Length(max = 120)
	public String getObservacao() {
		return this.observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RMP_SEQ")
	public SceRmrPaciente getRmrPaciente() {
		return rmrPaciente;
	}

	public void setRmrPaciente(SceRmrPaciente rmrPaciente) {
		this.rmrPaciente = rmrPaciente;
	}

	@Column(name = "PDM_NUMERO", precision = 7, scale = 0)
	public Integer getPdmNumero() {
		return pdmNumero;
	}

	public void setPdmNumero(Integer pdmNumero) {
		this.pdmNumero = pdmNumero;
	}

	@Column(name = "ESL_SEQ_ORIG_MAT", precision = 7, scale = 0)
	public Integer getEslSeqOrigMat() {
		return this.eslSeqOrigMat;
	}

	public void setEslSeqOrigMat(Integer eslSeqOrigMat) {
		this.eslSeqOrigMat = eslSeqOrigMat;
	}

	@Column(name = "IND_SIT_FATURAMENTO", length = 1)
	@Length(max = 1)
	public String getIndSitFaturamento() {
		return this.indSitFaturamento;
	}

	public void setIndSitFaturamento(String indSitFaturamento) {
		this.indSitFaturamento = indSitFaturamento;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RMP_SEQ_NRS")
	public SceRmrPaciente getRmrPacienteNrs() {
		return rmrPacienteNrs;
	}

	public void setRmrPacienteNrs(SceRmrPaciente rmrPacienteNrs) {
		this.rmrPacienteNrs = rmrPacienteNrs;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sceReqMateriais")
	public List<SceItemRms> getItensRequisicaoMaterial() {
		return this.itensRequisicaoMaterial;
	}

	public void setItensRequisicaoMaterial(List<SceItemRms> sceItemRmses) {
		this.itensRequisicaoMaterial = sceItemRmses;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ATD_SEQ", nullable = true)
	public AghAtendimentos getAtendimento() {
		return atendimento;
	}
	
	public void setAtendimento(AghAtendimentos atendimento) {
		this.atendimento = atendimento;
	}

	@Transient
	public Integer getCodigoGrupoMaterial() {
		return codigoGrupoMaterial;
	}

	public void setCodigoGrupoMaterial(Integer codigoGrupoMaterial) {
		this.codigoGrupoMaterial = codigoGrupoMaterial;
	}
	
	@Version
	@Column(name = "VERSION", nullable = false, length = 9)
	public Integer getVersion() {
		return version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Transient
	public String getDescricaoGrupoMaterial() {
		return descricaoGrupoMaterial;
	}

	public void setDescricaoGrupoMaterial(String descricaoGrupoMaterial) {
		this.descricaoGrupoMaterial = descricaoGrupoMaterial;
	}

	@Transient
	public Integer getCodigoCentroCustoRequisitante() {
		return codigoCentroCustoRequisitante;
	}

	public void setCodigoCentroCustoRequisitante(
			Integer codigoCentroCustoRequisitante) {
		this.codigoCentroCustoRequisitante = codigoCentroCustoRequisitante;
	}

	@Transient
	public String getDescricaoCentroCustoRequisitante() {
		return descricaoCentroCustoRequisitante;
	}

	public void setDescricaoCentroCustoRequisitante(
			String descricaoCentroCustoRequisitante) {
		this.descricaoCentroCustoRequisitante = descricaoCentroCustoRequisitante;
	}

	@Transient
	public Integer getCodigoCentroCustoAplicacao() {
		return codigoCentroCustoAplicacao;
	}

	public void setCodigoCentroCustoAplicacao(Integer codigoCentroCustoAplicacao) {
		this.codigoCentroCustoAplicacao = codigoCentroCustoAplicacao;
	}

	@Transient
	public String getDescricaoCentroCustoAplicacao() {
		return descricaoCentroCustoAplicacao;
	}

	public void setDescricaoCentroCustoAplicacao(
			String descricaoCentroCustoAplicacao) {
		this.descricaoCentroCustoAplicacao = descricaoCentroCustoAplicacao;
	}

	@Transient
	public Short getSeqAlmoxarifado() {
		return seqAlmoxarifado;
	}

	public void setSeqAlmoxarifado(Short seqAlmoxarifado) {
		this.seqAlmoxarifado = seqAlmoxarifado;
	}

	@Transient
	public String getDescricaoAlmoxarifado() {
		return descricaoAlmoxarifado;
	}

	public void setDescricaoAlmoxarifado(String descricaoAlmoxarifado) {
		this.descricaoAlmoxarifado = descricaoAlmoxarifado;
	}
	
	@Transient	
	public Integer getAtendimentoSeq() {
		return atendimentoSeq;
	}

	public void setAtendimentoSeq(Integer atendimentoSeq) {
		this.atendimentoSeq = atendimentoSeq;
	}

	@Transient
	public Short getTmvSeq() {
		return tmvSeq;
	}

	public void setTmvSeq(Short tmvSeq) {
		this.tmvSeq = tmvSeq;
	}

	@Transient
	public Byte getTmvComplemento() {
		return tmvComplemento;
	}

	public void setTmvComplemento(Byte tmvComplemento) {
		this.tmvComplemento = tmvComplemento;
	}
	
	@Transient
	public Integer getMatricula() {
		return matricula;
	}

	public void setMatricula(Integer matricula) {
		this.matricula = matricula;
	}
	
	@Transient
	public Short getVinCodigo() {
		return vinCodigo;
	}

	public void setVinCodigo(Short vinCodigo) {
		this.vinCodigo = vinCodigo;
	}

	@Override
	public boolean equals(Object other) {
		if (this == other) {
			return true;
		}
		if (other == null) {
			return false;
		}
		if (!(other instanceof SceReqMaterial)) {
			return false;
		}
		
		SceReqMaterial castOther = (SceReqMaterial) other;
		
		return new EqualsBuilder().append(this.getSeq(), castOther.getSeq()).isEquals();
	}
	
	@Override
	public int hashCode() {
		return new HashCodeBuilder().append(this.getSeq()).toHashCode();
	}
	
	public enum Fields {
		SEQ("seq"), 
		SCE_REQ_MATERIAIS("reqMaterial"),
		SCE_REQ_MATERIAIS_SEQ("reqMaterial.seq"),
		TIPO_MOVIMENTO("tipoMovimento"),
		ALMOXARIFADO("almoxarifado"),
		CENTRO_CUSTOS("centroCusto"),
		CENTRO_CUSTOS_APLICA("centroCustoAplica"),
		GRUPO_MATERIAL("grupoMaterial"),
		DATA_GERACAO("dtGeracao"),
		SERVIDOR("servidor"),
		IND_SITUACAO("indSituacao"), 
		IND_ESTORNO("estorno"),
		IND_IMPRESSO("indImpresso"),
		DATA_CONFIRMACAO("dtConfirmacao"),
		SERVIDOR_CONFIRMADO("servidorConfirmado"),
		DATA_EFETIVACAO("dtEfetivacao"),
		SERVIDOR_EFETIVADO("servidorEfetivado"),
		DATA_ESTORNO("dtEstorno"),
		SERVIDOR_ESTORNADO("servidorEstornado"),
		PACOTE_MATERIAL("pacoteMaterial"),
		DATA_CANCELAMENTO("dtCancelamento"),
		SERVIDOR_CANCELADO("servidorCancelado"),
		OBSERVACAO("observacao"),
		RMR_PACIENTE("rmrPaciente"),
		PDM_NUMERO("pdmNumero"),
		SEQ_ORIG_MATERIAL("eslSeqOrigMat"),
		SITUACAO("indSituacao"), 
		CENTRO_CUSTOS_REQUISICAO("centroCusto"),
		CENTRO_CUSTOS_APLICACAO("centroCustoAplica"),
		COD_CC_APLIC("centroCustoAplica.codigo"),
		NOME_IMPRESSORA("nomeImpressora"),
		IND_SIT_FATURAMENTO("indSitFaturamento"),
		RMR_PACIENTE_NRS("rmrPacienteNrs"),
		ITENS_REQUISICAO_MATERIAL("itensRequisicaoMaterial"),
		CODIGO_GRUPO_MATERIAL("codigoGrupoMaterial"),
		DESCRICAO_GRUPO_MATERIAL("descricaoGrupoMaterial"),
		CODIGO_CENTRO_CUSTO_REQUISITANTE("codigoCentroCustoRequisitante"),
		DESCRICAO_CENTRO_CUSTO_REQUISITANTE("descricaoCentroCustoRequisitante"),
		CODIGO_CENTRO_CUSTO_APLICACAO("codigoCentroCustoAplicacao"),
		DESCRICAO_CENTRO_CUSTO_APLICACAO("descricaoCentroCustoAplicacao"),
		SEQ_ALMOXARIFADO("seqAlmoxarifado"),
		DESCRICAO_ALMOXARIFADO("descricaoAlmoxarifado"), 
		ATENDIMENTO("atendimento"),
		ATENDIMENTO_SEQ("atendimento.seq"),
		IND_AUTOMATICA("automatica"),
		SEQ_ATENDIMENTO("atendimentoSeq"),
		TMV_SEQ("tmvSeq"),
		TMV_COMPLEMENTO("tmvComplemento"),
		MATRICULA("matricula"),
		VIN_CODIGO("vinCodigo");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}
}

package br.gov.mec.aghu.model;

// Generated Apr 20, 2011 2:36:13 PM by Hibernate Tools 3.3.0.GA

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Immutable;

import br.gov.mec.aghu.core.dominio.DominioOperacoesJournal;
import br.gov.mec.aghu.core.model.BaseJournal;

/**
 * AfaLocalDispensacaoMdtosJn generated by hbm2java
 */
@Entity
@SequenceGenerator(name = "afaLdmjJnSeq", sequenceName = "AGH.AFA_LDM_jn_seq", allocationSize = 1)
@Table(name = "AFA_LOCAL_DISPENSACAO_MDTOS_JN", schema = "AGH")

@Immutable
public class AfaLocalDispensacaoMdtosJn extends BaseJournal implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 9070883766555098737L;
	private AfaMedicamento medicamento;
	private AghUnidadesFuncionais unidadeFuncional;
	private AghUnidadesFuncionais unidadeFuncionalDispDoseInt;
	private AghUnidadesFuncionais unidadeFuncionalDispDoseFrac;
	private AghUnidadesFuncionais unidadeFuncionalDispAlternativa;
	private Date criadoEm;
	private AghUnidadesFuncionais unidadeFuncionalDispUsoDomiciliar;
	private RapServidores servidor;
	
	public AfaLocalDispensacaoMdtosJn() {
	}

	@Id
	@Column(name = "SEQ_JN", unique = true, nullable = false)
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "afaLdmjJnSeq")
	@Override
	public Integer getSeqJn() {
		return super.getSeqJn();
	}
	
	public AfaLocalDispensacaoMdtosJn(AfaMedicamento medicamento, AghUnidadesFuncionais unidadeFuncional) {
		this.medicamento = medicamento;
		this.unidadeFuncional = unidadeFuncional;
	}

	public AfaLocalDispensacaoMdtosJn(AfaMedicamento medicamento,
			RapServidores servidor, AghUnidadesFuncionais unidadeFuncional,
			AghUnidadesFuncionais unidadeFuncionalDispDoseInt, AghUnidadesFuncionais unidadeFuncionalDispDoseFrac,
			AghUnidadesFuncionais unidadeFuncionalDispAlternativa, Date criadoEm,
			AghUnidadesFuncionais unidadeFuncionalDispUsoDomiciliar, String jnUser,
			Date jnDateTime, DominioOperacoesJournal jnOperation) {
		this.medicamento = medicamento;
		this.servidor = servidor;
		this.unidadeFuncional = unidadeFuncional;
		this.unidadeFuncionalDispDoseInt = unidadeFuncionalDispDoseInt;
		this.unidadeFuncionalDispDoseFrac = unidadeFuncionalDispDoseFrac;
		this.unidadeFuncionalDispAlternativa = unidadeFuncionalDispAlternativa;
		this.criadoEm = criadoEm;
		this.unidadeFuncionalDispUsoDomiciliar = unidadeFuncionalDispUsoDomiciliar;
	}

	@ManyToOne
	@JoinColumn(name = "MED_MAT_CODIGO", insertable = true, updatable = false)
	public AfaMedicamento getMedicamento() {
		return this.medicamento;
	}

	public void setMedicamento(AfaMedicamento medicamento) {
		this.medicamento = medicamento;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}
	
	//@Column(name = "UNF_SEQ", nullable = false, precision = 4, scale = 0, insertable=false, updatable=false)
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ", referencedColumnName = "SEQ", insertable=true, updatable=false, nullable=false)
	public AghUnidadesFuncionais getUnidadeFuncional() {
		return this.unidadeFuncional;
	}

	public void setUnidadeFuncional(AghUnidadesFuncionais unidadeFuncional) {
		this.unidadeFuncional = unidadeFuncional;
	}

	//@Column(name = "UNF_SEQ_DISP_DOSE_INT", nullable = false, precision = 4, scale = 0)
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ_DISP_DOSE_INT", referencedColumnName = "SEQ", insertable=true, updatable=false, nullable=true)
	public AghUnidadesFuncionais getUnidadeFuncionalDispDoseInt() {
		return this.unidadeFuncionalDispDoseInt;
	}

	public void setUnidadeFuncionalDispDoseInt(AghUnidadesFuncionais unidadeFuncionalDispDoseInt) {
		this.unidadeFuncionalDispDoseInt = unidadeFuncionalDispDoseInt;
	}

	//@Column(name = "UNF_SEQ_DISP_DOSE_FRAC", nullable = false, precision = 4, scale = 0)
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ_DISP_DOSE_FRAC", referencedColumnName = "SEQ", insertable=true, updatable=false, nullable=true)
	public AghUnidadesFuncionais getUnidadeFuncionalDispDoseFrac() {
		return this.unidadeFuncionalDispDoseFrac;
	}

	public void setUnidadeFuncionalDispDoseFrac(AghUnidadesFuncionais unidadeFuncionalDispDoseFrac) {
		this.unidadeFuncionalDispDoseFrac = unidadeFuncionalDispDoseFrac;
	}

	//@Column(name = "UNF_SEQ_DISP_ALTERNATIVA", nullable = false, precision = 4, scale = 0)
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ_DISP_ALTERNATIVA", referencedColumnName = "SEQ", insertable=true, updatable=false, nullable=true)
	public AghUnidadesFuncionais getUnidadeFuncionalDispAlternativa() {
		return this.unidadeFuncionalDispAlternativa;
	}

	public void setUnidadeFuncionalDispAlternativa(AghUnidadesFuncionais unidadeFuncionalDispAlternativa) {
		this.unidadeFuncionalDispAlternativa = unidadeFuncionalDispAlternativa;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", length = 29, insertable=true, updatable=false)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	//@Column(name = "UNF_SEQ_DISP_USO_DOMICILIAR", precision = 4, scale = 0)
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ_DISP_USO_DOMICILIAR", referencedColumnName = "SEQ", insertable=true, updatable=false)
	public AghUnidadesFuncionais getUnidadeFuncionalDispUsoDomiciliar() {
		return this.unidadeFuncionalDispUsoDomiciliar;
	}

	public void setUnidadeFuncionalDispUsoDomiciliar(AghUnidadesFuncionais unidadeFuncionalDispUsoDomiciliar) {
		this.unidadeFuncionalDispUsoDomiciliar = unidadeFuncionalDispUsoDomiciliar;
	}
	
	public enum Fields {

		SERVIDOR("servidor"),
		CRIADO_EM("criadoEm"),
		MED_MAT_CODIGO("medicamento"),
		JN_USER("nomeUsuario"),
		JN_DATE_TIME("dataAlteracao"),
		JN_OPERATION("operacao"),
		UNF_SEQ_DISP_DOSE_INT("unidadeFuncionalDispDoseInt"),
		UNF_SEQ_DISP_DOSE_FRAC("unidadeFuncionalDispDoseFrac"),
		UNF_SEQ_DISP_ALTERNATIVA("unidadeFuncionalDispAlternativa"),
		UNF_SEQ_DISP_USO_DOMICILIAR("unidadeFuncionalDispUsoDomiciliar"),
		UNIDADE_FUNCIONAL("unidadeFuncional");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}






	
}
package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MpaCadIntervaloTempo generated by hbm2java
 */
@Entity
@Table(name = "MPA_CAD_INTERVALO_TEMPOS", schema = "AGH", uniqueConstraints = @UniqueConstraint(columnNames = { "cil_vpa_pta_seq",
		"cil_vpa_seqp", "cil_num_ciclo", "dia_dentro_do_ciclo" }))
public class MpaCadIntervaloTempo extends BaseEntityId<MpaCadIntervaloTempoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7348006356348886455L;
	private MpaCadIntervaloTempoId id;
	private Integer version;
	private RapServidores rapServidores;
	private MpaVersaoProtAssistencial mpaVersaoProtAssistencial;
	private MpaCicloProtocolo mpaCicloProtocolo;
	private String titulo;
	private Short diaReferencia;
	private Date horaInicioReferencia;
	private Date horaFimReferencia;
	private Date criadoEm;
	private Short diaDentroDoCiclo;
	private String tempoAplicacao;
	private Set<MpaCadExameDiagnostico> mpaCadExameDiagnosticoes = new HashSet<MpaCadExameDiagnostico>(0);
	private Set<MptPrescIntervaloTempo> mptPrescIntervaloTempoes = new HashSet<MptPrescIntervaloTempo>(0);
	private Set<MpaCadAtividadeFisica> mpaCadAtividadeFisicaes = new HashSet<MpaCadAtividadeFisica>(0);
	private Set<MpaCadCuidado> mpaCadCuidadoes = new HashSet<MpaCadCuidado>(0);
	private Set<MpaCadMedicacao> mpaCadMedicacaoes = new HashSet<MpaCadMedicacao>(0);
	private Set<MpaCadAvaliacao> mpaCadAvaliacaoes = new HashSet<MpaCadAvaliacao>(0);
	private Set<MpaCadResulEsperado> mpaCadResulEsperadoes = new HashSet<MpaCadResulEsperado>(0);
	private Set<MpaCadConsultoria> mpaCadConsultoriaes = new HashSet<MpaCadConsultoria>(0);
	private Set<MpaCadNutricao> mpaCadNutricaoes = new HashSet<MpaCadNutricao>(0);
	
	// FIXME Implementar este relacionamento
//	private Set<MptPrescricaoPaciente> mptPrescricaoPacientees = new HashSet<MptPrescricaoPaciente>(0);

	public MpaCadIntervaloTempo() {
	}

	public MpaCadIntervaloTempo(MpaCadIntervaloTempoId id, RapServidores rapServidores,
			MpaVersaoProtAssistencial mpaVersaoProtAssistencial, String titulo, Short diaReferencia, Date horaInicioReferencia,
			Date horaFimReferencia, Date criadoEm) {
		this.id = id;
		this.rapServidores = rapServidores;
		this.mpaVersaoProtAssistencial = mpaVersaoProtAssistencial;
		this.titulo = titulo;
		this.diaReferencia = diaReferencia;
		this.horaInicioReferencia = horaInicioReferencia;
		this.horaFimReferencia = horaFimReferencia;
		this.criadoEm = criadoEm;
	}

	public MpaCadIntervaloTempo(MpaCadIntervaloTempoId id, RapServidores rapServidores,
			MpaVersaoProtAssistencial mpaVersaoProtAssistencial, MpaCicloProtocolo mpaCicloProtocolo, String titulo,
			Short diaReferencia, Date horaInicioReferencia, Date horaFimReferencia, Date criadoEm, Short diaDentroDoCiclo,
			String tempoAplicacao, Set<MpaCadExameDiagnostico> mpaCadExameDiagnosticoes,
			Set<MptPrescIntervaloTempo> mptPrescIntervaloTempoes, Set<MpaCadAtividadeFisica> mpaCadAtividadeFisicaes,
			Set<MpaCadCuidado> mpaCadCuidadoes, Set<MpaCadMedicacao> mpaCadMedicacaoes, Set<MpaCadAvaliacao> mpaCadAvaliacaoes,
			Set<MpaCadResulEsperado> mpaCadResulEsperadoes, Set<MpaCadConsultoria> mpaCadConsultoriaes,
//			Set<MptPrescricaoPaciente> mptPrescricaoPacientees, 
			Set<MpaCadNutricao> mpaCadNutricaoes) {
		this.id = id;
		this.rapServidores = rapServidores;
		this.mpaVersaoProtAssistencial = mpaVersaoProtAssistencial;
		this.mpaCicloProtocolo = mpaCicloProtocolo;
		this.titulo = titulo;
		this.diaReferencia = diaReferencia;
		this.horaInicioReferencia = horaInicioReferencia;
		this.horaFimReferencia = horaFimReferencia;
		this.criadoEm = criadoEm;
		this.diaDentroDoCiclo = diaDentroDoCiclo;
		this.tempoAplicacao = tempoAplicacao;
		this.mpaCadExameDiagnosticoes = mpaCadExameDiagnosticoes;
		this.mptPrescIntervaloTempoes = mptPrescIntervaloTempoes;
		this.mpaCadAtividadeFisicaes = mpaCadAtividadeFisicaes;
		this.mpaCadCuidadoes = mpaCadCuidadoes;
		this.mpaCadMedicacaoes = mpaCadMedicacaoes;
		this.mpaCadAvaliacaoes = mpaCadAvaliacaoes;
		this.mpaCadResulEsperadoes = mpaCadResulEsperadoes;
		this.mpaCadConsultoriaes = mpaCadConsultoriaes;
//		this.mptPrescricaoPacientees = mptPrescricaoPacientees;
		this.mpaCadNutricaoes = mpaCadNutricaoes;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "vpaSeqp", column = @Column(name = "VPA_SEQP", nullable = false)),
			@AttributeOverride(name = "vpaPtaSeq", column = @Column(name = "VPA_PTA_SEQ", nullable = false)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false)) })
	public MpaCadIntervaloTempoId getId() {
		return this.id;
	}

	public void setId(MpaCadIntervaloTempoId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "VPA_PTA_SEQ", referencedColumnName = "PTA_SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "VPA_SEQP", referencedColumnName = "SEQP", nullable = false, insertable = false, updatable = false) })
	public MpaVersaoProtAssistencial getMpaVersaoProtAssistencial() {
		return this.mpaVersaoProtAssistencial;
	}

	public void setMpaVersaoProtAssistencial(MpaVersaoProtAssistencial mpaVersaoProtAssistencial) {
		this.mpaVersaoProtAssistencial = mpaVersaoProtAssistencial;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "CIL_VPA_PTA_SEQ", referencedColumnName = "VPA_PTA_SEQ"),
			@JoinColumn(name = "CIL_VPA_SEQP", referencedColumnName = "VPA_SEQP"),
			@JoinColumn(name = "CIL_NUM_CICLO", referencedColumnName = "NUM_CICLO") })
	public MpaCicloProtocolo getMpaCicloProtocolo() {
		return this.mpaCicloProtocolo;
	}

	public void setMpaCicloProtocolo(MpaCicloProtocolo mpaCicloProtocolo) {
		this.mpaCicloProtocolo = mpaCicloProtocolo;
	}

	@Column(name = "TITULO", nullable = false, length = 60)
	@Length(max = 60)
	public String getTitulo() {
		return this.titulo;
	}

	public void setTitulo(String titulo) {
		this.titulo = titulo;
	}

	@Column(name = "DIA_REFERENCIA", nullable = false)
	public Short getDiaReferencia() {
		return this.diaReferencia;
	}

	public void setDiaReferencia(Short diaReferencia) {
		this.diaReferencia = diaReferencia;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "HORA_INICIO_REFERENCIA", nullable = false, length = 29)
	public Date getHoraInicioReferencia() {
		return this.horaInicioReferencia;
	}

	public void setHoraInicioReferencia(Date horaInicioReferencia) {
		this.horaInicioReferencia = horaInicioReferencia;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "HORA_FIM_REFERENCIA", nullable = false, length = 29)
	public Date getHoraFimReferencia() {
		return this.horaFimReferencia;
	}

	public void setHoraFimReferencia(Date horaFimReferencia) {
		this.horaFimReferencia = horaFimReferencia;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "DIA_DENTRO_DO_CICLO")
	public Short getDiaDentroDoCiclo() {
		return this.diaDentroDoCiclo;
	}

	public void setDiaDentroDoCiclo(Short diaDentroDoCiclo) {
		this.diaDentroDoCiclo = diaDentroDoCiclo;
	}

	@Column(name = "TEMPO_APLICACAO", length = 1)
	@Length(max = 1)
	public String getTempoAplicacao() {
		return this.tempoAplicacao;
	}

	public void setTempoAplicacao(String tempoAplicacao) {
		this.tempoAplicacao = tempoAplicacao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mpaCadIntervaloTempo")
	public Set<MpaCadExameDiagnostico> getMpaCadExameDiagnosticoes() {
		return this.mpaCadExameDiagnosticoes;
	}

	public void setMpaCadExameDiagnosticoes(Set<MpaCadExameDiagnostico> mpaCadExameDiagnosticoes) {
		this.mpaCadExameDiagnosticoes = mpaCadExameDiagnosticoes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mpaCadIntervaloTempo")
	public Set<MptPrescIntervaloTempo> getMptPrescIntervaloTempoes() {
		return this.mptPrescIntervaloTempoes;
	}

	public void setMptPrescIntervaloTempoes(Set<MptPrescIntervaloTempo> mptPrescIntervaloTempoes) {
		this.mptPrescIntervaloTempoes = mptPrescIntervaloTempoes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mpaCadIntervaloTempo")
	public Set<MpaCadAtividadeFisica> getMpaCadAtividadeFisicaes() {
		return this.mpaCadAtividadeFisicaes;
	}

	public void setMpaCadAtividadeFisicaes(Set<MpaCadAtividadeFisica> mpaCadAtividadeFisicaes) {
		this.mpaCadAtividadeFisicaes = mpaCadAtividadeFisicaes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mpaCadIntervaloTempo")
	public Set<MpaCadCuidado> getMpaCadCuidadoes() {
		return this.mpaCadCuidadoes;
	}

	public void setMpaCadCuidadoes(Set<MpaCadCuidado> mpaCadCuidadoes) {
		this.mpaCadCuidadoes = mpaCadCuidadoes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mpaCadIntervaloTempo")
	public Set<MpaCadMedicacao> getMpaCadMedicacaoes() {
		return this.mpaCadMedicacaoes;
	}

	public void setMpaCadMedicacaoes(Set<MpaCadMedicacao> mpaCadMedicacaoes) {
		this.mpaCadMedicacaoes = mpaCadMedicacaoes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mpaCadIntervaloTempo")
	public Set<MpaCadAvaliacao> getMpaCadAvaliacaoes() {
		return this.mpaCadAvaliacaoes;
	}

	public void setMpaCadAvaliacaoes(Set<MpaCadAvaliacao> mpaCadAvaliacaoes) {
		this.mpaCadAvaliacaoes = mpaCadAvaliacaoes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mpaCadIntervaloTempo")
	public Set<MpaCadResulEsperado> getMpaCadResulEsperadoes() {
		return this.mpaCadResulEsperadoes;
	}

	public void setMpaCadResulEsperadoes(Set<MpaCadResulEsperado> mpaCadResulEsperadoes) {
		this.mpaCadResulEsperadoes = mpaCadResulEsperadoes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mpaCadIntervaloTempo")
	public Set<MpaCadConsultoria> getMpaCadConsultoriaes() {
		return this.mpaCadConsultoriaes;
	}

	public void setMpaCadConsultoriaes(Set<MpaCadConsultoria> mpaCadConsultoriaes) {
		this.mpaCadConsultoriaes = mpaCadConsultoriaes;
	}

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mpaCadIntervaloTempo")
//	public Set<MptPrescricaoPaciente> getMptPrescricaoPacientees() {
//		return this.mptPrescricaoPacientees;
//	}
//
//	public void setMptPrescricaoPacientees(Set<MptPrescricaoPaciente> mptPrescricaoPacientees) {
//		this.mptPrescricaoPacientees = mptPrescricaoPacientees;
//	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mpaCadIntervaloTempo")
	public Set<MpaCadNutricao> getMpaCadNutricaoes() {
		return this.mpaCadNutricaoes;
	}

	public void setMpaCadNutricaoes(Set<MpaCadNutricao> mpaCadNutricaoes) {
		this.mpaCadNutricaoes = mpaCadNutricaoes;
	}

	public enum Fields {

		ID("id"),
		VPA_SEQP("id.vpaSeqp"),
		VPA_PTA_SEQ("id.vpaPtaSeq"),
		SEQP("id.seqp"),
		VERSION("version"),
		RAP_SERVIDORES("rapServidores"),
		MPA_VERSAO_PROT_ASSISTENCIAIS("mpaVersaoProtAssistencial"),
		MPA_CICLO_PROTOCOLOS("mpaCicloProtocolo"),
		TITULO("titulo"),
		DIA_REFERENCIA("diaReferencia"),
		HORA_INICIO_REFERENCIA("horaInicioReferencia"),
		HORA_FIM_REFERENCIA("horaFimReferencia"),
		CRIADO_EM("criadoEm"),
		DIA_DENTRO_DO_CICLO("diaDentroDoCiclo"),
		TEMPO_APLICACAO("tempoAplicacao"),
		MPA_CAD_EXAME_DIAGNOSTICOES("mpaCadExameDiagnosticoes"),
		MPT_PRESC_INTERVALO_TEMPOES("mptPrescIntervaloTempoes"),
		MPA_CAD_ATIVIDADE_FISICAES("mpaCadAtividadeFisicaes"),
		MPA_CAD_CUIDADOES("mpaCadCuidadoes"),
		MPA_CAD_MEDICACAOES("mpaCadMedicacaoes"),
		MPA_CAD_AVALIACAOES("mpaCadAvaliacaoes"),
		MPA_CAD_RESUL_ESPERADOES("mpaCadResulEsperadoes"),
		MPA_CAD_CONSULTORIAES("mpaCadConsultoriaes"),
//		MPT_PRESCRICAO_PACIENTEES("mptPrescricaoPacientees"),
		MPA_CAD_NUTRICAOES("mpaCadNutricaoes");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MpaCadIntervaloTempo)) {
			return false;
		}
		MpaCadIntervaloTempo other = (MpaCadIntervaloTempo) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

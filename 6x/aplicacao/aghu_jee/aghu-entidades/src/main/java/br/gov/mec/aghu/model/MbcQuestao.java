package br.gov.mec.aghu.model;

// Generated 17/06/2010 15:43:38 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MbcQuestoes generated by hbm2java
 */
@Entity
@Table(name = "MBC_QUESTOES", schema = "AGH")

public class MbcQuestao extends BaseEntityId<MbcQuestaoId> implements java.io.Serializable {

	// TODO Implementar triggers (não foi implementado, pois o mapeamento
	// foi feito na implementação do módulo de internação)

	/**
	 * 
	 */
	private static final long serialVersionUID = -6819598601054384623L;
	private MbcQuestaoId id;
	private RapServidores servidor;
	private MbcMotivoCancelamento motivoCancelamento;
	private String descricao;
	private DominioSituacao situacao;
	private Boolean exigeComplemento;
	private Date criadoEm;
	private Set<MbcValorValidoCanc> valorValidoCancs = new HashSet<MbcValorValidoCanc>(
			0);
	private Set<MbcCirurgias> cirurgias = new HashSet<MbcCirurgias>(0);

	// TODO Implementar version quando necessário
	// private Integer version;
	
	public MbcQuestao() {
	}

	public MbcQuestao(MbcQuestaoId id, RapServidores servidor,
			MbcMotivoCancelamento motivoCancelamento, String descricao,
			DominioSituacao situacao, Boolean exigeComplemento, Date criadoEm) {
		this.id = id;
		this.servidor = servidor;
		this.motivoCancelamento = motivoCancelamento;
		this.descricao = descricao;
		this.situacao = situacao;
		this.exigeComplemento = exigeComplemento;
		this.criadoEm = criadoEm;
	}

	public MbcQuestao(MbcQuestaoId id, RapServidores servidor,
			MbcMotivoCancelamento motivoCancelamento, String descricao,
			DominioSituacao situacao, Boolean exigeComplemento, Date criadoEm,
			Set<MbcValorValidoCanc> valorValidoCancs,
			Set<MbcCirurgias> cirurgias) {
		this.id = id;
		this.servidor = servidor;
		this.motivoCancelamento = motivoCancelamento;
		this.descricao = descricao;
		this.situacao = situacao;
		this.exigeComplemento = exigeComplemento;
		this.criadoEm = criadoEm;
		this.valorValidoCancs = valorValidoCancs;
		this.cirurgias = cirurgias;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "mtcSeq", column = @Column(name = "MTC_SEQ", nullable = false, precision = 3, scale = 0)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false, precision = 6, scale = 0)) })
	public MbcQuestaoId getId() {
		return this.id;
	}

	public void setId(MbcQuestaoId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MTC_SEQ", nullable = false, insertable = false, updatable = false)
	public MbcMotivoCancelamento getMotivoCancelamento() {
		return this.motivoCancelamento;
	}

	public void setMotivoCancelamento(MbcMotivoCancelamento motivoCancelamento) {
		this.motivoCancelamento = motivoCancelamento;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 500)
	@Length(max = 500)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getSituacao() {
		return this.situacao;
	}

	public void setSituacao(DominioSituacao situacao) {
		this.situacao = situacao;
	}

	@Column(name = "IND_EXIGE_COMPLEMENTO", nullable = false, length = 1)
	@org.hibernate.annotations.Type(type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getExigeComplemento() {
		return this.exigeComplemento;
	}

	public void setExigeComplemento(Boolean exigeComplemento) {
		this.exigeComplemento = exigeComplemento;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "questao")
	public Set<MbcValorValidoCanc> getValorValidoCancs() {
		return this.valorValidoCancs;
	}

	public void setValorValidoCancs(Set<MbcValorValidoCanc> valorValidoCancs) {
		this.valorValidoCancs = valorValidoCancs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "questao")
	public Set<MbcCirurgias> getCirurgias() {
		return this.cirurgias;
	}

	public void setCirurgias(Set<MbcCirurgias> cirurgias) {
		this.cirurgias = cirurgias;
	}
	
	/*
	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}
	*/

	public enum Fields {

		ID("id"),
		SEQP("id.seqp"),
		MTC_SEQ("id.mtcSeq"),
		SERVIDOR("servidor"),
		MOTIVO_CANCELAMENTO("motivoCancelamento"),
		DESCRICAO("descricao"),
		SITUACAO("situacao"),
		EXIGE_COMPLEMENTO("exigeComplemento"),
		CRIADO_EM("criadoEm"),
		VALOR_VALIDO_CANCS("valorValidoCancs"),
		CIRURGIAS("cirurgias"),
		MOTIVO_CANCELAMENTO_SEQ("motivoCancelamento.seq"),
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = super.hashCode();
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (!super.equals(obj)) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		MbcQuestao other = (MbcQuestao) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}

}

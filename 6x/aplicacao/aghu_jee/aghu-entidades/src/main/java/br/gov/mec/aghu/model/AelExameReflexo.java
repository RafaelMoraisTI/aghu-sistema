package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AelExameReflexo generated by hbm2java
 */
@Entity
@Table(name = "AEL_EXAME_REFLEXOS", schema = "AGH")
public class AelExameReflexo extends BaseEntityId<AelExameReflexoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1125439145880728503L;
	private AelExameReflexoId id;
	private Integer version;
	private AelResultadoCodificado aelResultadoCodificado;
	private AelCampoLaudo aelCampoLaudo;
	private RapServidores rapServidores;
	private AelExamesMaterialAnalise aelExamesMaterialAnalise;
	private AelExamesMaterialAnalise aelExamesMaterialAnaliseReflexo;
	private Long resulNumIni;
	private Long resulNumFim;
	private String resulAlfa;
	private DominioSituacao situacao;
	private String indNovaAmostra;
	private Date criadoEm;
	private Short idadeLimite;

	public AelExameReflexo() {
	}

	public AelExameReflexo(AelExameReflexoId id, AelCampoLaudo aelCampoLaudo, RapServidores rapServidores,
			AelExamesMaterialAnalise aelExamesMaterialAnalise,
			AelExamesMaterialAnalise aelExamesMaterialAnaliseReflexo, DominioSituacao situacao, Date criadoEm) {
		this.id = id;
		this.aelCampoLaudo = aelCampoLaudo;
		this.rapServidores = rapServidores;
		this.aelExamesMaterialAnalise = aelExamesMaterialAnalise;
		this.aelExamesMaterialAnaliseReflexo = aelExamesMaterialAnaliseReflexo;
		this.situacao = situacao;
		this.criadoEm = criadoEm;
	}

	public AelExameReflexo(AelExameReflexoId id, AelResultadoCodificado aelResultadoCodificado, AelCampoLaudo aelCampoLaudo,
			RapServidores rapServidores, AelExamesMaterialAnalise aelExamesMaterialAnalise,
			AelExamesMaterialAnalise aelExamesMaterialAnaliseReflexo, Long resulNumIni, Long resulNumFim, String resulAlfa,
			DominioSituacao situacao, String indNovaAmostra, Date criadoEm, Short idadeLimite) {
		this.id = id;
		this.aelResultadoCodificado = aelResultadoCodificado;
		this.aelCampoLaudo = aelCampoLaudo;
		this.rapServidores = rapServidores;
		this.aelExamesMaterialAnalise = aelExamesMaterialAnalise;
		this.aelExamesMaterialAnaliseReflexo = aelExamesMaterialAnaliseReflexo;
		this.resulNumIni = resulNumIni;
		this.resulNumFim = resulNumFim;
		this.resulAlfa = resulAlfa;
		this.situacao = situacao;
		this.indNovaAmostra = indNovaAmostra;
		this.criadoEm = criadoEm;
		this.idadeLimite = idadeLimite;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "emaExaSigla", column = @Column(name = "EMA_EXA_SIGLA", nullable = false, length = 5)),
			@AttributeOverride(name = "emaManSeq", column = @Column(name = "EMA_MAN_SEQ", nullable = false)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false)) })
	public AelExameReflexoId getId() {
		return this.id;
	}

	public void setId(AelExameReflexoId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "RCD_GTC_SEQ", referencedColumnName = "GTC_SEQ"),
			@JoinColumn(name = "RCD_SEQP", referencedColumnName = "SEQP") })
	public AelResultadoCodificado getAelResultadoCodificado() {
		return this.aelResultadoCodificado;
	}

	public void setAelResultadoCodificado(AelResultadoCodificado aelResultadoCodificado) {
		this.aelResultadoCodificado = aelResultadoCodificado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CAL_SEQ", nullable = false)
	public AelCampoLaudo getAelCampoLaudo() {
		return this.aelCampoLaudo;
	}

	public void setAelCampoLaudo(AelCampoLaudo aelCampoLaudo) {
		this.aelCampoLaudo = aelCampoLaudo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "EMA_EXA_SIGLA", referencedColumnName = "EXA_SIGLA", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "EMA_MAN_SEQ", referencedColumnName = "MAN_SEQ", nullable = false, insertable = false, updatable = false) })
	public AelExamesMaterialAnalise getAelExamesMaterialAnalise() {
		return this.aelExamesMaterialAnalise;
	}

	public void setAelExamesMaterialAnalise(AelExamesMaterialAnalise aelExamesMaterialAnalise) {
		this.aelExamesMaterialAnalise = aelExamesMaterialAnalise;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "EMA_EXA_SIGLA_REFLEXO", referencedColumnName = "EXA_SIGLA", nullable = false),
			@JoinColumn(name = "EMA_MAN_SEQ_REFLEXO", referencedColumnName = "MAN_SEQ", nullable = false) })
	public AelExamesMaterialAnalise getAelExamesMaterialAnaliseReflexo() {
		return this.aelExamesMaterialAnaliseReflexo;
	}

	public void setAelExamesMaterialAnaliseReflexo(AelExamesMaterialAnalise aelExamesMaterialAnaliseReflexo) {
		this.aelExamesMaterialAnaliseReflexo = aelExamesMaterialAnaliseReflexo;
	}

	@Column(name = "RESUL_NUM_INI")
	public Long getResulNumIni() {
		return this.resulNumIni;
	}

	public void setResulNumIni(Long resulNumIni) {
		this.resulNumIni = resulNumIni;
	}

	@Column(name = "RESUL_NUM_FIM")
	public Long getResulNumFim() {
		return this.resulNumFim;
	}

	public void setResulNumFim(Long resulNumFim) {
		this.resulNumFim = resulNumFim;
	}

	@Column(name = "RESUL_ALFA", length = 20)
	@Length(max = 20)
	public String getResulAlfa() {
		return this.resulAlfa;
	}

	public void setResulAlfa(String resulAlfa) {
		this.resulAlfa = resulAlfa;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getSituacao() {
		return this.situacao;
	}

	public void setSituacao(DominioSituacao situacao) {
		this.situacao = situacao;
	}

	@Column(name = "IND_NOVA_AMOSTRA", length = 1)
	@Length(max = 1)
	public String getIndNovaAmostra() {
		return this.indNovaAmostra;
	}

	public void setIndNovaAmostra(String indNovaAmostra) {
		this.indNovaAmostra = indNovaAmostra;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "IDADE_LIMITE")
	public Short getIdadeLimite() {
		return this.idadeLimite;
	}

	public void setIdadeLimite(Short idadeLimite) {
		this.idadeLimite = idadeLimite;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		AEL_RESULTADO_CODIFICADO("aelResultadoCodificado"),
		AEL_CAMPO_LAUDO("aelCampoLaudo"),
		RAP_SERVIDORES("rapServidores"),
		AEL_EXAMES_MATERIAL_ANALISE("aelExamesMaterialAnalise"),
		AEL_EXAMES_MATERIAL_ANALISE_REFLEXO("aelExamesMaterialAnaliseReflexo"),
		RESUL_NUM_INI("resulNumIni"),
		RESUL_NUM_FIM("resulNumFim"),
		RESUL_ALFA("resulAlfa"),
		IND_SITUACAO("situacao"),
		IND_NOVA_AMOSTRA("indNovaAmostra"),
		CRIADO_EM("criadoEm"),
		IDADE_LIMITE("idadeLimite"),
		EMA_EXA_SIGLA("id.emaExaSigla"),
		EMA_MAN_SEQ("id.emaManSeq"),
		SEQP("id.seqp"),
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AelExameReflexo)) {
			return false;
		}
		AelExameReflexo other = (AelExameReflexo) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * CtbSubNaturezaPlano generated by hbm2java
 */
@Entity
@Table(name = "CTB_SUB_NATUREZA_PLANOS", schema = "AGH")
public class CtbSubNaturezaPlano extends BaseEntityId<CtbSubNaturezaPlanoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -2767086146910896631L;
	private CtbSubNaturezaPlanoId id;
	private Integer version;
	private CtbTipoFluxo ctbTipoFluxo;
	private String descricao;
	private Date criadoEm;
	private Integer serMatricula;
	private Short serVinCodigo;
	private Date alteradoEm;
	private Integer serMatriculaPor;
	private Short serVinCodigoPor;
	private String indicador;
	private Set<CtbRelacionaSubNatureza> ctbRelacionaSubNaturezasesForCtbRsnSnpFk2 = new HashSet<CtbRelacionaSubNatureza>(0);
	private Set<CtbRelacionaSubNatureza> ctbRelacionaSubNaturezasesForCtbRsnSnpFk1 = new HashSet<CtbRelacionaSubNatureza>(0);

	public CtbSubNaturezaPlano() {
	}

	public CtbSubNaturezaPlano(CtbSubNaturezaPlanoId id, CtbTipoFluxo ctbTipoFluxo, Integer serMatricula, Short serVinCodigo) {
		this.id = id;
		this.ctbTipoFluxo = ctbTipoFluxo;
		this.serMatricula = serMatricula;
		this.serVinCodigo = serVinCodigo;
	}

	public CtbSubNaturezaPlano(CtbSubNaturezaPlanoId id, CtbTipoFluxo ctbTipoFluxo, String descricao, Date criadoEm,
			Integer serMatricula, Short serVinCodigo, Date alteradoEm, Integer serMatriculaPor, Short serVinCodigoPor, String indicador,
			Set<CtbRelacionaSubNatureza> ctbRelacionaSubNaturezasesForCtbRsnSnpFk2,
			Set<CtbRelacionaSubNatureza> ctbRelacionaSubNaturezasesForCtbRsnSnpFk1) {
		this.id = id;
		this.ctbTipoFluxo = ctbTipoFluxo;
		this.descricao = descricao;
		this.criadoEm = criadoEm;
		this.serMatricula = serMatricula;
		this.serVinCodigo = serVinCodigo;
		this.alteradoEm = alteradoEm;
		this.serMatriculaPor = serMatriculaPor;
		this.serVinCodigoPor = serVinCodigoPor;
		this.indicador = indicador;
		this.ctbRelacionaSubNaturezasesForCtbRsnSnpFk2 = ctbRelacionaSubNaturezasesForCtbRsnSnpFk2;
		this.ctbRelacionaSubNaturezasesForCtbRsnSnpFk1 = ctbRelacionaSubNaturezasesForCtbRsnSnpFk1;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "ntpGnpTabCodigo", column = @Column(name = "NTP_GNP_TAB_CODIGO", nullable = false)),
			@AttributeOverride(name = "ntpGnpCodigo", column = @Column(name = "NTP_GNP_CODIGO", nullable = false)),
			@AttributeOverride(name = "ntpCodigo", column = @Column(name = "NTP_CODIGO", nullable = false)),
			@AttributeOverride(name = "codigo", column = @Column(name = "CODIGO", nullable = false)) })
	public CtbSubNaturezaPlanoId getId() {
		return this.id;
	}

	public void setId(CtbSubNaturezaPlanoId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TFX_CODIGO", nullable = false)
	public CtbTipoFluxo getCtbTipoFluxo() {
		return this.ctbTipoFluxo;
	}

	public void setCtbTipoFluxo(CtbTipoFluxo ctbTipoFluxo) {
		this.ctbTipoFluxo = ctbTipoFluxo;
	}

	@Column(name = "DESCRICAO", length = 100)
	@Length(max = 100)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "SER_MATRICULA", nullable = false)
	public Integer getSerMatricula() {
		return this.serMatricula;
	}

	public void setSerMatricula(Integer serMatricula) {
		this.serMatricula = serMatricula;
	}

	@Column(name = "SER_VIN_CODIGO", nullable = false)
	public Short getSerVinCodigo() {
		return this.serVinCodigo;
	}

	public void setSerVinCodigo(Short serVinCodigo) {
		this.serVinCodigo = serVinCodigo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 29)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@Column(name = "SER_MATRICULA_POR")
	public Integer getSerMatriculaPor() {
		return this.serMatriculaPor;
	}

	public void setSerMatriculaPor(Integer serMatriculaPor) {
		this.serMatriculaPor = serMatriculaPor;
	}

	@Column(name = "SER_VIN_CODIGO_POR")
	public Short getSerVinCodigoPor() {
		return this.serVinCodigoPor;
	}

	public void setSerVinCodigoPor(Short serVinCodigoPor) {
		this.serVinCodigoPor = serVinCodigoPor;
	}

	@Column(name = "INDICADOR", length = 100)
	@Length(max = 100)
	public String getIndicador() {
		return this.indicador;
	}

	public void setIndicador(String indicador) {
		this.indicador = indicador;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ctbSubNaturezaPlanosByCtbRsnSnpFk2")
	public Set<CtbRelacionaSubNatureza> getCtbRelacionaSubNaturezasesForCtbRsnSnpFk2() {
		return this.ctbRelacionaSubNaturezasesForCtbRsnSnpFk2;
	}

	public void setCtbRelacionaSubNaturezasesForCtbRsnSnpFk2(Set<CtbRelacionaSubNatureza> ctbRelacionaSubNaturezasesForCtbRsnSnpFk2) {
		this.ctbRelacionaSubNaturezasesForCtbRsnSnpFk2 = ctbRelacionaSubNaturezasesForCtbRsnSnpFk2;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ctbSubNaturezaPlanosByCtbRsnSnpFk1")
	public Set<CtbRelacionaSubNatureza> getCtbRelacionaSubNaturezasesForCtbRsnSnpFk1() {
		return this.ctbRelacionaSubNaturezasesForCtbRsnSnpFk1;
	}

	public void setCtbRelacionaSubNaturezasesForCtbRsnSnpFk1(Set<CtbRelacionaSubNatureza> ctbRelacionaSubNaturezasesForCtbRsnSnpFk1) {
		this.ctbRelacionaSubNaturezasesForCtbRsnSnpFk1 = ctbRelacionaSubNaturezasesForCtbRsnSnpFk1;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		CTB_TIPO_FLUXOS("ctbTipoFluxo"),
		DESCRICAO("descricao"),
		CRIADO_EM("criadoEm"),
		SER_MATRICULA("serMatricula"),
		SER_VIN_CODIGO("serVinCodigo"),
		ALTERADO_EM("alteradoEm"),
		SER_MATRICULA_POR("serMatriculaPor"),
		SER_VIN_CODIGO_POR("serVinCodigoPor"),
		INDICADOR("indicador"),
		CTB_RELACIONA_SUB_NATUREZASES_FOR_CTB_RSN_SNP_FK2("ctbRelacionaSubNaturezasesForCtbRsnSnpFk2"),
		CTB_RELACIONA_SUB_NATUREZASES_FOR_CTB_RSN_SNP_FK1("ctbRelacionaSubNaturezasesForCtbRsnSnpFk1");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof CtbSubNaturezaPlano)) {
			return false;
		}
		CtbSubNaturezaPlano other = (CtbSubNaturezaPlano) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

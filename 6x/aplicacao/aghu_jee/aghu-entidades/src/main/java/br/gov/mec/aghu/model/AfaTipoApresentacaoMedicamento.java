package br.gov.mec.aghu.model;

// Generated 04/10/2010 12:49:33 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntity;

/**
 * AfaTipoApresMdtos generated by hbm2java
 */

@Entity
@Table(name = "AFA_TIPO_APRES_MDTOS", schema = "AGH")
public class AfaTipoApresentacaoMedicamento implements BaseEntity {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7007769199487351241L;
	private String sigla;
	private RapServidores servidor;
	private String descricao;
	private Date criadoEm;
	private DominioSituacao situacao;

	public AfaTipoApresentacaoMedicamento() {
	}

	public AfaTipoApresentacaoMedicamento(String sigla, String descricao,
			DominioSituacao situacao) {
		this.sigla = sigla;
		this.descricao = descricao;
		this.situacao = situacao;
	}

	public AfaTipoApresentacaoMedicamento(String sigla, RapServidores servidor,
			String descricao, Date criadoEm, DominioSituacao situacao) {
		this.sigla = sigla;
		this.servidor = servidor;
		this.descricao = descricao;
		this.criadoEm = criadoEm;
		this.situacao = situacao;
	}

	@Id
	@Column(name = "SIGLA", unique = true, nullable = false, length = 3)
	@Length(max = 3)
	public String getSigla() {
		return this.sigla;
	}

	public void setSigla(String sigla) {
		this.sigla = sigla;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 60)
	@Length(max = 60)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "IND_SITUACAO", length = 1, nullable = false)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getSituacao() {
		return situacao;
	}

	public void setSituacao(DominioSituacao situacao) {
		this.situacao = situacao;
	}
	
	@Transient
	public String getSiglaDescricao() {
		StringBuilder returnValue = new StringBuilder("");
		
		if (this.sigla != null) {
			returnValue.append(this.sigla);
			returnValue.append(" - ");
		}
		if (this.descricao != null) {
			returnValue.append(this.descricao);
			returnValue.append(' ');
		}
		
		return returnValue.toString();
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((sigla == null) ? 0 : sigla.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		AfaTipoApresentacaoMedicamento other = (AfaTipoApresentacaoMedicamento) obj;
		if (sigla == null) {
			if (other.sigla != null) {
				return false;
			}
		} else if (!sigla.equals(other.sigla)) {
			return false;
		}
		return true;
	}

	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void validacoes() {
		if (this.situacao == null) {
			this.situacao = DominioSituacao.A;
		}
	}

	public enum Fields {

		SIGLA("sigla"), SERVIDOR("servidor"), DESCRICAO("descricao"), CRIADO_EM(
				"criadoEm"), SITUACAO("situacao");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}

	}

}

package br.gov.mec.aghu.model;

// Generated 29/03/2012 13:44:29 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AelTxtDiagLacunas generated by hbm2java
 */
@Entity
@Table(name = "AEL_TXT_DIAG_LACUNAS")
public class AelTxtDiagLacunas extends BaseEntityId<AelTxtDiagLacunasId> implements java.io.Serializable {

	private static final long serialVersionUID = -4938451328475970685L;

	private AelTxtDiagLacunasId id;
	private AelGrpDiagLacunas aelGrpDiagLacunas;
	private String textoLacuna;
	private DominioSituacao indSituacao;
	private Date criadoEm;
	private RapServidores servidor;
	private Integer version;


	public AelTxtDiagLacunas() {
	}

	public AelTxtDiagLacunas(final AelTxtDiagLacunasId id,
			final AelGrpDiagLacunas aelGrpDiagLacunas, final String textoLacuna,
			final DominioSituacao indSituacao, final Date criadoEm, final RapServidores servidor) {
		this.id = id;
		this.aelGrpDiagLacunas = aelGrpDiagLacunas;
		this.textoLacuna = textoLacuna;
		this.indSituacao = indSituacao;
		this.criadoEm = criadoEm;
		this.servidor = servidor;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "lo1LujLuhSeq", column = @Column(name = "LO1_LUJ_LUH_SEQ", nullable = false, precision = 4, scale = 0)),
			@AttributeOverride(name = "lo1LujSeqp", column = @Column(name = "LO1_LUJ_SEQP", nullable = false, precision = 4, scale = 0)),
			@AttributeOverride(name = "lo1Seqp", column = @Column(name = "LO1_SEQP", nullable = false, precision = 4, scale = 0)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false, precision = 4, scale = 0)) })
	public AelTxtDiagLacunasId getId() {
		return this.id;
	}

	public void setId(final AelTxtDiagLacunasId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "LO1_LUJ_LUH_SEQ", referencedColumnName = "LUJ_LUH_SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "LO1_LUJ_SEQP", referencedColumnName = "LUJ_SEQP", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "LO1_SEQP", referencedColumnName = "SEQP", nullable = false, insertable = false, updatable = false) })
	public AelGrpDiagLacunas getAelGrpDiagLacunas() {
		return this.aelGrpDiagLacunas;
	}

	public void setAelGrpDiagLacunas(final AelGrpDiagLacunas aelGrpDiagLacunas) {
		this.aelGrpDiagLacunas = aelGrpDiagLacunas;
	}

	@Column(name = "TEXTO_LACUNA", nullable = false, length = 500)
	@Length(max = 500)
	public String getTextoLacuna() {
		return this.textoLacuna;
	}

	public void setTextoLacuna(final String textoLacuna) {
		this.textoLacuna = textoLacuna;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(final DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(final Date criadoEm) {
		this.criadoEm = criadoEm;
	}


	/**
	 * respons√°vel.
	 * 
	 * @return
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(final RapServidores servidor) {
		this.servidor = servidor;
	}

	public enum Fields {
		ID("id"),
		LO1_LUJ_LUH_SEQ("id.lo1LujLuhSeq"),
		LO1_LUJ_SEQP("id.lo1LujSeqp"),
		LO1_SEQP("id.lo1Seqp"),
		SEQP("id.seqp"),
		TEXTO_LACUNA("textoLacuna"),
		IND_SITUACAO("indSituacao"),
		CRIADO_EM("criadoEm"),
		SERVIDOR("servidor"),
		AEL_GRP_DIAG_LACUNAS("aelGrpDiagLacunas"),
		;

		private String fields;

		private Fields(final String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}

	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AelTxtDiagLacunas)) {
			return false;
		}
		AelTxtDiagLacunas other = (AelTxtDiagLacunas) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

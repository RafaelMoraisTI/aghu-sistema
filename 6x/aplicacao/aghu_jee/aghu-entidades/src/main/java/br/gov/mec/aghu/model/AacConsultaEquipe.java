package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Version;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AacConsultaEquipe generated by hbm2java
 */
@Entity
@Table(name = "AAC_CONSULTA_EQUIPES", schema = "AGH")
public class AacConsultaEquipe extends BaseEntityId<AacConsultaEquipeId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 3078737918049185782L;
	private AacConsultaEquipeId id;
	private Integer version;
	private AghEquipes aghEquipes;
	private AacConsultaEspecialidade aacConsultaEspecialidade;
	private Integer qtdeRealizadas;
	private Integer qtdeAbstProfissional;
	private Integer qtdeAbstPaciente;
	private Integer qtdeAcumAno;
	private Set<AacConsultaProfissional> aacConsultaProfissionales = new HashSet<AacConsultaProfissional>(0);

	public AacConsultaEquipe() {
	}

	public AacConsultaEquipe(AacConsultaEquipeId id, AghEquipes aghEquipes, AacConsultaEspecialidade aacConsultaEspecialidade) {
		this.id = id;
		this.aghEquipes = aghEquipes;
		this.aacConsultaEspecialidade = aacConsultaEspecialidade;
	}

	public AacConsultaEquipe(AacConsultaEquipeId id, AghEquipes aghEquipes, AacConsultaEspecialidade aacConsultaEspecialidade,
			Integer qtdeRealizadas, Integer qtdeAbstProfissional, Integer qtdeAbstPaciente, Integer qtdeAcumAno,
			Set<AacConsultaProfissional> aacConsultaProfissionales) {
		this.id = id;
		this.aghEquipes = aghEquipes;
		this.aacConsultaEspecialidade = aacConsultaEspecialidade;
		this.qtdeRealizadas = qtdeRealizadas;
		this.qtdeAbstProfissional = qtdeAbstProfissional;
		this.qtdeAbstPaciente = qtdeAbstPaciente;
		this.qtdeAcumAno = qtdeAcumAno;
		this.aacConsultaProfissionales = aacConsultaProfissionales;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "cpeCpfMesReferencia", column = @Column(name = "CPE_CPF_MES_REFERENCIA", nullable = false, length = 29)),
			@AttributeOverride(name = "cpeCpfEpcSeq", column = @Column(name = "CPE_CPF_EPC_SEQ", nullable = false)),
			@AttributeOverride(name = "cpeEspSeq", column = @Column(name = "CPE_ESP_SEQ", nullable = false)),
			@AttributeOverride(name = "eqpSeq", column = @Column(name = "EQP_SEQ", nullable = false)) })
	public AacConsultaEquipeId getId() {
		return this.id;
	}

	public void setId(AacConsultaEquipeId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EQP_SEQ", nullable = false, insertable = false, updatable = false)
	public AghEquipes getAghEquipes() {
		return this.aghEquipes;
	}

	public void setAghEquipes(AghEquipes aghEquipes) {
		this.aghEquipes = aghEquipes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CPE_CPF_MES_REFERENCIA", referencedColumnName = "CPF_MES_REFERENCIA", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CPE_CPF_EPC_SEQ", referencedColumnName = "CPF_EPC_SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CPE_ESP_SEQ", referencedColumnName = "ESP_SEQ", nullable = false, insertable = false, updatable = false) })
	public AacConsultaEspecialidade getAacConsultaEspecialidade() {
		return this.aacConsultaEspecialidade;
	}

	public void setAacConsultaEspecialidade(AacConsultaEspecialidade aacConsultaEspecialidade) {
		this.aacConsultaEspecialidade = aacConsultaEspecialidade;
	}

	@Column(name = "QTDE_REALIZADAS")
	public Integer getQtdeRealizadas() {
		return this.qtdeRealizadas;
	}

	public void setQtdeRealizadas(Integer qtdeRealizadas) {
		this.qtdeRealizadas = qtdeRealizadas;
	}

	@Column(name = "QTDE_ABST_PROFISSIONAL")
	public Integer getQtdeAbstProfissional() {
		return this.qtdeAbstProfissional;
	}

	public void setQtdeAbstProfissional(Integer qtdeAbstProfissional) {
		this.qtdeAbstProfissional = qtdeAbstProfissional;
	}

	@Column(name = "QTDE_ABST_PACIENTE")
	public Integer getQtdeAbstPaciente() {
		return this.qtdeAbstPaciente;
	}

	public void setQtdeAbstPaciente(Integer qtdeAbstPaciente) {
		this.qtdeAbstPaciente = qtdeAbstPaciente;
	}

	@Column(name = "QTDE_ACUM_ANO")
	public Integer getQtdeAcumAno() {
		return this.qtdeAcumAno;
	}

	public void setQtdeAcumAno(Integer qtdeAcumAno) {
		this.qtdeAcumAno = qtdeAcumAno;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "aacConsultaEquipe")
	public Set<AacConsultaProfissional> getAacConsultaProfissionales() {
		return this.aacConsultaProfissionales;
	}

	public void setAacConsultaProfissionales(Set<AacConsultaProfissional> aacConsultaProfissionales) {
		this.aacConsultaProfissionales = aacConsultaProfissionales;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		AGH_EQUIPES("aghEquipes"),
		AAC_CONSULTA_ESPECIALIDADES("aacConsultaEspecialidade"),
		QTDE_REALIZADAS("qtdeRealizadas"),
		QTDE_ABST_PROFISSIONAL("qtdeAbstProfissional"),
		QTDE_ABST_PACIENTE("qtdeAbstPaciente"),
		QTDE_ACUM_ANO("qtdeAcumAno"),
		AAC_CONSULTA_PROFISSIONALES("aacConsultaProfissionales");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AacConsultaEquipe)) {
			return false;
		}
		AacConsultaEquipe other = (AacConsultaEquipe) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

// Generated 03/06/2011 13:27:17 by Hibernate Tools 3.4.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.annotations.Immutable;

import br.gov.mec.aghu.dominio.DominioCoresPacientesTriagem;
import br.gov.mec.aghu.core.persistence.BaseEntityId;
import br.gov.mec.aghu.core.utils.StringUtil;

/**
 * VAfaPrcrDisp generated by hbm2java
 */
@Entity
@Table(name = "V_AFA_PRCR_DISP", schema = "AGH")
@Immutable
public class VAfaPrcrDisp extends BaseEntityId<VAfaPrcrDispId> implements java.io.Serializable {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = -1953514865361372467L;
	public AghAtendimentos atendimentoLocal;
	public AghAtendimentos atendimento;
	
	private VAfaPrcrDispId id;
	
	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "atdSeq", column = @Column(name = "ATD_SEQ")),
			@AttributeOverride(name = "seq", column = @Column(name = "SEQ")),
			@AttributeOverride(name = "dtReferencia", column = @Column(name = "DT_REFERENCIA", length = 29)),
			@AttributeOverride(name = "dthrInicio", column = @Column(name = "DTHR_INICIO", length = 29)),
			@AttributeOverride(name = "dthrFim", column = @Column(name = "DTHR_FIM", length = 29)),
			@AttributeOverride(name = "atdSeqLocal", column = @Column(name = "ATD_SEQ_LOCAL")) })
	public VAfaPrcrDispId getId() {
		return this.id;
	}
	
	private DominioCoresPacientesTriagem corCelula;
	private Boolean flagExibePreparar;
	private Boolean flagExibeTriarFunction1;
	private Boolean flagExibeTriarFunction2;
	private Boolean flagExibeDispensar;
	private String localizacaoPaciente;

	public void setId(VAfaPrcrDispId id) {
		this.id = id;
	}
	public VAfaPrcrDisp() {
	}

	public VAfaPrcrDisp(VAfaPrcrDispId id) {
		this.id = id;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj){
			return true;
		}
		if (obj == null){
			return false;
		}
		if (getClass() != obj.getClass()){
			return false;
		}
		VAfaPrcrDisp other = (VAfaPrcrDisp) obj;
		if (id == null) {
			if (other.id != null){
				return false;
			}
		} else if (!id.equals(other.id)){
			return false;
		}
		return true;
	}
	
	public enum Fields {
		ATD_SEQ("id.atdSeq"), 
		SEQ("id.seq"), 
		DT_REFERENCIA("id.dtReferencia"),
		DTH_INICIO("id.dthrInicio"),	
		DTH_FIM("id.dthrFim"),
		ATD_SEQ_LOCAL("id.atdSeqLocal"),
		ATENDIMENTO_PRONTUARIO("atendimento.prontuario")
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}
	
	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name = "ATD_SEQ", insertable = false, updatable = false)
	public AghAtendimentos getAtendimento() {
		return atendimento;
	}
	
	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name = "ATD_SEQ_LOCAL", insertable = false, updatable = false)
	public AghAtendimentos getAtendimentoLocal() {
		return atendimentoLocal;
	}
	
	@Transient
	public DominioCoresPacientesTriagem getCorCelula() {
		return corCelula;
	}
	public void setCorCelula(DominioCoresPacientesTriagem corCelula) {
		this.corCelula = corCelula;
	}
	@Transient
	public Boolean getFlagExibePreparar() {
		return flagExibePreparar;
	}
	public void setFlagExibePreparar(Boolean flagExibePreparar) {
		this.flagExibePreparar = flagExibePreparar;
	}
	@Transient
	public Boolean getFlagExibeDispensar() {
		return flagExibeDispensar;
	}
	public void setFlagExibeDispensar(Boolean flagExibeDispensar) {
		this.flagExibeDispensar = flagExibeDispensar;
	}
	@Transient
	public Boolean getFlagExibeTriarFunction1() {
		return flagExibeTriarFunction1;
	}
	public void setFlagExibeTriarFunction1(Boolean flagExibeTriarFunction1) {
		this.flagExibeTriarFunction1 = flagExibeTriarFunction1;
	}
	@Transient
	public Boolean getFlagExibeTriarFunction2() {
		return flagExibeTriarFunction2;
	}
	public void setFlagExibeTriarFunction2(Boolean flagExibeTriarFunction2) {
		this.flagExibeTriarFunction2 = flagExibeTriarFunction2;
	}
	@Transient
	public String getLocalizacaoPaciente() {
		return localizacaoPaciente;
	}
	public void setLocalizacaoPaciente(String localizacaoPaciente) {
		this.localizacaoPaciente = localizacaoPaciente;
	}
	
	@Transient
	public String getLocalizacaoPacienteTrunc(Long size) {
		return StringUtil.trunc(getLocalizacaoPaciente(), Boolean.TRUE, size);
	}
	
	public void setAtendimentoLocal(AghAtendimentos atendimentoLocal) {
		this.atendimentoLocal = atendimentoLocal;
	}
	
	public void setAtendimento(AghAtendimentos atendimento) {
		this.atendimento = atendimento;
	}

}

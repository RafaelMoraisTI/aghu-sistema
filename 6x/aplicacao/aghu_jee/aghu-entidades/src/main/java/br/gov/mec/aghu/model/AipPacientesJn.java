package br.gov.mec.aghu.model;

// Generated 08/07/2010 14:58:05 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;


import org.hibernate.annotations.Immutable;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSexo;
import br.gov.mec.aghu.dominio.DominioSimNao;
import br.gov.mec.aghu.dominio.DominioTipoProntuario;
import br.gov.mec.aghu.core.model.BaseJournal;

/**
 * AipPacientesJn generated by hbm2java
 */
@SuppressWarnings({"PMD.AghuUsoIndevidoDaEnumDominioSimNaoEntity"})
@Entity
@Table(name = "AIP_PACIENTES_JN", schema = "AGH")
@SequenceGenerator(name = "aipPacJnSeq", sequenceName = "AGH.AIP_PAC_JN_SEQ", allocationSize = 1)

@Immutable
public class AipPacientesJn extends BaseJournal implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 8124092207904681357L;
	/**
	 * Codigo do paciente ao qual o journal está relacionado
	 */
	private Integer codigoPaciente;
	/**
	 * Nome do paciente
	 */
	private String nomePaciente;
	/**
	 * data de nascimento do paciente
	 */
	private Date dtNascimento;
	/**
	 * prontuário do paciente
	 */
	private Integer prontuario;
	/**
	 * 
	 */
	private Integer codigoCentroCustoCadastro;
	/**
	 * 
	 */
	private Integer codigoCentroCustoRecadastro;
	/**
	 * 
	 */
	private Date dtIdentificacao;
	/**
	 * 
	 */
	private DominioTipoProntuario prntAtivo;
	/**
	 * 
	 */
	private Short volumes;
	/**
	 * 
	 */
	private DominioSimNao indPacAgfa;

	/**
	 * Sexo do Paciente
	 */

	private DominioSexo sexoBiologico;

	/**
	 * 
	 */
	private AipPacientes paciente;

	private Integer matriculaServidorCadastro;
	private Short vinCodigoServidorCadastro;
	private Integer matriculaServidorRecadastro;
	private Short vinCodigoServidorRecadastro;
	
	@Id
	@Column(name = "SEQ_JN", unique = true, nullable = false)
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "aipPacJnSeq")
	@Override
	public Integer getSeqJn() {
		return super.getSeqJn();
	}

	@Column(name = "CODIGO", nullable = false, precision = 8, scale = 0)
	public Integer getCodigoPaciente() {
		return this.codigoPaciente;
	}

	public void setCodigoPaciente(Integer codigo) {
		this.codigoPaciente = codigo;
	}

	@Column(name = "NOME", length = 50)
	@Length(max = 50)
	public String getNomePaciente() {
		return this.nomePaciente;
	}

	public void setNomePaciente(String nome) {
		this.nomePaciente = nome;
	}

	@Column(name = "DT_NASCIMENTO", length = 7)
	public Date getDtNascimento() {
		return this.dtNascimento;
	}

	public void setDtNascimento(Date dtNascimento) {
		this.dtNascimento = dtNascimento;
	}

	@Column(name = "PRONTUARIO", precision = 8, scale = 0)
	public Integer getProntuario() {
		return this.prontuario;
	}

	public void setProntuario(Integer prontuario) {
		this.prontuario = prontuario;
	}

	@Column(name = "DT_IDENTIFICACAO", length = 7)
	public Date getDtIdentificacao() {
		return this.dtIdentificacao;
	}

	public void setDtIdentificacao(Date dtIdentificacao) {
		this.dtIdentificacao = dtIdentificacao;
	}

	@Column(name = "PRNT_ATIVO")
	@Enumerated(EnumType.STRING)
	public DominioTipoProntuario getPrntAtivo() {
		return this.prntAtivo;
	}

	public void setPrntAtivo(DominioTipoProntuario prntAtivo) {
		this.prntAtivo = prntAtivo;
	}

	@Column(name = "VOLUMES", precision = 10, scale = 0)
	public Short getVolumes() {
		return this.volumes;
	}

	public void setVolumes(Short volumes) {
		this.volumes = volumes;
	}

	@Column(name = "CCT_CODIGO_CADASTRO", precision = 6, scale = 0)
	public Integer getCodigoCentroCustoCadastro() {
		return codigoCentroCustoCadastro;
	}

	public void setCodigoCentroCustoCadastro(Integer codigoCentroCustoCadastro) {
		this.codigoCentroCustoCadastro = codigoCentroCustoCadastro;
	}

	@Column(name = "CCT_CODIGO_RECADASTRO", precision = 6, scale = 0)
	public Integer getCodigoCentroCustoRecadastro() {
		return codigoCentroCustoRecadastro;
	}

	public void setCodigoCentroCustoRecadastro(
			Integer codigoCentroCustoRecadastro) {
		this.codigoCentroCustoRecadastro = codigoCentroCustoRecadastro;
	}

	/**
	 * @return the indPacAgfa
	 */
	@Column(name = "IND_PAC_AGFA")
	@Enumerated(EnumType.STRING)
	public DominioSimNao getIndPacAgfa() {
		return indPacAgfa;
	}

	/**
	 * @param indPacAgfa
	 *            the indPacAgfa to set
	 */
	public void setIndPacAgfa(DominioSimNao indPacAgfa) {
		this.indPacAgfa = indPacAgfa;
	}

	/**
	 * @return the sexoBiologico
	 */
	@Column(name = "SEXO_BIOLOGICO", nullable = true)
	@Enumerated(EnumType.STRING)
	public DominioSexo getSexoBiologico() {
		return this.sexoBiologico;
	}

	/**
	 * @param sexoBiologico
	 *            the sexoBiologico to set
	 */
	public void setSexoBiologico(DominioSexo sexoBiologico) {
		this.sexoBiologico = sexoBiologico;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CODIGO", updatable = false, insertable = false)
	public AipPacientes getPaciente() {
		return paciente;
	}

	public void setPaciente(AipPacientes paciente) {
		this.paciente = paciente;
	}

	@Column(name = "SER_MATRICULA_CADASTRO", precision = 7, scale = 0)
	public Integer getMatriculaServidorCadastro() {
		return matriculaServidorCadastro;
	}

	public void setMatriculaServidorCadastro(Integer matriculaServidorCadastro) {
		this.matriculaServidorCadastro = matriculaServidorCadastro;
	}

	@Column(name = "SER_VIN_CODIGO_CADASTRO", precision = 3, scale = 0)
	public Short getVinCodigoServidorCadastro() {
		return vinCodigoServidorCadastro;
	}

	public void setVinCodigoServidorCadastro(Short vinCodigoServidorCadastro) {
		this.vinCodigoServidorCadastro = vinCodigoServidorCadastro;
	}

	@Column(name = "SER_MATRICULA_RECADASTRO", precision = 7, scale = 0)
	public Integer getMatriculaServidorRecadastro() {
		return matriculaServidorRecadastro;
	}

	public void setMatriculaServidorRecadastro(
			Integer matriculaServidorRecadastro) {
		this.matriculaServidorRecadastro = matriculaServidorRecadastro;
	}

	@Column(name = "SER_VIN_CODIGO_RECADASTRO", precision = 3, scale = 0)
	public Short getVinCodigoServidorRecadastro() {
		return vinCodigoServidorRecadastro;
	}

	public void setVinCodigoServidorRecadastro(Short vinCodigoServidorRecadastro) {
		this.vinCodigoServidorRecadastro = vinCodigoServidorRecadastro;
	}

	public enum Fields {
		CODIGO("codigoPaciente"), NOME("nomePaciente"), DATA_ALTERACAO(
				"dataAlteracao"), JN_OPERATION("operacao"), PACIENTE("paciente"), PRONTUARIO(
				"paciente.prontuario"), PRONTUARIO_JN("prontuario"), PAC_NOME("paciente.nome"), PAC_LEITO(
				"paciente.ltoLtoId"), CODIGO_CENTRO_CUSTO_CADASTRO(
				"codigoCentroCustoCadastro");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}

}

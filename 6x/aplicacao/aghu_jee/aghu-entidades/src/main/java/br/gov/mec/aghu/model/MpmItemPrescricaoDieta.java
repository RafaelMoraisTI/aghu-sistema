package br.gov.mec.aghu.model;

// Generated 14/09/2010 17:49:55 by Hibernate Tools 3.2.5.Beta

import java.math.BigDecimal;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.Version;


import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

import br.gov.mec.aghu.model.interfaces.IItemPrescricaoMedica;
import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.exception.BusinessExceptionCode;
import br.gov.mec.aghu.core.persistence.BaseEntityId;
import br.gov.mec.aghu.core.utils.AghuNumberFormat;

/**
 * MpmItemPrescricaoDietas generated by hbm2java
 */
@Entity
@Table(name = "MPM_ITEM_PRESCRICAO_DIETAS", schema = "AGH")

public class MpmItemPrescricaoDieta extends BaseEntityId<MpmItemPrescricaoDietaId> implements java.io.Serializable, Cloneable,
		IItemPrescricaoMedica {

	/**
	 * 
	 */
	private static final long serialVersionUID = 6837760668841710575L;
	private static final String MSG_NUMERO_DE_VEZES_COM_VIRGULA = ", número de vezes:";

	private enum ItemPrescricaoDietaExceptionCode implements
			BusinessExceptionCode {
		QUANTIDADE_MENOR_IGUAL_ZERO, FREQUENCIA_MENOR_IGUAL_ZERO, DURACAO_SOLICITADA_MENOR_IGUAL_ZERO;
	}

	private MpmItemPrescricaoDietaId id;
	private MpmTipoFrequenciaAprazamento tipoFreqAprazamento;
	private MpmPrescricaoDieta prescricaoDieta;
	private AnuTipoItemDieta tipoItemDieta;

	private BigDecimal quantidade;
	private Short frequencia;
	private Byte duracaoSolicitada;
	private Byte numVezes;
	private Integer version;

	public MpmItemPrescricaoDieta() {
	}

	public MpmItemPrescricaoDieta(MpmItemPrescricaoDietaId id,
			MpmPrescricaoDieta prescricaoDieta) {
		this.id = id;
		this.prescricaoDieta = prescricaoDieta;
	}

	public MpmItemPrescricaoDieta(MpmItemPrescricaoDietaId id,
			MpmTipoFrequenciaAprazamento tipoFreqAprazamento,
			MpmPrescricaoDieta prescricaoDieta, BigDecimal quantidade,
			Short frequencia, Byte duracaoSolicitada, Byte numVezes) {
		this.id = id;
		this.tipoFreqAprazamento = tipoFreqAprazamento;
		this.prescricaoDieta = prescricaoDieta;
		this.quantidade = quantidade;
		this.frequencia = frequencia;
		this.duracaoSolicitada = duracaoSolicitada;
		this.numVezes = numVezes;
	}

	public MpmItemPrescricaoDieta(MpmItemPrescricaoDietaId id) {
		this.id = id;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "pdtAtdSeq", column = @Column(name = "PDT_ATD_SEQ", nullable = false, precision = 7, scale = 0)),
			@AttributeOverride(name = "pdtSeq", column = @Column(name = "PDT_SEQ", nullable = false, precision = 14, scale = 0)),
			@AttributeOverride(name = "tidSeq", column = @Column(name = "TID_SEQ", nullable = false, precision = 5, scale = 0)) })
	public MpmItemPrescricaoDietaId getId() {
		return this.id;
	}

	public void setId(MpmItemPrescricaoDietaId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TFQ_SEQ")
	public MpmTipoFrequenciaAprazamento getTipoFreqAprazamento() {
		return this.tipoFreqAprazamento;
	}

	public void setTipoFreqAprazamento(
			MpmTipoFrequenciaAprazamento tipoFreqAprazamento) {
		this.tipoFreqAprazamento = tipoFreqAprazamento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "PDT_ATD_SEQ", referencedColumnName = "ATD_SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "PDT_SEQ", referencedColumnName = "SEQ", nullable = false, insertable = false, updatable = false) })
	public MpmPrescricaoDieta getPrescricaoDieta() {
		return this.prescricaoDieta;
	}

	public void setPrescricaoDieta(MpmPrescricaoDieta prescricaoDieta) {
		this.prescricaoDieta = prescricaoDieta;
	}

	@Column(name = "QUANTIDADE", precision = 7, scale = 2)
	public BigDecimal getQuantidade() {
		return this.quantidade;
	}

	public void setQuantidade(BigDecimal quantidade) {
		this.quantidade = quantidade;
	}

	@Column(name = "FREQUENCIA", precision = 3, scale = 0)
	public Short getFrequencia() {
		return this.frequencia;
	}

	public void setFrequencia(Short frequencia) {
		this.frequencia = frequencia;
	}

	@Column(name = "DURACAO_SOLICITADA", precision = 2, scale = 0)
	public Byte getDuracaoSolicitada() {
		return this.duracaoSolicitada;
	}

	public void setDuracaoSolicitada(Byte duracaoSolicitada) {
		this.duracaoSolicitada = duracaoSolicitada;
	}

	@Column(name = "NUM_VEZES", precision = 2, scale = 0)
	public Byte getNumVezes() {
		return this.numVezes;
	}

	public void setNumVezes(Byte numVezes) {
		this.numVezes = numVezes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TID_SEQ", referencedColumnName = "SEQ", nullable = false, insertable = false, updatable = false)
	public AnuTipoItemDieta getTipoItemDieta() {
		return tipoItemDieta;
	}

	public void setTipoItemDieta(AnuTipoItemDieta tipoItemDieta) {
		this.tipoItemDieta = tipoItemDieta;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Override
	public boolean equals(Object other) {
		if (!(other instanceof MpmItemPrescricaoDieta)) {
			return false;
		}
		MpmItemPrescricaoDieta castOther = (MpmItemPrescricaoDieta) other;
		return new EqualsBuilder().append(this.id, castOther.getId())
				.isEquals();
	}

	@Override
	public int hashCode() {
		return new HashCodeBuilder().append(this.id).toHashCode();
	}

	@Override
	public String toString() {
		return new ToStringBuilder(this).append("id", this.id).toString();
	}

	@Override
	public Object clone() throws CloneNotSupportedException {
		return super.clone();
	}

	@PrePersist
	@PreUpdate
	protected void validacoes() {
		if (this.getQuantidade() != null
				&& this.getQuantidade().compareTo(BigDecimal.ZERO) <= 0) {
			throw new BaseRuntimeException(
					ItemPrescricaoDietaExceptionCode.QUANTIDADE_MENOR_IGUAL_ZERO);
		}
		if (this.getFrequencia() != null
				&& this.getFrequencia().shortValue() <= 0) {
			throw new BaseRuntimeException(
					ItemPrescricaoDietaExceptionCode.FREQUENCIA_MENOR_IGUAL_ZERO);
		}
		if (this.getDuracaoSolicitada() != null
				&& this.getDuracaoSolicitada().byteValue() <= 0) {
			throw new BaseRuntimeException(
					ItemPrescricaoDietaExceptionCode.DURACAO_SOLICITADA_MENOR_IGUAL_ZERO);
		}
	}

	/**
	 * FIELDS
	 * 
	 * @author bsoliveira
	 * 
	 */
	public enum Fields {
		ID("id"), //
		TIPO_FREQUENCIA_APRAZAMENTO("tipoFreqAprazamento"), PDT_ATD_SEQ(
				"id.pdtAtdSeq"), PDT_SEQ("id.pdtSeq"), TID_SEQ("id.tidSeq"), TFQ_SEQ(
				"tipoFreqAprazamento.seq"), PRESCRICAO_DIETA("prescricaoDieta"), QUANTIDADE(
				"quantidade"), FREQUENCIA("frequencia"), DURACAO_SOLICITADA(
				"duracaoSolicitada"), NUM_VEZES("numVezes"), TIPO_ITEM_DIETA(
				"tipoItemDieta"), DESCRICAO("tipoItemDieta.descricao"), DESC_UMM(
				"tipoItemDieta.unidadeMedidaMedica.descricao"), TFQ_SINTAXE(
				"tipoFreqAprazamento.sintaxe"), DESC_TFQ(
				"tipoFreqAprazamento.descricao");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	/**
	 * Retorna descrição formatada.
	 * 
	 * bsoliveira 30/09/2010
	 * 
	 */
	@Override
	@Transient
	public String getDescricaoFormatada() {

		final String ESPACAMENTO = " ";
		final String FINALIZA_STRING = "; ";
		StringBuffer descricao = new StringBuffer();

		if (this.getTipoItemDieta() != null
				&& this.getTipoItemDieta().getDescricao() != null) {
			descricao.append(this.getTipoItemDieta().getDescricao());
		}

		if (this.getQuantidade() != null) {
			String quantidate = AghuNumberFormat.formatarValor(this
					.getQuantidade(), this.getClass(), "quantidade");
			descricao.append(ESPACAMENTO).append(quantidate);

			if (this.getTipoItemDieta() != null
					&& this.getTipoItemDieta().getUnidadeMedidaMedica() != null
					&& this.getTipoItemDieta().getUnidadeMedidaMedica()
							.getDescricao() != null) {
				descricao.append(ESPACAMENTO)
						.append(this.getTipoItemDieta().getUnidadeMedidaMedica()
									.getDescricao());
			}

		}

		if (this.getTipoFreqAprazamento() != null
				&& this.getTipoFreqAprazamento().getSintaxe() != null
				&& this.getFrequencia() != null) {

			descricao.append(ESPACAMENTO)
					.append(this.getTipoFreqAprazamento().getSintaxe().replaceAll(
						"#", this.getFrequencia().toString()));

		} else if (this.getTipoFreqAprazamento() != null
				&& this.getTipoFreqAprazamento().getDescricao() != null) {

			descricao.append(ESPACAMENTO)
				.append(this.getTipoFreqAprazamento().getDescricao());

		}

		if (this.getNumVezes() != null) {

			descricao.append(MSG_NUMERO_DE_VEZES_COM_VIRGULA).append(ESPACAMENTO)
				.append(this.getNumVezes());

		}

		/*
		 * if (Fields.DURACAO_SOLICITADA != null) {
		 * 
		 * //descricao +=
		 * 
		 * }
		 */

		descricao.append(FINALIZA_STRING);

		return descricao.toString();

	}
	
	/**
	 * 
	 * @return Quantidade Formatada
	 */ 
	@Transient
	public String getQuantidadeFormatada() {
		String quantidade= "";

		if (this.getQuantidade() != null) {
			quantidade = AghuNumberFormat.formatarValor(this.getQuantidade(), this.getClass(), "quantidade");
		}
		return quantidade;
	}
	
	
}

package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MciParamReportUsuario generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mciPruSq1", sequenceName="AGH.MCI_PRU_SQ1", allocationSize = 1)
@Table(name = "MCI_PARAM_REPORT_USUARIOS", schema = "AGH")
public class MciParamReportUsuario extends BaseEntitySeq<Integer> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 4239070813292256121L;
	private Integer seq;
	private Integer version;
	private MciParamReportCci mciParamReportCci;
	private RapServidores rapServidores;
	private MciParamReportUsuario mciParamReportUsuario;
	private AghUnidadesFuncionais aghUnidadesFuncionais;
	private AipPacientes aipPacientes;
	private Date criadoEm;
	private String ordemEmissao;
	private String indPermanente;
	private Short nroCopias;
	private Double sessionId;
	private String indConfCci;
	private String indTipoPaciente;
	private Date periodoInicial;
	private Date periodoFinal;
	private String indSitAtendimento;
	private String indGrupoConvenio;
	private String tipoNotificacao;
	private String indTodaEtiologia;
	private String indTodoGrupoEtiologia;
	private String indTodoProcedRisco;
	private String indTodoProcedCirurgico;
	private String indTodoAgrupUnidade;
	private String indTodaTopogInfeccao;
	private String indTodaTopogProcedimento;
	private String nomeParamPermanente;
	private String indTodoGrupoMatInfectante;
	private String indTodoFatorPredisponente;
	private Set<MciParamProcedRisco> mciParamProcedRiscoes = new HashSet<MciParamProcedRisco>(0);
	private Set<MciParamTopogProcedimento> mciParamTopogProcedimentoes = new HashSet<MciParamTopogProcedimento>(0);
	private Set<MciLinhaTmpEstatistica> mciLinhaTmpEstatisticaes = new HashSet<MciLinhaTmpEstatistica>(0);
	private Set<MciParamGrpMatInfectante> mciParamGrpMatInfectantees = new HashSet<MciParamGrpMatInfectante>(0);
	private Set<MciReportLinhaExportacao> mciReportLinhaExportacaoes = new HashSet<MciReportLinhaExportacao>(0);
	private Set<MciParamReportGrupo> mciParamReportGrupoes = new HashSet<MciParamReportGrupo>(0);
	private Set<MciParamReportUsuario> mciParamReportUsuarioes = new HashSet<MciParamReportUsuario>(0);
	private Set<MciParamProcedCirurgico> mciParamProcedCirurgicoes = new HashSet<MciParamProcedCirurgico>(0);
	private Set<MciParamGrupoEtiologia> mciParamGrupoEtiologiaes = new HashSet<MciParamGrupoEtiologia>(0);
	private Set<MciParamEtiologia> mciParamEtiologiaes = new HashSet<MciParamEtiologia>(0);
	private Set<MciParamFatorPredisponente> mciParamFatorPredisponentees = new HashSet<MciParamFatorPredisponente>(0);
	private Set<MciParamReportExportacao> mciParamReportExportacaoes = new HashSet<MciParamReportExportacao>(0);
	private Set<MciParamTopogInfeccao> mciParamTopogInfeccaoes = new HashSet<MciParamTopogInfeccao>(0);
	private Set<MciParamAgrupUnidCci> mciParamAgrupUnidCcies = new HashSet<MciParamAgrupUnidCci>(0);

	public MciParamReportUsuario() {
	}

	public MciParamReportUsuario(Integer seq, MciParamReportCci mciParamReportCci, RapServidores rapServidores, Date criadoEm,
			String ordemEmissao, String indPermanente, String indTodaEtiologia, String indTodoGrupoEtiologia,
			String indTodoProcedRisco, String indTodoProcedCirurgico, String indTodoAgrupUnidade, String indTodaTopogInfeccao,
			String indTodaTopogProcedimento, String indTodoGrupoMatInfectante, String indTodoFatorPredisponente) {
		this.seq = seq;
		this.mciParamReportCci = mciParamReportCci;
		this.rapServidores = rapServidores;
		this.criadoEm = criadoEm;
		this.ordemEmissao = ordemEmissao;
		this.indPermanente = indPermanente;
		this.indTodaEtiologia = indTodaEtiologia;
		this.indTodoGrupoEtiologia = indTodoGrupoEtiologia;
		this.indTodoProcedRisco = indTodoProcedRisco;
		this.indTodoProcedCirurgico = indTodoProcedCirurgico;
		this.indTodoAgrupUnidade = indTodoAgrupUnidade;
		this.indTodaTopogInfeccao = indTodaTopogInfeccao;
		this.indTodaTopogProcedimento = indTodaTopogProcedimento;
		this.indTodoGrupoMatInfectante = indTodoGrupoMatInfectante;
		this.indTodoFatorPredisponente = indTodoFatorPredisponente;
	}

	@SuppressWarnings({"PMD.ExcessiveParameterList"})
	public MciParamReportUsuario(Integer seq, MciParamReportCci mciParamReportCci, RapServidores rapServidores,
			MciParamReportUsuario mciParamReportUsuario, AghUnidadesFuncionais aghUnidadesFuncionais, AipPacientes aipPacientes,
			Date criadoEm, String ordemEmissao, String indPermanente, Short nroCopias, Double sessionId, String indConfCci,
			String indTipoPaciente, Date periodoInicial, Date periodoFinal, String indSitAtendimento, String indGrupoConvenio,
			String tipoNotificacao, String indTodaEtiologia, String indTodoGrupoEtiologia, String indTodoProcedRisco,
			String indTodoProcedCirurgico, String indTodoAgrupUnidade, String indTodaTopogInfeccao, String indTodaTopogProcedimento,
			String nomeParamPermanente, String indTodoGrupoMatInfectante, String indTodoFatorPredisponente,
			Set<MciParamProcedRisco> mciParamProcedRiscoes, Set<MciParamTopogProcedimento> mciParamTopogProcedimentoes,
			Set<MciLinhaTmpEstatistica> mciLinhaTmpEstatisticaes, Set<MciParamGrpMatInfectante> mciParamGrpMatInfectantees,
			Set<MciReportLinhaExportacao> mciReportLinhaExportacaoes, Set<MciParamReportGrupo> mciParamReportGrupoes,
			Set<MciParamReportUsuario> mciParamReportUsuarioes, Set<MciParamProcedCirurgico> mciParamProcedCirurgicoes,
			Set<MciParamGrupoEtiologia> mciParamGrupoEtiologiaes, Set<MciParamEtiologia> mciParamEtiologiaes,
			Set<MciParamFatorPredisponente> mciParamFatorPredisponentees,
			Set<MciParamReportExportacao> mciParamReportExportacaoes, Set<MciParamTopogInfeccao> mciParamTopogInfeccaoes,
			Set<MciParamAgrupUnidCci> mciParamAgrupUnidCcies) {
		this.seq = seq;
		this.mciParamReportCci = mciParamReportCci;
		this.rapServidores = rapServidores;
		this.mciParamReportUsuario = mciParamReportUsuario;
		this.aghUnidadesFuncionais = aghUnidadesFuncionais;
		this.aipPacientes = aipPacientes;
		this.criadoEm = criadoEm;
		this.ordemEmissao = ordemEmissao;
		this.indPermanente = indPermanente;
		this.nroCopias = nroCopias;
		this.sessionId = sessionId;
		this.indConfCci = indConfCci;
		this.indTipoPaciente = indTipoPaciente;
		this.periodoInicial = periodoInicial;
		this.periodoFinal = periodoFinal;
		this.indSitAtendimento = indSitAtendimento;
		this.indGrupoConvenio = indGrupoConvenio;
		this.tipoNotificacao = tipoNotificacao;
		this.indTodaEtiologia = indTodaEtiologia;
		this.indTodoGrupoEtiologia = indTodoGrupoEtiologia;
		this.indTodoProcedRisco = indTodoProcedRisco;
		this.indTodoProcedCirurgico = indTodoProcedCirurgico;
		this.indTodoAgrupUnidade = indTodoAgrupUnidade;
		this.indTodaTopogInfeccao = indTodaTopogInfeccao;
		this.indTodaTopogProcedimento = indTodaTopogProcedimento;
		this.nomeParamPermanente = nomeParamPermanente;
		this.indTodoGrupoMatInfectante = indTodoGrupoMatInfectante;
		this.indTodoFatorPredisponente = indTodoFatorPredisponente;
		this.mciParamProcedRiscoes = mciParamProcedRiscoes;
		this.mciParamTopogProcedimentoes = mciParamTopogProcedimentoes;
		this.mciLinhaTmpEstatisticaes = mciLinhaTmpEstatisticaes;
		this.mciParamGrpMatInfectantees = mciParamGrpMatInfectantees;
		this.mciReportLinhaExportacaoes = mciReportLinhaExportacaoes;
		this.mciParamReportGrupoes = mciParamReportGrupoes;
		this.mciParamReportUsuarioes = mciParamReportUsuarioes;
		this.mciParamProcedCirurgicoes = mciParamProcedCirurgicoes;
		this.mciParamGrupoEtiologiaes = mciParamGrupoEtiologiaes;
		this.mciParamEtiologiaes = mciParamEtiologiaes;
		this.mciParamFatorPredisponentees = mciParamFatorPredisponentees;
		this.mciParamReportExportacaoes = mciParamReportExportacaoes;
		this.mciParamTopogInfeccaoes = mciParamTopogInfeccaoes;
		this.mciParamAgrupUnidCcies = mciParamAgrupUnidCcies;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mciPruSq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Integer getSeq() {
		return this.seq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PMC_APLICACAO_CODIGO", nullable = false)
	public MciParamReportCci getMciParamReportCci() {
		return this.mciParamReportCci;
	}

	public void setMciParamReportCci(MciParamReportCci mciParamReportCci) {
		this.mciParamReportCci = mciParamReportCci;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PRU_SEQ")
	public MciParamReportUsuario getMciParamReportUsuario() {
		return this.mciParamReportUsuario;
	}

	public void setMciParamReportUsuario(MciParamReportUsuario mciParamReportUsuario) {
		this.mciParamReportUsuario = mciParamReportUsuario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ")
	public AghUnidadesFuncionais getAghUnidadesFuncionais() {
		return this.aghUnidadesFuncionais;
	}

	public void setAghUnidadesFuncionais(AghUnidadesFuncionais aghUnidadesFuncionais) {
		this.aghUnidadesFuncionais = aghUnidadesFuncionais;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PAC_CODIGO")
	public AipPacientes getAipPacientes() {
		return this.aipPacientes;
	}

	public void setAipPacientes(AipPacientes aipPacientes) {
		this.aipPacientes = aipPacientes;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "ORDEM_EMISSAO", nullable = false, length = 4)
	@Length(max = 4)
	public String getOrdemEmissao() {
		return this.ordemEmissao;
	}

	public void setOrdemEmissao(String ordemEmissao) {
		this.ordemEmissao = ordemEmissao;
	}

	@Column(name = "IND_PERMANENTE", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndPermanente() {
		return this.indPermanente;
	}

	public void setIndPermanente(String indPermanente) {
		this.indPermanente = indPermanente;
	}

	@Column(name = "NRO_COPIAS")
	public Short getNroCopias() {
		return this.nroCopias;
	}

	public void setNroCopias(Short nroCopias) {
		this.nroCopias = nroCopias;
	}

	@Column(name = "SESSION_ID", precision = 17, scale = 17)
	public Double getSessionId() {
		return this.sessionId;
	}

	public void setSessionId(Double sessionId) {
		this.sessionId = sessionId;
	}

	@Column(name = "IND_CONF_CCI", length = 1)
	@Length(max = 1)
	public String getIndConfCci() {
		return this.indConfCci;
	}

	public void setIndConfCci(String indConfCci) {
		this.indConfCci = indConfCci;
	}

	@Column(name = "IND_TIPO_PACIENTE", length = 1)
	@Length(max = 1)
	public String getIndTipoPaciente() {
		return this.indTipoPaciente;
	}

	public void setIndTipoPaciente(String indTipoPaciente) {
		this.indTipoPaciente = indTipoPaciente;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PERIODO_INICIAL", length = 29)
	public Date getPeriodoInicial() {
		return this.periodoInicial;
	}

	public void setPeriodoInicial(Date periodoInicial) {
		this.periodoInicial = periodoInicial;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PERIODO_FINAL", length = 29)
	public Date getPeriodoFinal() {
		return this.periodoFinal;
	}

	public void setPeriodoFinal(Date periodoFinal) {
		this.periodoFinal = periodoFinal;
	}

	@Column(name = "IND_SIT_ATENDIMENTO", length = 1)
	@Length(max = 1)
	public String getIndSitAtendimento() {
		return this.indSitAtendimento;
	}

	public void setIndSitAtendimento(String indSitAtendimento) {
		this.indSitAtendimento = indSitAtendimento;
	}

	@Column(name = "IND_GRUPO_CONVENIO", length = 1)
	@Length(max = 1)
	public String getIndGrupoConvenio() {
		return this.indGrupoConvenio;
	}

	public void setIndGrupoConvenio(String indGrupoConvenio) {
		this.indGrupoConvenio = indGrupoConvenio;
	}

	@Column(name = "TIPO_NOTIFICACAO", length = 1)
	@Length(max = 1)
	public String getTipoNotificacao() {
		return this.tipoNotificacao;
	}

	public void setTipoNotificacao(String tipoNotificacao) {
		this.tipoNotificacao = tipoNotificacao;
	}

	@Column(name = "IND_TODA_ETIOLOGIA", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndTodaEtiologia() {
		return this.indTodaEtiologia;
	}

	public void setIndTodaEtiologia(String indTodaEtiologia) {
		this.indTodaEtiologia = indTodaEtiologia;
	}

	@Column(name = "IND_TODO_GRUPO_ETIOLOGIA", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndTodoGrupoEtiologia() {
		return this.indTodoGrupoEtiologia;
	}

	public void setIndTodoGrupoEtiologia(String indTodoGrupoEtiologia) {
		this.indTodoGrupoEtiologia = indTodoGrupoEtiologia;
	}

	@Column(name = "IND_TODO_PROCED_RISCO", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndTodoProcedRisco() {
		return this.indTodoProcedRisco;
	}

	public void setIndTodoProcedRisco(String indTodoProcedRisco) {
		this.indTodoProcedRisco = indTodoProcedRisco;
	}

	@Column(name = "IND_TODO_PROCED_CIRURGICO", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndTodoProcedCirurgico() {
		return this.indTodoProcedCirurgico;
	}

	public void setIndTodoProcedCirurgico(String indTodoProcedCirurgico) {
		this.indTodoProcedCirurgico = indTodoProcedCirurgico;
	}

	@Column(name = "IND_TODO_AGRUP_UNIDADE", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndTodoAgrupUnidade() {
		return this.indTodoAgrupUnidade;
	}

	public void setIndTodoAgrupUnidade(String indTodoAgrupUnidade) {
		this.indTodoAgrupUnidade = indTodoAgrupUnidade;
	}

	@Column(name = "IND_TODA_TOPOG_INFECCAO", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndTodaTopogInfeccao() {
		return this.indTodaTopogInfeccao;
	}

	public void setIndTodaTopogInfeccao(String indTodaTopogInfeccao) {
		this.indTodaTopogInfeccao = indTodaTopogInfeccao;
	}

	@Column(name = "IND_TODA_TOPOG_PROCEDIMENTO", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndTodaTopogProcedimento() {
		return this.indTodaTopogProcedimento;
	}

	public void setIndTodaTopogProcedimento(String indTodaTopogProcedimento) {
		this.indTodaTopogProcedimento = indTodaTopogProcedimento;
	}

	@Column(name = "NOME_PARAM_PERMANENTE", length = 60)
	@Length(max = 60)
	public String getNomeParamPermanente() {
		return this.nomeParamPermanente;
	}

	public void setNomeParamPermanente(String nomeParamPermanente) {
		this.nomeParamPermanente = nomeParamPermanente;
	}

	@Column(name = "IND_TODO_GRUPO_MAT_INFECTANTE", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndTodoGrupoMatInfectante() {
		return this.indTodoGrupoMatInfectante;
	}

	public void setIndTodoGrupoMatInfectante(String indTodoGrupoMatInfectante) {
		this.indTodoGrupoMatInfectante = indTodoGrupoMatInfectante;
	}

	@Column(name = "IND_TODO_FATOR_PREDISPONENTE", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndTodoFatorPredisponente() {
		return this.indTodoFatorPredisponente;
	}

	public void setIndTodoFatorPredisponente(String indTodoFatorPredisponente) {
		this.indTodoFatorPredisponente = indTodoFatorPredisponente;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciParamReportUsuario")
	public Set<MciParamProcedRisco> getMciParamProcedRiscoes() {
		return this.mciParamProcedRiscoes;
	}

	public void setMciParamProcedRiscoes(Set<MciParamProcedRisco> mciParamProcedRiscoes) {
		this.mciParamProcedRiscoes = mciParamProcedRiscoes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciParamReportUsuario")
	public Set<MciParamTopogProcedimento> getMciParamTopogProcedimentoes() {
		return this.mciParamTopogProcedimentoes;
	}

	public void setMciParamTopogProcedimentoes(Set<MciParamTopogProcedimento> mciParamTopogProcedimentoes) {
		this.mciParamTopogProcedimentoes = mciParamTopogProcedimentoes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciParamReportUsuario")
	public Set<MciLinhaTmpEstatistica> getMciLinhaTmpEstatisticaes() {
		return this.mciLinhaTmpEstatisticaes;
	}

	public void setMciLinhaTmpEstatisticaes(Set<MciLinhaTmpEstatistica> mciLinhaTmpEstatisticaes) {
		this.mciLinhaTmpEstatisticaes = mciLinhaTmpEstatisticaes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciParamReportUsuario")
	public Set<MciParamGrpMatInfectante> getMciParamGrpMatInfectantees() {
		return this.mciParamGrpMatInfectantees;
	}

	public void setMciParamGrpMatInfectantees(Set<MciParamGrpMatInfectante> mciParamGrpMatInfectantees) {
		this.mciParamGrpMatInfectantees = mciParamGrpMatInfectantees;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciParamReportUsuario")
	public Set<MciReportLinhaExportacao> getMciReportLinhaExportacaoes() {
		return this.mciReportLinhaExportacaoes;
	}

	public void setMciReportLinhaExportacaoes(Set<MciReportLinhaExportacao> mciReportLinhaExportacaoes) {
		this.mciReportLinhaExportacaoes = mciReportLinhaExportacaoes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciParamReportUsuario")
	public Set<MciParamReportGrupo> getMciParamReportGrupoes() {
		return this.mciParamReportGrupoes;
	}

	public void setMciParamReportGrupoes(Set<MciParamReportGrupo> mciParamReportGrupoes) {
		this.mciParamReportGrupoes = mciParamReportGrupoes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciParamReportUsuario")
	public Set<MciParamReportUsuario> getMciParamReportUsuarioes() {
		return this.mciParamReportUsuarioes;
	}

	public void setMciParamReportUsuarioes(Set<MciParamReportUsuario> mciParamReportUsuarioes) {
		this.mciParamReportUsuarioes = mciParamReportUsuarioes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciParamReportUsuario")
	public Set<MciParamProcedCirurgico> getMciParamProcedCirurgicoes() {
		return this.mciParamProcedCirurgicoes;
	}

	public void setMciParamProcedCirurgicoes(Set<MciParamProcedCirurgico> mciParamProcedCirurgicoes) {
		this.mciParamProcedCirurgicoes = mciParamProcedCirurgicoes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciParamReportUsuario")
	public Set<MciParamGrupoEtiologia> getMciParamGrupoEtiologiaes() {
		return this.mciParamGrupoEtiologiaes;
	}

	public void setMciParamGrupoEtiologiaes(Set<MciParamGrupoEtiologia> mciParamGrupoEtiologiaes) {
		this.mciParamGrupoEtiologiaes = mciParamGrupoEtiologiaes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciParamReportUsuario")
	public Set<MciParamEtiologia> getMciParamEtiologiaes() {
		return this.mciParamEtiologiaes;
	}

	public void setMciParamEtiologiaes(Set<MciParamEtiologia> mciParamEtiologiaes) {
		this.mciParamEtiologiaes = mciParamEtiologiaes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciParamReportUsuario")
	public Set<MciParamFatorPredisponente> getMciParamFatorPredisponentees() {
		return this.mciParamFatorPredisponentees;
	}

	public void setMciParamFatorPredisponentees(Set<MciParamFatorPredisponente> mciParamFatorPredisponentees) {
		this.mciParamFatorPredisponentees = mciParamFatorPredisponentees;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciParamReportUsuario")
	public Set<MciParamReportExportacao> getMciParamReportExportacaoes() {
		return this.mciParamReportExportacaoes;
	}

	public void setMciParamReportExportacaoes(Set<MciParamReportExportacao> mciParamReportExportacaoes) {
		this.mciParamReportExportacaoes = mciParamReportExportacaoes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciParamReportUsuario")
	public Set<MciParamTopogInfeccao> getMciParamTopogInfeccaoes() {
		return this.mciParamTopogInfeccaoes;
	}

	public void setMciParamTopogInfeccaoes(Set<MciParamTopogInfeccao> mciParamTopogInfeccaoes) {
		this.mciParamTopogInfeccaoes = mciParamTopogInfeccaoes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mciParamReportUsuario")
	public Set<MciParamAgrupUnidCci> getMciParamAgrupUnidCcies() {
		return this.mciParamAgrupUnidCcies;
	}

	public void setMciParamAgrupUnidCcies(Set<MciParamAgrupUnidCci> mciParamAgrupUnidCcies) {
		this.mciParamAgrupUnidCcies = mciParamAgrupUnidCcies;
	}

	public enum Fields {

		SEQ("seq"),
		VERSION("version"),
		MCI_PARAM_REPORT_CCIS("mciParamReportCci"),
		RAP_SERVIDORES("rapServidores"),
		MCI_PARAM_REPORT_USUARIOS("mciParamReportUsuario"),
		AGH_UNIDADES_FUNCIONAIS("aghUnidadesFuncionais"),
		AIP_PACIENTES("aipPacientes"),
		CRIADO_EM("criadoEm"),
		ORDEM_EMISSAO("ordemEmissao"),
		IND_PERMANENTE("indPermanente"),
		NRO_COPIAS("nroCopias"),
		SESSION_ID("sessionId"),
		IND_CONF_CCI("indConfCci"),
		IND_TIPO_PACIENTE("indTipoPaciente"),
		PERIODO_INICIAL("periodoInicial"),
		PERIODO_FINAL("periodoFinal"),
		IND_SIT_ATENDIMENTO("indSitAtendimento"),
		IND_GRUPO_CONVENIO("indGrupoConvenio"),
		TIPO_NOTIFICACAO("tipoNotificacao"),
		IND_TODA_ETIOLOGIA("indTodaEtiologia"),
		IND_TODO_GRUPO_ETIOLOGIA("indTodoGrupoEtiologia"),
		IND_TODO_PROCED_RISCO("indTodoProcedRisco"),
		IND_TODO_PROCED_CIRURGICO("indTodoProcedCirurgico"),
		IND_TODO_AGRUP_UNIDADE("indTodoAgrupUnidade"),
		IND_TODA_TOPOG_INFECCAO("indTodaTopogInfeccao"),
		IND_TODA_TOPOG_PROCEDIMENTO("indTodaTopogProcedimento"),
		NOME_PARAM_PERMANENTE("nomeParamPermanente"),
		IND_TODO_GRUPO_MAT_INFECTANTE("indTodoGrupoMatInfectante"),
		IND_TODO_FATOR_PREDISPONENTE("indTodoFatorPredisponente"),
		MCI_PARAM_PROCED_RISCOES("mciParamProcedRiscoes"),
		MCI_PARAM_TOPOG_PROCEDIMENTOES("mciParamTopogProcedimentoes"),
		MCI_LINHA_TMP_ESTATISTICAES("mciLinhaTmpEstatisticaes"),
		MCI_PARAM_GRP_MAT_INFECTANTEES("mciParamGrpMatInfectantees"),
		MCI_REPORT_LINHA_EXPORTACAOES("mciReportLinhaExportacaoes"),
		MCI_PARAM_REPORT_GRUPOES("mciParamReportGrupoes"),
		MCI_PARAM_REPORT_USUARIOES("mciParamReportUsuarioes"),
		MCI_PARAM_PROCED_CIRURGICOES("mciParamProcedCirurgicoes"),
		MCI_PARAM_GRUPO_ETIOLOGIAES("mciParamGrupoEtiologiaes"),
		MCI_PARAM_ETIOLOGIAES("mciParamEtiologiaes"),
		MCI_PARAM_FATOR_PREDISPONENTEES("mciParamFatorPredisponentees"),
		MCI_PARAM_REPORT_EXPORTACAOES("mciParamReportExportacaoes"),
		MCI_PARAM_TOPOG_INFECCAOES("mciParamTopogInfeccaoes"),
		MCI_PARAM_AGRUP_UNID_CCIES("mciParamAgrupUnidCcies");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		HashCodeBuilder umHashCodeBuilder = new HashCodeBuilder();
		umHashCodeBuilder.append(this.seq);
		umHashCodeBuilder.append(this.mciParamReportCci);
		umHashCodeBuilder.append(this.rapServidores);
		umHashCodeBuilder.append(this.mciParamReportUsuario);
		umHashCodeBuilder.append(this.aghUnidadesFuncionais);
		umHashCodeBuilder.append(this.aipPacientes);
		umHashCodeBuilder.append(this.criadoEm);
		umHashCodeBuilder.append(this.ordemEmissao);
		umHashCodeBuilder.append(this.indPermanente);
		umHashCodeBuilder.append(this.nroCopias);
		umHashCodeBuilder.append(this.sessionId);
		umHashCodeBuilder.append(this.indConfCci);
		umHashCodeBuilder.append(this.indTipoPaciente);
		umHashCodeBuilder.append(this.periodoInicial);
		umHashCodeBuilder.append(this.periodoFinal);
		umHashCodeBuilder.append(this.indSitAtendimento);
		umHashCodeBuilder.append(this.indGrupoConvenio);
		umHashCodeBuilder.append(this.tipoNotificacao);
		umHashCodeBuilder.append(this.indTodaEtiologia);
		umHashCodeBuilder.append(this.indTodoGrupoEtiologia);
		umHashCodeBuilder.append(this.indTodoProcedRisco);
		umHashCodeBuilder.append(this.indTodoProcedCirurgico);
		umHashCodeBuilder.append(this.indTodoAgrupUnidade);
		umHashCodeBuilder.append(this.indTodaTopogInfeccao);
		umHashCodeBuilder.append(this.indTodaTopogProcedimento);
		umHashCodeBuilder.append(this.nomeParamPermanente);
		umHashCodeBuilder.append(this.indTodoGrupoMatInfectante);
		umHashCodeBuilder.append(this.indTodoFatorPredisponente);
		umHashCodeBuilder.append(this.mciParamProcedRiscoes);
		umHashCodeBuilder.append(this.mciParamTopogProcedimentoes);
		umHashCodeBuilder.append(this.mciLinhaTmpEstatisticaes);
		umHashCodeBuilder.append(this.mciParamGrpMatInfectantees);
		umHashCodeBuilder.append(this.mciReportLinhaExportacaoes);
		umHashCodeBuilder.append(this.mciParamReportGrupoes);
		umHashCodeBuilder.append(this.mciParamReportUsuarioes);
		umHashCodeBuilder.append(this.mciParamProcedCirurgicoes);
		umHashCodeBuilder.append(this.mciParamGrupoEtiologiaes);
		umHashCodeBuilder.append(this.mciParamEtiologiaes);
		umHashCodeBuilder.append(this.mciParamFatorPredisponentees);
		umHashCodeBuilder.append(this.mciParamReportExportacaoes);
		umHashCodeBuilder.append(this.mciParamTopogInfeccaoes);
		umHashCodeBuilder.append(this.mciParamAgrupUnidCcies);
		return umHashCodeBuilder.toHashCode();
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MciParamReportUsuario)) {
			return false;
		}
		MciParamReportUsuario other = (MciParamReportUsuario) obj;
		EqualsBuilder equalsBuilder = new EqualsBuilder();
		equalsBuilder.append(this.seq,other.getSeq());
		equalsBuilder.append(this.mciParamReportCci,other.getMciParamReportCci());
		equalsBuilder.append(this.rapServidores,other.getRapServidores());
		equalsBuilder.append(this.mciParamReportUsuario,other.getMciParamReportUsuario());
		equalsBuilder.append(this.aghUnidadesFuncionais,other.getAghUnidadesFuncionais());
		equalsBuilder.append(this.aipPacientes,other.getAipPacientes());
		equalsBuilder.append(this.criadoEm,other.getCriadoEm());
		equalsBuilder.append(this.ordemEmissao,other.getOrdemEmissao());
		equalsBuilder.append(this.indPermanente,other.getIndPermanente());
		equalsBuilder.append(this.nroCopias,other.getNroCopias());
		equalsBuilder.append(this.sessionId,other.getSessionId());
		equalsBuilder.append(this.indConfCci,other.getIndConfCci());
		equalsBuilder.append(this.indTipoPaciente,other.getIndTipoPaciente());
		equalsBuilder.append(this.periodoInicial,other.getPeriodoInicial());
		equalsBuilder.append(this.periodoFinal,other.getPeriodoFinal());
		equalsBuilder.append(this.indSitAtendimento,other.getIndSitAtendimento());
		equalsBuilder.append(this.indGrupoConvenio,other.getIndGrupoConvenio());
		equalsBuilder.append(this.tipoNotificacao,other.getTipoNotificacao());
		equalsBuilder.append(this.indTodaEtiologia,other.getIndTodaEtiologia());
		equalsBuilder.append(this.indTodoGrupoEtiologia,other.getIndTodoGrupoEtiologia());
		equalsBuilder.append(this.indTodoProcedRisco,other.getIndTodoProcedRisco());
		equalsBuilder.append(this.indTodoProcedCirurgico,other.getIndTodoProcedCirurgico());
		equalsBuilder.append(this.indTodoAgrupUnidade,other.getIndTodoAgrupUnidade());
		equalsBuilder.append(this.indTodaTopogInfeccao,other.getIndTodaTopogInfeccao());
		equalsBuilder.append(this.indTodaTopogProcedimento,other.getIndTodaTopogProcedimento());
		equalsBuilder.append(this.nomeParamPermanente,other.getNomeParamPermanente());
		equalsBuilder.append(this.indTodoGrupoMatInfectante,other.getIndTodoGrupoMatInfectante());
		equalsBuilder.append(this.indTodoFatorPredisponente,other.getIndTodoFatorPredisponente());
		equalsBuilder.append(this.mciParamProcedRiscoes,other.getMciParamProcedRiscoes());
		equalsBuilder.append(this.mciParamTopogProcedimentoes,other.getMciParamTopogProcedimentoes());
		equalsBuilder.append(this.mciLinhaTmpEstatisticaes,other.getMciLinhaTmpEstatisticaes());
		equalsBuilder.append(this.mciParamGrpMatInfectantees,other.getMciParamGrpMatInfectantees());
		equalsBuilder.append(this.mciReportLinhaExportacaoes,other.getMciReportLinhaExportacaoes());
		equalsBuilder.append(this.mciParamReportGrupoes,other.getMciParamReportGrupoes());
		equalsBuilder.append(this.mciParamReportUsuarioes,other.getMciParamReportUsuarioes());
		equalsBuilder.append(this.mciParamProcedCirurgicoes,other.getMciParamProcedCirurgicoes());
		equalsBuilder.append(this.mciParamGrupoEtiologiaes,other.getMciParamGrupoEtiologiaes());
		equalsBuilder.append(this.mciParamEtiologiaes,other.getMciParamEtiologiaes());
		equalsBuilder.append(this.mciParamFatorPredisponentees,other.getMciParamFatorPredisponentees());
		equalsBuilder.append(this.mciParamReportExportacaoes,other.getMciParamReportExportacaoes());
		equalsBuilder.append(this.mciParamTopogInfeccaoes,other.getMciParamTopogInfeccaoes());
		equalsBuilder.append(this.mciParamAgrupUnidCcies,other.getMciParamAgrupUnidCcies());
		return equalsBuilder.isEquals();		
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityCodigo;

/**
 * AbsTipoCarta generated by hbm2java
 */
@Entity
@Table(name = "ABS_TIPOS_CARTAS", schema = "AGH")
public class AbsTipoCarta extends BaseEntityCodigo<String> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -3174827091592681557L;
	private String codigo;
	private Integer version;
	private RapServidores rapServidores;
	private String descricao;
	private String indHistorico;
	private String grupoCarta;
	private String nomeReport;
	private Date criadoEm;
	private Set<AbsTextoCarta> absTextoCartaes = new HashSet<AbsTextoCarta>(0);
	private Set<AbsCartaDoador> absCartaDoadores = new HashSet<AbsCartaDoador>(0);

	public AbsTipoCarta() {
	}

	public AbsTipoCarta(String codigo, String descricao, String grupoCarta) {
		this.codigo = codigo;
		this.descricao = descricao;
		this.grupoCarta = grupoCarta;
	}

	public AbsTipoCarta(String codigo, RapServidores rapServidores, String descricao, String indHistorico, String grupoCarta,
			String nomeReport, Date criadoEm, Set<AbsTextoCarta> absTextoCartaes, Set<AbsCartaDoador> absCartaDoadores) {
		this.codigo = codigo;
		this.rapServidores = rapServidores;
		this.descricao = descricao;
		this.indHistorico = indHistorico;
		this.grupoCarta = grupoCarta;
		this.nomeReport = nomeReport;
		this.criadoEm = criadoEm;
		this.absTextoCartaes = absTextoCartaes;
		this.absCartaDoadores = absCartaDoadores;
	}

	@Id
	@Column(name = "CODIGO", unique = true, nullable = false, length = 3)
	@Length(max = 3)
	public String getCodigo() {
		return this.codigo;
	}

	public void setCodigo(String codigo) {
		this.codigo = codigo;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 60)
	@Length(max = 60)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "IND_HISTORICO", length = 1)
	@Length(max = 1)
	public String getIndHistorico() {
		return this.indHistorico;
	}

	public void setIndHistorico(String indHistorico) {
		this.indHistorico = indHistorico;
	}

	@Column(name = "GRUPO_CARTA", nullable = false, length = 2)
	@Length(max = 2)
	public String getGrupoCarta() {
		return this.grupoCarta;
	}

	public void setGrupoCarta(String grupoCarta) {
		this.grupoCarta = grupoCarta;
	}

	@Column(name = "NOME_REPORT", length = 40)
	@Length(max = 40)
	public String getNomeReport() {
		return this.nomeReport;
	}

	public void setNomeReport(String nomeReport) {
		this.nomeReport = nomeReport;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "absTipoCarta")
	public Set<AbsTextoCarta> getAbsTextoCartaes() {
		return this.absTextoCartaes;
	}

	public void setAbsTextoCartaes(Set<AbsTextoCarta> absTextoCartaes) {
		this.absTextoCartaes = absTextoCartaes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "absTipoCarta")
	public Set<AbsCartaDoador> getAbsCartaDoadores() {
		return this.absCartaDoadores;
	}

	public void setAbsCartaDoadores(Set<AbsCartaDoador> absCartaDoadores) {
		this.absCartaDoadores = absCartaDoadores;
	}

	public enum Fields {

		CODIGO("codigo"),
		VERSION("version"),
		RAP_SERVIDORES("rapServidores"),
		DESCRICAO("descricao"),
		IND_HISTORICO("indHistorico"),
		GRUPO_CARTA("grupoCarta"),
		NOME_REPORT("nomeReport"),
		CRIADO_EM("criadoEm"),
		ABS_TEXTO_CARTAES("absTextoCartaes"),
		ABS_CARTA_DOADORES("absCartaDoadores");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getCodigo() == null) ? 0 : getCodigo().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AbsTipoCarta)) {
			return false;
		}
		AbsTipoCarta other = (AbsTipoCarta) obj;
		if (getCodigo() == null) {
			if (other.getCodigo() != null) {
				return false;
			}
		} else if (!getCodigo().equals(other.getCodigo())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

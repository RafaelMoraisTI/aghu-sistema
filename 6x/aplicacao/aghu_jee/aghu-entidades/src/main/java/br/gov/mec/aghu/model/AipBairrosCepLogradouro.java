package br.gov.mec.aghu.model;

// Generated 24/09/2009 17:21:40 by Hibernate Tools 3.2.5.Beta

import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;


import br.gov.mec.aghu.core.persistence.BaseEntityId;
import br.gov.mec.aghu.core.utils.AGHUUtil;

//import br.gov.mec.aghu.util.AghuUtil;

/**
 * AipBairrosCepLogradouro generated by hbm2java
 */
@Entity
@Table(name = "AIP_BAIRROS_CEP_LOGRADOURO", schema = "AGH")

public class AipBairrosCepLogradouro extends BaseEntityId<AipBairrosCepLogradouroId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5648415178315632160L;
	private AipBairrosCepLogradouroId id;
	private AipBairros aipBairro;
	private AipCepLogradouros cepLogradouro;
	private AipLogradouros aipLogradouro;

	private Set<RapPessoasFisicas> rapPessoasFisicas = new HashSet<RapPessoasFisicas>(
			0);
	private Set<AipEnderecosPacientes> aipEnderecosPacientes = new HashSet<AipEnderecosPacientes>(
			0);

	public AipBairrosCepLogradouro() {
	}

	public AipBairrosCepLogradouro(AipBairrosCepLogradouroId id,
			AipBairros aipBairro) {
		this.id = id;
		this.aipBairro = aipBairro;
	}

	public AipBairrosCepLogradouro(AipBairrosCepLogradouroId id,
			AipBairros aipBairro, Set<RapPessoasFisicas> rapPessoasFisicas,
			Set<AipEnderecosPacientes> aipEnderecosPacientes) {
		this.id = id;
		this.aipBairro = aipBairro;
		this.rapPessoasFisicas = rapPessoasFisicas;
		this.aipEnderecosPacientes = aipEnderecosPacientes;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "cloLgrCodigo", column = @Column(name = "CLO_LGR_CODIGO", nullable = false, precision = 9, scale = 0)),
			@AttributeOverride(name = "cloCep", column = @Column(name = "CLO_CEP", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "baiCodigo", column = @Column(name = "BAI_CODIGO", nullable = false, precision = 5, scale = 0)) })	
	public AipBairrosCepLogradouroId getId() {
		return this.id;
	}

	public void setId(AipBairrosCepLogradouroId id) {
		this.id = id;
	}

	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "BAI_CODIGO", nullable = false, insertable = false, updatable = false)
	public AipBairros getAipBairro() {
		return aipBairro;
	}

	public void setAipBairro(AipBairros aipBairro) {
		this.aipBairro = aipBairro;
	}

	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "aipBairrosCepLogradouro")
	public Set<RapPessoasFisicas> getRapPessoasFisicas() {
		return rapPessoasFisicas;
	}

	public void setRapPessoasFisicas(Set<RapPessoasFisicas> rapPessoasFisicas) {
		this.rapPessoasFisicas = rapPessoasFisicas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "aipBairrosCepLogradouro")
	public Set<AipEnderecosPacientes> getAipEnderecosPacientes() {
		return this.aipEnderecosPacientes;
	}

	public void setAipEnderecosPacientes(
			Set<AipEnderecosPacientes> aipEnderecosPacientes) {
		this.aipEnderecosPacientes = aipEnderecosPacientes;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumns( {
			@JoinColumn(name = "CLO_CEP", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CLO_LGR_CODIGO", nullable = false, insertable = false, updatable = false) })	
	public AipCepLogradouros getCepLogradouro() {
		return cepLogradouro;
	}

	public void setCepLogradouro(AipCepLogradouros cepLogradouro) {
		this.cepLogradouro = cepLogradouro;
	}
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "CLO_LGR_CODIGO", nullable = false, insertable = false, updatable = false)
	public AipLogradouros getAipLogradouro() {
		return aipLogradouro;
	}

	public void setAipLogradouro(AipLogradouros aipLogradouro) {
		this.aipLogradouro = aipLogradouro;
	}
	
	@Transient
	public String getCepFormatado(){
		return AGHUUtil.formataCEP(this.id.getCloCep());
	}
	
	@Override
	public boolean equals(Object other) {
		boolean isEqual = this == other;
		if (!isEqual && other != null && (other instanceof AipBairrosCepLogradouro)) {
			AipBairrosCepLogradouro aip = (AipBairrosCepLogradouro) other;
			if (this.id != null) {
				isEqual = this.id.equals(aip.getId());
			}
		}
		return isEqual;
	}
	
	@Override
	public int hashCode() {
		Integer result = this.id == null ? 1 : this.id.hashCode();		
		return result;
	}
	
	public enum Fields {
		ID("id"), AIP_CEP_LOGRADOURO("cepLogradouro"),CEP("id.cloCep"),BAIRRO("aipBairro"),CODIGO_BAIRRO("id.baiCodigo"), CODIGO_LOGRADOURO("id.cloLgrCodigo"),
		AIP_LOGRADOURO("aipLogradouro");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}

}
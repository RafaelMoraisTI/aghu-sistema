package br.gov.mec.aghu.model;

// Generated 11/06/2010 10:31:39 by Hibernate Tools 3.2.5.Beta

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * MciTopografiaInfeccoes generated by hbm2java
 */
@Entity
@SequenceGenerator(name="mciToiSq1", sequenceName="AGH.MCI_TOI_SQ1", allocationSize = 1)
@Table(name = "MCI_TOPOGRAFIA_INFECCOES", schema = "AGH")

public class MciTopografiaInfeccao extends BaseEntitySeq<Short> implements java.io.Serializable {

	private static final long serialVersionUID = 2103965149091481921L;
	private Short seq;
	private RapServidores servidor;
	private String descricao;
	private Boolean supervisao;
	private DominioSituacao situacao;
	private Boolean pacienteInfectado;
	private Boolean contaInfecadoMensal;
	private Date criadoEm;
	private Date alteradoEm;
	private RapServidores movimentadoPor;

	private Set<MciPatologiaInfeccao> patologiaInfeccoes = new HashSet<MciPatologiaInfeccao>(0);
	private Set<MciCidNotificacao> cidNotificacoes = new HashSet<MciCidNotificacao>(0);	
	private Set<MciTopografiaProcedimento> topografiasProcedimento = new HashSet<MciTopografiaProcedimento>(0);
	
	private Integer version; 

	public MciTopografiaInfeccao() {
	}

	public MciTopografiaInfeccao(Short seq, RapServidores servidor,
			String descricao, Boolean supervisao, DominioSituacao situacao,
			Boolean pacienteInfectado, Boolean contaInfecadoMensal,
			Date criadoEm) {
		this.seq = seq;
		this.servidor = servidor;
		this.descricao = descricao;
		this.supervisao = supervisao;
		this.situacao = situacao;
		this.pacienteInfectado = pacienteInfectado;
		this.contaInfecadoMensal = contaInfecadoMensal;
		this.criadoEm = criadoEm;
	}

	public MciTopografiaInfeccao(Short seq, RapServidores servidor,
			String descricao, Boolean supervisao, DominioSituacao situacao,
			Boolean pacienteInfectado, Boolean contaInfecadoMensal,
			Date criadoEm, Set<MciPatologiaInfeccao> patologiaInfeccoes,
			Set<MciCidNotificacao> cidNotificacoes) {
		this.seq = seq;
		this.servidor = servidor;
		this.descricao = descricao;
		this.supervisao = supervisao;
		this.situacao = situacao;
		this.pacienteInfectado = pacienteInfectado;
		this.contaInfecadoMensal = contaInfecadoMensal;
		this.criadoEm = criadoEm;
		this.patologiaInfeccoes = patologiaInfeccoes;
		this.cidNotificacoes = cidNotificacoes;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "mciToiSq1")
	@Column(name = "SEQ", nullable = false, precision = 3, scale = 0)
	public Short getSeq() {
		return this.seq;
	}

	public void setSeq(Short seq) {
		this.seq = seq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidor() {
		return this.servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 60)
	@Length(max = 60)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "IND_SUPERVISAO", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getSupervisao() {
		return this.supervisao;
	}

	public void setSupervisao(Boolean supervisao) {
		this.supervisao = supervisao;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getSituacao() {
		return this.situacao;
	}

	public void setSituacao(DominioSituacao situacao) {
		this.situacao = situacao;
	}

	@Column(name = "IND_PAC_INFECTADO", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getPacienteInfectado() {
		return this.pacienteInfectado;
	}

	public void setPacienteInfectado(Boolean pacienteInfectado) {
		this.pacienteInfectado = pacienteInfectado;
	}

	@Column(name = "IND_CONTA_INFEC_MENSAL", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getContaInfecadoMensal() {
		return this.contaInfecadoMensal;
	}

	public void setContaInfecadoMensal(Boolean contaInfecadoMensal) {
		this.contaInfecadoMensal = contaInfecadoMensal;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", nullable = false)
	public Date getAlteradoEm() {
		return alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_MOVIMENTADO", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO_MOVIMENTADO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getMovimentadoPor() {
		return movimentadoPor;
	}

	public void setMovimentadoPor(RapServidores movimentadoPor) {
		this.movimentadoPor = movimentadoPor;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "topografiaInfeccao")
	public Set<MciPatologiaInfeccao> getPatologiaInfeccoes() {
		return this.patologiaInfeccoes;
	}

	public void setPatologiaInfeccoes(
			Set<MciPatologiaInfeccao> patologiaInfeccoes) {
		this.patologiaInfeccoes = patologiaInfeccoes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "topografiaInfeccao")
	public Set<MciCidNotificacao> getCidNotificacoes() {
		return this.cidNotificacoes;
	}

	public void setCidNotificacoes(Set<MciCidNotificacao> cidNotificacoes) {
		this.cidNotificacoes = cidNotificacoes;
	}
	

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "topografiaInfeccao")
	public Set<MciTopografiaProcedimento> getTopografiasProcedimento() {
		return topografiasProcedimento;
	}

	public void setTopografiasProcedimento(
			Set<MciTopografiaProcedimento> topografiasProcedimento) {
		this.topografiasProcedimento = topografiasProcedimento;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}
	 
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((seq == null) ? 0 : seq.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		MciTopografiaInfeccao other = (MciTopografiaInfeccao) obj;
		if (seq == null) {
			if (other.seq != null) {
				return false;
			}
		} else if (!seq.equals(other.seq)) {
			return false;
		}
		return true;
	}
	
	

	public enum Fields {
		SEQ("seq"),
		SERVIDOR("servidor"),
		DESCRICAO("descricao"),
		IND_SUPERVISAO("supervisao"),
		IND_SITUACAO("situacao"),
		PACIENTE_INFECTADO("pacienteInfectado"),
		IND_PAC_INFECTADO("pacienteInfectado"),
		IND_CONTA_INFEC_MENSAL("contaInfecadoMensal"),
		CRIADO_EM("criadoEm"),
		ALTERADO_EM("alteradoEm"),
		MOVIMENTADO_POR("movimentadoPor"),
		TOPOGRAFIAS_PROCEDIMENTO("topografiasProcedimento"),
		PATOLOGIA_INFECCOES("patologiaInfeccoes")
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}
	}
	
}

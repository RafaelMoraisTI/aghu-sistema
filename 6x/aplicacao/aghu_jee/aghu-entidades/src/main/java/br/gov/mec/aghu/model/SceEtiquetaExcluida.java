package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

/**
 * SceEtiquetaExcluida generated by hbm2java
 */
@Entity
@Table(name = "SCE_ETIQUETAS_EXCLUIDAS", schema = "AGH")
public class SceEtiquetaExcluida implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 3409539594167724217L;
	private String nroEtiqueta;
	private Integer version;
	private RapServidores rapServidores;
	private SceEntradaSaidaSemLicitacao sceEntradaSaidaSemLicitacao;
	private SceMotivoProblema sceMotivoProblema;
	private SceLoteDocImpressao sceLoteDocImpressao;
	private Date data;

	public SceEtiquetaExcluida() {
	}

	public SceEtiquetaExcluida(String nroEtiqueta, RapServidores rapServidores, SceMotivoProblema sceMotivoProblema,
			SceLoteDocImpressao sceLoteDocImpressao, Date data) {
		this.nroEtiqueta = nroEtiqueta;
		this.rapServidores = rapServidores;
		this.sceMotivoProblema = sceMotivoProblema;
		this.sceLoteDocImpressao = sceLoteDocImpressao;
		this.data = data;
	}

	public SceEtiquetaExcluida(String nroEtiqueta, RapServidores rapServidores, SceEntradaSaidaSemLicitacao sceEntradaSaidaSemLicitacao,
			SceMotivoProblema sceMotivoProblema, SceLoteDocImpressao sceLoteDocImpressao, Date data) {
		this.nroEtiqueta = nroEtiqueta;
		this.rapServidores = rapServidores;
		this.sceEntradaSaidaSemLicitacao = sceEntradaSaidaSemLicitacao;
		this.sceMotivoProblema = sceMotivoProblema;
		this.sceLoteDocImpressao = sceLoteDocImpressao;
		this.data = data;
	}

	@Id
	@Column(name = "NRO_ETIQUETA", unique = true, nullable = false, length = 15)
	@Length(max = 15)
	public String getNroEtiqueta() {
		return this.nroEtiqueta;
	}

	public void setNroEtiqueta(String nroEtiqueta) {
		this.nroEtiqueta = nroEtiqueta;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ESL_SEQ")
	public SceEntradaSaidaSemLicitacao getSceEntradaSaidaSemLicitacao() {
		return this.sceEntradaSaidaSemLicitacao;
	}

	public void setSceEntradaSaidaSemLicitacao(SceEntradaSaidaSemLicitacao sceEntradaSaidaSemLicitacao) {
		this.sceEntradaSaidaSemLicitacao = sceEntradaSaidaSemLicitacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MPR_SEQ", nullable = false)
	public SceMotivoProblema getSceMotivoProblema() {
		return this.sceMotivoProblema;
	}

	public void setSceMotivoProblema(SceMotivoProblema sceMotivoProblema) {
		this.sceMotivoProblema = sceMotivoProblema;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LDI_SEQ", nullable = false)
	public SceLoteDocImpressao getSceLoteDocImpressao() {
		return this.sceLoteDocImpressao;
	}

	public void setSceLoteDocImpressao(SceLoteDocImpressao sceLoteDocImpressao) {
		this.sceLoteDocImpressao = sceLoteDocImpressao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATA", nullable = false, length = 29)
	public Date getData() {
		return this.data;
	}

	public void setData(Date data) {
		this.data = data;
	}

	public enum Fields {

		NRO_ETIQUETA("nroEtiqueta"),
		VERSION("version"),
		RAP_SERVIDORES("rapServidores"),
		SCE_ENTRADA_SAIDA_SEM_LICITACAO("sceEntradaSaidaSemLicitacao"),
		SCE_MOTIVO_PROBLEMA("sceMotivoProblema"),
		SCE_LOTE_DOC_IMPRESSAO("sceLoteDocImpressao"),
		DATA("data");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getNroEtiqueta() == null) ? 0 : getNroEtiqueta().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof SceEtiquetaExcluida)) {
			return false;
		}
		SceEtiquetaExcluida other = (SceEtiquetaExcluida) obj;
		if (getNroEtiqueta() == null) {
			if (other.getNroEtiqueta() != null) {
				return false;
			}
		} else if (!getNroEtiqueta().equals(other.getNroEtiqueta())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

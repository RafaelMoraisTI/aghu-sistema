package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.exception.BusinessExceptionCode;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MbcHorarioTurnoCirg generated by hbm2java
 */
@Entity
@Table(name = "MBC_HORARIO_TURNO_CIRGS", schema = "AGH")
public class MbcHorarioTurnoCirg extends BaseEntityId<MbcHorarioTurnoCirgId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 8089387544514427710L;
	private MbcHorarioTurnoCirgId id;
	private Integer version;
	private RapServidores rapServidores;
	private AghUnidadesFuncionais aghUnidadesFuncionais;
	private Date horarioInicial;
	private Date horarioFinal;
	private Date criadoEm;
	private Set<MbcMvtoCaractSalaCirg> mbcMvtoCaractSalaCirges = new HashSet<MbcMvtoCaractSalaCirg>(0);
	private Set<MbcCaracteristicaSalaCirg> mbcCaracteristicaSalaCirges = new HashSet<MbcCaracteristicaSalaCirg>(0);
	private MbcTurnos mbcTurnos;
	

	private enum MbcHorarioTurnoCirgExceptionCode implements BusinessExceptionCode {
		MBC_HTC_CK2, MBC_HTC_CK3
	}
	
	public MbcHorarioTurnoCirg() {
	}

	public MbcHorarioTurnoCirg(MbcHorarioTurnoCirgId id, AghUnidadesFuncionais aghUnidadesFuncionais, Date horarioInicial,
			Date horarioFinal) {
		this.id = id;
		this.aghUnidadesFuncionais = aghUnidadesFuncionais;
		this.horarioInicial = horarioInicial;
		this.horarioFinal = horarioFinal;
	}

	public MbcHorarioTurnoCirg(MbcHorarioTurnoCirgId id, RapServidores rapServidores, AghUnidadesFuncionais aghUnidadesFuncionais,
			Date horarioInicial, Date horarioFinal, Date criadoEm, Set<MbcMvtoCaractSalaCirg> mbcMvtoCaractSalaCirges,
			Set<MbcCaracteristicaSalaCirg> mbcCaracteristicaSalaCirges) {
		this.id = id;
		this.rapServidores = rapServidores;
		this.aghUnidadesFuncionais = aghUnidadesFuncionais;
		this.horarioInicial = horarioInicial;
		this.horarioFinal = horarioFinal;
		this.criadoEm = criadoEm;
		this.mbcMvtoCaractSalaCirges = mbcMvtoCaractSalaCirges;
		this.mbcCaracteristicaSalaCirges = mbcCaracteristicaSalaCirges;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "unfSeq", column = @Column(name = "UNF_SEQ", nullable = false)),
			@AttributeOverride(name = "turno", column = @Column(name = "TURNO", nullable = false, length = 1)) })
	public MbcHorarioTurnoCirgId getId() {
		return this.id;
	}

	public void setId(MbcHorarioTurnoCirgId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UNF_SEQ", nullable = false, insertable = false, updatable = false)
	public AghUnidadesFuncionais getAghUnidadesFuncionais() {
		return this.aghUnidadesFuncionais;
	}

	public void setAghUnidadesFuncionais(AghUnidadesFuncionais aghUnidadesFuncionais) {
		this.aghUnidadesFuncionais = aghUnidadesFuncionais;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "HORARIO_INICIAL", nullable = false, length = 29)
	public Date getHorarioInicial() {
		return this.horarioInicial;
	}

	public void setHorarioInicial(Date horarioInicial) {
		this.horarioInicial = horarioInicial;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "HORARIO_FINAL", nullable = false, length = 29)
	public Date getHorarioFinal() {
		return this.horarioFinal;
	}

	public void setHorarioFinal(Date horarioFinal) {
		this.horarioFinal = horarioFinal;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mbcHorarioTurnoCirg")
	public Set<MbcMvtoCaractSalaCirg> getMbcMvtoCaractSalaCirges() {
		return this.mbcMvtoCaractSalaCirges;
	}

	public void setMbcMvtoCaractSalaCirges(Set<MbcMvtoCaractSalaCirg> mbcMvtoCaractSalaCirges) {
		this.mbcMvtoCaractSalaCirges = mbcMvtoCaractSalaCirges;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mbcHorarioTurnoCirg")
	public Set<MbcCaracteristicaSalaCirg> getMbcCaracteristicaSalaCirges() {
		return this.mbcCaracteristicaSalaCirges;
	}

	public void setMbcCaracteristicaSalaCirges(Set<MbcCaracteristicaSalaCirg> mbcCaracteristicaSalaCirges) {
		this.mbcCaracteristicaSalaCirges = mbcCaracteristicaSalaCirges;
	}
	

	public void setMbcTurnos(MbcTurnos mbcTurnos) {
		this.mbcTurnos = mbcTurnos;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TURNO", nullable = false, insertable=false, updatable=false)
	public MbcTurnos getMbcTurnos() {
		return mbcTurnos;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		RAP_SERVIDORES("rapServidores"),
		AGH_UNIDADES_FUNCIONAIS("aghUnidadesFuncionais"),
		HORARIO_INICIAL("horarioInicial"),
		HORARIO_FINAL("horarioFinal"),
		CRIADO_EM("criadoEm"),
		MBC_MVTO_CARACT_SALA_CIRGES("mbcMvtoCaractSalaCirges"),
		MBC_CARACTERISTICA_SALA_CIRGES("mbcCaracteristicaSalaCirges"),
		UNF_SEQ("id.unfSeq"),
		TURNO_ID("id.turno"),
		TURNO("mbcTurnos")
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MbcHorarioTurnoCirg)) {
			return false;
		}
		MbcHorarioTurnoCirg other = (MbcHorarioTurnoCirg) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void validacoes() {
		if(horarioInicial.equals(horarioFinal)){
			throw new BaseRuntimeException(MbcHorarioTurnoCirgExceptionCode.MBC_HTC_CK2);
		}
		
	}

}

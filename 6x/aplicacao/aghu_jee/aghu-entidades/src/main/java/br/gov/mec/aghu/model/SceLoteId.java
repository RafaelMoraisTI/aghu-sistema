package br.gov.mec.aghu.model;

// Generated 11/08/2011 14:35:07 by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Embeddable;


import br.gov.mec.aghu.core.persistence.EntityCompositeId;

/**
 * SceLotesId generated by hbm2java
 */
@Embeddable
public class SceLoteId implements EntityCompositeId {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1895583836054534846L;
	private Integer matCodigo;
	private Integer mcmCodigo;
	private String codigo;
	
	public SceLoteId() {
		
	}
	public SceLoteId(Integer matCodigo, Integer mcmCodigo, String codigo) {
		this.matCodigo = matCodigo;
		this.mcmCodigo = mcmCodigo;
		this.codigo = codigo;
	}


	@Column(name = "MAT_CODIGO", nullable = false)
	public Integer getMatCodigo() {
		return this.matCodigo;
	}

	public void setMatCodigo(Integer matCodigo) {
		this.matCodigo = matCodigo;
	}

	@Column(name = "MCM_CODIGO", nullable = false)
	public Integer getMcmCodigo() {
		return this.mcmCodigo;
	}

	public void setMcmCodigo(Integer mcmCodigo) {
		this.mcmCodigo = mcmCodigo;
	}

	@Column(name = "CODIGO", nullable = false, length = 20)
	public String getCodigo() {
		return this.codigo;
	}

	public void setCodigo(String codigo) {
		this.codigo = codigo;
	}

	@Override
	public boolean equals(Object other) {
		if ((this == other)) {
			return true;
		}
		if ((other == null)) {
			return false;
		}
		if (!(other instanceof SceLoteId)) {
			return false;
		}
		SceLoteId castOther = (SceLoteId) other;

		return (this.getMatCodigo() == castOther.getMatCodigo())
				&& (this.getMcmCodigo() == castOther.getMcmCodigo())
				&& ((this.getCodigo() == castOther.getCodigo()) || (this
						.getCodigo() != null && castOther.getCodigo() != null && this
						.getCodigo().equals(castOther.getCodigo())));
	}

	@Override
	public int hashCode() {
		int result = 17;

		result = 37 * result + this.getMatCodigo();
		result = 37 * result + this.getMcmCodigo();
		result = 37 * result
				+ (getCodigo() == null ? 0 : this.getCodigo().hashCode());
		return result;
	}

}

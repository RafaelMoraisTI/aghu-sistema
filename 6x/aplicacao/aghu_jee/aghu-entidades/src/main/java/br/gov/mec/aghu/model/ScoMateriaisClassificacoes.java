package br.gov.mec.aghu.model;

// Generated 21/06/2011 15:59:02 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * ScoMateriaisClassificacoes generated by hbm2java
 */
@Entity
@Table(name = "SCO_MATERIAIS_CLASSIFICACOES", schema = "AGH")
public class ScoMateriaisClassificacoes extends BaseEntityId<ScoMateriaisClassificacoesId> implements java.io.Serializable {

	

	/**
	 * 
	 */
	private static final long serialVersionUID = 1885739741482261421L;
	private ScoMateriaisClassificacoesId id;
	private RapServidores servidor;
	private Date criadoEm;
	private RapServidores servidorAlterado;
	private ScoMaterial material;

	public ScoMateriaisClassificacoes() {
	}

	public ScoMateriaisClassificacoes(ScoMateriaisClassificacoesId id,
			RapServidores servidor, Date criadoEm) {
		this.id = id;
		this.servidor = servidor;
		this.criadoEm = criadoEm;
	}

	public ScoMateriaisClassificacoes(ScoMateriaisClassificacoesId id,
			RapServidores servidor, Date criadoEm,
			RapServidores servidorAlterado) {
		this.id = id;
		this.servidor = servidor;
		this.criadoEm = criadoEm;
		this.servidorAlterado = servidorAlterado;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "cn5Numero", column = @Column(name = "CN5_NUMERO", nullable = false, precision = 12, scale = 0)),
			@AttributeOverride(name = "matCodigo", column = @Column(name = "MAT_CODIGO", nullable = false, precision = 6, scale = 0)) })
	public ScoMateriaisClassificacoesId getId() {
		return this.id;
	}

	public void setId(ScoMateriaisClassificacoesId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidor() {
		return servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_ALTERADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_ALTERADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorAlterado() {
		return servidorAlterado;
	}

	public void setServidorAlterado(RapServidores servidorAlterado) {
		this.servidorAlterado = servidorAlterado;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MAT_CODIGO", insertable=false, updatable=false)
	public ScoMaterial getMaterial() {
		return this.material;
	}

	public void setMaterial(ScoMaterial material) {
		this.material = material;
	}

	public enum Fields {
		MAT_CODIGO("material.codigo"), 
		CN5("id.cn5Numero"),
		MATERIAL("material");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj){
			return true;
		}
		if (obj == null){
			return false;
		}
		if (getClass() != obj.getClass()){
			return false;
		}
		ScoMateriaisClassificacoes other = (ScoMateriaisClassificacoes) obj;
		if (id == null) {
			if (other.id != null){
				return false;
			}
		} else if (!id.equals(other.id)){
			return false;
		}
		return true;
	}
}

package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MpaParamCalculoDose generated by hbm2java
 */
@Entity
@Table(name = "MPA_PARAM_CALCULO_DOSES", schema = "AGH")
public class MpaParamCalculoDose extends BaseEntityId<MpaParamCalculoDoseId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 4595686090086790101L;
	private MpaParamCalculoDoseId id;
	private Integer version;
	private RapServidores rapServidores;
	private MpaFuncaoCalculo mpaFuncaoCalculo;
	private MpmUnidadeMedidaMedica mpmUnidadeMedidaMedica;
	private MpaCadOrdItemMdto mpaCadOrdItemMdto;
	private Double dose;
	private String unidBaseCalculo;
	private Short idadeMinima;
	private Short idadeMaxima;
	private Double pesoMinimo;
	private Double pesoMaximo;
	private Double doseMaximaUnitaria;
	private Date criadoEm;
	private String alertaCalculoDose;
	private String unidIdade;
	
	// FIXME Implementar este relacionamento
//	private Set<MptItemPrescricaoMedicamento> mptItemPrescricaoMedicamentoes = new HashSet<MptItemPrescricaoMedicamento>(0);

	public MpaParamCalculoDose() {
	}

	public MpaParamCalculoDose(MpaParamCalculoDoseId id, RapServidores rapServidores, MpaCadOrdItemMdto mpaCadOrdItemMdto,
			Date criadoEm, String unidIdade) {
		this.id = id;
		this.rapServidores = rapServidores;
		this.mpaCadOrdItemMdto = mpaCadOrdItemMdto;
		this.criadoEm = criadoEm;
		this.unidIdade = unidIdade;
	}

	public MpaParamCalculoDose(MpaParamCalculoDoseId id, RapServidores rapServidores, MpaFuncaoCalculo mpaFuncaoCalculo,
			MpmUnidadeMedidaMedica mpmUnidadeMedidaMedica, MpaCadOrdItemMdto mpaCadOrdItemMdto, Double dose,
			String unidBaseCalculo, Short idadeMinima, Short idadeMaxima, Double pesoMinimo, Double pesoMaximo,
			Double doseMaximaUnitaria, Date criadoEm, String alertaCalculoDose, String unidIdade
//			, Set<MptItemPrescricaoMedicamento> mptItemPrescricaoMedicamentoes
			) {
		this.id = id;
		this.rapServidores = rapServidores;
		this.mpaFuncaoCalculo = mpaFuncaoCalculo;
		this.mpmUnidadeMedidaMedica = mpmUnidadeMedidaMedica;
		this.mpaCadOrdItemMdto = mpaCadOrdItemMdto;
		this.dose = dose;
		this.unidBaseCalculo = unidBaseCalculo;
		this.idadeMinima = idadeMinima;
		this.idadeMaxima = idadeMaxima;
		this.pesoMinimo = pesoMinimo;
		this.pesoMaximo = pesoMaximo;
		this.doseMaximaUnitaria = doseMaximaUnitaria;
		this.criadoEm = criadoEm;
		this.alertaCalculoDose = alertaCalculoDose;
		this.unidIdade = unidIdade;
//		this.mptItemPrescricaoMedicamentoes = mptItemPrescricaoMedicamentoes;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "crmComSeq", column = @Column(name = "CRM_COM_SEQ", nullable = false)),
			@AttributeOverride(name = "crmSeqp", column = @Column(name = "CRM_SEQP", nullable = false)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false)) })
	public MpaParamCalculoDoseId getId() {
		return this.id;
	}

	public void setId(MpaParamCalculoDoseId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidores() {
		return this.rapServidores;
	}

	public void setRapServidores(RapServidores rapServidores) {
		this.rapServidores = rapServidores;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FCA_SEQ")
	public MpaFuncaoCalculo getMpaFuncaoCalculo() {
		return this.mpaFuncaoCalculo;
	}

	public void setMpaFuncaoCalculo(MpaFuncaoCalculo mpaFuncaoCalculo) {
		this.mpaFuncaoCalculo = mpaFuncaoCalculo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UMM_SEQ")
	public MpmUnidadeMedidaMedica getMpmUnidadeMedidaMedica() {
		return this.mpmUnidadeMedidaMedica;
	}

	public void setMpmUnidadeMedidaMedica(MpmUnidadeMedidaMedica mpmUnidadeMedidaMedica) {
		this.mpmUnidadeMedidaMedica = mpmUnidadeMedidaMedica;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "CRM_COM_SEQ", referencedColumnName = "COM_SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "CRM_SEQP", referencedColumnName = "SEQP", nullable = false, insertable = false, updatable = false) })
	public MpaCadOrdItemMdto getMpaCadOrdItemMdto() {
		return this.mpaCadOrdItemMdto;
	}

	public void setMpaCadOrdItemMdto(MpaCadOrdItemMdto mpaCadOrdItemMdto) {
		this.mpaCadOrdItemMdto = mpaCadOrdItemMdto;
	}

	@Column(name = "DOSE", precision = 17, scale = 17)
	public Double getDose() {
		return this.dose;
	}

	public void setDose(Double dose) {
		this.dose = dose;
	}

	@Column(name = "UNID_BASE_CALCULO", length = 1)
	@Length(max = 1)
	public String getUnidBaseCalculo() {
		return this.unidBaseCalculo;
	}

	public void setUnidBaseCalculo(String unidBaseCalculo) {
		this.unidBaseCalculo = unidBaseCalculo;
	}

	@Column(name = "IDADE_MINIMA")
	public Short getIdadeMinima() {
		return this.idadeMinima;
	}

	public void setIdadeMinima(Short idadeMinima) {
		this.idadeMinima = idadeMinima;
	}

	@Column(name = "IDADE_MAXIMA")
	public Short getIdadeMaxima() {
		return this.idadeMaxima;
	}

	public void setIdadeMaxima(Short idadeMaxima) {
		this.idadeMaxima = idadeMaxima;
	}

	@Column(name = "PESO_MINIMO", precision = 17, scale = 17)
	public Double getPesoMinimo() {
		return this.pesoMinimo;
	}

	public void setPesoMinimo(Double pesoMinimo) {
		this.pesoMinimo = pesoMinimo;
	}

	@Column(name = "PESO_MAXIMO", precision = 17, scale = 17)
	public Double getPesoMaximo() {
		return this.pesoMaximo;
	}

	public void setPesoMaximo(Double pesoMaximo) {
		this.pesoMaximo = pesoMaximo;
	}

	@Column(name = "DOSE_MAXIMA_UNITARIA", precision = 17, scale = 17)
	public Double getDoseMaximaUnitaria() {
		return this.doseMaximaUnitaria;
	}

	public void setDoseMaximaUnitaria(Double doseMaximaUnitaria) {
		this.doseMaximaUnitaria = doseMaximaUnitaria;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "ALERTA_CALCULO_DOSE", length = 240)
	@Length(max = 240)
	public String getAlertaCalculoDose() {
		return this.alertaCalculoDose;
	}

	public void setAlertaCalculoDose(String alertaCalculoDose) {
		this.alertaCalculoDose = alertaCalculoDose;
	}

	@Column(name = "UNID_IDADE", nullable = false, length = 1)
	@Length(max = 1)
	public String getUnidIdade() {
		return this.unidIdade;
	}

	public void setUnidIdade(String unidIdade) {
		this.unidIdade = unidIdade;
	}

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mpaParamCalculoDose")
//	public Set<MptItemPrescricaoMedicamento> getMptItemPrescricaoMedicamentoes() {
//		return this.mptItemPrescricaoMedicamentoes;
//	}
//
//	public void setMptItemPrescricaoMedicamentoes(Set<MptItemPrescricaoMedicamento> mptItemPrescricaoMedicamentoes) {
//		this.mptItemPrescricaoMedicamentoes = mptItemPrescricaoMedicamentoes;
//	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		RAP_SERVIDORES("rapServidores"),
		MPA_FUNCAO_CALCULOS("mpaFuncaoCalculo"),
		MPM_UNIDADE_MEDIDA_MEDICA("mpmUnidadeMedidaMedica"),
		MPA_CAD_ORD_ITEM_MDTOS("mpaCadOrdItemMdto"),
		DOSE("dose"),
		UNID_BASE_CALCULO("unidBaseCalculo"),
		IDADE_MINIMA("idadeMinima"),
		IDADE_MAXIMA("idadeMaxima"),
		PESO_MINIMO("pesoMinimo"),
		PESO_MAXIMO("pesoMaximo"),
		DOSE_MAXIMA_UNITARIA("doseMaximaUnitaria"),
		CRIADO_EM("criadoEm"),
		ALERTA_CALCULO_DOSE("alertaCalculoDose"),
		UNID_IDADE("unidIdade"),
//		MPT_ITEM_PRESCRICAO_MEDICAMENTOES("mptItemPrescricaoMedicamentoes")
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MpaParamCalculoDose)) {
			return false;
		}
		MpaParamCalculoDose other = (MpaParamCalculoDose) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MptPrescIntervaloTempo generated by hbm2java
 */
@Entity
@Table(name = "MPT_PRESC_INTERVALO_TEMPOS", schema = "AGH")
public class MptPrescIntervaloTempo extends BaseEntityId<MptPrescIntervaloTempoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -7293685659261163352L;
	private MptPrescIntervaloTempoId id;
	private Integer version;
	private RapServidores rapServidoresByMptPeiSerFk1;
	private MpaCadIntervaloTempo mpaCadIntervaloTempo;
	private RapServidores rapServidoresByMptPeiSerFk3;
	private MptPrescricaoPaciente mptPrescricaoPaciente;
	private RapServidores rapServidoresByMptPeiSerFk2;
	private RapServidores rapServidoresByMptPeiSerFk4;
	private String indSituacao;
	private Date criadoEm;
	private Date alteradoEm;
	private Date dthrIncValida;
	private Date dthrAltValida;

	public MptPrescIntervaloTempo() {
	}

	public MptPrescIntervaloTempo(MptPrescIntervaloTempoId id, RapServidores rapServidoresByMptPeiSerFk1,
			MpaCadIntervaloTempo mpaCadIntervaloTempo, MptPrescricaoPaciente mptPrescricaoPaciente, String indSituacao,
			Date criadoEm) {
		this.id = id;
		this.rapServidoresByMptPeiSerFk1 = rapServidoresByMptPeiSerFk1;
		this.mpaCadIntervaloTempo = mpaCadIntervaloTempo;
		this.mptPrescricaoPaciente = mptPrescricaoPaciente;
		this.indSituacao = indSituacao;
		this.criadoEm = criadoEm;
	}

	public MptPrescIntervaloTempo(MptPrescIntervaloTempoId id, RapServidores rapServidoresByMptPeiSerFk1,
			MpaCadIntervaloTempo mpaCadIntervaloTempo, RapServidores rapServidoresByMptPeiSerFk3,
			MptPrescricaoPaciente mptPrescricaoPaciente, RapServidores rapServidoresByMptPeiSerFk2,
			RapServidores rapServidoresByMptPeiSerFk4, String indSituacao, Date criadoEm, Date alteradoEm, Date dthrIncValida,
			Date dthrAltValida) {
		this.id = id;
		this.rapServidoresByMptPeiSerFk1 = rapServidoresByMptPeiSerFk1;
		this.mpaCadIntervaloTempo = mpaCadIntervaloTempo;
		this.rapServidoresByMptPeiSerFk3 = rapServidoresByMptPeiSerFk3;
		this.mptPrescricaoPaciente = mptPrescricaoPaciente;
		this.rapServidoresByMptPeiSerFk2 = rapServidoresByMptPeiSerFk2;
		this.rapServidoresByMptPeiSerFk4 = rapServidoresByMptPeiSerFk4;
		this.indSituacao = indSituacao;
		this.criadoEm = criadoEm;
		this.alteradoEm = alteradoEm;
		this.dthrIncValida = dthrIncValida;
		this.dthrAltValida = dthrAltValida;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "pteAtdSeq", column = @Column(name = "PTE_ATD_SEQ", nullable = false)),
			@AttributeOverride(name = "pteSeq", column = @Column(name = "PTE_SEQ", nullable = false)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false)) })
	public MptPrescIntervaloTempoId getId() {
		return this.id;
	}

	public void setId(MptPrescIntervaloTempoId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByMptPeiSerFk1() {
		return this.rapServidoresByMptPeiSerFk1;
	}

	public void setRapServidoresByMptPeiSerFk1(RapServidores rapServidoresByMptPeiSerFk1) {
		this.rapServidoresByMptPeiSerFk1 = rapServidoresByMptPeiSerFk1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "CIT_VPA_SEQP", referencedColumnName = "VPA_SEQP", nullable = false),
			@JoinColumn(name = "CIT_VPA_PTA_SEQ", referencedColumnName = "VPA_PTA_SEQ", nullable = false),
			@JoinColumn(name = "CIT_SEQP", referencedColumnName = "SEQP", nullable = false) })
	public MpaCadIntervaloTempo getMpaCadIntervaloTempo() {
		return this.mpaCadIntervaloTempo;
	}

	public void setMpaCadIntervaloTempo(MpaCadIntervaloTempo mpaCadIntervaloTempo) {
		this.mpaCadIntervaloTempo = mpaCadIntervaloTempo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_ALTERA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_ALTERA", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMptPeiSerFk3() {
		return this.rapServidoresByMptPeiSerFk3;
	}

	public void setRapServidoresByMptPeiSerFk3(RapServidores rapServidoresByMptPeiSerFk3) {
		this.rapServidoresByMptPeiSerFk3 = rapServidoresByMptPeiSerFk3;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "PTE_ATD_SEQ", referencedColumnName = "ATD_SEQ", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "PTE_SEQ", referencedColumnName = "SEQ", nullable = false, insertable = false, updatable = false) })
	public MptPrescricaoPaciente getMptPrescricaoPaciente() {
		return this.mptPrescricaoPaciente;
	}

	public void setMptPrescricaoPaciente(MptPrescricaoPaciente mptPrescricaoPaciente) {
		this.mptPrescricaoPaciente = mptPrescricaoPaciente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_INC_VALIDA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_INC_VALIDA", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMptPeiSerFk2() {
		return this.rapServidoresByMptPeiSerFk2;
	}

	public void setRapServidoresByMptPeiSerFk2(RapServidores rapServidoresByMptPeiSerFk2) {
		this.rapServidoresByMptPeiSerFk2 = rapServidoresByMptPeiSerFk2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_ALT_VALIDA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_ALT_VALIDA", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMptPeiSerFk4() {
		return this.rapServidoresByMptPeiSerFk4;
	}

	public void setRapServidoresByMptPeiSerFk4(RapServidores rapServidoresByMptPeiSerFk4) {
		this.rapServidoresByMptPeiSerFk4 = rapServidoresByMptPeiSerFk4;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(String indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 29)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_INC_VALIDA", length = 29)
	public Date getDthrIncValida() {
		return this.dthrIncValida;
	}

	public void setDthrIncValida(Date dthrIncValida) {
		this.dthrIncValida = dthrIncValida;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DTHR_ALT_VALIDA", length = 29)
	public Date getDthrAltValida() {
		return this.dthrAltValida;
	}

	public void setDthrAltValida(Date dthrAltValida) {
		this.dthrAltValida = dthrAltValida;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		RAP_SERVIDORES_BY_MPT_PEI_SER_FK1("rapServidoresByMptPeiSerFk1"),
		MPA_CAD_INTERVALO_TEMPOS("mpaCadIntervaloTempo"),
		RAP_SERVIDORES_BY_MPT_PEI_SER_FK3("rapServidoresByMptPeiSerFk3"),
		MPT_PRESCRICAO_PACIENTE("mptPrescricaoPaciente"),
		RAP_SERVIDORES_BY_MPT_PEI_SER_FK2("rapServidoresByMptPeiSerFk2"),
		RAP_SERVIDORES_BY_MPT_PEI_SER_FK4("rapServidoresByMptPeiSerFk4"),
		IND_SITUACAO("indSituacao"),
		CRIADO_EM("criadoEm"),
		ALTERADO_EM("alteradoEm"),
		DTHR_INC_VALIDA("dthrIncValida"),
		DTHR_ALT_VALIDA("dthrAltValida"),
		CIT_VPA_PTA_SEQ("mpaCadIntervaloTempo.id.vpaPtaSeq"),
		PTE_ATD_SEQ("mptPrescricaoPaciente.atendimento.seq"),
		PTE_SEQ("mptPrescricaoPaciente.id.seq");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MptPrescIntervaloTempo)) {
			return false;
		}
		MptPrescIntervaloTempo other = (MptPrescIntervaloTempo) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

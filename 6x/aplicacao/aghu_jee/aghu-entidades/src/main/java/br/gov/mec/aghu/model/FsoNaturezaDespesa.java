package br.gov.mec.aghu.model;

// Generated 31/10/2011 14:26:14 by Hibernate Tools 3.4.0.CR1

import java.util.List;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.Version;



import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * FsoNaturezasDespesa generated by hbm2java
 */
@Entity
@Table(name = "FSO_NATUREZAS_DESPESA", schema = "AGH")
public class FsoNaturezaDespesa extends BaseEntityId<FsoNaturezaDespesaId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1383330912053872431L;
	private FsoNaturezaDespesaId id;
	private Short version;
	private String descricao;
	private DominioSituacao indSituacao;
	private String contaPatrimonial;
	private Byte codClassifNatureza;
	private FsoGrupoNaturezaDespesa grupoNaturezaDespesa;
	private List<CtbRelacionaNatureza> relacionaNatureza;

	public FsoNaturezaDespesa() {
	}

	public FsoNaturezaDespesa(FsoNaturezaDespesaId id, String descricao,
			DominioSituacao indSituacao) {
		this.id = id;
		this.descricao = descricao;
		this.indSituacao = indSituacao;
	}

	public FsoNaturezaDespesa(FsoNaturezaDespesaId id, String descricao,
			DominioSituacao indSituacao, String contaPatrimonial, Byte codClassifNatureza) {
		this.id = id;
		this.descricao = descricao;
		this.indSituacao = indSituacao;
		this.contaPatrimonial = contaPatrimonial;
		this.codClassifNatureza = codClassifNatureza;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "gndCodigo", column = @Column(name = "GND_CODIGO", nullable = false, precision = 6, scale = 0)),
			@AttributeOverride(name = "codigo", column = @Column(name = "CODIGO", nullable = false, precision = 2, scale = 0)) })
	public FsoNaturezaDespesaId getId() {
		return this.id;
	}

	public void setId(FsoNaturezaDespesaId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false, precision = 3, scale = 0)
	public Short getVersion() {
		return this.version;
	}

	public void setVersion(Short version) {
		this.version = version;
	}

	@Column(name = "DESCRICAO", nullable = false, length = 60)
	@Length(max = 60)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(DominioSituacao indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Column(name = "CONTA_PATRIMONIAL", length = 20)
	@Length(max = 20)
	public String getContaPatrimonial() {
		return this.contaPatrimonial;
	}

	public void setContaPatrimonial(String contaPatrimonial) {
		this.contaPatrimonial = contaPatrimonial;
	}

	@Column(name = "COD_CLASSIF_NATUREZA", precision = 2, scale = 0)
	public Byte getCodClassifNatureza() {
		return this.codClassifNatureza;
	}

	public void setCodClassifNatureza(Byte codClassifNatureza) {
		this.codClassifNatureza = codClassifNatureza;
	}
	
	@OneToMany(mappedBy="naturezaDespesa", fetch=FetchType.LAZY)
	public List<CtbRelacionaNatureza> getRelacionaNatureza() {
		return relacionaNatureza;
	}

	public void setRelacionaNatureza(List<CtbRelacionaNatureza> relacionaNatureza) {
		this.relacionaNatureza = relacionaNatureza;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "GND_CODIGO", referencedColumnName = "CODIGO", insertable=false, updatable=false)
	public FsoGrupoNaturezaDespesa getGrupoNaturezaDespesa() {
		return grupoNaturezaDespesa;
	}

	public void setGrupoNaturezaDespesa(FsoGrupoNaturezaDespesa grupoNaturezaDespesa) {
		this.grupoNaturezaDespesa = grupoNaturezaDespesa;
	}



	public enum Fields {
		ID("id"),
		CODIGO("id.codigo"),
		DESCRICAO("descricao"),
		IND_SITUACAO("indSituacao"),
		GRUPO_NATUREZA("grupoNaturezaDespesa"),
		RELACIONA_NATUREZAS("relacionaNatureza"),
		GND_CODIGO("id.gndCodigo"),
		CONTA_PATRIMONIAL("contaPatrimonial"),
		COD_CLASSIF_NATUREZA("codClassifNatureza");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}
	
	@Transient
	public String getCodigoFormatado(){
		String retorno, gndCodigo, codigo;
		gndCodigo = getId().getGndCodigo().toString();
		codigo = getId().getCodigo().toString();
		retorno = gndCodigo + " - " + codigo;
		return  retorno;
	}
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = super.hashCode();
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (!super.equals(obj)) {
			return false;
		}
		if (!(obj instanceof FsoNaturezaDespesa)) {
			return false;
		}
		FsoNaturezaDespesa other = (FsoNaturezaDespesa) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}	
	
}

package br.gov.mec.aghu.model;

// Generated 03/11/2011 09:06:40 by Hibernate Tools 3.4.0.CR1

import java.io.Serializable;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Version;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * ScoTemposAndtPacs generated by hbm2java
 */
@Entity
@Table(name = "SCO_TEMPOS_ANDT_PACS", schema = "AGH")
public class ScoTempoAndtPac extends BaseEntityId<ScoTemposAndtPacsId> implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -6042957522786032548L;
	private ScoTemposAndtPacsId id;
	private Integer version;
	private RapServidores servidor;
	private Short maxDiasPermanencia;
	
	private ScoModalidadeLicitacao modalidadeLicitacao;
	private ScoLocalizacaoProcesso localizacaoProcesso;

	public ScoTempoAndtPac() {
	}

	public ScoTempoAndtPac(ScoTemposAndtPacsId id, RapServidores servidor,
			Short maxDiasPermanencia) {
		this.id = id;
		this.servidor = servidor;
		this.maxDiasPermanencia = maxDiasPermanencia;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "mlcCodigo", column = @Column(name = "MLC_CODIGO", nullable = false, length = 2)),
			@AttributeOverride(name = "lcpCodigo", column = @Column(name = "LCP_CODIGO", nullable = false, precision = 4, scale = 0)) })
	public ScoTemposAndtPacsId getId() {
		return this.id;
	}

	public void setId(ScoTemposAndtPacsId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidor() {
		return servidor;
	}

	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}

	@Column(name = "MAX_DIAS_PERMANENCIA", nullable = false, precision = 3, scale = 0)
	public Short getMaxDiasPermanencia() {
		return this.maxDiasPermanencia;
	}

	public void setMaxDiasPermanencia(Short maxDiasPermanencia) {
		this.maxDiasPermanencia = maxDiasPermanencia;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj){
			return true;
		}
		if (obj == null){
			return false;
		}
		if (getClass() != obj.getClass()){
			return false;
		}
		ScoTempoAndtPac other = (ScoTempoAndtPac) obj;
		if (id == null) {
			if (other.id != null){
				return false;
			}
		} else if (!id.equals(other.id)){
			return false;
		}
		return true;
	}
	
	public enum Fields {
		ID("id"),
		SERVIDOR("servidor"),
		MAX_DIAS_PERMANENCIA("maxDiasPermanencia"),
	    MLC_CODIGO("id.mlcCodigo"), 
	    LCP_CODIGO("id.lcpCodigo"),
	    VERSION("version"),
	    MODALIDADE_LICITACAO("modalidadeLicitacao"),
	    LOCALIZACAO_PROCESSO("localizacaoProcesso");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}

	// Necessário para obter as descrições da modalidade e da localização do
	// processo
	public void setModalidadeLicitacao(
			ScoModalidadeLicitacao modalidadeLicitacao) {
		this.modalidadeLicitacao = modalidadeLicitacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MLC_CODIGO", nullable = false, insertable = false, updatable = false)
	public ScoModalidadeLicitacao getModalidadeLicitacao() {
		return modalidadeLicitacao;
	}

	public void setLocalizacaoProcesso(
			ScoLocalizacaoProcesso localizacaoProcesso) {
		this.localizacaoProcesso = localizacaoProcesso;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LCP_CODIGO", nullable = false, insertable = false, updatable = false)
	public ScoLocalizacaoProcesso getLocalizacaoProcesso() {
		return localizacaoProcesso;
	}

}

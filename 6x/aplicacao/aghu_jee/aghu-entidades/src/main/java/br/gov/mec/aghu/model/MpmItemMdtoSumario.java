package br.gov.mec.aghu.model;

// Generated 14/09/2010 17:49:55 by Hibernate Tools 3.2.5.Beta

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.dominio.DominioUnidadeCorrer;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MpmItemMdtoSumario generated by hbm2java
 */
@Entity
@Table(name = "MPM_ITEM_MDTO_SUMARIOS", schema = "AGH")

public class MpmItemMdtoSumario extends BaseEntityId<MpmItemMdtoSumarioId> implements java.io.Serializable {
	/**
	 * 
	 */
	private static final long serialVersionUID = 649470841437540912L;
	private MpmItemMdtoSumarioId id;
	private MpmTipoFrequenciaAprazamento tipoFreqAprazamento;
	private MpmItemPrescricaoSumario itemPrescricaoSumario;
	private AfaFormaDosagem formaDosagem;
	private AfaTipoVelocAdministracoes tipoVelocidadeAdministracao;
	private AfaMedicamento medicamento;
	private AfaViaAdministracao viaAdministracao;
	private Boolean indSolucao;
	private Boolean indSeNecessario;
	private Date horaInicioAdministracao;
	private Byte qtdeHorasCorrer;
	private BigDecimal gotejo;
	private BigDecimal dose;
	private String observacao;
	private String observacaoItem;
	private Short frequencia;
	private AfaMedicamento diluente;
	private DominioUnidadeCorrer unidHorasCorrer;
	private BigDecimal volumeDiluenteMl;
	private Byte diasUsoDomiciliar;
	private Boolean indBombaInfusao;

	public MpmItemMdtoSumario() {
	}

	public MpmItemMdtoSumario(MpmItemMdtoSumarioId id,
			MpmTipoFrequenciaAprazamento tipoFreqAprazamento,
			MpmItemPrescricaoSumario itemPrescricaoSumario, AfaFormaDosagem formaDosagem,
			AfaMedicamento medicamento, AfaViaAdministracao viaAdministracao, Boolean indSolucao,
			Boolean indSeNecessario, BigDecimal dose) {
		this.id = id;
		this.tipoFreqAprazamento = tipoFreqAprazamento;
		this.itemPrescricaoSumario = itemPrescricaoSumario;
		this.formaDosagem = formaDosagem;
		this.medicamento = medicamento;
		this.viaAdministracao = viaAdministracao;
		this.indSolucao = indSolucao;
		this.indSeNecessario = indSeNecessario;
		this.dose = dose;
	}

	public MpmItemMdtoSumario(MpmItemMdtoSumarioId id,
			MpmTipoFrequenciaAprazamento tipoFreqAprazamento,
			MpmItemPrescricaoSumario itemPrescricaoSumario, AfaFormaDosagem formaDosagem,
			AfaTipoVelocAdministracoes tipoVelocidadeAdministracao, AfaMedicamento medicamento, 
			AfaViaAdministracao viaAdministracao, Boolean indSolucao,
			Boolean indSeNecessario, Date horaInicioAdministracao,
			Byte qtdeHorasCorrer, BigDecimal gotejo, BigDecimal dose,
			String observacao, String observacaoItem, Short frequencia,
			AfaMedicamento diluente, DominioUnidadeCorrer unidHorasCorrer,
			BigDecimal volumeDiluenteMl, Byte diasUsoDomiciliar,
			Boolean indBombaInfusao) {
		this.id = id;
		this.tipoFreqAprazamento = tipoFreqAprazamento;
		this.itemPrescricaoSumario = itemPrescricaoSumario;
		this.formaDosagem = formaDosagem;
		this.tipoVelocidadeAdministracao = tipoVelocidadeAdministracao;
		this.medicamento = medicamento;
		this.viaAdministracao = viaAdministracao;
		this.indSolucao = indSolucao;
		this.indSeNecessario = indSeNecessario;
		this.horaInicioAdministracao = horaInicioAdministracao;
		this.qtdeHorasCorrer = qtdeHorasCorrer;
		this.gotejo = gotejo;
		this.dose = dose;
		this.observacao = observacao;
		this.observacaoItem = observacaoItem;
		this.frequencia = frequencia;
		this.diluente = diluente;
		this.unidHorasCorrer = unidHorasCorrer;
		this.volumeDiluenteMl = volumeDiluenteMl;
		this.diasUsoDomiciliar = diasUsoDomiciliar;
		this.indBombaInfusao = indBombaInfusao;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "ituSeq", column = @Column(name = "ITU_SEQ", nullable = false, precision = 8, scale = 0)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false, precision = 5, scale = 0)) })
	public MpmItemMdtoSumarioId getId() {
		return this.id;
	}

	public void setId(MpmItemMdtoSumarioId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TFQ_SEQ", nullable = false)
	public MpmTipoFrequenciaAprazamento getTipoFreqAprazamento() {
		return this.tipoFreqAprazamento;
	}

	public void setTipoFreqAprazamento(MpmTipoFrequenciaAprazamento tipoFreqAprazamento) {
		this.tipoFreqAprazamento = tipoFreqAprazamento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ITU_SEQ", nullable = false, insertable = false, updatable = false)
	public MpmItemPrescricaoSumario getItemPrescricaoSumario() {
		return this.itemPrescricaoSumario;
	}

	public void setItemPrescricaoSumario(MpmItemPrescricaoSumario itemPrescricaoSumario) {
		this.itemPrescricaoSumario = itemPrescricaoSumario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FDS_SEQ", nullable = false)
	public AfaFormaDosagem getFormaDosagem() {
		return this.formaDosagem;
	}

	public void setFormaDosagem(AfaFormaDosagem formaDosagem) {
		this.formaDosagem = formaDosagem;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TVA_SEQ")
	public AfaTipoVelocAdministracoes getTipoVelocidadeAdministracao() {
		return this.tipoVelocidadeAdministracao;
	}

	public void setTipoVelocidadeAdministracao(AfaTipoVelocAdministracoes tipoVelocidadeAdministracao) {
		this.tipoVelocidadeAdministracao = tipoVelocidadeAdministracao;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MED_MAT_CODIGO", nullable = false)
	public AfaMedicamento getMedicamento() {
		return medicamento;
	}

	public void setMedicamento(AfaMedicamento medicamento) {
		this.medicamento = medicamento;
	}
	

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "VAD_SIGLA", nullable = false)
	public AfaViaAdministracao getViaAdministracao() {
		return viaAdministracao;
	}

	public void setViaAdministracao(AfaViaAdministracao viaAdministracao) {
		this.viaAdministracao = viaAdministracao;
	}
	

	@Column(name = "IND_SOLUCAO", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndSolucao() {
		return this.indSolucao;
	}

	public void setIndSolucao(Boolean indSolucao) {
		this.indSolucao = indSolucao;
	}

	@Column(name = "IND_SE_NECESSARIO", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndSeNecessario() {
		return this.indSeNecessario;
	}

	public void setIndSeNecessario(Boolean indSeNecessario) {
		this.indSeNecessario = indSeNecessario;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "HORA_INICIO_ADMINISTRACAO", length = 7)
	public Date getHoraInicioAdministracao() {
		return this.horaInicioAdministracao;
	}

	public void setHoraInicioAdministracao(Date horaInicioAdministracao) {
		this.horaInicioAdministracao = horaInicioAdministracao;
	}

	@Column(name = "QTDE_HORAS_CORRER", precision = 2, scale = 0)
	public Byte getQtdeHorasCorrer() {
		return this.qtdeHorasCorrer;
	}

	public void setQtdeHorasCorrer(Byte qtdeHorasCorrer) {
		this.qtdeHorasCorrer = qtdeHorasCorrer;
	}

	@Column(name = "GOTEJO", precision = 5)
	public BigDecimal getGotejo() {
		return this.gotejo;
	}

	public void setGotejo(BigDecimal gotejo) {
		this.gotejo = gotejo;
	}

	@Column(name = "DOSE", nullable = false, precision = 14, scale = 4)
	public BigDecimal getDose() {
		return this.dose;
	}

	public void setDose(BigDecimal dose) {
		this.dose = dose;
	}

	@Column(name = "OBSERVACAO", length = 240)
	@Length(max = 240, message="A observação possui mais de 240 caracteres.")
	public String getObservacao() {
		return this.observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}

	@Column(name = "OBSERVACAO_ITEM", length = 120)
	@Length(max = 120, message="A observação do item possui mais de 120 caracteres.")
	public String getObservacaoItem() {
		return this.observacaoItem;
	}

	public void setObservacaoItem(String observacaoItem) {
		this.observacaoItem = observacaoItem;
	}

	@Column(name = "FREQUENCIA", precision = 3, scale = 0)
	public Short getFrequencia() {
		return this.frequencia;
	}

	public void setFrequencia(Short frequencia) {
		this.frequencia = frequencia;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MED_MAT_CODIGO_DILUENTE")
	public AfaMedicamento getDiluente() {
		return this.diluente;
	}

	public void setDiluente(AfaMedicamento diluente) {
		this.diluente = diluente;
	}
	
	@Column(name = "UNID_HORAS_CORRER", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioUnidadeCorrer getUnidHorasCorrer() {
		return this.unidHorasCorrer;
	}

	public void setUnidHorasCorrer(DominioUnidadeCorrer unidHorasCorrer) {
		this.unidHorasCorrer = unidHorasCorrer;
	}

	@Column(name = "VOLUME_DILUENTE_ML", precision = 8, scale = 3)
	public BigDecimal getVolumeDiluenteMl() {
		return this.volumeDiluenteMl;
	}

	public void setVolumeDiluenteMl(BigDecimal volumeDiluenteMl) {
		this.volumeDiluenteMl = volumeDiluenteMl;
	}

	@Column(name = "DIAS_USO_DOMICILIAR", precision = 2, scale = 0)
	public Byte getDiasUsoDomiciliar() {
		return this.diasUsoDomiciliar;
	}

	public void setDiasUsoDomiciliar(Byte diasUsoDomiciliar) {
		this.diasUsoDomiciliar = diasUsoDomiciliar;
	}

	@Column(name = "IND_BOMBA_INFUSAO", length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getIndBombaInfusao() {
		return this.indBombaInfusao;
	}

	public void setIndBombaInfusao(Boolean indBombaInfusao) {
		this.indBombaInfusao = indBombaInfusao;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		MpmItemMdtoSumario other = (MpmItemMdtoSumario) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}

	public enum Fields {
		ID("id"),
		ID_ITUSEQ("id.ituSeq"),
		TIPO_FREQ_APRAZAMENTO("tipoFreqAprazamento"),
		ITEM_PRESCRICAO_SUMARIO("itemPrescricaoSumario"),
		FORMA_DOSAGEM("formaDosagem"),
		TIPO_VELOCIDADE_ADMINISTRACAO("tipoVelocidadeAdministracao"),
		MEDICAMENTO("medicamento"),
		VIA_ADMINISTRACAO("viaAdministracao"),
		IND_SOLUCAO("indSolucao"),
		IND_SE_NECESSARIO("indSeNecessario"),
		HORA_INICIO_ADMINISTRACAO("horaInicioAdministracao"),
		QTDE_HORAS_CORRER("qtdeHorasCorrer"),
		GOTEJO("gotejo"),
		DOSE("dose"),
		OBSERVACAO("observacao"),
		OBSERVACAO_ITEM("observacaoItem"),
		FREQUENCIA("frequencia"),
		DILUENTE("diluente"),
		UNID_HORAS_CORRER("unidHorasCorrer"),
		VOLUME_DILUENTE_ML("volumeDiluenteMl"),
		DIAS_USO_DOMICILIAR("diasUsoDomiciliar"),
		IND_BOMBA_INFUSAO("indBombaInfusao");
		
		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}
	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void validarDados(){
	
		//DATA DEFAULT
		if(this.indSolucao == null){
			this.indSolucao = false;
		}
		if(this.indSeNecessario == null){
			this.indSeNecessario = false;
		}
	}
	
}

package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MpaPopServidor generated by hbm2java
 */
@Entity
@Table(name = "MPA_POP_SERVIDORES", schema = "AGH")
public class MpaPopServidor extends BaseEntityId<MpaPopServidorId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2023797455826731096L;
	private MpaPopServidorId id;
	private Integer version;
	private MpaPopVersoes mpaPopVersoes;
	private RapServidores rapServidoresByMpaPosSerFk3;
	private RapServidores rapServidoresByMpaPosSerFk1;
	private RapServidores rapServidoresByMpaPosSerFk2;
	private Date criadoEm;
	private Date dtInicioAutorizacao;
	private Date dtFimAutorizacao;

	public MpaPopServidor() {
	}

	public MpaPopServidor(MpaPopServidorId id, MpaPopVersoes mpaPopVersoes, RapServidores rapServidoresByMpaPosSerFk3,
			RapServidores rapServidoresByMpaPosSerFk2, Date criadoEm, Date dtInicioAutorizacao) {
		this.id = id;
		this.mpaPopVersoes = mpaPopVersoes;
		this.rapServidoresByMpaPosSerFk3 = rapServidoresByMpaPosSerFk3;
		this.rapServidoresByMpaPosSerFk2 = rapServidoresByMpaPosSerFk2;
		this.criadoEm = criadoEm;
		this.dtInicioAutorizacao = dtInicioAutorizacao;
	}

	public MpaPopServidor(MpaPopServidorId id, MpaPopVersoes mpaPopVersoes, RapServidores rapServidoresByMpaPosSerFk3,
			RapServidores rapServidoresByMpaPosSerFk1, RapServidores rapServidoresByMpaPosSerFk2, Date criadoEm,
			Date dtInicioAutorizacao, Date dtFimAutorizacao) {
		this.id = id;
		this.mpaPopVersoes = mpaPopVersoes;
		this.rapServidoresByMpaPosSerFk3 = rapServidoresByMpaPosSerFk3;
		this.rapServidoresByMpaPosSerFk1 = rapServidoresByMpaPosSerFk1;
		this.rapServidoresByMpaPosSerFk2 = rapServidoresByMpaPosSerFk2;
		this.criadoEm = criadoEm;
		this.dtInicioAutorizacao = dtInicioAutorizacao;
		this.dtFimAutorizacao = dtFimAutorizacao;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "povVersao", column = @Column(name = "POV_VERSAO", nullable = false)),
			@AttributeOverride(name = "povPopSeq", column = @Column(name = "POV_POP_SEQ", nullable = false)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false)) })
	public MpaPopServidorId getId() {
		return this.id;
	}

	public void setId(MpaPopServidorId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "POV_VERSAO", referencedColumnName = "VERSAO", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "POV_POP_SEQ", referencedColumnName = "POP_SEQ", nullable = false, insertable = false, updatable = false) })
	public MpaPopVersoes getMpaPopVersoes() {
		return this.mpaPopVersoes;
	}

	public void setMpaPopVersoes(MpaPopVersoes mpaPopVersoes) {
		this.mpaPopVersoes = mpaPopVersoes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByMpaPosSerFk3() {
		return this.rapServidoresByMpaPosSerFk3;
	}

	public void setRapServidoresByMpaPosSerFk3(RapServidores rapServidoresByMpaPosSerFk3) {
		this.rapServidoresByMpaPosSerFk3 = rapServidoresByMpaPosSerFk3;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_INF_FIM", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_INF_FIM", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMpaPosSerFk1() {
		return this.rapServidoresByMpaPosSerFk1;
	}

	public void setRapServidoresByMpaPosSerFk1(RapServidores rapServidoresByMpaPosSerFk1) {
		this.rapServidoresByMpaPosSerFk1 = rapServidoresByMpaPosSerFk1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_INF_INICIO", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO_INF_INICIO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByMpaPosSerFk2() {
		return this.rapServidoresByMpaPosSerFk2;
	}

	public void setRapServidoresByMpaPosSerFk2(RapServidores rapServidoresByMpaPosSerFk2) {
		this.rapServidoresByMpaPosSerFk2 = rapServidoresByMpaPosSerFk2;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_INICIO_AUTORIZACAO", nullable = false, length = 29)
	public Date getDtInicioAutorizacao() {
		return this.dtInicioAutorizacao;
	}

	public void setDtInicioAutorizacao(Date dtInicioAutorizacao) {
		this.dtInicioAutorizacao = dtInicioAutorizacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_FIM_AUTORIZACAO", length = 29)
	public Date getDtFimAutorizacao() {
		return this.dtFimAutorizacao;
	}

	public void setDtFimAutorizacao(Date dtFimAutorizacao) {
		this.dtFimAutorizacao = dtFimAutorizacao;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		MPA_POP_VERSOES("mpaPopVersoes"),
		RAP_SERVIDORES_BY_MPA_POS_SER_FK3("rapServidoresByMpaPosSerFk3"),
		RAP_SERVIDORES_BY_MPA_POS_SER_FK1("rapServidoresByMpaPosSerFk1"),
		RAP_SERVIDORES_BY_MPA_POS_SER_FK2("rapServidoresByMpaPosSerFk2"),
		CRIADO_EM("criadoEm"),
		DT_INICIO_AUTORIZACAO("dtInicioAutorizacao"),
		DT_FIM_AUTORIZACAO("dtFimAutorizacao");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MpaPopServidor)) {
			return false;
		}
		MpaPopServidor other = (MpaPopServidor) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

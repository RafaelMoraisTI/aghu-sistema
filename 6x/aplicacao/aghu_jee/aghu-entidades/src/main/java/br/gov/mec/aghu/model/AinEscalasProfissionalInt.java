package br.gov.mec.aghu.model;

// Generated 07/05/2010 14:10:01 by Hibernate Tools 3.2.5.Beta

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AinEscalasProfissionalInt generated by hbm2java
 */
@Entity
@Table(name = "AIN_ESCALAS_PROFISSIONAL_INT", schema = "AGH")

public class AinEscalasProfissionalInt extends BaseEntityId<AinEscalasProfissionalIntId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2062897992321405505L;

	private AinEscalasProfissionalIntId id;

	// Usu√°rio logado, utilizado para auditorias.
	private RapServidores servidorProfessorDigitada;

	private Date dtFim;

	// private Boolean atuaCti;

	private String indAtuaCti;

	// Substituto
	private RapServidores servidorProfessor;

	private AghProfEspecialidades profEspecialidade;

	private AghProfissionaisEspConvenio profissionaisEspConvenio;

	private Integer version;

	// 

	public AinEscalasProfissionalInt() {
	}

	// getters & setters

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "pecPreSerMatricula", column = @Column(name = "PEC_PRE_SER_MATRICULA", nullable = false, precision = 7, scale = 0)),
			@AttributeOverride(name = "pecPreSerVinCodigo", column = @Column(name = "PEC_PRE_SER_VIN_CODIGO", nullable = false, precision = 3, scale = 0)),
			@AttributeOverride(name = "pecPreEspSeq", column = @Column(name = "PEC_PRE_ESP_SEQ", nullable = false, precision = 4, scale = 0)),
			@AttributeOverride(name = "pecCnvCodigo", column = @Column(name = "PEC_CNV_CODIGO", nullable = false, precision = 3, scale = 0)),
			@AttributeOverride(name = "dtInicio", column = @Column(name = "DT_INICIO", nullable = false, length = 7)) })
	public AinEscalasProfissionalIntId getId() {
		return this.id;
	}

	public void setId(AinEscalasProfissionalIntId id) {
		this.id = id;
	}

	/**
	 * Servidor digitador desta escala.
	 * 
	 * @return
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA_DIGITADA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO_DIGITADA", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidorProfessorDigitada() {
		return servidorProfessorDigitada;
	}

	public void setServidorProfessorDigitada(
			RapServidores servidorProfessorDigitada) {
		this.servidorProfessorDigitada = servidorProfessorDigitada;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_FIM", length = 7)
	public Date getDtFim() {
		return this.dtFim;
	}

	public void setDtFim(Date dtFim) {
		this.dtFim = dtFim;
	}

	// @Column(name = "IND_ATUA_CTI", nullable = false, length = 1)
	// @org.hibernate.annotations.Type(type =
	// "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	// public Boolean getAtuaCti() {
	// return atuaCti;
	// }
	//
	// public void setAtuaCti(Boolean atuaCti) {
	// this.atuaCti = atuaCti;
	// }

	@Column(name = "IND_ATUA_CTI", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndAtuaCti() {
		return this.indAtuaCti;
	}

	public void setIndAtuaCti(String indAtuaCti) {
		this.indAtuaCti = indAtuaCti;
	}

	/**
	 * Profissional substituto desta escala.
	 * 
	 * @return
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorProfessor() {
		return this.servidorProfessor;
	}

	public void setServidorProfessor(RapServidores serMatriculaProfessor) {
		this.servidorProfessor = serMatriculaProfessor;
	}

	/**
	 * Profissional e especialidade desta escala.
	 * 
	 * @return
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "PEC_PRE_SER_MATRICULA", referencedColumnName = "SER_MATRICULA", insertable = false, updatable = false),
			@JoinColumn(name = "PEC_PRE_SER_VIN_CODIGO", referencedColumnName = "SER_VIN_CODIGO", insertable = false, updatable = false),
			@JoinColumn(name = "PEC_PRE_ESP_SEQ", referencedColumnName = "ESP_SEQ", insertable = false, updatable = false) })
	public AghProfEspecialidades getProfEspecialidade() {
		return this.profEspecialidade;
	}

	public void setProfEspecialidade(AghProfEspecialidades profEspecialidades) {
		this.profEspecialidade = profEspecialidades;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "PEC_CNV_CODIGO", referencedColumnName = "CNV_CODIGO", insertable = false, updatable = false),
			@JoinColumn(name = "PEC_PRE_ESP_SEQ", referencedColumnName = "PRE_ESP_SEQ", insertable = false, updatable = false),
			@JoinColumn(name = "PEC_PRE_SER_MATRICULA", referencedColumnName = "PRE_SER_MATRICULA", insertable = false, updatable = false),
			@JoinColumn(name = "PEC_PRE_SER_VIN_CODIGO", referencedColumnName = "PRE_SER_VIN_CODIGO", insertable = false, updatable = false) })
	public AghProfissionaisEspConvenio getProfissionaisEspConvenio() {
		return profissionaisEspConvenio;
	}

	public void setProfissionaisEspConvenio(
			AghProfissionaisEspConvenio profissionaisEspConvenio) {
		this.profissionaisEspConvenio = profissionaisEspConvenio;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Override
	public int hashCode() {
		return new HashCodeBuilder().append(this.id).toHashCode();
	}

	@Override
	public boolean equals(Object other) {
		if (!(other instanceof AinEscalasProfissionalInt)) {
			return false;
		}
		AinEscalasProfissionalInt castOther = (AinEscalasProfissionalInt) other;
		return new EqualsBuilder().append(this.id, castOther.getId())
				.isEquals();
	}

	@Override
	public String toString() {
		return new ToStringBuilder(this).append("id", this.id).toString();
	}

	public enum Fields {
		DATA_INICIO("id.dtInicio"), //
		DATA_FIM("dtFim"), //
		SER_MATRICULA("servidorProfessor.id.matricula"), //
		SER_VIN_CODIGO("servidorProfessor.id.vinCodigo"), //
		SER_MATRICULA_DIGITADA("servidorProfessorDigitada.id.matricula"), //
		SER_VIN_CODIGO_DIGITADA("servidorProfessorDigitada.id.vinCodigo"), //
		ID_SERVIDOR_MATRICULA("id.pecPreSerMatricula"), //
		ID_SERVIDOR_VINCULO("id.pecPreSerVinCodigo"), //
		ID_CONVENIO_CODIGO("id.pecCnvCodigo"), //
		ID_ESPECIALIDADE_SEQ("id.pecPreEspSeq"), //
		PROF_ESPECIALIDADE("profEspecialidade"), //
		PROF_ESPECIALIDADE_CONVENIO_ID("profissionaisEspConvenio.id"), //
		PROF_ESPECIALIDADE_CONVENIO("profissionaisEspConvenio");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

}

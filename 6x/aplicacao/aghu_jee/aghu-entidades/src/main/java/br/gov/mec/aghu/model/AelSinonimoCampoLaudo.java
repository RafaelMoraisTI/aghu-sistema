package br.gov.mec.aghu.model;

// Generated 25/01/2012 14:50:10 by Hibernate Tools 3.4.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * AelSinonimosCamposLaudo generated by hbm2java
 */
@Entity
@Table(name = "AEL_SINONIMOS_CAMPOS_LAUDO", schema = "AGH")
public class AelSinonimoCampoLaudo extends BaseEntityId<AelSinonimoCampoLaudoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5662217412099419960L;
	
	private AelSinonimoCampoLaudoId id;
	private Integer version;
	private String nome;
	private RapServidores servidor;
	private AelCampoLaudo campoLaudo;
	
	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "calSeq", column = @Column(name = "CAL_SEQ", nullable = false)),
			@AttributeOverride(name = "seqp", column = @Column(name = "SEQP", nullable = false)) })
	public AelSinonimoCampoLaudoId getId() {
		return this.id;
	}

	public void setId(AelSinonimoCampoLaudoId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = true)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Column(name = "NOME", nullable = false, length = 100)
	@Length(max = 100)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })

	public RapServidores getServidor() {
		return servidor;
	}
	
	public void setServidor(RapServidores servidor) {
		this.servidor = servidor;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name="CAL_SEQ", nullable = false, insertable=false, updatable=false)
	public AelCampoLaudo getCampoLaudo() {
		return campoLaudo;
	}
	
	public void setCampoLaudo(AelCampoLaudo campoLaudo) {
		this.campoLaudo = campoLaudo;
	}


	public enum Fields {
		ID("id"),
		CAL_SEQ("id.calSeq"),
		SEQP("id.seqp"),
		NOME("nome"),
		SERVIDOR("servidor");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof AelSinonimoCampoLaudo)) {
			return false;
		}
		AelSinonimoCampoLaudo other = (AelSinonimoCampoLaudo) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

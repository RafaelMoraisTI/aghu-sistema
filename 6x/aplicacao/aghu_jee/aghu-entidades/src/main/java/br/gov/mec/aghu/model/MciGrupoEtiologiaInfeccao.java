package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;


import org.hibernate.validator.constraints.Length;

import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * MciGrupoEtiologiaInfeccao generated by hbm2java
 */
@Entity
@Table(name = "MCI_GRUPO_ETIOLOGIA_INFECCOES", schema = "AGH")
public class MciGrupoEtiologiaInfeccao extends BaseEntityId<MciGrupoEtiologiaInfeccaoId> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4398677232227836387L;
	private MciGrupoEtiologiaInfeccaoId id;
	private Integer version;
	private RapServidores rapServidoresByMciGtiSerFk1;
	private MciTipoGrupoEtiologia mciTipoGrupoEtiologia;
	private MciEtiologiaInfeccao mciEtiologiaInfeccao;
	private RapServidores rapServidoresByMciGtiSerFk2;
	private String indSituacao;
	private Date criadoEm;
	private Date alteradoEm;

	public MciGrupoEtiologiaInfeccao() {
	}

	public MciGrupoEtiologiaInfeccao(MciGrupoEtiologiaInfeccaoId id, RapServidores rapServidoresByMciGtiSerFk1,
			MciTipoGrupoEtiologia mciTipoGrupoEtiologia, MciEtiologiaInfeccao mciEtiologiaInfeccao, String indSituacao,
			Date criadoEm) {
		this.id = id;
		this.rapServidoresByMciGtiSerFk1 = rapServidoresByMciGtiSerFk1;
		this.mciTipoGrupoEtiologia = mciTipoGrupoEtiologia;
		this.mciEtiologiaInfeccao = mciEtiologiaInfeccao;
		this.indSituacao = indSituacao;
		this.criadoEm = criadoEm;
	}

	public MciGrupoEtiologiaInfeccao(MciGrupoEtiologiaInfeccaoId id, RapServidores rapServidoresByMciGtiSerFk1,
			MciTipoGrupoEtiologia mciTipoGrupoEtiologia, MciEtiologiaInfeccao mciEtiologiaInfeccao,
			RapServidores rapServidoresByMciGtiSerFk2, String indSituacao, Date criadoEm, Date alteradoEm) {
		this.id = id;
		this.rapServidoresByMciGtiSerFk1 = rapServidoresByMciGtiSerFk1;
		this.mciTipoGrupoEtiologia = mciTipoGrupoEtiologia;
		this.mciEtiologiaInfeccao = mciEtiologiaInfeccao;
		this.rapServidoresByMciGtiSerFk2 = rapServidoresByMciGtiSerFk2;
		this.indSituacao = indSituacao;
		this.criadoEm = criadoEm;
		this.alteradoEm = alteradoEm;
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "einTipo", column = @Column(name = "EIN_TIPO", nullable = false, length = 2)),
			@AttributeOverride(name = "tgeSeq", column = @Column(name = "TGE_SEQ", nullable = false)) })
	public MciGrupoEtiologiaInfeccaoId getId() {
		return this.id;
	}

	public void setId(MciGrupoEtiologiaInfeccaoId id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getRapServidoresByMciGtiSerFk1() {
		return this.rapServidoresByMciGtiSerFk1;
	}

	public void setRapServidoresByMciGtiSerFk1(RapServidores rapServidoresByMciGtiSerFk1) {
		this.rapServidoresByMciGtiSerFk1 = rapServidoresByMciGtiSerFk1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TGE_SEQ", nullable = false, insertable = false, updatable = false)
	public MciTipoGrupoEtiologia getMciTipoGrupoEtiologia() {
		return this.mciTipoGrupoEtiologia;
	}

	public void setMciTipoGrupoEtiologia(MciTipoGrupoEtiologia mciTipoGrupoEtiologia) {
		this.mciTipoGrupoEtiologia = mciTipoGrupoEtiologia;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EIN_TIPO", nullable = false, insertable = false, updatable = false)
	public MciEtiologiaInfeccao getMciEtiologiaInfeccao() {
		return this.mciEtiologiaInfeccao;
	}

	public void setMciEtiologiaInfeccao(MciEtiologiaInfeccao mciEtiologiaInfeccao) {
		this.mciEtiologiaInfeccao = mciEtiologiaInfeccao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_MOVIMENTADO", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_MOVIMENTADO", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getRapServidoresByMciGtiSerFk2() {
		return this.rapServidoresByMciGtiSerFk2;
	}

	public void setRapServidoresByMciGtiSerFk2(RapServidores rapServidoresByMciGtiSerFk2) {
		this.rapServidoresByMciGtiSerFk2 = rapServidoresByMciGtiSerFk2;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Length(max = 1)
	public String getIndSituacao() {
		return this.indSituacao;
	}

	public void setIndSituacao(String indSituacao) {
		this.indSituacao = indSituacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 29)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	public enum Fields {

		ID("id"),
		VERSION("version"),
		RAP_SERVIDORES_BY_MCI_GTI_SER_FK1("rapServidoresByMciGtiSerFk1"),
		MCI_TIPO_GRUPO_ETIOLOGIAS("mciTipoGrupoEtiologia"),
		MCI_ETIOLOGIA_INFECCAO("mciEtiologiaInfeccao"),
		RAP_SERVIDORES_BY_MCI_GTI_SER_FK2("rapServidoresByMciGtiSerFk2"),
		IND_SITUACAO("indSituacao"),
		CRIADO_EM("criadoEm"),
		ALTERADO_EM("alteradoEm");

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MciGrupoEtiologiaInfeccao)) {
			return false;
		}
		MciGrupoEtiologiaInfeccao other = (MciGrupoEtiologiaInfeccao) obj;
		if (getId() == null) {
			if (other.getId() != null) {
				return false;
			}
		} else if (!getId().equals(other.getId())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}

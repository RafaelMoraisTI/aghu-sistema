package br.gov.mec.aghu.model;

// Generated 15/04/2010 14:52:47 by Hibernate Tools 3.2.5.Beta

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;
import javax.validation.constraints.Min;



import org.apache.commons.lang3.StringUtils;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;
import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.Range;

import br.gov.mec.aghu.dominio.DominioCobrancaDiaria;
import br.gov.mec.aghu.dominio.DominioFideps;
import br.gov.mec.aghu.dominio.DominioModoLancamentoFat;
import br.gov.mec.aghu.dominio.DominioSexoDeterminante;
import br.gov.mec.aghu.dominio.DominioSituacao;
import br.gov.mec.aghu.dominio.DominioUtilizacaoItem;
import br.gov.mec.aghu.core.exception.BaseRuntimeException;
import br.gov.mec.aghu.core.persistence.BaseEntityId;

/**
 * FatItensProcedHospitalar generated by hbm2java
 */
@Entity
@SuppressWarnings({"PMD.ExcessiveClassLength"})
@Table(name = "FAT_ITENS_PROCED_HOSPITALAR", schema = "AGH")
@Cache(usage=CacheConcurrencyStrategy.TRANSACTIONAL)
public class FatItensProcedHospitalar extends BaseEntityId<FatItensProcedHospitalarId> implements java.io.Serializable {

	private static final long serialVersionUID = -7352490362071872610L;
	
	private FatItensProcedHospitalarId id;
	private Short phoSeq;
	private Integer seq;
	private FatProcedimentosHospitalares procedimentoHospitalar;
	private Long codTabela;
	private String descricao;
	private Integer idadeMin;
	private Integer idadeMax;
	private DominioSexoDeterminante sexo;
	private AghClinicas clinica;
	private Boolean hospDia;
	private Short diasPermanenciaMaior;
	private Short quantDiasFaturamento;
	private Boolean internacao;
	private Set<AinInternacao> internacoes;
	private Integer pontoAnestesista;
	private Integer pontosCirurgiao;
	private DominioSituacao situacao;
	private Boolean exigeValor;
	private String criadoPor;
	private Date criadoEm;
	private String alteradoPor;
	private Date alteradoEm;
	private Short maxDiariaUti;
	private Boolean cobrancaCma;
	private Boolean exigeAutorizacaoPrevia;
	private Boolean procedimentoEspecial;
	private Boolean diariaAcompanhante;
	private Short diasDesdobramento;
	private Short maxQtdConta;
	private Boolean realDifereSolic;
	private Boolean cidadeObrigatoria;
	private Boolean dadosParto;
	private Boolean hcpaCadastrado;
	private Integer iphSeq;
	private BigDecimal percServicoProfissional;
	private Boolean cobraProcedimentoEspecial;
	private Boolean quantidadeMaiorInternacao;
	private Byte diasReinternacao;
	private Short maxQtdApac;
	private Boolean tipoAih5;
	private Boolean cobrancaConta;
	private Boolean cobrancaApac;
	private Boolean preencheCma;
	private DominioUtilizacaoItem utilizacaoItem;
	private Short qtdProcedimentosItem;
	private FatTiposVinculo tiposVinculo;
	private FatTipoAto tipoAto;
	private Integer pontosSadt;
	private Boolean consulta;
	private Boolean cobraExcedenteBpa;
	private Boolean cobrancaAmbulatorio;
	private Boolean aidsPolitraumatizado;
	private Boolean cirurgiaMultipla;
	private Boolean dcihTransplante;
	private Boolean faec;
	private Boolean solicDifereReal;
	private Boolean buscaDoador;
	private DominioCobrancaDiaria cobrancaDiarias;
	private Boolean exigeConsulta;
	private DominioFideps fideps;
	private Boolean psiquiatria;
	private FatMotivoCobrancaApac motivoCobrancaApac;
	private Integer notaFiscalFalsa;
	private Boolean procPrincipalApac;
	private DominioModoLancamentoFat modoLancamentoFat;
	private Short sicCodigo;
	private Short gitCodigo;
	private FatCaractComplexidade caracteristicaComplexidade;
	private String admTratContinuado;
	private Integer pontosAto;
	private String admAnestesia;
	private String permanencia;
	private Boolean exigeCnrac;
	private Long codProcSusOld;
	private String urgencia;
	private FatFormaOrganizacao formaOrganizacao;
	private Short codProcedimento;
	private Boolean validaIdade;
	private FatCaractFinanciamento fatCaracteristicaFinanciamento;
	private FatSubGrupo subGrupo;
	private FatGrupo grupo;
	private Short fogSgrGrpSeq;
	private Byte fogSgrSubGrupo;
	private Byte fogCodigo;
	private FatItemProcHospTransp itemProcHospTransp;
		
	private Set<FatCaractItemProcHosp> caracteristicasItemProcHosp = new HashSet<FatCaractItemProcHosp>(0);
	private Set<FatConvGrupoItemProced> gruposItensProced = new HashSet<FatConvGrupoItemProced>(0);
	private Set<FatVlrItemProcedHospComps> valoresItemProcdHospComps = new HashSet<FatVlrItemProcedHospComps>(0);
	private Set<FatEspelhoAih> espelhosAihSolicitado = new HashSet<FatEspelhoAih>(0);
	private Set<FatEspelhoAih> espelhosAihRealizado = new HashSet<FatEspelhoAih>(0);
	private Set<FatAtoObrigatorioProced> atosObrigatoriosProcedimentos = new HashSet<FatAtoObrigatorioProced>(0);
	private Set<FatCampoMedicoAuditAih> camposMedicosAuditAih = new HashSet<FatCampoMedicoAuditAih>();
	private Set<FatAtoMedicoAih> atosMedicosAih = new HashSet<FatAtoMedicoAih>();
	private Set<FatProcedimentoCbo> procedimentosCbo = new HashSet<FatProcedimentoCbo>();
	private Set<VFatAssociacaoProcedimento> fatAssociacaoProcedimentos = new HashSet<VFatAssociacaoProcedimento>(0);
	private Set<FatCompetenciaCompatibilid> competenciaCompatibilids =  new HashSet<FatCompetenciaCompatibilid>(0);
	private Set<FatCompatExclusItem> compatExclusItems =  new HashSet<FatCompatExclusItem>(0);
	private Set<FatCompatExclusItem> compatExclusItemsCompatibiliza =  new HashSet<FatCompatExclusItem>(0);
	private Set<FatProcedServicos> procedServicos = new HashSet<FatProcedServicos>();
	private Set<FatSinonimoItemProcedHosp> sinonimoItemProcedHosp = new HashSet<FatSinonimoItemProcedHosp>(0);
	private Set<FatProcedimentoRegistro> fatProcedimentoRegistros = new HashSet<FatProcedimentoRegistro>(0);
	private Set<MbcItensRequisicaoOpmes> itensRequisicaoOpmes = new HashSet<MbcItensRequisicaoOpmes>(0); 
	
	private Integer version;


	public FatItensProcedHospitalar() {
	}

	public FatItensProcedHospitalar(final Short phoSeq, final Integer seq) {
		this.id = new FatItensProcedHospitalarId(phoSeq, seq);
	}

	@SuppressWarnings({"PMD.ExcessiveParameterList"})
	public FatItensProcedHospitalar(final FatItensProcedHospitalarId id,
			final FatProcedimentosHospitalares procedimentoHospitalar,
			final Long codTabela, final String descricao, final Integer idadeMin, final Integer idadeMax,
			final DominioSexoDeterminante sexo, final Boolean hospDia, final Boolean internacao,
			final DominioSituacao situacao, final Boolean exigeValor, final String criadoPor,
			final Date criadoEm, final Boolean cobrancaCma,
			final Boolean exigeAutorizacaoPrevia, final Boolean procedimentoEspecial,
			final Boolean diariaAcompanhante, final Boolean realDifereSolic,
			final Boolean cidadeObrigatoria, final Boolean dadosParto,
			final Boolean hcpaCadastrado, final Boolean cobraProcedimentoEspecial,
			final Boolean quantidadeMaiorInternacao, final Boolean tipoAih5,
			final Boolean cobrancaConta, final Boolean cobrancaApac,
			final Boolean preencheCma, final DominioUtilizacaoItem utilizacaoItem,
			final Boolean consulta, final Boolean cobraExcedenteBpa,
			final Boolean cobrancaAmbulatorio, final Boolean aidsPolitraumatizado,
			final Boolean cirurgiaMultipla, final Boolean dcihTransplante,
			final Boolean faec, final Boolean solicDifereReal, final Boolean buscaDoador,
			final DominioCobrancaDiaria cobrancaDiarias, final Boolean exigeConsulta,
			final DominioFideps fideps, final Boolean psiquiatria,
			final Boolean procPrincipalApac, final DominioModoLancamentoFat modoLancamentoFat) {
		this.id = id;
		this.procedimentoHospitalar = procedimentoHospitalar;
		this.codTabela = codTabela;
		this.descricao = descricao;
		this.idadeMin = idadeMin;
		this.idadeMax = idadeMax;
		this.sexo = sexo;
		this.hospDia = hospDia;
		this.internacao = internacao;
		this.situacao = situacao;
		this.exigeValor = exigeValor;
		this.criadoPor = criadoPor;
		this.criadoEm = criadoEm;
		this.cobrancaCma = cobrancaCma;
		this.exigeAutorizacaoPrevia = exigeAutorizacaoPrevia;
		this.procedimentoEspecial = procedimentoEspecial;
		this.diariaAcompanhante = diariaAcompanhante;
		this.realDifereSolic = realDifereSolic;
		this.cidadeObrigatoria = cidadeObrigatoria;
		this.dadosParto = dadosParto;
		this.hcpaCadastrado = hcpaCadastrado;
		this.cobraProcedimentoEspecial = cobraProcedimentoEspecial;
		this.quantidadeMaiorInternacao = quantidadeMaiorInternacao;
		this.tipoAih5 = tipoAih5;
		this.cobrancaConta = cobrancaConta;
		this.cobrancaApac = cobrancaApac;
		this.preencheCma = preencheCma;
		this.utilizacaoItem = utilizacaoItem;
		this.consulta = consulta;
		this.cobraExcedenteBpa = cobraExcedenteBpa;
		this.cobrancaAmbulatorio = cobrancaAmbulatorio;
		this.aidsPolitraumatizado = aidsPolitraumatizado;
		this.cirurgiaMultipla = cirurgiaMultipla;
		this.dcihTransplante = dcihTransplante;
		this.faec = faec;
		this.solicDifereReal = solicDifereReal;
		this.buscaDoador = buscaDoador;
		this.cobrancaDiarias = cobrancaDiarias;
		this.exigeConsulta = exigeConsulta;
		this.fideps = fideps;
		this.psiquiatria = psiquiatria;
		this.procPrincipalApac = procPrincipalApac;
		this.modoLancamentoFat = modoLancamentoFat;
	}

	@SuppressWarnings({"PMD.ExcessiveParameterList"})
	public FatItensProcedHospitalar(final FatItensProcedHospitalarId id,
			final FatProcedimentosHospitalares procedimentoHospitalar,
			final Long codTabela, final String descricao, final Integer idadeMin, final Integer idadeMax,
			final DominioSexoDeterminante sexo, final AghClinicas clinica, final Boolean hospDia,
			final Short diasPermanenciaMaior, final Short quantDiasFaturamento,
			final Boolean internacao, final Integer pontoAnestesista,
			final Integer pontosCirurgiao, final DominioSituacao situacao, final Boolean exigeValor,
			final String criadoPor, final Date criadoEm, final String alteradoPor,
			final Date alteradoEm, final Short maxDiariaUti, final Boolean cobrancaCma,
			final Boolean exigeAutorizacaoPrevia, final Boolean procedimentoEspecial,
			final Boolean diariaAcompanhante, final Short diasDesdobramento, final Short maxQtdConta,
			final Boolean realDifereSolic, final Boolean cidadeObrigatoria,
			final Boolean dadosParto, final Boolean hcpaCadastrado, final Integer iphSeq,
			final BigDecimal percServicoProfissional, final Boolean cobraProcedimentoEspecial,
			final Boolean quantidadeMaiorInternacao, final Byte diasReinternacao,
			final Short maxQtdApac, final Boolean tipoAih5, final Boolean cobrancaConta,
			final Boolean cobrancaApac, final Boolean preencheCma,
			final DominioUtilizacaoItem utilizacaoItem, final Short qtdProcedimentosItem,
			final FatTiposVinculo tiposVinculo, final FatTipoAto tipoAto, final Integer pontosSadt,
			final Boolean consulta, final Boolean cobraExcedenteBpa,
			final Boolean cobrancaAmbulatorio, final Boolean aidsPolitraumatizado,
			final Boolean cirurgiaMultipla, final Boolean dcihTransplante,
			final Boolean faec, final Boolean solicDifereReal, final Boolean buscaDoador,
			final DominioCobrancaDiaria cobrancaDiarias, final Boolean exigeConsulta,
			final DominioFideps fideps, final Boolean psiquiatria, final FatMotivoCobrancaApac motivoCobrancaApac,
			final Integer notaFiscalFalsa, final Boolean procPrincipalApac,
			final DominioModoLancamentoFat modoLancamentoFat, final Short sicCodigo, final Short gitCodigo,
			final FatCaractComplexidade caracteristicaComplexidade, final String admTratContinuado,
			final Integer pontosAto, final String admAnestesia, final String permanencia,
			final Boolean exigeCnrac, final Long codProcSusOld, final String urgencia,
			final FatFormaOrganizacao formaOrganizacao,
			final Short codProcedimento, final Boolean validaIdade) {
		this.id = id;
		this.procedimentoHospitalar = procedimentoHospitalar;
		this.codTabela = codTabela;
		this.descricao = descricao;
		this.idadeMin = idadeMin;
		this.idadeMax = idadeMax;
		this.sexo = sexo;
		this.clinica = clinica;
		this.hospDia = hospDia;
		this.diasPermanenciaMaior = diasPermanenciaMaior;
		this.quantDiasFaturamento = quantDiasFaturamento;
		this.internacao = internacao;
		this.pontoAnestesista = pontoAnestesista;
		this.pontosCirurgiao = pontosCirurgiao;
		this.situacao = situacao;
		this.exigeValor = exigeValor;
		this.criadoPor = criadoPor;
		this.criadoEm = criadoEm;
		this.alteradoPor = alteradoPor;
		this.alteradoEm = alteradoEm;
		this.maxDiariaUti = maxDiariaUti;
		this.cobrancaCma = cobrancaCma;
		this.exigeAutorizacaoPrevia = exigeAutorizacaoPrevia;
		this.procedimentoEspecial = procedimentoEspecial;
		this.diariaAcompanhante = diariaAcompanhante;
		this.diasDesdobramento = diasDesdobramento;
		this.maxQtdConta = maxQtdConta;
		this.realDifereSolic = realDifereSolic;
		this.cidadeObrigatoria = cidadeObrigatoria;
		this.dadosParto = dadosParto;
		this.hcpaCadastrado = hcpaCadastrado;
		this.iphSeq = iphSeq;
		this.percServicoProfissional = percServicoProfissional;
		this.cobraProcedimentoEspecial = cobraProcedimentoEspecial;
		this.quantidadeMaiorInternacao = quantidadeMaiorInternacao;
		this.diasReinternacao = diasReinternacao;
		this.maxQtdApac = maxQtdApac;
		this.tipoAih5 = tipoAih5;
		this.cobrancaConta = cobrancaConta;
		this.cobrancaApac = cobrancaApac;
		this.preencheCma = preencheCma;
		this.utilizacaoItem = utilizacaoItem;
		this.qtdProcedimentosItem = qtdProcedimentosItem;
		this.tiposVinculo = tiposVinculo;
		this.tipoAto = tipoAto;
		this.pontosSadt = pontosSadt;
		this.consulta = consulta;
		this.cobraExcedenteBpa = cobraExcedenteBpa;
		this.cobrancaAmbulatorio = cobrancaAmbulatorio;
		this.aidsPolitraumatizado = aidsPolitraumatizado;
		this.cirurgiaMultipla = cirurgiaMultipla;
		this.dcihTransplante = dcihTransplante;
		this.faec = faec;
		this.solicDifereReal = solicDifereReal;
		this.buscaDoador = buscaDoador;
		this.cobrancaDiarias = cobrancaDiarias;
		this.exigeConsulta = exigeConsulta;
		this.fideps = fideps;
		this.psiquiatria = psiquiatria;
		this.motivoCobrancaApac = motivoCobrancaApac;
		this.notaFiscalFalsa = notaFiscalFalsa;
		this.procPrincipalApac = procPrincipalApac;
		this.modoLancamentoFat = modoLancamentoFat;
		this.sicCodigo = sicCodigo;
		this.gitCodigo = gitCodigo;
		this.caracteristicaComplexidade = caracteristicaComplexidade;
		this.admTratContinuado = admTratContinuado;
		this.pontosAto = pontosAto;
		this.admAnestesia = admAnestesia;
		this.permanencia = permanencia;
		this.exigeCnrac = exigeCnrac;
		this.codProcSusOld = codProcSusOld;
		this.urgencia = urgencia;
		this.formaOrganizacao = formaOrganizacao;
		this.codProcedimento = codProcedimento;
		this.validaIdade = validaIdade;
	}

	@EmbeddedId
	@AttributeOverrides( {
		@AttributeOverride(name = "phoSeq", column = @Column(name = "PHO_SEQ", nullable = false, precision = 4, scale = 0)),
		@AttributeOverride(name = "seq", column = @Column(name = "SEQ", nullable = false, precision = 8, scale = 0)) })
	public FatItensProcedHospitalarId getId() {
		return this.id;
	}

	public void setId(final FatItensProcedHospitalarId id) {
		this.id = id;
	}

	@Column(name = "SEQ", precision = 8, scale = 0, insertable = false, updatable= false)	
	public Integer getSeq() {
		return seq;
	}

	@Column(name = "PHO_SEQ", precision = 8, scale = 0, insertable = false, updatable= false)	
	public Short getPhoSeq() {
		return phoSeq;
	}

	public void setSeq(Integer seq) {
		this.seq = seq;
	}

	public void setPhoSeq(Short phoSeq) {
		this.phoSeq = phoSeq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PHO_SEQ", nullable = false, insertable = false, updatable = false)
	public FatProcedimentosHospitalares getProcedimentoHospitalar() {
		return this.procedimentoHospitalar;
	}

	public void setProcedimentoHospitalar(
			final FatProcedimentosHospitalares procedimentoHospitalar) {
		this.procedimentoHospitalar = procedimentoHospitalar;
	}

	@Column(name = "COD_TABELA", nullable = false, precision = 10, scale = 0)
	public Long getCodTabela() {
		return this.codTabela;
	}

	public void setCodTabela(final Long codTabela) {
		this.codTabela = codTabela;
	}

	
	@Column(name = "DESCRICAO", nullable = false, length = 250)
	@Length(max = 250)
	public String getDescricao() {
		return this.descricao;
	}

	@Transient
	public String getDescricaoTrincada(){
		return getDescricao()!=null?getDescricao().trim():getDescricao();
	}

	public void setDescricao(final String descricao) {
		this.descricao = descricao!=null?descricao.toUpperCase():descricao;
	}

	@Column(name = "IDADE_MIN", nullable = false, precision = 2, scale = 0)
	@Min(value=0, message="Valor > 0")
	public Integer getIdadeMin() {
		return this.idadeMin;
	}

	public void setIdadeMin(final Integer idadeMin) {
		this.idadeMin = idadeMin;
	}

	@Column(name = "IDADE_MAX", nullable = false, precision = 3, scale = 0)
	@Range(min=0, max=999, message="Valor no intervalo [0, 999]")
	public Integer getIdadeMax() {
		return this.idadeMax;
	}

	public void setIdadeMax(final Integer idadeMax) {
		this.idadeMax = idadeMax;
	}

	@Column(name = "SEXO", length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSexoDeterminante getSexo() {
		return this.sexo;
	}

	public void setSexo(final DominioSexoDeterminante sexo) {
		this.sexo = sexo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CLC_CODIGO")
	public AghClinicas getClinica() {
		return this.clinica;
	}

	public void setClinica(final AghClinicas clinica) {
		this.clinica = clinica;
	}

	@Column(name = "IND_HOSP_DIA", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getHospDia() {
		return this.hospDia;
	}

	public void setHospDia(final Boolean hospDia) {
		this.hospDia = hospDia;
	}

	@Column(name = "DIAS_PERMANENCIA_MAIOR", precision = 3, scale = 0)
	public Short getDiasPermanenciaMaior() {
		return this.diasPermanenciaMaior;
	}

	public void setDiasPermanenciaMaior(final Short diasPermanenciaMaior) {
		this.diasPermanenciaMaior = diasPermanenciaMaior;
	}

	@Column(name = "QUANT_DIAS_FATURAMENTO", precision = 3, scale = 0)
	public Short getQuantDiasFaturamento() {
		return this.quantDiasFaturamento;
	}

	public void setQuantDiasFaturamento(final Short quantDiasFaturamento) {
		this.quantDiasFaturamento = quantDiasFaturamento;
	}

	@Column(name = "IND_INTERNACAO", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getInternacao() {
		return this.internacao;
	}

	public void setInternacao(final Boolean internacao) {
		this.internacao = internacao;
	}

	@Column(name = "PONTO_ANESTESISTA", precision = 5, scale = 0)
	public Integer getPontoAnestesista() {
		return this.pontoAnestesista;
	}

	public void setPontoAnestesista(final Integer pontoAnestesista) {
		this.pontoAnestesista = pontoAnestesista;
	}

	@Column(name = "PONTOS_CIRURGIAO", precision = 5, scale = 0)
	public Integer getPontosCirurgiao() {
		return this.pontosCirurgiao;
	}

	public void setPontosCirurgiao(final Integer pontosCirurgiao) {
		this.pontosCirurgiao = pontosCirurgiao;
	}

	@Column(name = "IND_SITUACAO", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioSituacao getSituacao() {
		return this.situacao;
	}

	public void setSituacao(final DominioSituacao situacao) {
		this.situacao = situacao;
	}

	@Column(name = "IND_EXIGE_VALOR", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getExigeValor() {
		return this.exigeValor;
	}

	public void setExigeValor(final Boolean exigeValor) {
		this.exigeValor = exigeValor;
	}

	@Column(name = "CRIADO_POR", nullable = false, length = 30)
	@Length(max = 30)
	public String getCriadoPor() {
		return this.criadoPor;
	}

	public void setCriadoPor(final String criadoPor) {
		this.criadoPor = criadoPor;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 7)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(final Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Column(name = "ALTERADO_POR", length = 30)
	@Length(max = 30)
	public String getAlteradoPor() {
		return this.alteradoPor;
	}

	public void setAlteradoPor(final String alteradoPor) {
		this.alteradoPor = alteradoPor;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 7)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(final Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	@Column(name = "MAX_DIARIA_UTI", precision = 3, scale = 0)
	public Short getMaxDiariaUti() {
		return this.maxDiariaUti;
	}

	public void setMaxDiariaUti(final Short maxDiariaUti) {
		this.maxDiariaUti = maxDiariaUti;
	}

	@Column(name = "IND_COBRANCA_CMA", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getCobrancaCma() {
		return this.cobrancaCma;
	}

	public void setCobrancaCma(final Boolean cobrancaCma) {
		this.cobrancaCma = cobrancaCma;
	}

	@Column(name = "IND_EXIGE_AUTORIZACAO_PREVIA", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getExigeAutorizacaoPrevia() {
		return this.exigeAutorizacaoPrevia;
	}

	public void setExigeAutorizacaoPrevia(final Boolean exigeAutorizacaoPrevia) {
		this.exigeAutorizacaoPrevia = exigeAutorizacaoPrevia;
	}

	@Column(name = "IND_PROC_ESPECIAL", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getProcedimentoEspecial() {
		return this.procedimentoEspecial;
	}

	public void setProcedimentoEspecial(final Boolean procedimentoEspecial) {
		this.procedimentoEspecial = procedimentoEspecial;
	}

	@Column(name = "IND_DIARIA_ACOMP", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getDiariaAcompanhante() {
		return this.diariaAcompanhante;
	}

	public void setDiariaAcompanhante(final Boolean diariaAcompanhante) {
		this.diariaAcompanhante = diariaAcompanhante;
	}

	@Column(name = "DIAS_DESDOBRAMENTO", precision = 3, scale = 0)
	public Short getDiasDesdobramento() {
		return this.diasDesdobramento;
	}

	public void setDiasDesdobramento(final Short diasDesdobramento) {
		this.diasDesdobramento = diasDesdobramento;
	}

	@Column(name = "MAX_QTD_CONTA", precision = 3, scale = 0)
	public Short getMaxQtdConta() {
		return this.maxQtdConta;
	}

	public void setMaxQtdConta(final Short maxQtdConta) {
		this.maxQtdConta = maxQtdConta;
	}

	@Column(name = "IND_REAL_DIFERE_SOLIC", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getRealDifereSolic() {
		return this.realDifereSolic;
	}

	public void setRealDifereSolic(final Boolean realDifereSolic) {
		this.realDifereSolic = realDifereSolic;
	}

	@Column(name = "IND_CID_OBRIGATORIO", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getCidadeObrigatoria() {
		return this.cidadeObrigatoria;
	}

	public void setCidadeObrigatoria(final Boolean cidadeObrigatoria) {
		this.cidadeObrigatoria = cidadeObrigatoria;
	}

	@Column(name = "IND_DADOS_PARTO", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getDadosParto() {
		return this.dadosParto;
	}

	public void setDadosParto(final Boolean dadosParto) {
		this.dadosParto = dadosParto;
	}

	@Column(name = "IND_HCPA_CADASTRADO", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getHcpaCadastrado() {
		return this.hcpaCadastrado;
	}

	public void setHcpaCadastrado(final Boolean hcpaCadastrado) {
		this.hcpaCadastrado = hcpaCadastrado;
	}

	@Column(name = "IPH_SEQ", precision = 8, scale = 0)
	public Integer getIphSeq() {
		return this.iphSeq;
	}

	public void setIphSeq(final Integer iphSeq) {
		this.iphSeq = iphSeq;
	}

	@Column(name = "PERC_SERVICO_PROFISSIONAL", precision = 5)
	public BigDecimal getPercServicoProfissional() {
		return this.percServicoProfissional;
	}

	public void setPercServicoProfissional(final BigDecimal percServicoProfissional) {
		this.percServicoProfissional = percServicoProfissional;
	}

	@Column(name = "IND_COBRA_PROC_ESPECIAL", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getCobraProcedimentoEspecial() {
		return this.cobraProcedimentoEspecial;
	}

	public void setCobraProcedimentoEspecial(final Boolean cobraProcedimentoEspecial) {
		this.cobraProcedimentoEspecial = cobraProcedimentoEspecial;
	}

	@Column(name = "IND_QTD_MAIOR_INTERNACAO", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getQuantidadeMaiorInternacao() {
		return this.quantidadeMaiorInternacao;
	}

	public void setQuantidadeMaiorInternacao(final Boolean quantidadeMaiorInternacao) {
		this.quantidadeMaiorInternacao = quantidadeMaiorInternacao;
	}

	@Column(name = "DIAS_REINTERNACAO", precision = 2, scale = 0)
	public Byte getDiasReinternacao() {
		return this.diasReinternacao;
	}

	public void setDiasReinternacao(final Byte diasReinternacao) {
		this.diasReinternacao = diasReinternacao;
	}

	@Column(name = "MAX_QTD_APAC", precision = 3, scale = 0)
	public Short getMaxQtdApac() {
		return this.maxQtdApac;
	}

	public void setMaxQtdApac(final Short maxQtdApac) {
		this.maxQtdApac = maxQtdApac;
	}

	@Column(name = "IND_TIPO_AIH5", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getTipoAih5() {
		return this.tipoAih5;
	}

	public void setTipoAih5(final Boolean tipoAih5) {
		this.tipoAih5 = tipoAih5;
	}

	@Column(name = "IND_COBRANCA_CONTA", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getCobrancaConta() {
		return this.cobrancaConta;
	}

	public void setCobrancaConta(final Boolean cobrancaConta) {
		this.cobrancaConta = cobrancaConta;
	}

	@Column(name = "IND_COBRANCA_APAC", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getCobrancaApac() {
		return this.cobrancaApac;
	}

	public void setCobrancaApac(final Boolean cobrancaApac) {
		this.cobrancaApac = cobrancaApac;
	}

	@Column(name = "IND_PREENCHE_CMA", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getPreencheCma() {
		return this.preencheCma;
	}

	public void setPreencheCma(final Boolean preencheCma) {
		this.preencheCma = preencheCma;
	}

	@Column(name = "IND_UTILIZACAO_ITEM", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioUtilizacaoItem getUtilizacaoItem() {
		return this.utilizacaoItem;
	}

	public void setUtilizacaoItem(final DominioUtilizacaoItem utilizacaoItem) {
		this.utilizacaoItem = utilizacaoItem;
	}

	@Column(name = "QTD_PROCEDIMENTOS_ITEM", precision = 4, scale = 0)
	public Short getQtdProcedimentosItem() {
		return this.qtdProcedimentosItem;
	}

	public void setQtdProcedimentosItem(final Short qtdProcedimentosItem) {
		this.qtdProcedimentosItem = qtdProcedimentosItem;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TIV_SEQ")
	public FatTiposVinculo getTiposVinculo() {
		return tiposVinculo;
	}

	public void setTiposVinculo(final FatTiposVinculo tiposVinculo) {
		this.tiposVinculo = tiposVinculo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TAO_SEQ")
	public FatTipoAto getTipoAto() {
		return tipoAto;
	}

	public void setTipoAto(final FatTipoAto tipoAto) {
		this.tipoAto = tipoAto;
	}

	@Column(name = "PONTOS_SADT", precision = 5, scale = 0)
	public Integer getPontosSadt() {
		return this.pontosSadt;
	}

	public void setPontosSadt(final Integer pontosSadt) {
		this.pontosSadt = pontosSadt;
	}

	@Column(name = "IND_CONSULTA", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getConsulta() {
		return this.consulta;
	}

	public void setConsulta(final Boolean consulta) {
		this.consulta = consulta;
	}

	@Column(name = "IND_COBRA_EXCEDENTE_BPA", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getCobraExcedenteBpa() {
		return this.cobraExcedenteBpa;
	}

	public void setCobraExcedenteBpa(final Boolean cobraExcedenteBpa) {
		this.cobraExcedenteBpa = cobraExcedenteBpa;
	}

	@Column(name = "IND_COBRANCA_AMBULATORIO", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getCobrancaAmbulatorio() {
		return this.cobrancaAmbulatorio;
	}

	public void setCobrancaAmbulatorio(final Boolean cobrancaAmbulatorio) {
		this.cobrancaAmbulatorio = cobrancaAmbulatorio;
	}

	@Column(name = "IND_AIDS_POLITRAUMATIZADO", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getAidsPolitraumatizado() {
		return this.aidsPolitraumatizado;
	}

	public void setAidsPolitraumatizado(final Boolean aidsPolitraumatizado) {
		this.aidsPolitraumatizado = aidsPolitraumatizado;
	}

	@Column(name = "IND_CIRURGIA_MULTIPLA", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getCirurgiaMultipla() {
		return this.cirurgiaMultipla;
	}

	public void setCirurgiaMultipla(final Boolean cirurgiaMultipla) {
		this.cirurgiaMultipla = cirurgiaMultipla;
	}

	@Column(name = "IND_DCIH_TRANSPLANTE", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getDcihTransplante() {
		return this.dcihTransplante;
	}

	public void setDcihTransplante(final Boolean dcihTransplante) {
		this.dcihTransplante = dcihTransplante;
	}

	@Column(name = "IND_FAEC", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getFaec() {
		return this.faec;
	}

	public void setFaec(final Boolean faec) {
		this.faec = faec;
	}

	@Column(name = "IND_SOLIC_DIFERE_REAL", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getSolicDifereReal() {
		return this.solicDifereReal;
	}

	public void setSolicDifereReal(final Boolean solicDifereReal) {
		this.solicDifereReal = solicDifereReal;
	}

	@Column(name = "IND_BUSCA_DOADOR", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getBuscaDoador() {
		return this.buscaDoador;
	}

	public void setBuscaDoador(final Boolean buscaDoador) {
		this.buscaDoador = buscaDoador;
	}

	@Column(name = "IND_COBRANCA_DIARIAS", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioCobrancaDiaria getCobrancaDiarias() {
		return this.cobrancaDiarias;
	}

	public void setCobrancaDiarias(final DominioCobrancaDiaria cobrancaDiarias) {
		this.cobrancaDiarias = cobrancaDiarias;
	}

	@Column(name = "IND_EXIGE_CONSULTA", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getExigeConsulta() {
		return this.exigeConsulta;
	}

	public void setExigeConsulta(final Boolean exigeConsulta) {
		this.exigeConsulta = exigeConsulta;
	}

	@Column(name = "IND_FIDEPS", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioFideps getFideps() {
		return this.fideps;
	}

	public void setFideps(final DominioFideps fideps) {
		this.fideps = fideps;
	}

	@Column(name = "IND_PSIQUIATRIA", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getPsiquiatria() {
		return this.psiquiatria;
	}

	public void setPsiquiatria(final Boolean psiquiatria) {
		this.psiquiatria = psiquiatria;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MCA_SEQ")
	public FatMotivoCobrancaApac getMotivoCobrancaApac() {
		return motivoCobrancaApac;
	}

	public void setMotivoCobrancaApac(final FatMotivoCobrancaApac motivoCobrancaApac) {
		this.motivoCobrancaApac = motivoCobrancaApac;
	}

	@Column(name = "NOTA_FISCAL_FALSA", precision = 7, scale = 0)
	public Integer getNotaFiscalFalsa() {
		return this.notaFiscalFalsa;
	}

	public void setNotaFiscalFalsa(final Integer notaFiscalFalsa) {
		this.notaFiscalFalsa = notaFiscalFalsa;
	}

	@Column(name = "IND_PROC_PRINCIPAL_APAC", nullable = false, length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getProcPrincipalApac() {
		return this.procPrincipalApac;
	}

	public void setProcPrincipalApac(final Boolean procPrincipalApac) {
		this.procPrincipalApac = procPrincipalApac;
	}

	@Column(name = "IND_MODO_LANCAMENTO_FAT", nullable = false, length = 1)
	@Enumerated(EnumType.STRING)
	public DominioModoLancamentoFat getModoLancamentoFat() {
		return this.modoLancamentoFat;
	}

	public void setModoLancamentoFat(final DominioModoLancamentoFat modoLancamentoFat) {
		this.modoLancamentoFat = modoLancamentoFat;
	}

	@Column(name = "SIC_CODIGO", precision = 3, scale = 0)
	public Short getSicCodigo() {
		return this.sicCodigo;
	}

	public void setSicCodigo(final Short sicCodigo) {
		this.sicCodigo = sicCodigo;
	}

	@Transient
	public String getSeqDescricao() {
		return getId().getSeq() + " - " + descricao;
	}
	
	@Column(name = "GIT_CODIGO", precision = 3, scale = 0)
	public Short getGitCodigo() {
		return gitCodigo;
	}

	public void setGitCodigo(Short gitCodigo) {
		this.gitCodigo = gitCodigo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FCC_SEQ")
	public FatCaractComplexidade getCaracteristicaComplexidade() {
		return caracteristicaComplexidade;
	}

	public void setCaracteristicaComplexidade(
			final FatCaractComplexidade caracteristicaComplexidade) {
		this.caracteristicaComplexidade = caracteristicaComplexidade;
	}

	@Column(name = "ADM_TRAT_CONTINUADO", length = 1)
	@Length(max = 1)
	public String getAdmTratContinuado() {
		return this.admTratContinuado;
	}

	public void setAdmTratContinuado(final String admTratContinuado) {
		this.admTratContinuado = admTratContinuado;
	}

	@Column(name = "PONTOS_ATO", precision = 5, scale = 0)
	public Integer getPontosAto() {
		return this.pontosAto;
	}

	public void setPontosAto(final Integer pontosAto) {
		this.pontosAto = pontosAto;
	}

	@Column(name = "ADM_ANESTESIA", length = 1)
	@Length(max = 1)
	public String getAdmAnestesia() {
		return this.admAnestesia;
	}

	public void setAdmAnestesia(final String admAnestesia) {
		this.admAnestesia = admAnestesia;
	}

	@Column(name = "PERMANENCIA", length = 1)
	@Length(max = 1)
	public String getPermanencia() {
		return this.permanencia;
	}

	public void setPermanencia(final String permanencia) {
		this.permanencia = permanencia;
	}


	@Column(name = "CNRAC", length=1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getExigeCnrac() {
		return this.exigeCnrac;
	}

	public void setExigeCnrac(final Boolean exigeCnrac) {
		this.exigeCnrac = exigeCnrac;
	}

	@Column(name = "COD_PROC_SUS_OLD", precision = 10, scale = 0)
	public Long getCodProcSusOld() {
		return this.codProcSusOld;
	}

	public void setCodProcSusOld(final Long codProcSusOld) {
		this.codProcSusOld = codProcSusOld;
	}

	@Column(name = "URGENCIA", length = 1)
	@Length(max = 1)
	public String getUrgencia() {
		return this.urgencia;
	}

	public void setUrgencia(final String urgencia) {
		this.urgencia = urgencia;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
		@JoinColumn(name = "FOG_SGR_GRP_SEQ", referencedColumnName = "SGR_GRP_SEQ", insertable = false, updatable = false),
		@JoinColumn(name = "FOG_SGR_SUB_GRUPO", referencedColumnName = "SGR_SUB_GRUPO", insertable = false, updatable = false),
		@JoinColumn(name = "FOG_CODIGO", referencedColumnName = "CODIGO", insertable = false, updatable = false) })
		public FatFormaOrganizacao getFormaOrganizacao() {
		return formaOrganizacao;
	}

	public void setFormaOrganizacao(final FatFormaOrganizacao formaOrganizacao) {
		this.formaOrganizacao = formaOrganizacao;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
		@JoinColumn(name = "FOG_SGR_GRP_SEQ", referencedColumnName = "GRP_SEQ", insertable= false, updatable = false),
		@JoinColumn(name = "FOG_SGR_SUB_GRUPO", referencedColumnName = "SUB_GRUPO", insertable= false, updatable = false)})	
	public FatSubGrupo getSubGrupo() {
		return subGrupo;
	}

	public void setSubGrupo(FatSubGrupo subGrupo) {
		this.subGrupo = subGrupo;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FOG_SGR_GRP_SEQ", insertable = false, updatable = false)	
	public FatGrupo getGrupo() {
		return grupo;
	}

	public void setGrupo(FatGrupo grupo) {
		this.grupo = grupo;
	}

	@Column(name = "FOG_SGR_GRP_SEQ", precision = 3, scale = 0)
	public Short getFogSgrGrpSeq() {
		return this.fogSgrGrpSeq;
	}

	public void setFogSgrGrpSeq(Short fogSgrGrpSeq) {
		this.fogSgrGrpSeq = fogSgrGrpSeq;
	}

	@Column(name = "FOG_SGR_SUB_GRUPO", precision = 2, scale = 0)
	public Byte getFogSgrSubGrupo() {
		return this.fogSgrSubGrupo;
	}

	public void setFogSgrSubGrupo(Byte fogSgrSubGrupo) {
		this.fogSgrSubGrupo = fogSgrSubGrupo;
	}

	@Column(name = "FOG_CODIGO", precision = 2, scale = 0)
	public Byte getFogCodigo() {
		return this.fogCodigo;
	}

	public void setFogCodigo(Byte fogCodigo) {
		this.fogCodigo = fogCodigo;
	}
	@Column(name = "COD_PROCEDIMENTO", precision = 4, scale = 0)
	public Short getCodProcedimento() {
		return this.codProcedimento;
	}

	public void setCodProcedimento(final Short codProcedimento) {
		this.codProcedimento = codProcedimento;
	}

	@Column(name = "IND_VALIDA_IDADE", length = 1)
	@org.hibernate.annotations.Type( type = "br.gov.mec.aghu.core.persistence.type.BooleanUserType")
	public Boolean getValidaIdade() {
		return validaIdade;
	}

	public void setValidaIdade(Boolean validaIdade) {
		this.validaIdade = validaIdade;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "itemProcedimentoHospitalar")
	@Cascade(value=CascadeType.REFRESH)
	public Set<FatCaractItemProcHosp> getCaracteristicasItemProcHosp() {
		return this.caracteristicasItemProcHosp;
	}

	public void setCaracteristicasItemProcHosp(
			final Set<FatCaractItemProcHosp> caracteristicasItemProcHosp) {
		this.caracteristicasItemProcHosp = caracteristicasItemProcHosp;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "itemProcedHospitalar")
	public Set<FatConvGrupoItemProced> getGruposItensProced() {
		return this.gruposItensProced;
	}

	public void setGruposItensProced(final Set<FatConvGrupoItemProced> gruposItensProced) {
		this.gruposItensProced = gruposItensProced;
	}

	/**
	 * @return the internacoes
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "itemProcedimentoHospitalar")
	public Set<AinInternacao> getInternacoes() {
		return this.internacoes;
	}

	/**
	 * @param internacoes the internacoes to set
	 */
	public void setInternacoes(final Set<AinInternacao> internacoes) {
		this.internacoes = internacoes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fatItensProcedHospitalar")
	public Set<FatVlrItemProcedHospComps> getValoresItemProcdHospComps() {
		return this.valoresItemProcdHospComps;
	}

	public void setValoresItemProcdHospComps(
			final Set<FatVlrItemProcedHospComps> valoresItemProcdHospComps) {
		this.valoresItemProcdHospComps = valoresItemProcdHospComps;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FCF_SEQ")
	public FatCaractFinanciamento getFatCaracteristicaFinanciamento() {
		return fatCaracteristicaFinanciamento;
	}

	public void setFatCaracteristicaFinanciamento(
			final FatCaractFinanciamento fatCaracteristicaFinanciamento) {
		this.fatCaracteristicaFinanciamento = fatCaracteristicaFinanciamento;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fatItemProcedimentoHospitalarSolicitado")
	public Set<FatEspelhoAih> getEspelhosAihSolicitado() {
		return espelhosAihSolicitado;
	}

	public void setEspelhosAihSolicitado(final Set<FatEspelhoAih> espelhosAihSolicitado) {
		this.espelhosAihSolicitado = espelhosAihSolicitado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fatItemProcedimentoHospitalarRealizado")
	public Set<FatEspelhoAih> getEspelhosAihRealizado() {
		return espelhosAihRealizado;
	}

	public void setEspelhosAihRealizado(final Set<FatEspelhoAih> espelhosAihRealizado) {
		this.espelhosAihRealizado = espelhosAihRealizado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fatItemProcedimentoHospitalarRealizado")
	public Set<FatAtoObrigatorioProced> getAtosObrigatoriosProcedimentos() {
		return atosObrigatoriosProcedimentos;
	}

	public void setAtosObrigatoriosProcedimentos(final Set<FatAtoObrigatorioProced> atosObrigatoriosProcedimentos) {
		this.atosObrigatoriosProcedimentos = atosObrigatoriosProcedimentos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "itemProcedimentoHospilatar")
	public Set<FatCampoMedicoAuditAih> getCamposMedicosAuditAih() {
		return camposMedicosAuditAih;
	}

	public void setCamposMedicosAuditAih(
			final Set<FatCampoMedicoAuditAih> camposMedicosAuditAih) {
		this.camposMedicosAuditAih = camposMedicosAuditAih;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "itemProcedimentoHospitalar")
	public Set<FatAtoMedicoAih> getAtosMedicosAih() {
		return atosMedicosAih;
	}

	public void setAtosMedicosAih(final Set<FatAtoMedicoAih> atosMedicosAih) {
		this.atosMedicosAih = atosMedicosAih;
	}
	

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "itemProcedHosp")
	public Set<FatProcedimentoCbo> getProcedimentosCbo() {
		return procedimentosCbo;
	}

	public void setProcedimentosCbo(Set<FatProcedimentoCbo> procedimentosCbo) {
		this.procedimentosCbo = procedimentosCbo;
	}

	@PrePersist
	@PreUpdate
	@SuppressWarnings("unused")
	private void validarItensProcedHospitalar() {
		if (this.getIdadeMin() < Byte.valueOf("0")) {
			throw new BaseRuntimeException();
		}
		if (this.getIdadeMax() < Byte.valueOf("0")) {
			throw new BaseRuntimeException();
		}
		if (this.getIdadeMin() > this.getIdadeMax()) {
			throw new BaseRuntimeException();
		}
	}
	
	@Transient
	public String getDescricaoAbreviada() {
		return  StringUtils.abbreviate(descricao, 60);
	}

	@Version
	@Column(name = "VERSION", nullable = false)
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "itemProcedimentoHospitalar")
	public Set<VFatAssociacaoProcedimento> getFatAssociacaoProcedimentos() {
		return fatAssociacaoProcedimentos;
	}

	public void setFatAssociacaoProcedimentos(
			Set<VFatAssociacaoProcedimento> fatAssociacaoProcedimentos) {
		this.fatAssociacaoProcedimentos = fatAssociacaoProcedimentos;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "itemProcedimentoHospitalar")
	public Set<FatProcedServicos> getProcedServicos() {
		return procedServicos;
	}
	
	public void setProcedServicos(Set<FatProcedServicos> procedServicos) {
		this.procedServicos = procedServicos;
	}
	
	public void setCompetenciaCompatibilids(Set<FatCompetenciaCompatibilid> competenciaCompatibilids) {
		this.competenciaCompatibilids = competenciaCompatibilids;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fatItensProcedHospitalar")
	public Set<FatCompetenciaCompatibilid> getCompetenciaCompatibilids() {
		return competenciaCompatibilids;
	}
	

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fatItensProcedHospitalar")
	public Set<FatSinonimoItemProcedHosp> getSinonimoItemProcedHosp() {
		return this.sinonimoItemProcedHosp;
	}

	public void setSinonimoItemProcedHosp(
			final Set<FatSinonimoItemProcedHosp> sinonimoItemProcedHosp) {
		this.sinonimoItemProcedHosp = sinonimoItemProcedHosp;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "itemProcedHospitalar")
	public Set<FatProcedimentoRegistro> getFatProcedimentoRegistros() {
		return fatProcedimentoRegistros;
	}

	public void setFatProcedimentoRegistros(
			Set<FatProcedimentoRegistro> fatProcedimentoRegistros) {
		this.fatProcedimentoRegistros = fatProcedimentoRegistros;
	}
	
	public void setCompatExclusItems(Set<FatCompatExclusItem> compatExclusItems) {
		this.compatExclusItems = compatExclusItems;
	}

	@OneToMany(fetch =FetchType.LAZY, mappedBy = "itemProcedHosp")
	public Set<FatCompatExclusItem> getCompatExclusItems() {
		return compatExclusItems;
	}
	
	public void setCompatExclusItemsCompatibiliza(Set<FatCompatExclusItem> compatExclusItemsCompatibiliza) {
		this.compatExclusItemsCompatibiliza = compatExclusItemsCompatibiliza;
	}

	@OneToMany(fetch =FetchType.LAZY, mappedBy = "itemProcedHospCompatibiliza")
	public Set<FatCompatExclusItem> getCompatExclusItemsCompatibiliza() {
		return compatExclusItemsCompatibiliza;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fatItensProcedHospitalar")
	public Set<MbcItensRequisicaoOpmes> getItensRequisicaoOpmes() {
		return itensRequisicaoOpmes;
	}

	public void setItensRequisicaoOpmes(
			Set<MbcItensRequisicaoOpmes> itensRequisicaoOpmes) {
		this.itensRequisicaoOpmes = itensRequisicaoOpmes;
	}

	@ManyToOne(fetch = FetchType.LAZY, cascade = javax.persistence.CascadeType.ALL)
	@JoinColumns({
        @JoinColumn(name = "PHO_SEQ", referencedColumnName="IPH_PHO_SEQ", insertable = false, updatable= false),
        @JoinColumn(name = "SEQ", referencedColumnName="IPH_SEQ", insertable = false, updatable= false)
    })
	public FatItemProcHospTransp getItemProcHospTransp() {
		return itemProcHospTransp;
	}

	public void setItemProcHospTransp(FatItemProcHospTransp itemProcHospTransp){
		this.itemProcHospTransp = itemProcHospTransp;
	}

	
	public enum Fields {
		ID("id"), 
		SEQ("id.seq"), 
		PHO_SEQ("id.phoSeq"), 
		DESCRICAO("descricao"), 
		SEXO("sexo"), 
		COD_TABELA("codTabela"), 
		CLINICA("clinica"), 
		CLINICA_CODIGO("clinica.codigo"),
		PROCEDIMENTO_HOSPITALAR("procedimentoHospitalar"),
		IND_INTERNACAO("internacao"), 
		IND_EXIGE_VALOR("exigeValor"), 
		VALORES_ITEM_PROCD_HOSP_COMPS("valoresItemProcdHospComps"),
		GRUPOS_ITENS_PROCED("gruposItensProced"), 
		ESPELHOS_AIH_SOLICITADO("espelhosAihSolicitado"),
		ESPELHOS_AIH_REALIZADO("espelhosAihRealizado"),
		MAX_QTD_CONTA("maxQtdConta"),
		IND_SITUACAO("situacao"), 
		FAT_CARACTERISTICA_FINANCIAMENTO("fatCaracteristicaFinanciamento"),
		SITUACAO_FAT_CARACTERISTICA_FINANCIAMENTO("fatCaracteristicaFinanciamento.indSituacao"),
		TIPO_ATO("tipoAto"),
		TIPOS_VINCULO("tiposVinculo"), 
		QTD_PROCEDIMENTOS_ITEM("qtdProcedimentosItem"), 
		QUANT_DIAS_FATURAMENTO("quantDiasFaturamento"),
		ATOS_OBRIGATORIOS_PROCEDIMENTOS("atosObrigatoriosProcedimentos"), 
		CAMPOS_MEDICOS_AUDIT_AIH("camposMedicosAuditAih"),
		ATOS_MEDICOS_AIH("atosMedicosAih"), 
		FAT_FORMA_ORGANIZACAO("formaOrganizacao"), 
		PROCEDIMENTO_ESPECIAL("procedimentoEspecial"),
		IND_PROC_ESPECIAL("procedimentoEspecial"),
		SUBGRUPO_GRP_SEQ("subGrupo" + "." + FatSubGrupo.Fields.ID_GRP_SEQ), 
		SUBGRUPO_SUB_GRUPO("subGrupo" + "." + FatSubGrupo.Fields.ID_SUB_GRUPO), 
		FAT_CARACTERISTICA_FINANCIAMENTO_SEQ("fatCaracteristicaFinanciamento.seq"),
		FCF_SEQ("fatCaracteristicaFinanciamento.seq"),
		FAT_CARACTERISTICA_COMPLEXIDADE("caracteristicaComplexidade"),
		FAT_CARACTERISTICA_COMPLEXIDADE_SEQ("caracteristicaComplexidade.seq"),
		SEQ_ORDER("seq"),
		GRUPO("grupo"),
		GRUPO_SEQ("grupo"+ "." + FatGrupo.Fields.SEQ),
		SUB_GRUPO("subGrupo"),
		IND_COBRANCA_DIARIAS("cobrancaDiarias"),
		IND_QTD_MAIOR_INTERNACAO("quantidadeMaiorInternacao"),
		FAT_ASSOCIACAO_PROCEDIMENTOS("fatAssociacaoProcedimentos"),		
		FAT_COMPETENCIA_COMPATIBILIDS("competenciaCompatibilids"),
		FAT_COMPAT_EXCLUS_ITEMS("compatExclusItems"),
		FAT_COMPAT_EXCLUS_ITEMS_COMPATIBILIZA("compatExclusItemsCompatibiliza"),
		COD_PROCEDIMENTO("codProcedimento"),
		FOG_CODIGO ("fogCodigo"),
		FOG_SGR_GRP_SEQ ("fogSgrGrpSeq"),
		FOG_SGR_SUB_GRUPO ("fogSgrSubGrupo"),
		IND_CIRURGIA_MULTIPLA("cirurgiaMultipla"),
		TIPO_AIH5("tipoAih5"),
		DIARIA_ACOMPANHANTE("diariaAcompanhante"),
		HOSP_DIA("hospDia"),
		IDADE_MIN("idadeMin"),
		IDADE_MAX("idadeMax"),
		PROC_PRINCIPAL_APAC("procPrincipalApac"),
		IND_CONSULTA("consulta"),
		IND_EXIGE_CONSULTA("exigeConsulta"),
		IND_COBRANCA_APAC("cobrancaApac"),
		IND_COBRANCA_CONTA("cobrancaConta"),
		IND_COBRANCA_AMBULATORIO("cobrancaAmbulatorio"),
		IND_MODO_LANCAMENTO_FAT("modoLancamentoFat"),
		DIAS_REINTERNACAO("diasReinternacao"),
		PROCED_SERVICOS("procedServicos"),
		FAT_SINONIMO_PROCED_HOSPITALAR("sinonimoItemProcedHosp"),
		FAT_PROCEDIMENTO_REGISTRO("fatProcedimentoRegistros"),
		FAT_VLR_ITEM_PROCED_HOSP_COMPS ("valoresItemProcdHospComps"),
		ITENS_REQUISICAO_OPMES("itensRequisicaoOpmes"),
		DCIH_TRANSPLANTE("dcihTransplante"), 
		FAEC("faec"),
		MOTIVO_COBRACA_APAC("motivoCobrancaApac"),
		ITEM_PROC_HOSP_TRANSP("itemProcHospTransp"),
		IPH_SEQ("iphSeq"),
		PONTOS_SADT("pontosSadt"),		
		CARACTERISTICA("caracteristicasItemProcHosp")
		;

		private String fields;

		private Fields(final String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
		return result;
	}

	@Override
	public boolean equals(final Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof FatItensProcedHospitalar)) {
			return false;
		}
		final FatItensProcedHospitalar other = (FatItensProcedHospitalar) obj;
		if (this.id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!this.id.equals(other.id)) {
			return false;
		}
		return true;
	}

	

}
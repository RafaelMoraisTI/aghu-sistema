package br.gov.mec.aghu.model;

// Generated 09/04/2012 16:32:53 by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import br.gov.mec.aghu.core.persistence.BaseEntitySeq;

/**
 * FatCompetenciaCompatibilid generated by hbm2java
 */
@Entity
@SequenceGenerator(name="fatCpxSq1", sequenceName="AGH.FAT_CPX_SQ1", allocationSize = 1)
@Table(name = "FAT_COMPETENCIAS_COMPATIBILID", schema = "AGH")
public class FatCompetenciaCompatibilid extends BaseEntitySeq<Long> implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -649050376831885845L;
	private Long seq;
	private FatItensProcedHospitalar fatItensProcedHospitalar;
	private RapServidores servidorInsere;
	private RapServidores servidorAltera;
	private Date dtInicioValidade;
	private Date dtFimValidade;
	private Date criadoEm;
	private Date alteradoEm;
	
	// FIXME Implementar este relacionamento
//	private Set<FatCompatExclusItem> fatCompatExclusItemes = new HashSet<FatCompatExclusItem>(0);

	public FatCompetenciaCompatibilid() {
	}

	public FatCompetenciaCompatibilid(Long seq, FatItensProcedHospitalar fatItensProcedHospitalar,
			RapServidores servidorInsere, Date dtInicioValidade, Date criadoEm) {
		this.seq = seq;
		this.fatItensProcedHospitalar = fatItensProcedHospitalar;
		this.servidorInsere = servidorInsere;
		this.dtInicioValidade = dtInicioValidade;
		this.criadoEm = criadoEm;
	}

	public FatCompetenciaCompatibilid(Long seq, FatItensProcedHospitalar fatItensProcedHospitalar,
			RapServidores servidorInsere, RapServidores servidorAltera, Date dtInicioValidade,
			Date dtFimValidade, Date criadoEm, Date alteradoEm
//			, Set<FatCompatExclusItem> fatCompatExclusItemes
			) {
		this.seq = seq;
		this.fatItensProcedHospitalar = fatItensProcedHospitalar;
		this.servidorInsere = servidorInsere;
		this.servidorAltera = servidorAltera;
		this.dtInicioValidade = dtInicioValidade;
		this.dtFimValidade = dtFimValidade;
		this.criadoEm = criadoEm;
		this.alteradoEm = alteradoEm;
//		this.fatCompatExclusItemes = fatCompatExclusItemes;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "fatCpxSq1")
	@Column(name = "SEQ", unique = true, nullable = false)
	public Long getSeq() {
		return this.seq;
	}

	public void setSeq(Long seq) {
		this.seq = seq;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "IPH_PHO_SEQ", referencedColumnName = "PHO_SEQ", nullable = false),
			@JoinColumn(name = "IPH_SEQ", referencedColumnName = "SEQ", nullable = false) })
	public FatItensProcedHospitalar getFatItensProcedHospitalar() {
		return this.fatItensProcedHospitalar;
	}

	public void setFatItensProcedHospitalar(FatItensProcedHospitalar fatItensProcedHospitalar) {
		this.fatItensProcedHospitalar = fatItensProcedHospitalar;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA", referencedColumnName = "MATRICULA", nullable = false),
			@JoinColumn(name = "SER_VIN_CODIGO", referencedColumnName = "VIN_CODIGO", nullable = false) })
	public RapServidores getServidorInsere() {
		return this.servidorInsere;
	}

	public void setServidorInsere(RapServidores servidorInsere) {
		this.servidorInsere = servidorInsere;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "SER_MATRICULA_ALTERA", referencedColumnName = "MATRICULA"),
			@JoinColumn(name = "SER_VIN_CODIGO_ALTERA", referencedColumnName = "VIN_CODIGO") })
	public RapServidores getServidorAltera() {
		return this.servidorAltera;
	}

	public void setServidorAltera(RapServidores servidorAltera) {
		this.servidorAltera = servidorAltera;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_INICIO_VALIDADE", nullable = false, length = 29)
	public Date getDtInicioValidade() {
		return this.dtInicioValidade;
	}

	public void setDtInicioValidade(Date dtInicioValidade) {
		this.dtInicioValidade = dtInicioValidade;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DT_FIM_VALIDADE", length = 29)
	public Date getDtFimValidade() {
		return this.dtFimValidade;
	}

	public void setDtFimValidade(Date dtFimValidade) {
		this.dtFimValidade = dtFimValidade;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRIADO_EM", nullable = false, length = 29)
	public Date getCriadoEm() {
		return this.criadoEm;
	}

	public void setCriadoEm(Date criadoEm) {
		this.criadoEm = criadoEm;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ALTERADO_EM", length = 29)
	public Date getAlteradoEm() {
		return this.alteradoEm;
	}

	public void setAlteradoEm(Date alteradoEm) {
		this.alteradoEm = alteradoEm;
	}

	public enum Fields {

		SEQ("seq"),
		FAT_ITENS_PROCED_HOSPITALAR("fatItensProcedHospitalar"),
		SERVIDOR_INSERE("servidorInsere"),
		SERVIDOR_ALTERA("servidorAltera"),
		DT_INICIO_VALIDADE("dtInicioValidade"),
		DT_FIM_VALIDADE("dtFimValidade"),
		CRIADO_EM("criadoEm"),
		ALTERADO_EM("alteradoEm"),
		IPH_PHO_SEQ("fatItensProcedHospitalar.id.phoSeq"), 
		IPH_SEQ("fatItensProcedHospitalar.id.seq")
		;

		private String fields;

		private Fields(String fields) {
			this.fields = fields;
		}

		@Override
		public String toString() {
			return this.fields;
		}

	}


	// ##### GeradorEqualsHashCodeMain #####
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getSeq() == null) ? 0 : getSeq().hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof FatCompetenciaCompatibilid)) {
			return false;
		}
		FatCompetenciaCompatibilid other = (FatCompetenciaCompatibilid) obj;
		if (getSeq() == null) {
			if (other.getSeq() != null) {
				return false;
			}
		} else if (!getSeq().equals(other.getSeq())) {
			return false;
		}
		return true;
	}
	// ##### GeradorEqualsHashCodeMain #####

}
